<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:51:11.996" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.632" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:12.641" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:13.776" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:12.630" endtime="20201030 15:51:13.776"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.779" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:13.777" endtime="20201030 15:51:13.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.629" endtime="20201030 15:51:13.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:13.783" endtime="20201030 15:51:14.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.781" endtime="20201030 15:51:14.019"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.031" endtime="20201030 15:51:14.050"></status>
</kw>
<msg timestamp="20201030 15:51:14.050" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.030" endtime="20201030 15:51:14.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.053" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.051" endtime="20201030 15:51:14.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.056" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:14.054" endtime="20201030 15:51:14.057"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:14.027" endtime="20201030 15:51:14.057"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:14.025" endtime="20201030 15:51:14.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.024" endtime="20201030 15:51:14.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:14.062" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:14.061" endtime="20201030 15:51:14.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.059" endtime="20201030 15:51:14.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.023" endtime="20201030 15:51:14.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.022" endtime="20201030 15:51:14.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.065" endtime="20201030 15:51:14.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.021" endtime="20201030 15:51:14.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.067" endtime="20201030 15:51:14.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.019" endtime="20201030 15:51:14.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.627" endtime="20201030 15:51:14.070"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.076" endtime="20201030 15:51:14.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.075" endtime="20201030 15:51:14.096"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.110" endtime="20201030 15:51:14.130"></status>
</kw>
<msg timestamp="20201030 15:51:14.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.109" endtime="20201030 15:51:14.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.131" endtime="20201030 15:51:14.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.136" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:14.134" endtime="20201030 15:51:14.137"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:14.106" endtime="20201030 15:51:14.137"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:14.103" endtime="20201030 15:51:14.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.102" endtime="20201030 15:51:14.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:14.142" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:14.141" endtime="20201030 15:51:14.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.139" endtime="20201030 15:51:14.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.101" endtime="20201030 15:51:14.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.100" endtime="20201030 15:51:14.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.144" endtime="20201030 15:51:14.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.099" endtime="20201030 15:51:14.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.097" endtime="20201030 15:51:14.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.073" endtime="20201030 15:51:14.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.154" endtime="20201030 15:51:14.169"></status>
</kw>
<msg timestamp="20201030 15:51:14.170" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.152" endtime="20201030 15:51:14.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.173" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.171" endtime="20201030 15:51:14.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.174" endtime="20201030 15:51:14.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.149" endtime="20201030 15:51:14.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.147" endtime="20201030 15:51:14.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.181" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:51:14.180" endtime="20201030 15:51:14.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.183" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:51:14.182" endtime="20201030 15:51:14.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.178" endtime="20201030 15:51:14.184"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:14.070" endtime="20201030 15:51:14.185" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:12.129" endtime="20201030 15:51:14.187"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.238" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:14.247" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:15.432" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:14.237" endtime="20201030 15:51:15.433"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.436" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:15.434" endtime="20201030 15:51:15.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.236" endtime="20201030 15:51:15.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.439" endtime="20201030 15:51:15.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.437" endtime="20201030 15:51:15.754"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.766" endtime="20201030 15:51:15.783"></status>
</kw>
<msg timestamp="20201030 15:51:15.783" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ersion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.765" endtime="20201030 15:51:15.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.786" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ersion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.785" endtime="20201030 15:51:15.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.789" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:15.787" endtime="20201030 15:51:15.790"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:15.762" endtime="20201030 15:51:15.790"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:15.760" endtime="20201030 15:51:15.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.759" endtime="20201030 15:51:15.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:15.795" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:15.794" endtime="20201030 15:51:15.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.792" endtime="20201030 15:51:15.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.758" endtime="20201030 15:51:15.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.757" endtime="20201030 15:51:15.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.797" endtime="20201030 15:51:15.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.756" endtime="20201030 15:51:15.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.800" endtime="20201030 15:51:15.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.755" endtime="20201030 15:51:15.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.235" endtime="20201030 15:51:15.802"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.810" endtime="20201030 15:51:15.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.807" endtime="20201030 15:51:15.831"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.849" endtime="20201030 15:51:15.872"></status>
</kw>
<msg timestamp="20201030 15:51:15.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.846" endtime="20201030 15:51:15.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.874" endtime="20201030 15:51:15.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.879" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:15.877" endtime="20201030 15:51:15.879"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:15.842" endtime="20201030 15:51:15.880"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:15.839" endtime="20201030 15:51:15.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.838" endtime="20201030 15:51:15.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:15.884" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:15.884" endtime="20201030 15:51:15.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.881" endtime="20201030 15:51:15.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.837" endtime="20201030 15:51:15.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.836" endtime="20201030 15:51:15.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.886" endtime="20201030 15:51:15.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.834" endtime="20201030 15:51:15.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.832" endtime="20201030 15:51:15.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.805" endtime="20201030 15:51:15.889"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.898" endtime="20201030 15:51:15.912"></status>
</kw>
<msg timestamp="20201030 15:51:15.913" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.896" endtime="20201030 15:51:15.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.914" endtime="20201030 15:51:15.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.916" endtime="20201030 15:51:15.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.894" endtime="20201030 15:51:15.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.892" endtime="20201030 15:51:15.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.926" endtime="20201030 15:51:16.217"></status>
</kw>
<msg timestamp="20201030 15:51:16.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078210069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.924" endtime="20201030 15:51:16.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078210069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.221" endtime="20201030 15:51:16.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.230" endtime="20201030 15:51:16.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.922" endtime="20201030 15:51:16.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.920" endtime="20201030 15:51:16.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.237" level="INFO">${RESULT} = [{'diff': 4.7199999998748243e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:16.233" endtime="20201030 15:51:16.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:16.242" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 15:51:16.238" endtime="20201030 15:51:16.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.246" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:16.245" endtime="20201030 15:51:16.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.249" level="INFO">VALUE: [4.7199999998748243e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:16.247" endtime="20201030 15:51:16.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.243" endtime="20201030 15:51:16.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.255" endtime="20201030 15:51:16.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.253" endtime="20201030 15:51:16.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.252" endtime="20201030 15:51:16.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.891" endtime="20201030 15:51:16.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.890" endtime="20201030 15:51:16.276"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.284" endtime="20201030 15:51:16.299"></status>
</kw>
<msg timestamp="20201030 15:51:16.299" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.282" endtime="20201030 15:51:16.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.302" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.300" endtime="20201030 15:51:16.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.303" endtime="20201030 15:51:16.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.279" endtime="20201030 15:51:16.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.278" endtime="20201030 15:51:16.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.312" endtime="20201030 15:51:16.599"></status>
</kw>
<msg timestamp="20201030 15:51:16.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.311" endtime="20201030 15:51:16.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.603" endtime="20201030 15:51:16.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.612" endtime="20201030 15:51:16.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.308" endtime="20201030 15:51:16.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.306" endtime="20201030 15:51:16.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.619" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:16.616" endtime="20201030 15:51:16.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:16.624" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:16.620" endtime="20201030 15:51:16.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:16.627" endtime="20201030 15:51:16.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.631" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:16.629" endtime="20201030 15:51:16.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.625" endtime="20201030 15:51:16.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.636" endtime="20201030 15:51:16.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.634" endtime="20201030 15:51:16.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.633" endtime="20201030 15:51:16.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.276" endtime="20201030 15:51:16.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.276" endtime="20201030 15:51:16.656"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.665" endtime="20201030 15:51:16.680"></status>
</kw>
<msg timestamp="20201030 15:51:16.681" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.663" endtime="20201030 15:51:16.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.683" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.682" endtime="20201030 15:51:16.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.684" endtime="20201030 15:51:16.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.660" endtime="20201030 15:51:16.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.659" endtime="20201030 15:51:16.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.694" endtime="20201030 15:51:16.981"></status>
</kw>
<msg timestamp="20201030 15:51:16.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021114903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021115389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.692" endtime="20201030 15:51:16.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021114903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021115389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.985" endtime="20201030 15:51:16.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.994" endtime="20201030 15:51:16.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.690" endtime="20201030 15:51:16.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.688" endtime="20201030 15:51:16.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.002" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:16.999" endtime="20201030 15:51:17.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.006" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 15:51:17.003" endtime="20201030 15:51:17.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.011" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:17.009" endtime="20201030 15:51:17.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.014" level="INFO">VALUE: [4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:17.012" endtime="20201030 15:51:17.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.007" endtime="20201030 15:51:17.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.018" endtime="20201030 15:51:17.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.017" endtime="20201030 15:51:17.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.016" endtime="20201030 15:51:17.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.657" endtime="20201030 15:51:17.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.657" endtime="20201030 15:51:17.039"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.047" endtime="20201030 15:51:17.068"></status>
</kw>
<msg timestamp="20201030 15:51:17.068" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.046" endtime="20201030 15:51:17.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.071" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.069" endtime="20201030 15:51:17.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.072" endtime="20201030 15:51:17.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.043" endtime="20201030 15:51:17.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.041" endtime="20201030 15:51:17.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.082" endtime="20201030 15:51:17.370"></status>
</kw>
<msg timestamp="20201030 15:51:17.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.080" endtime="20201030 15:51:17.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.375" endtime="20201030 15:51:17.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.384" endtime="20201030 15:51:17.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.078" endtime="20201030 15:51:17.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.076" endtime="20201030 15:51:17.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.391" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:17.388" endtime="20201030 15:51:17.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.395" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:51:17.392" endtime="20201030 15:51:17.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.400" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:17.399" endtime="20201030 15:51:17.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.402" level="INFO">VALUE: [4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201030 15:51:17.401" endtime="20201030 15:51:17.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.396" endtime="20201030 15:51:17.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.408" endtime="20201030 15:51:17.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.406" endtime="20201030 15:51:17.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.405" endtime="20201030 15:51:17.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.040" endtime="20201030 15:51:17.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.039" endtime="20201030 15:51:17.429"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.437" endtime="20201030 15:51:17.455"></status>
</kw>
<msg timestamp="20201030 15:51:17.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.435" endtime="20201030 15:51:17.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.456" endtime="20201030 15:51:17.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.459" endtime="20201030 15:51:17.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.433" endtime="20201030 15:51:17.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.431" endtime="20201030 15:51:17.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.468" endtime="20201030 15:51:17.756"></status>
</kw>
<msg timestamp="20201030 15:51:17.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.466" endtime="20201030 15:51:17.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.760" endtime="20201030 15:51:17.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.769" endtime="20201030 15:51:17.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.464" endtime="20201030 15:51:17.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.462" endtime="20201030 15:51:17.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.776" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:51:17.772" endtime="20201030 15:51:17.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:17.781" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.719...</msg>
<status status="PASS" starttime="20201030 15:51:17.777" endtime="20201030 15:51:17.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.785" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:17.784" endtime="20201030 15:51:17.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.788" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:17.786" endtime="20201030 15:51:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.782" endtime="20201030 15:51:17.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.793" endtime="20201030 15:51:17.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.791" endtime="20201030 15:51:17.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.790" endtime="20201030 15:51:17.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.429" endtime="20201030 15:51:17.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.429" endtime="20201030 15:51:17.814"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.822" endtime="20201030 15:51:17.836"></status>
</kw>
<msg timestamp="20201030 15:51:17.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.820" endtime="20201030 15:51:17.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.838" endtime="20201030 15:51:17.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.840" endtime="20201030 15:51:17.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.817" endtime="20201030 15:51:17.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.816" endtime="20201030 15:51:17.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.850" endtime="20201030 15:51:18.139"></status>
</kw>
<msg timestamp="20201030 15:51:18.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.848" endtime="20201030 15:51:18.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.143" endtime="20201030 15:51:18.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.152" endtime="20201030 15:51:18.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.845" endtime="20201030 15:51:18.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.844" endtime="20201030 15:51:18.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.159" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:18.155" endtime="20201030 15:51:18.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:18.163" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 15:51:18.160" endtime="20201030 15:51:18.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.167" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:18.166" endtime="20201030 15:51:18.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.170" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:18.169" endtime="20201030 15:51:18.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.164" endtime="20201030 15:51:18.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.175" endtime="20201030 15:51:18.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.173" endtime="20201030 15:51:18.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.172" endtime="20201030 15:51:18.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.814" endtime="20201030 15:51:18.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.814" endtime="20201030 15:51:18.196"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.204" endtime="20201030 15:51:18.218"></status>
</kw>
<msg timestamp="20201030 15:51:18.218" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.202" endtime="20201030 15:51:18.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.221" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.219" endtime="20201030 15:51:18.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.222" endtime="20201030 15:51:18.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.199" endtime="20201030 15:51:18.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.198" endtime="20201030 15:51:18.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.234" endtime="20201030 15:51:18.522"></status>
</kw>
<msg timestamp="20201030 15:51:18.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019369056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.232" endtime="20201030 15:51:18.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019368569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019369056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.526" endtime="20201030 15:51:18.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.535" endtime="20201030 15:51:18.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.229" endtime="20201030 15:51:18.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.227" endtime="20201030 15:51:18.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.541" level="INFO">${RESULT} = [{'diff': 4.870000000004038e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:18.538" endtime="20201030 15:51:18.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:18.546" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.8...</msg>
<status status="PASS" starttime="20201030 15:51:18.542" endtime="20201030 15:51:18.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.550" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:18.549" endtime="20201030 15:51:18.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.553" level="INFO">VALUE: [4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:18.551" endtime="20201030 15:51:18.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.546" endtime="20201030 15:51:18.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.559" endtime="20201030 15:51:18.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.557" endtime="20201030 15:51:18.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.555" endtime="20201030 15:51:18.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.196" endtime="20201030 15:51:18.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.196" endtime="20201030 15:51:18.583"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.593" endtime="20201030 15:51:18.610"></status>
</kw>
<msg timestamp="20201030 15:51:18.611" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.591" endtime="20201030 15:51:18.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.612" endtime="20201030 15:51:18.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.615" endtime="20201030 15:51:18.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.588" endtime="20201030 15:51:18.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.586" endtime="20201030 15:51:18.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.625" endtime="20201030 15:51:18.909"></status>
</kw>
<msg timestamp="20201030 15:51:18.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026009528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026010014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.623" endtime="20201030 15:51:18.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026009528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026010014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.914" endtime="20201030 15:51:18.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.922" endtime="20201030 15:51:18.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.620" endtime="20201030 15:51:18.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.618" endtime="20201030 15:51:18.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.929" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:18.926" endtime="20201030 15:51:18.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:18.934" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:18.930" endtime="20201030 15:51:18.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.938" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:18.937" endtime="20201030 15:51:18.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.941" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:18.939" endtime="20201030 15:51:18.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.935" endtime="20201030 15:51:18.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.946" endtime="20201030 15:51:18.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.944" endtime="20201030 15:51:18.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.943" endtime="20201030 15:51:18.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.584" endtime="20201030 15:51:18.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.583" endtime="20201030 15:51:18.967"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.975" endtime="20201030 15:51:18.993"></status>
</kw>
<msg timestamp="20201030 15:51:18.994" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.974" endtime="20201030 15:51:18.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.995" endtime="20201030 15:51:18.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.998" endtime="20201030 15:51:19.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.971" endtime="20201030 15:51:19.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.969" endtime="20201030 15:51:19.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.008" endtime="20201030 15:51:19.295"></status>
</kw>
<msg timestamp="20201030 15:51:19.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.006" endtime="20201030 15:51:19.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.299" endtime="20201030 15:51:19.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.308" endtime="20201030 15:51:19.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.003" endtime="20201030 15:51:19.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.001" endtime="20201030 15:51:19.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.316" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07...</msg>
<status status="PASS" starttime="20201030 15:51:19.312" endtime="20201030 15:51:19.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:19.320" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:51:19.317" endtime="20201030 15:51:19.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.324" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:19.323" endtime="20201030 15:51:19.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.327" level="INFO">VALUE: [4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:19.325" endtime="20201030 15:51:19.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.321" endtime="20201030 15:51:19.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.332" endtime="20201030 15:51:19.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.330" endtime="20201030 15:51:19.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.329" endtime="20201030 15:51:19.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.967" endtime="20201030 15:51:19.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.967" endtime="20201030 15:51:19.353"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.365" endtime="20201030 15:51:19.379"></status>
</kw>
<msg timestamp="20201030 15:51:19.379" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.362" endtime="20201030 15:51:19.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.381" endtime="20201030 15:51:19.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.385" endtime="20201030 15:51:19.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.358" endtime="20201030 15:51:19.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.355" endtime="20201030 15:51:19.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.396" endtime="20201030 15:51:19.684"></status>
</kw>
<msg timestamp="20201030 15:51:19.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023113167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.395" endtime="20201030 15:51:19.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023113167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.689" endtime="20201030 15:51:19.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.697" endtime="20201030 15:51:19.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.392" endtime="20201030 15:51:19.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.390" endtime="20201030 15:51:19.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.704" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:19.701" endtime="20201030 15:51:19.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:19.708" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:51:19.705" endtime="20201030 15:51:19.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.713" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:19.712" endtime="20201030 15:51:19.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.715" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 15:51:19.714" endtime="20201030 15:51:19.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.709" endtime="20201030 15:51:19.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.721" endtime="20201030 15:51:19.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.719" endtime="20201030 15:51:19.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.718" endtime="20201030 15:51:19.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.354" endtime="20201030 15:51:19.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.354" endtime="20201030 15:51:19.742"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.750" endtime="20201030 15:51:19.766"></status>
</kw>
<msg timestamp="20201030 15:51:19.767" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.749" endtime="20201030 15:51:19.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.769" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.768" endtime="20201030 15:51:19.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.770" endtime="20201030 15:51:19.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.746" endtime="20201030 15:51:19.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.744" endtime="20201030 15:51:19.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.780" endtime="20201030 15:51:20.064"></status>
</kw>
<msg timestamp="20201030 15:51:20.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.778" endtime="20201030 15:51:20.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.068" endtime="20201030 15:51:20.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.077" endtime="20201030 15:51:20.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.775" endtime="20201030 15:51:20.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.774" endtime="20201030 15:51:20.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.083" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:20.080" endtime="20201030 15:51:20.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:20.089" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:51:20.084" endtime="20201030 15:51:20.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.093" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:20.092" endtime="20201030 15:51:20.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.096" level="INFO">VALUE: [4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07]</msg>
<status status="PASS" starttime="20201030 15:51:20.094" endtime="20201030 15:51:20.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.090" endtime="20201030 15:51:20.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.100" endtime="20201030 15:51:20.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.099" endtime="20201030 15:51:20.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.098" endtime="20201030 15:51:20.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.743" endtime="20201030 15:51:20.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.742" endtime="20201030 15:51:20.122"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.130" endtime="20201030 15:51:20.148"></status>
</kw>
<msg timestamp="20201030 15:51:20.148" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.128" endtime="20201030 15:51:20.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.151" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.149" endtime="20201030 15:51:20.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.152" endtime="20201030 15:51:20.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.126" endtime="20201030 15:51:20.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.124" endtime="20201030 15:51:20.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.161" endtime="20201030 15:51:20.447"></status>
</kw>
<msg timestamp="20201030 15:51:20.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.160" endtime="20201030 15:51:20.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022419306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.451" endtime="20201030 15:51:20.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.459" endtime="20201030 15:51:20.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.157" endtime="20201030 15:51:20.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.155" endtime="20201030 15:51:20.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.467" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07...</msg>
<status status="PASS" starttime="20201030 15:51:20.464" endtime="20201030 15:51:20.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:20.471" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:51:20.468" endtime="20201030 15:51:20.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.476" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:20.475" endtime="20201030 15:51:20.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.478" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:20.477" endtime="20201030 15:51:20.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.472" endtime="20201030 15:51:20.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.483" endtime="20201030 15:51:20.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.482" endtime="20201030 15:51:20.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.481" endtime="20201030 15:51:20.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.123" endtime="20201030 15:51:20.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.122" endtime="20201030 15:51:20.504"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.513" endtime="20201030 15:51:20.530"></status>
</kw>
<msg timestamp="20201030 15:51:20.530" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.511" endtime="20201030 15:51:20.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.531" endtime="20201030 15:51:20.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.534" endtime="20201030 15:51:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.508" endtime="20201030 15:51:20.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.506" endtime="20201030 15:51:20.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.544" endtime="20201030 15:51:20.829"></status>
</kw>
<msg timestamp="20201030 15:51:20.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.543" endtime="20201030 15:51:20.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.833" endtime="20201030 15:51:20.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.842" endtime="20201030 15:51:20.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.540" endtime="20201030 15:51:20.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.538" endtime="20201030 15:51:20.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.849" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07...</msg>
<status status="PASS" starttime="20201030 15:51:20.846" endtime="20201030 15:51:20.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:20.853" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, ...</msg>
<status status="PASS" starttime="20201030 15:51:20.850" endtime="20201030 15:51:20.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.858" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:20.856" endtime="20201030 15:51:20.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.860" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:20.859" endtime="20201030 15:51:20.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.854" endtime="20201030 15:51:20.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.866" endtime="20201030 15:51:20.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.864" endtime="20201030 15:51:20.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.863" endtime="20201030 15:51:20.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.505" endtime="20201030 15:51:20.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.505" endtime="20201030 15:51:20.887"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.895" endtime="20201030 15:51:20.911"></status>
</kw>
<msg timestamp="20201030 15:51:20.911" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.893" endtime="20201030 15:51:20.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.912" endtime="20201030 15:51:20.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.915" endtime="20201030 15:51:20.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.891" endtime="20201030 15:51:20.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.889" endtime="20201030 15:51:20.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.924" endtime="20201030 15:51:21.210"></status>
</kw>
<msg timestamp="20201030 15:51:21.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020997194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.923" endtime="20201030 15:51:21.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020997194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.215" endtime="20201030 15:51:21.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.223" endtime="20201030 15:51:21.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.920" endtime="20201030 15:51:21.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.918" endtime="20201030 15:51:21.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.230" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:21.227" endtime="20201030 15:51:21.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:21.235" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 15:51:21.231" endtime="20201030 15:51:21.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.239" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:21.238" endtime="20201030 15:51:21.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.242" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 15:51:21.240" endtime="20201030 15:51:21.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.236" endtime="20201030 15:51:21.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.254" endtime="20201030 15:51:21.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.253" endtime="20201030 15:51:21.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.251" endtime="20201030 15:51:21.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.888" endtime="20201030 15:51:21.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.887" endtime="20201030 15:51:21.276"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.284" endtime="20201030 15:51:21.298"></status>
</kw>
<msg timestamp="20201030 15:51:21.299" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.283" endtime="20201030 15:51:21.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.302" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.300" endtime="20201030 15:51:21.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.303" endtime="20201030 15:51:21.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.280" endtime="20201030 15:51:21.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.278" endtime="20201030 15:51:21.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.312" endtime="20201030 15:51:21.605"></status>
</kw>
<msg timestamp="20201030 15:51:21.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.310" endtime="20201030 15:51:21.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.609" endtime="20201030 15:51:21.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.618" endtime="20201030 15:51:21.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.308" endtime="20201030 15:51:21.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.306" endtime="20201030 15:51:21.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.625" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 15:51:21.621" endtime="20201030 15:51:21.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:21.629" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:51:21.626" endtime="20201030 15:51:21.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.633" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:21.632" endtime="20201030 15:51:21.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.636" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:21.634" endtime="20201030 15:51:21.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.630" endtime="20201030 15:51:21.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.641" endtime="20201030 15:51:21.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.639" endtime="20201030 15:51:21.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.638" endtime="20201030 15:51:21.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.276" endtime="20201030 15:51:21.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.276" endtime="20201030 15:51:21.662"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.670" endtime="20201030 15:51:21.685"></status>
</kw>
<msg timestamp="20201030 15:51:21.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.668" endtime="20201030 15:51:21.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.686" endtime="20201030 15:51:21.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.689" endtime="20201030 15:51:21.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.666" endtime="20201030 15:51:21.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.664" endtime="20201030 15:51:21.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.699" endtime="20201030 15:51:21.985"></status>
</kw>
<msg timestamp="20201030 15:51:21.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.698" endtime="20201030 15:51:21.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.989" endtime="20201030 15:51:21.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.998" endtime="20201030 15:51:22.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.695" endtime="20201030 15:51:22.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.693" endtime="20201030 15:51:22.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.005" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:22.001" endtime="20201030 15:51:22.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.009" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:51:22.006" endtime="20201030 15:51:22.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.013" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:22.012" endtime="20201030 15:51:22.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.016" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:22.015" endtime="20201030 15:51:22.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.010" endtime="20201030 15:51:22.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.022" endtime="20201030 15:51:22.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.020" endtime="20201030 15:51:22.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.019" endtime="20201030 15:51:22.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.663" endtime="20201030 15:51:22.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.662" endtime="20201030 15:51:22.043"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.051" endtime="20201030 15:51:22.071"></status>
</kw>
<msg timestamp="20201030 15:51:22.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.050" endtime="20201030 15:51:22.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.073" endtime="20201030 15:51:22.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.076" endtime="20201030 15:51:22.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.047" endtime="20201030 15:51:22.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.045" endtime="20201030 15:51:22.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.085" endtime="20201030 15:51:22.371"></status>
</kw>
<msg timestamp="20201030 15:51:22.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.083" endtime="20201030 15:51:22.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.376" endtime="20201030 15:51:22.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.384" endtime="20201030 15:51:22.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.081" endtime="20201030 15:51:22.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.079" endtime="20201030 15:51:22.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.391" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:22.388" endtime="20201030 15:51:22.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.396" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:22.392" endtime="20201030 15:51:22.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.401" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:22.399" endtime="20201030 15:51:22.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.403" level="INFO">VALUE: [4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:22.402" endtime="20201030 15:51:22.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.397" endtime="20201030 15:51:22.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.408" endtime="20201030 15:51:22.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.407" endtime="20201030 15:51:22.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.406" endtime="20201030 15:51:22.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.044" endtime="20201030 15:51:22.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.043" endtime="20201030 15:51:22.429"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.437" endtime="20201030 15:51:22.453"></status>
</kw>
<msg timestamp="20201030 15:51:22.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.436" endtime="20201030 15:51:22.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.456" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.455" endtime="20201030 15:51:22.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.457" endtime="20201030 15:51:22.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.433" endtime="20201030 15:51:22.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.431" endtime="20201030 15:51:22.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.466" endtime="20201030 15:51:22.750"></status>
</kw>
<msg timestamp="20201030 15:51:22.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020913319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.465" endtime="20201030 15:51:22.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020913319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020913806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.755" endtime="20201030 15:51:22.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.766" endtime="20201030 15:51:22.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.462" endtime="20201030 15:51:22.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.460" endtime="20201030 15:51:22.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.776" level="INFO">${RESULT} = [{'diff': 4.870000000004038e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:22.772" endtime="20201030 15:51:22.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:22.782" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:22.778" endtime="20201030 15:51:22.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.788" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:22.787" endtime="20201030 15:51:22.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.790" level="INFO">VALUE: [4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 15:51:22.789" endtime="20201030 15:51:22.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.784" endtime="20201030 15:51:22.792"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.796" endtime="20201030 15:51:22.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.794" endtime="20201030 15:51:22.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.793" endtime="20201030 15:51:22.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.430" endtime="20201030 15:51:22.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.430" endtime="20201030 15:51:22.816"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.825" endtime="20201030 15:51:22.841"></status>
</kw>
<msg timestamp="20201030 15:51:22.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.823" endtime="20201030 15:51:22.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.842" endtime="20201030 15:51:22.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.845" endtime="20201030 15:51:22.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.820" endtime="20201030 15:51:22.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.819" endtime="20201030 15:51:22.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.855" endtime="20201030 15:51:23.141"></status>
</kw>
<msg timestamp="20201030 15:51:23.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020585222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.854" endtime="20201030 15:51:23.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020585222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.145" endtime="20201030 15:51:23.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.154" endtime="20201030 15:51:23.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.851" endtime="20201030 15:51:23.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.849" endtime="20201030 15:51:23.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.160" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07...</msg>
<status status="PASS" starttime="20201030 15:51:23.157" endtime="20201030 15:51:23.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:23.165" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, ...</msg>
<status status="PASS" starttime="20201030 15:51:23.161" endtime="20201030 15:51:23.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.169" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:23.168" endtime="20201030 15:51:23.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.172" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:23.170" endtime="20201030 15:51:23.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.166" endtime="20201030 15:51:23.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.178" endtime="20201030 15:51:23.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.176" endtime="20201030 15:51:23.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.175" endtime="20201030 15:51:23.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.817" endtime="20201030 15:51:23.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.817" endtime="20201030 15:51:23.198"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.207" endtime="20201030 15:51:23.222"></status>
</kw>
<msg timestamp="20201030 15:51:23.223" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.205" endtime="20201030 15:51:23.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.225" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.224" endtime="20201030 15:51:23.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.226" endtime="20201030 15:51:23.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.202" endtime="20201030 15:51:23.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.201" endtime="20201030 15:51:23.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.236" endtime="20201030 15:51:23.522"></status>
</kw>
<msg timestamp="20201030 15:51:23.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.234" endtime="20201030 15:51:23.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.526" endtime="20201030 15:51:23.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.534" endtime="20201030 15:51:23.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.231" endtime="20201030 15:51:23.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.230" endtime="20201030 15:51:23.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.541" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:23.538" endtime="20201030 15:51:23.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:23.546" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 15:51:23.542" endtime="20201030 15:51:23.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.550" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:23.549" endtime="20201030 15:51:23.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.553" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 15:51:23.552" endtime="20201030 15:51:23.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.547" endtime="20201030 15:51:23.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.558" endtime="20201030 15:51:23.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.557" endtime="20201030 15:51:23.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.556" endtime="20201030 15:51:23.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.199" endtime="20201030 15:51:23.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.199" endtime="20201030 15:51:23.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.889" endtime="20201030 15:51:23.579"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:15.803" endtime="20201030 15:51:23.580" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.587" endtime="20201030 15:51:23.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.585" endtime="20201030 15:51:23.607"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.621" endtime="20201030 15:51:23.645"></status>
</kw>
<msg timestamp="20201030 15:51:23.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.619" endtime="20201030 15:51:23.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.646" endtime="20201030 15:51:23.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.652" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:23.649" endtime="20201030 15:51:23.652"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.616" endtime="20201030 15:51:23.653"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.614" endtime="20201030 15:51:23.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.613" endtime="20201030 15:51:23.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:23.658" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:23.657" endtime="20201030 15:51:23.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.655" endtime="20201030 15:51:23.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.612" endtime="20201030 15:51:23.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.611" endtime="20201030 15:51:23.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.659" endtime="20201030 15:51:23.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.610" endtime="20201030 15:51:23.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.608" endtime="20201030 15:51:23.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.584" endtime="20201030 15:51:23.662"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.671" endtime="20201030 15:51:23.689"></status>
</kw>
<msg timestamp="20201030 15:51:23.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.670" endtime="20201030 15:51:23.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.693" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.691" endtime="20201030 15:51:23.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.694" endtime="20201030 15:51:23.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.667" endtime="20201030 15:51:23.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.665" endtime="20201030 15:51:23.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.704" endtime="20201030 15:51:23.991"></status>
</kw>
<msg timestamp="20201030 15:51:23.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078817583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078821806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.702" endtime="20201030 15:51:23.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078817583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078821806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.995" endtime="20201030 15:51:24.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.003" endtime="20201030 15:51:24.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.699" endtime="20201030 15:51:24.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.698" endtime="20201030 15:51:24.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.010" level="INFO">${RESULT} = [{'diff': 4.222999999997645e-06}, {'diff': 4.180000000006401e-06}, {'diff': 4.195000000012383e-06}, {'diff': 4.180999999991997e-06}, {'diff': 4.139000000000226e-06}, {'diff': 4.235999999990803e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:24.007" endtime="20201030 15:51:24.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.015" level="INFO">${OVERHEAD} = {'diff': [4.222999999997645e-06, 4.180000000006401e-06, 4.195000000012383e-06, 4.180999999991997e-06, 4.139000000000226e-06, 4.235999999990803e-06, 4.180999999991997e-06, 4.262999999990469e-06, 4.2219...</msg>
<status status="PASS" starttime="20201030 15:51:24.011" endtime="20201030 15:51:24.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.019" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:24.018" endtime="20201030 15:51:24.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.022" level="INFO">VALUE: [4.222999999997645e-06, 4.180000000006401e-06, 4.195000000012383e-06, 4.180999999991997e-06, 4.139000000000226e-06, 4.235999999990803e-06, 4.180999999991997e-06, 4.262999999990469e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.209000000005014e-06, 4.1810000000058745e-06, 4.2089999999911365e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.2360000000046805e-06, 4.2360000000046805e-06, 4.208000000005541e-06, 4.179999999992523e-06, 4.26400000000382e-06, 4.1810000000058745e-06, 4.221999999998172e-06, 4.207999999991663e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.165999999999892e-06, 4.221999999998172e-06, 4.209000000005014e-06, 4.1810000000058745e-06, 4.166999999999366e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.208000000005541e-06, 4.2089999999911365e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.2089999999911365e-06, 4.1949999999985055e-06, 4.208000000005541e-06, 4.2089999999911365e-06, 4.1810000000058745e-06, 4.2089999999911365e-06, 4.180999999991997e-06, 4.29200000000296e-06, 4.193999999999032e-06, 4.222999999997645e-06]</msg>
<status status="PASS" starttime="20201030 15:51:24.020" endtime="20201030 15:51:24.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.016" endtime="20201030 15:51:24.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.026" endtime="20201030 15:51:24.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.024" endtime="20201030 15:51:24.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.023" endtime="20201030 15:51:24.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.664" endtime="20201030 15:51:24.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.663" endtime="20201030 15:51:24.047"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.055" endtime="20201030 15:51:24.071"></status>
</kw>
<msg timestamp="20201030 15:51:24.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.053" endtime="20201030 15:51:24.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.073" endtime="20201030 15:51:24.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.075" endtime="20201030 15:51:24.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.050" endtime="20201030 15:51:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.049" endtime="20201030 15:51:24.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.084" endtime="20201030 15:51:24.387"></status>
</kw>
<msg timestamp="20201030 15:51:24.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021653111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.083" endtime="20201030 15:51:24.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021653111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.392" endtime="20201030 15:51:24.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.400" endtime="20201030 15:51:24.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.080" endtime="20201030 15:51:24.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.079" endtime="20201030 15:51:24.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.406" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.179999999999462e-06}, {'diff': 4.277999999999921e-06}, {'diff': 4.195000000001975e-06}, {'diff': 4.152999999999796e-06}, {'diff': 4.237000000000685e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:24.403" endtime="20201030 15:51:24.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.410" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.179999999999462e-06, 4.277999999999921e-06, 4.195000000001975e-06, 4.152999999999796e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.1659...</msg>
<status status="PASS" starttime="20201030 15:51:24.407" endtime="20201030 15:51:24.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.415" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:24.414" endtime="20201030 15:51:24.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.417" level="INFO">VALUE: [4.221999999998172e-06, 4.179999999999462e-06, 4.277999999999921e-06, 4.195000000001975e-06, 4.152999999999796e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.165999999999892e-06, 4.1949999999985055e-06, 4.139000000000226e-06, 4.1949999999985055e-06, 4.277999999999921e-06, 4.181000000002405e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.30600000000253e-06, 4.207999999998602e-06, 4.165999999999892e-06, 4.152999999999796e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.179999999999462e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.1809999999989356e-06, 4.152000000000322e-06, 4.236999999997215e-06, 4.223000000001115e-06, 4.180000000002931e-06, 4.2499999999973115e-06, 4.1949999999985055e-06, 4.180000000002931e-06, 4.194000000002501e-06]</msg>
<status status="PASS" starttime="20201030 15:51:24.416" endtime="20201030 15:51:24.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.411" endtime="20201030 15:51:24.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.421" endtime="20201030 15:51:24.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.420" endtime="20201030 15:51:24.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.419" endtime="20201030 15:51:24.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.047" endtime="20201030 15:51:24.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.047" endtime="20201030 15:51:24.442"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.450" endtime="20201030 15:51:24.469"></status>
</kw>
<msg timestamp="20201030 15:51:24.469" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.448" endtime="20201030 15:51:24.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.470" endtime="20201030 15:51:24.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.473" endtime="20201030 15:51:24.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.446" endtime="20201030 15:51:24.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.444" endtime="20201030 15:51:24.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.482" endtime="20201030 15:51:24.772"></status>
</kw>
<msg timestamp="20201030 15:51:24.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023132125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023136333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.480" endtime="20201030 15:51:24.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023132125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023136333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.776" endtime="20201030 15:51:24.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.784" endtime="20201030 15:51:24.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.478" endtime="20201030 15:51:24.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.476" endtime="20201030 15:51:24.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.790" level="INFO">${RESULT} = [{'diff': 4.207999999998602e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.180000000002931e-06}, {'diff': 4.222000000001641e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:24.787" endtime="20201030 15:51:24.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.795" level="INFO">${OVERHEAD} = {'diff': [4.207999999998602e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.180000000002931e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.24...</msg>
<status status="PASS" starttime="20201030 15:51:24.791" endtime="20201030 15:51:24.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.799" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:24.798" endtime="20201030 15:51:24.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.801" level="INFO">VALUE: [4.207999999998602e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.180000000002931e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.2499999999973115e-06, 4.222000000001641e-06, 4.11199999999709e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.223000000001115e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.1809999999989356e-06, 4.236000000001211e-06, 4.165999999999892e-06, 4.139000000000226e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.223000000001115e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.209000000001545e-06, 4.264000000000351e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.1949999999985055e-06, 4.152999999999796e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.209000000001545e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.180000000002931e-06, 4.223000000001115e-06]</msg>
<status status="PASS" starttime="20201030 15:51:24.800" endtime="20201030 15:51:24.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.796" endtime="20201030 15:51:24.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.809" endtime="20201030 15:51:24.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.808" endtime="20201030 15:51:24.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.806" endtime="20201030 15:51:24.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.443" endtime="20201030 15:51:24.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.442" endtime="20201030 15:51:24.830"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.838" endtime="20201030 15:51:24.857"></status>
</kw>
<msg timestamp="20201030 15:51:24.857" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.836" endtime="20201030 15:51:24.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.860" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.858" endtime="20201030 15:51:24.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.861" endtime="20201030 15:51:24.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.834" endtime="20201030 15:51:24.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.832" endtime="20201030 15:51:24.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.870" endtime="20201030 15:51:25.180"></status>
</kw>
<msg timestamp="20201030 15:51:25.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.868" endtime="20201030 15:51:25.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022310431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022314653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.184" endtime="20201030 15:51:25.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.192" endtime="20201030 15:51:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.866" endtime="20201030 15:51:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.864" endtime="20201030 15:51:25.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.199" level="INFO">${RESULT} = [{'diff': 4.222000000001641e-06}, {'diff': 4.1949999999985055e-06}, {'diff': 4.1660000000033615e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.179999999999462e-06}, {'diff': 4.222000000001641e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:25.196" endtime="20201030 15:51:25.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.204" level="INFO">${OVERHEAD} = {'diff': [4.222000000001641e-06, 4.1949999999985055e-06, 4.1660000000033615e-06, 4.250000000000781e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.19...</msg>
<status status="PASS" starttime="20201030 15:51:25.200" endtime="20201030 15:51:25.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.208" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:25.207" endtime="20201030 15:51:25.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.210" level="INFO">VALUE: [4.222000000001641e-06, 4.1949999999985055e-06, 4.1660000000033615e-06, 4.250000000000781e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.195000000001975e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.209000000001545e-06, 4.221999999998172e-06, 4.195000000001975e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.208000000002071e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.194000000002501e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.166999999999366e-06, 4.1809999999989356e-06, 4.221999999998172e-06, 4.208000000002071e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.262999999997408e-06, 4.222000000001641e-06, 4.194000000002501e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.180000000002931e-06, 4.277999999999921e-06, 4.207999999998602e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.207999999998602e-06]</msg>
<status status="PASS" starttime="20201030 15:51:25.209" endtime="20201030 15:51:25.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.205" endtime="20201030 15:51:25.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.215" endtime="20201030 15:51:25.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.213" endtime="20201030 15:51:25.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.212" endtime="20201030 15:51:25.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.831" endtime="20201030 15:51:25.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.830" endtime="20201030 15:51:25.236"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.244" endtime="20201030 15:51:25.257"></status>
</kw>
<msg timestamp="20201030 15:51:25.257" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.242" endtime="20201030 15:51:25.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.258" endtime="20201030 15:51:25.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.261" endtime="20201030 15:51:25.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.239" endtime="20201030 15:51:25.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.238" endtime="20201030 15:51:25.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.269" endtime="20201030 15:51:25.555"></status>
</kw>
<msg timestamp="20201030 15:51:25.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018112556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018116722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.268" endtime="20201030 15:51:25.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018112556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018116722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.559" endtime="20201030 15:51:25.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.567" endtime="20201030 15:51:25.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.265" endtime="20201030 15:51:25.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.264" endtime="20201030 15:51:25.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.575" level="INFO">${RESULT} = [{'diff': 4.165999999999892e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.179999999999462e-06}, {'diff': 4.179999999999462e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.194000000002501e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:25.571" endtime="20201030 15:51:25.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.579" level="INFO">${OVERHEAD} = {'diff': [4.165999999999892e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.166999999999366e-06, 4.2220...</msg>
<status status="PASS" starttime="20201030 15:51:25.576" endtime="20201030 15:51:25.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.583" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:25.582" endtime="20201030 15:51:25.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.585" level="INFO">VALUE: [4.165999999999892e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.166999999999366e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.223000000001115e-06, 4.1809999999989356e-06, 4.179999999999462e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.166999999999366e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.1809999999989356e-06, 4.221999999998172e-06, 4.223000000001115e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.180000000002931e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 15:51:25.584" endtime="20201030 15:51:25.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.580" endtime="20201030 15:51:25.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.590" endtime="20201030 15:51:25.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.589" endtime="20201030 15:51:25.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.587" endtime="20201030 15:51:25.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.237" endtime="20201030 15:51:25.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.236" endtime="20201030 15:51:25.611"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.619" endtime="20201030 15:51:25.634"></status>
</kw>
<msg timestamp="20201030 15:51:25.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.617" endtime="20201030 15:51:25.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.637" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.636" endtime="20201030 15:51:25.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.638" endtime="20201030 15:51:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.615" endtime="20201030 15:51:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.613" endtime="20201030 15:51:25.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.648" endtime="20201030 15:51:25.936"></status>
</kw>
<msg timestamp="20201030 15:51:25.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:25.647" endtime="20201030 15:51:25.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008722, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:25.940" endtime="20201030 15:51:25.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.948" endtime="20201030 15:51:25.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.644" endtime="20201030 15:51:25.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.642" endtime="20201030 15:51:25.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.955" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.1949999999985055e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.237000000000685e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:25.951" endtime="20201030 15:51:25.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.959" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.237000000000685e-06, 4.194000000002501e-06, 4.208000000002071e-06, 4.20...</msg>
<status status="PASS" starttime="20201030 15:51:25.956" endtime="20201030 15:51:25.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.963" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:25.962" endtime="20201030 15:51:25.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.966" level="INFO">VALUE: [4.221999999998172e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.237000000000685e-06, 4.194000000002501e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.277999999999921e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.1809999999989356e-06, 4.166999999999366e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.209000000001545e-06, 4.194000000002501e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.209000000001545e-06, 4.2359999999977416e-06, 4.222999999997645e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.194000000002501e-06, 4.208000000002071e-06, 4.125000000000656e-06, 4.194000000002501e-06, 4.236000000001211e-06, 4.195000000001975e-06, 4.221999999998172e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.195000000001975e-06, 4.236000000001211e-06, 4.139000000000226e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.165999999999892e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.179999999999462e-06]</msg>
<status status="PASS" starttime="20201030 15:51:25.964" endtime="20201030 15:51:25.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.959" endtime="20201030 15:51:25.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.972" endtime="20201030 15:51:25.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.970" endtime="20201030 15:51:25.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.969" endtime="20201030 15:51:25.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.612" endtime="20201030 15:51:25.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.611" endtime="20201030 15:51:25.993"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.001" endtime="20201030 15:51:26.021"></status>
</kw>
<msg timestamp="20201030 15:51:26.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.999" endtime="20201030 15:51:26.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.026" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.023" endtime="20201030 15:51:26.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.028" endtime="20201030 15:51:26.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.996" endtime="20201030 15:51:26.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.995" endtime="20201030 15:51:26.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.043" endtime="20201030 15:51:26.328"></status>
</kw>
<msg timestamp="20201030 15:51:26.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019997986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.040" endtime="20201030 15:51:26.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019997986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020002208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.332" endtime="20201030 15:51:26.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.341" endtime="20201030 15:51:26.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.037" endtime="20201030 15:51:26.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.034" endtime="20201030 15:51:26.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.348" level="INFO">${RESULT} = [{'diff': 4.222000000001641e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.195000000001975e-06}, {'diff': 4.209000000001545e-06}, {'diff': 4.207999999998602e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:26.344" endtime="20201030 15:51:26.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.353" level="INFO">${OVERHEAD} = {'diff': [4.222000000001641e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.2500...</msg>
<status status="PASS" starttime="20201030 15:51:26.349" endtime="20201030 15:51:26.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.357" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:26.356" endtime="20201030 15:51:26.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.360" level="INFO">VALUE: [4.222000000001641e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.209000000001545e-06, 4.1249999999971865e-06, 4.223000000001115e-06, 4.250000000000781e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.277999999999921e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.208999999998075e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.181000000002405e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.181000000002405e-06, 4.195000000001975e-06, 4.208000000002071e-06, 4.195000000001975e-06, 4.236000000001211e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 15:51:26.358" endtime="20201030 15:51:26.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.354" endtime="20201030 15:51:26.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.369" endtime="20201030 15:51:26.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.368" endtime="20201030 15:51:26.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.366" endtime="20201030 15:51:26.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.994" endtime="20201030 15:51:26.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.993" endtime="20201030 15:51:26.390"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.399" endtime="20201030 15:51:26.418"></status>
</kw>
<msg timestamp="20201030 15:51:26.418" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.397" endtime="20201030 15:51:26.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.419" endtime="20201030 15:51:26.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.423" endtime="20201030 15:51:26.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.394" endtime="20201030 15:51:26.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.392" endtime="20201030 15:51:26.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.435" endtime="20201030 15:51:26.744"></status>
</kw>
<msg timestamp="20201030 15:51:26.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024614097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024618319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.434" endtime="20201030 15:51:26.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024614097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024618319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.748" endtime="20201030 15:51:26.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.756" endtime="20201030 15:51:26.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.431" endtime="20201030 15:51:26.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.429" endtime="20201030 15:51:26.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.764" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.152999999999796e-06}, {'diff': 4.139000000000226e-06}, {'diff': 4.181000000002405e-06}, {'diff': 4.166999999999366e-06}, {'diff': 4.1949999999985055e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:26.761" endtime="20201030 15:51:26.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.768" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.181000000002405e-06, 4.166999999999366e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.223...</msg>
<status status="PASS" starttime="20201030 15:51:26.765" endtime="20201030 15:51:26.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.773" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:26.772" endtime="20201030 15:51:26.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.775" level="INFO">VALUE: [4.221999999998172e-06, 4.152999999999796e-06, 4.139000000000226e-06, 4.181000000002405e-06, 4.166999999999366e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.223000000001115e-06, 4.181000000002405e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.2499999999973115e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.1949999999985055e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.165999999999892e-06, 4.223000000001115e-06, 4.1949999999985055e-06, 4.291999999999491e-06, 4.152999999999796e-06, 4.1949999999985055e-06, 4.223000000001115e-06, 4.222999999997645e-06, 4.167000000002835e-06, 4.194000000002501e-06, 4.165999999999892e-06, 4.221999999998172e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.194000000002501e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.194000000002501e-06, 4.222000000001641e-06, 4.139000000000226e-06, 4.208999999998075e-06, 4.1949999999985055e-06, 4.250000000000781e-06, 4.1809999999989356e-06, 4.222000000001641e-06, 4.139000000000226e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 15:51:26.774" endtime="20201030 15:51:26.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.769" endtime="20201030 15:51:26.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.780" endtime="20201030 15:51:26.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.779" endtime="20201030 15:51:26.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.778" endtime="20201030 15:51:26.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.391" endtime="20201030 15:51:26.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.390" endtime="20201030 15:51:26.801"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.810" endtime="20201030 15:51:26.824"></status>
</kw>
<msg timestamp="20201030 15:51:26.825" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.808" endtime="20201030 15:51:26.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.827" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.826" endtime="20201030 15:51:26.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.828" endtime="20201030 15:51:26.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.805" endtime="20201030 15:51:26.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.804" endtime="20201030 15:51:26.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.839" endtime="20201030 15:51:27.126"></status>
</kw>
<msg timestamp="20201030 15:51:27.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.837" endtime="20201030 15:51:27.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020239847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.131" endtime="20201030 15:51:27.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.140" endtime="20201030 15:51:27.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.834" endtime="20201030 15:51:27.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.833" endtime="20201030 15:51:27.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.148" level="INFO">${RESULT} = [{'diff': 4.207999999998602e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.193999999999032e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.2499999999973115e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:27.143" endtime="20201030 15:51:27.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.154" level="INFO">${OVERHEAD} = {'diff': [4.207999999998602e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.1949999999985055e-06, 4.208000000002071e-06, 4.19...</msg>
<status status="PASS" starttime="20201030 15:51:27.149" endtime="20201030 15:51:27.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.160" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:27.159" endtime="20201030 15:51:27.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.162" level="INFO">VALUE: [4.207999999998602e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.1949999999985055e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.167000000002835e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.179999999999462e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.180000000002931e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.165999999999892e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201030 15:51:27.161" endtime="20201030 15:51:27.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.156" endtime="20201030 15:51:27.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.168" endtime="20201030 15:51:27.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.167" endtime="20201030 15:51:27.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.166" endtime="20201030 15:51:27.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.802" endtime="20201030 15:51:27.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.802" endtime="20201030 15:51:27.189"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.197" endtime="20201030 15:51:27.212"></status>
</kw>
<msg timestamp="20201030 15:51:27.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.196" endtime="20201030 15:51:27.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.214" endtime="20201030 15:51:27.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.216" endtime="20201030 15:51:27.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.193" endtime="20201030 15:51:27.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.191" endtime="20201030 15:51:27.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.225" endtime="20201030 15:51:27.512"></status>
</kw>
<msg timestamp="20201030 15:51:27.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019220833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019225056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.224" endtime="20201030 15:51:27.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019220833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019225056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.516" endtime="20201030 15:51:27.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.524" endtime="20201030 15:51:27.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.221" endtime="20201030 15:51:27.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.219" endtime="20201030 15:51:27.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.531" level="INFO">${RESULT} = [{'diff': 4.223000000001115e-06}, {'diff': 4.195000000001975e-06}, {'diff': 4.193999999999032e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.193999999999032e-06}, {'diff': 4.207999999998602e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:27.528" endtime="20201030 15:51:27.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.536" level="INFO">${OVERHEAD} = {'diff': [4.223000000001115e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.2219...</msg>
<status status="PASS" starttime="20201030 15:51:27.532" endtime="20201030 15:51:27.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.540" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:27.539" endtime="20201030 15:51:27.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.543" level="INFO">VALUE: [4.223000000001115e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.2499999999973115e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.222999999997645e-06, 4.236000000001211e-06, 4.1660000000033615e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.263000000000877e-06, 4.223000000001115e-06, 4.262999999997408e-06, 4.236000000001211e-06, 4.152999999999796e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.250000000000781e-06, 4.208999999998075e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.195000000001975e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 15:51:27.542" endtime="20201030 15:51:27.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.537" endtime="20201030 15:51:27.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.548" endtime="20201030 15:51:27.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.547" endtime="20201030 15:51:27.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.545" endtime="20201030 15:51:27.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.190" endtime="20201030 15:51:27.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.190" endtime="20201030 15:51:27.569"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.577" endtime="20201030 15:51:27.594"></status>
</kw>
<msg timestamp="20201030 15:51:27.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.576" endtime="20201030 15:51:27.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.597" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.595" endtime="20201030 15:51:27.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.598" endtime="20201030 15:51:27.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.573" endtime="20201030 15:51:27.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.571" endtime="20201030 15:51:27.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.607" endtime="20201030 15:51:27.895"></status>
</kw>
<msg timestamp="20201030 15:51:27.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021196347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021200556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.606" endtime="20201030 15:51:27.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021196347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021200556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.899" endtime="20201030 15:51:27.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.910" endtime="20201030 15:51:27.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.603" endtime="20201030 15:51:27.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.601" endtime="20201030 15:51:27.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.922" level="INFO">${RESULT} = [{'diff': 4.208999999998075e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.209000000001545e-06}, {'diff': 4.263000000000877e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:27.918" endtime="20201030 15:51:27.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.927" level="INFO">${OVERHEAD} = {'diff': [4.208999999998075e-06, 4.264000000000351e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.263000000000877e-06, 4.195000000001975e-06, 4.195000000001975e-06, 4.236...</msg>
<status status="PASS" starttime="20201030 15:51:27.923" endtime="20201030 15:51:27.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.933" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:27.932" endtime="20201030 15:51:27.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.937" level="INFO">VALUE: [4.208999999998075e-06, 4.264000000000351e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.263000000000877e-06, 4.195000000001975e-06, 4.195000000001975e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.152999999999796e-06, 4.237000000000685e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.209000000001545e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.165999999999892e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.195000000001975e-06, 4.223000000001115e-06, 4.250000000000781e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.1809999999989356e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.152999999999796e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.223000000001115e-06, 4.165999999999892e-06, 4.222000000001641e-06, 4.195000000001975e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.223000000001115e-06]</msg>
<status status="PASS" starttime="20201030 15:51:27.935" endtime="20201030 15:51:27.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.928" endtime="20201030 15:51:27.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.945" endtime="20201030 15:51:27.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.943" endtime="20201030 15:51:27.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.941" endtime="20201030 15:51:27.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.570" endtime="20201030 15:51:27.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.569" endtime="20201030 15:51:27.966"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.975" endtime="20201030 15:51:27.990"></status>
</kw>
<msg timestamp="20201030 15:51:27.990" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.973" endtime="20201030 15:51:27.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.993" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.991" endtime="20201030 15:51:27.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.994" endtime="20201030 15:51:27.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.970" endtime="20201030 15:51:27.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.969" endtime="20201030 15:51:27.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.004" endtime="20201030 15:51:28.288"></status>
</kw>
<msg timestamp="20201030 15:51:28.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020870347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020874556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.003" endtime="20201030 15:51:28.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020870347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020874556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.292" endtime="20201030 15:51:28.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.300" endtime="20201030 15:51:28.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.000" endtime="20201030 15:51:28.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.998" endtime="20201030 15:51:28.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.307" level="INFO">${RESULT} = [{'diff': 4.208999999998075e-06}, {'diff': 4.152999999999796e-06}, {'diff': 4.193999999999032e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.194000000002501e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:28.304" endtime="20201030 15:51:28.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.312" level="INFO">${OVERHEAD} = {'diff': [4.208999999998075e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.208999999998075e-06, 4.236000000001211e-06, 4.1949...</msg>
<status status="PASS" starttime="20201030 15:51:28.308" endtime="20201030 15:51:28.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.316" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:28.315" endtime="20201030 15:51:28.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.319" level="INFO">VALUE: [4.208999999998075e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.208999999998075e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.181000000002405e-06, 4.222000000001641e-06, 4.195000000001975e-06, 4.165999999999892e-06, 4.222000000001641e-06, 4.209000000001545e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.2499999999973115e-06, 4.264000000000351e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.209000000001545e-06, 4.208999999998075e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.193999999999032e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.1809999999989356e-06, 4.236000000001211e-06, 4.209000000001545e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.167000000002835e-06, 4.1949999999985055e-06]</msg>
<status status="PASS" starttime="20201030 15:51:28.317" endtime="20201030 15:51:28.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.312" endtime="20201030 15:51:28.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.327" endtime="20201030 15:51:28.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.325" endtime="20201030 15:51:28.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.324" endtime="20201030 15:51:28.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.967" endtime="20201030 15:51:28.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.967" endtime="20201030 15:51:28.347"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.356" endtime="20201030 15:51:28.373"></status>
</kw>
<msg timestamp="20201030 15:51:28.373" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.354" endtime="20201030 15:51:28.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.376" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.374" endtime="20201030 15:51:28.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.377" endtime="20201030 15:51:28.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.351" endtime="20201030 15:51:28.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.350" endtime="20201030 15:51:28.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.387" endtime="20201030 15:51:28.673"></status>
</kw>
<msg timestamp="20201030 15:51:28.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021562292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.386" endtime="20201030 15:51:28.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021562292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.678" endtime="20201030 15:51:28.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.686" endtime="20201030 15:51:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.383" endtime="20201030 15:51:28.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.381" endtime="20201030 15:51:28.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.693" level="INFO">${RESULT} = [{'diff': 4.209000000001545e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.179999999999462e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.180000000002931e-06}, {'diff': 4.193999999999032e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:28.690" endtime="20201030 15:51:28.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.698" level="INFO">${OVERHEAD} = {'diff': [4.209000000001545e-06, 4.221999999998172e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.180000000002931e-06, 4.193999999999032e-06, 4.237000000000685e-06, 4.264000000000351e-06, 4.1940...</msg>
<status status="PASS" starttime="20201030 15:51:28.694" endtime="20201030 15:51:28.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.704" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:28.703" endtime="20201030 15:51:28.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.707" level="INFO">VALUE: [4.209000000001545e-06, 4.221999999998172e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.180000000002931e-06, 4.193999999999032e-06, 4.237000000000685e-06, 4.264000000000351e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.125000000000656e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.2359999999977416e-06, 4.237000000000685e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.1949999999985055e-06]</msg>
<status status="PASS" starttime="20201030 15:51:28.705" endtime="20201030 15:51:28.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.699" endtime="20201030 15:51:28.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.713" endtime="20201030 15:51:28.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.711" endtime="20201030 15:51:28.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.710" endtime="20201030 15:51:28.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.348" endtime="20201030 15:51:28.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.348" endtime="20201030 15:51:28.735"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.744" endtime="20201030 15:51:28.759"></status>
</kw>
<msg timestamp="20201030 15:51:28.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.742" endtime="20201030 15:51:28.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.763" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.761" endtime="20201030 15:51:28.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.765" endtime="20201030 15:51:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.739" endtime="20201030 15:51:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.737" endtime="20201030 15:51:28.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.775" endtime="20201030 15:51:29.064"></status>
</kw>
<msg timestamp="20201030 15:51:29.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021425236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.774" endtime="20201030 15:51:29.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021425236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.068" endtime="20201030 15:51:29.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.077" endtime="20201030 15:51:29.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.770" endtime="20201030 15:51:29.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.768" endtime="20201030 15:51:29.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.084" level="INFO">${RESULT} = [{'diff': 4.277999999999921e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.209000000001545e-06}, {'diff': 4.207999999998602e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:29.081" endtime="20201030 15:51:29.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.089" level="INFO">${OVERHEAD} = {'diff': [4.277999999999921e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.1670...</msg>
<status status="PASS" starttime="20201030 15:51:29.085" endtime="20201030 15:51:29.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.093" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:29.092" endtime="20201030 15:51:29.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.096" level="INFO">VALUE: [4.277999999999921e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.167000000002835e-06, 4.166999999999366e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.181000000002405e-06, 4.1949999999985055e-06, 4.152999999999796e-06, 4.291999999999491e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.167000000002835e-06, 4.1809999999989356e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.221999999998172e-06, 4.166999999999366e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.194000000002501e-06, 4.1949999999985055e-06, 4.222999999997645e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.1809999999989356e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.179999999999462e-06, 4.194000000002501e-06, 4.1809999999989356e-06, 4.250000000000781e-06, 4.223000000001115e-06, 4.195000000001975e-06, 4.264000000000351e-06, 4.179999999999462e-06, 4.195000000001975e-06]</msg>
<status status="PASS" starttime="20201030 15:51:29.094" endtime="20201030 15:51:29.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.090" endtime="20201030 15:51:29.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.101" endtime="20201030 15:51:29.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.099" endtime="20201030 15:51:29.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.098" endtime="20201030 15:51:29.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.736" endtime="20201030 15:51:29.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.735" endtime="20201030 15:51:29.122"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.130" endtime="20201030 15:51:29.147"></status>
</kw>
<msg timestamp="20201030 15:51:29.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.128" endtime="20201030 15:51:29.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.150" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.149" endtime="20201030 15:51:29.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.151" endtime="20201030 15:51:29.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.126" endtime="20201030 15:51:29.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.124" endtime="20201030 15:51:29.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.162" endtime="20201030 15:51:29.447"></status>
</kw>
<msg timestamp="20201030 15:51:29.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.160" endtime="20201030 15:51:29.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.451" endtime="20201030 15:51:29.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.460" endtime="20201030 15:51:29.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.157" endtime="20201030 15:51:29.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.155" endtime="20201030 15:51:29.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.467" level="INFO">${RESULT} = [{'diff': 4.1949999999985055e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.1949999999985055e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.222000000001641e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:29.463" endtime="20201030 15:51:29.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.471" level="INFO">${OVERHEAD} = {'diff': [4.1949999999985055e-06, 4.221999999998172e-06, 4.264000000000351e-06, 4.1949999999985055e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.221999999998172e-06, 4.17...</msg>
<status status="PASS" starttime="20201030 15:51:29.468" endtime="20201030 15:51:29.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.475" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:29.474" endtime="20201030 15:51:29.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.478" level="INFO">VALUE: [4.1949999999985055e-06, 4.221999999998172e-06, 4.264000000000351e-06, 4.1949999999985055e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.221999999998172e-06, 4.179999999999462e-06, 4.139000000000226e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.195000000001975e-06, 4.195000000001975e-06, 4.222999999997645e-06, 4.222000000001641e-06, 4.166999999999366e-06, 4.152999999999796e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.194000000002501e-06, 4.194000000002501e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.181000000002405e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.152999999999796e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.1949999999985055e-06, 4.236000000001211e-06, 4.179999999999462e-06, 4.181000000002405e-06, 4.221999999998172e-06, 4.165999999999892e-06, 4.222000000001641e-06, 4.194000000002501e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 15:51:29.476" endtime="20201030 15:51:29.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.472" endtime="20201030 15:51:29.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.484" endtime="20201030 15:51:29.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.482" endtime="20201030 15:51:29.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.481" endtime="20201030 15:51:29.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.123" endtime="20201030 15:51:29.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.122" endtime="20201030 15:51:29.505"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.513" endtime="20201030 15:51:29.527"></status>
</kw>
<msg timestamp="20201030 15:51:29.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.511" endtime="20201030 15:51:29.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.529" endtime="20201030 15:51:29.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.531" endtime="20201030 15:51:29.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.508" endtime="20201030 15:51:29.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.507" endtime="20201030 15:51:29.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.541" endtime="20201030 15:51:29.824"></status>
</kw>
<msg timestamp="20201030 15:51:29.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.539" endtime="20201030 15:51:29.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.829" endtime="20201030 15:51:29.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.837" endtime="20201030 15:51:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.536" endtime="20201030 15:51:29.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.535" endtime="20201030 15:51:29.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.844" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.166999999999366e-06}, {'diff': 4.208999999998075e-06}, {'diff': 4.194000000002501e-06}, {'diff': 4.1949999999985055e-06}, {'diff': 4.194000000002501e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:29.840" endtime="20201030 15:51:29.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.849" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.166999999999366e-06, 4.208999999998075e-06, 4.194000000002501e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.208...</msg>
<status status="PASS" starttime="20201030 15:51:29.845" endtime="20201030 15:51:29.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:29.852" endtime="20201030 15:51:29.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.856" level="INFO">VALUE: [4.221999999998172e-06, 4.166999999999366e-06, 4.208999999998075e-06, 4.194000000002501e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.208000000002071e-06, 4.181000000002405e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.209000000001545e-06, 4.179999999999462e-06, 4.223000000001115e-06, 4.209000000001545e-06, 4.221999999998172e-06, 4.194000000002501e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.222999999997645e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.208000000002071e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.264000000000351e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.2499999999973115e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.152999999999796e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.222999999997645e-06, 4.195000000001975e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.2499999999973115e-06]</msg>
<status status="PASS" starttime="20201030 15:51:29.854" endtime="20201030 15:51:29.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.850" endtime="20201030 15:51:29.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.861" endtime="20201030 15:51:29.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.859" endtime="20201030 15:51:29.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.858" endtime="20201030 15:51:29.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.505" endtime="20201030 15:51:29.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.505" endtime="20201030 15:51:29.882"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.890" endtime="20201030 15:51:29.905"></status>
</kw>
<msg timestamp="20201030 15:51:29.905" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.889" endtime="20201030 15:51:29.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.908" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.906" endtime="20201030 15:51:29.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.909" endtime="20201030 15:51:29.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.886" endtime="20201030 15:51:29.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.884" endtime="20201030 15:51:29.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.919" endtime="20201030 15:51:30.208"></status>
</kw>
<msg timestamp="20201030 15:51:30.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:29.917" endtime="20201030 15:51:30.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:30.212" endtime="20201030 15:51:30.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.221" endtime="20201030 15:51:30.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.914" endtime="20201030 15:51:30.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.912" endtime="20201030 15:51:30.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.228" level="INFO">${RESULT} = [{'diff': 4.138999999996756e-06}, {'diff': 4.181000000002405e-06}, {'diff': 4.167000000002835e-06}, {'diff': 4.1809999999989356e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.207999999998602e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:30.225" endtime="20201030 15:51:30.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.233" level="INFO">${OVERHEAD} = {'diff': [4.138999999996756e-06, 4.181000000002405e-06, 4.167000000002835e-06, 4.1809999999989356e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.207...</msg>
<status status="PASS" starttime="20201030 15:51:30.229" endtime="20201030 15:51:30.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.237" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:30.236" endtime="20201030 15:51:30.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.239" level="INFO">VALUE: [4.138999999996756e-06, 4.181000000002405e-06, 4.167000000002835e-06, 4.1809999999989356e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.208000000002071e-06, 4.152000000000322e-06, 4.222000000001641e-06, 4.1949999999985055e-06, 4.179999999999462e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.2499999999973115e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.222000000001641e-06, 4.195000000001975e-06, 4.166999999999366e-06, 4.166999999999366e-06, 4.236000000001211e-06, 4.166999999999366e-06, 4.250000000000781e-06, 4.179999999999462e-06, 4.165999999999892e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.138000000000752e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.264000000000351e-06, 4.195000000001975e-06, 4.179999999999462e-06]</msg>
<status status="PASS" starttime="20201030 15:51:30.238" endtime="20201030 15:51:30.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.234" endtime="20201030 15:51:30.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.245" endtime="20201030 15:51:30.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.243" endtime="20201030 15:51:30.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.242" endtime="20201030 15:51:30.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.883" endtime="20201030 15:51:30.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.882" endtime="20201030 15:51:30.266"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.274" endtime="20201030 15:51:30.296"></status>
</kw>
<msg timestamp="20201030 15:51:30.296" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.272" endtime="20201030 15:51:30.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.299" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.297" endtime="20201030 15:51:30.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.300" endtime="20201030 15:51:30.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.270" endtime="20201030 15:51:30.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.268" endtime="20201030 15:51:30.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.310" endtime="20201030 15:51:30.594"></status>
</kw>
<msg timestamp="20201030 15:51:30.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.308" endtime="20201030 15:51:30.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.598" endtime="20201030 15:51:30.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.607" endtime="20201030 15:51:30.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.306" endtime="20201030 15:51:30.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.304" endtime="20201030 15:51:30.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.613" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.209000000001545e-06}, {'diff': 4.179999999999462e-06}, {'diff': 4.179999999999462e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.193999999999032e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:30.610" endtime="20201030 15:51:30.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.618" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.209000000001545e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.125000000000656e-06, 4.222000000001641e-06, 4.2229...</msg>
<status status="PASS" starttime="20201030 15:51:30.615" endtime="20201030 15:51:30.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.622" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:30.621" endtime="20201030 15:51:30.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.625" level="INFO">VALUE: [4.221999999998172e-06, 4.209000000001545e-06, 4.179999999999462e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.125000000000656e-06, 4.222000000001641e-06, 4.222999999997645e-06, 4.138999999996756e-06, 4.264000000000351e-06, 4.181000000002405e-06, 4.250000000000781e-06, 4.139000000000226e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.194000000002501e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.194000000002501e-06, 4.1809999999989356e-06, 4.179999999999462e-06, 4.194000000002501e-06, 4.195000000001975e-06, 4.139000000000226e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.139000000000226e-06, 4.179999999999462e-06, 4.209000000001545e-06, 4.209000000001545e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.291000000000017e-06, 4.1809999999989356e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.193999999999032e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.208000000002071e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.166999999999366e-06]</msg>
<status status="PASS" starttime="20201030 15:51:30.623" endtime="20201030 15:51:30.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.619" endtime="20201030 15:51:30.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.631" endtime="20201030 15:51:30.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.629" endtime="20201030 15:51:30.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.628" endtime="20201030 15:51:30.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.267" endtime="20201030 15:51:30.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.266" endtime="20201030 15:51:30.652"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.660" endtime="20201030 15:51:30.678"></status>
</kw>
<msg timestamp="20201030 15:51:30.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.658" endtime="20201030 15:51:30.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.681" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.680" endtime="20201030 15:51:30.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.682" endtime="20201030 15:51:30.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.656" endtime="20201030 15:51:30.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.654" endtime="20201030 15:51:30.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.692" endtime="20201030 15:51:30.976"></status>
</kw>
<msg timestamp="20201030 15:51:30.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.690" endtime="20201030 15:51:30.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.980" endtime="20201030 15:51:30.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.989" endtime="20201030 15:51:30.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.687" endtime="20201030 15:51:30.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.686" endtime="20201030 15:51:30.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.996" level="INFO">${RESULT} = [{'diff': 4.2359999999977416e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.1949999999985055e-06}, {'diff': 4.209000000001545e-06}, {'diff': 4.1809999999989356e-06}, {'diff': 4.195000000001975e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:30.992" endtime="20201030 15:51:30.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.001" level="INFO">${OVERHEAD} = {'diff': [4.2359999999977416e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.209000000001545e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.1809999999989356e-06, 4....</msg>
<status status="PASS" starttime="20201030 15:51:30.997" endtime="20201030 15:51:31.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:31.004" endtime="20201030 15:51:31.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.008" level="INFO">VALUE: [4.2359999999977416e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.209000000001545e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.209000000001545e-06, 4.1809999999989356e-06, 4.195000000001975e-06, 4.208000000002071e-06, 4.1949999999985055e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.195000000001975e-06, 4.207999999998602e-06, 4.195000000001975e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.125000000000656e-06, 4.1809999999989356e-06, 4.209000000001545e-06, 4.223000000001115e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.222999999997645e-06, 4.1809999999989356e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.181000000002405e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.166999999999366e-06, 4.1949999999985055e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.006" endtime="20201030 15:51:31.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.002" endtime="20201030 15:51:31.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.013" endtime="20201030 15:51:31.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.011" endtime="20201030 15:51:31.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.010" endtime="20201030 15:51:31.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.653" endtime="20201030 15:51:31.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.652" endtime="20201030 15:51:31.034"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.042" endtime="20201030 15:51:31.059"></status>
</kw>
<msg timestamp="20201030 15:51:31.060" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.040" endtime="20201030 15:51:31.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.063" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.061" endtime="20201030 15:51:31.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.064" endtime="20201030 15:51:31.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.038" endtime="20201030 15:51:31.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.036" endtime="20201030 15:51:31.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.073" endtime="20201030 15:51:31.361"></status>
</kw>
<msg timestamp="20201030 15:51:31.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.072" endtime="20201030 15:51:31.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022921278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.365" endtime="20201030 15:51:31.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.374" endtime="20201030 15:51:31.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.069" endtime="20201030 15:51:31.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.067" endtime="20201030 15:51:31.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.382" level="INFO">${RESULT} = [{'diff': 4.207999999998602e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.222000000001641e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:31.379" endtime="20201030 15:51:31.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.387" level="INFO">${OVERHEAD} = {'diff': [4.207999999998602e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.2079...</msg>
<status status="PASS" starttime="20201030 15:51:31.383" endtime="20201030 15:51:31.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.391" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:31.390" endtime="20201030 15:51:31.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.394" level="INFO">VALUE: [4.207999999998602e-06, 4.264000000000351e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.194000000002501e-06, 4.223000000001115e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.208999999998075e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.208000000002071e-06, 4.222999999997645e-06, 4.209000000001545e-06, 4.208000000002071e-06, 4.194000000002501e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.195000000001975e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.209000000001545e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.209000000001545e-06, 4.209000000001545e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.209000000001545e-06, 4.194000000002501e-06, 4.208000000002071e-06, 4.194000000002501e-06, 4.222000000001641e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.392" endtime="20201030 15:51:31.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.388" endtime="20201030 15:51:31.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.405" endtime="20201030 15:51:31.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.404" endtime="20201030 15:51:31.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.402" endtime="20201030 15:51:31.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.035" endtime="20201030 15:51:31.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.034" endtime="20201030 15:51:31.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.663" endtime="20201030 15:51:31.427"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:23.582" endtime="20201030 15:51:31.427" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.434" endtime="20201030 15:51:31.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.433" endtime="20201030 15:51:31.454"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.469" endtime="20201030 15:51:31.488"></status>
</kw>
<msg timestamp="20201030 15:51:31.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.467" endtime="20201030 15:51:31.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.490" endtime="20201030 15:51:31.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.494" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:31.492" endtime="20201030 15:51:31.495"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.465" endtime="20201030 15:51:31.495"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.462" endtime="20201030 15:51:31.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.460" endtime="20201030 15:51:31.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:31.500" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:31.499" endtime="20201030 15:51:31.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.497" endtime="20201030 15:51:31.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.459" endtime="20201030 15:51:31.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.458" endtime="20201030 15:51:31.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.502" endtime="20201030 15:51:31.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.457" endtime="20201030 15:51:31.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.455" endtime="20201030 15:51:31.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.431" endtime="20201030 15:51:31.505"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.513" endtime="20201030 15:51:31.534"></status>
</kw>
<msg timestamp="20201030 15:51:31.534" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.512" endtime="20201030 15:51:31.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.537" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.535" endtime="20201030 15:51:31.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.538" endtime="20201030 15:51:31.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.509" endtime="20201030 15:51:31.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.507" endtime="20201030 15:51:31.541"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.543" endtime="20201030 15:51:31.545"></status>
</kw>
<msg timestamp="20201030 15:51:31.546" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:31.542" endtime="20201030 15:51:31.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.550" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:31.549" endtime="20201030 15:51:31.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.552" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:31.551" endtime="20201030 15:51:31.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.546" endtime="20201030 15:51:31.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.560" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:31.556" endtime="20201030 15:51:31.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.562" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:31.561" endtime="20201030 15:51:31.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.553" endtime="20201030 15:51:31.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.570" endtime="20201030 15:51:31.856"></status>
</kw>
<msg timestamp="20201030 15:51:31.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069768931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069777542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.569" endtime="20201030 15:51:31.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069768931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069777542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.860" endtime="20201030 15:51:31.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.869" endtime="20201030 15:51:31.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.566" endtime="20201030 15:51:31.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.564" endtime="20201030 15:51:31.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.876" level="INFO">${RESULT} = [{'diff': 8.610999999991709e-06}, {'diff': 8.709000000009515e-06}, {'diff': 8.736000000009181e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.681000000010375e-06}, {'diff': 8.681000000010375e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:31.872" endtime="20201030 15:51:31.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.880" level="INFO">${OVERHEAD} = {'diff': [8.610999999991709e-06, 8.709000000009515e-06, 8.736000000009181e-06, 8.707999999996163e-06, 8.681000000010375e-06, 8.681000000010375e-06, 8.708000000010041e-06, 8.667000000003866e-06, 8.7220...</msg>
<status status="PASS" starttime="20201030 15:51:31.877" endtime="20201030 15:51:31.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.885" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:31.883" endtime="20201030 15:51:31.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.887" level="INFO">VALUE: [8.610999999991709e-06, 8.709000000009515e-06, 8.736000000009181e-06, 8.707999999996163e-06, 8.681000000010375e-06, 8.681000000010375e-06, 8.708000000010041e-06, 8.667000000003866e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.652999999997357e-06, 8.694000000003532e-06, 8.709000000009515e-06, 8.723000000002146e-06, 8.709000000009515e-06, 8.737000000008655e-06, 8.707999999996163e-06, 8.681000000010375e-06, 8.709000000009515e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.735999999995303e-06, 8.708999999995637e-06, 8.693999999989654e-06, 8.708999999995637e-06, 8.694000000003532e-06, 8.693999999989654e-06, 8.736999999994777e-06, 8.737000000008655e-06, 8.708000000010041e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.708000000010041e-06, 8.722000000002672e-06, 8.736000000009181e-06, 8.736000000009181e-06, 8.750000000001812e-06, 8.721999999988794e-06, 8.707999999996163e-06, 8.694999999989128e-06, 8.707999999996163e-06, 8.638999999990848e-06, 8.750000000001812e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.721999999988794e-06, 8.694000000003532e-06, 8.721999999988794e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.886" endtime="20201030 15:51:31.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.881" endtime="20201030 15:51:31.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.895" endtime="20201030 15:51:31.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.893" endtime="20201030 15:51:31.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.891" endtime="20201030 15:51:31.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.505" endtime="20201030 15:51:31.916"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:31.429" endtime="20201030 15:51:31.916" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.924" endtime="20201030 15:51:31.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.922" endtime="20201030 15:51:31.944"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.957" endtime="20201030 15:51:31.975"></status>
</kw>
<msg timestamp="20201030 15:51:31.976" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.956" endtime="20201030 15:51:31.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.978" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.977" endtime="20201030 15:51:31.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.981" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:31.979" endtime="20201030 15:51:31.982"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.953" endtime="20201030 15:51:31.982"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.951" endtime="20201030 15:51:31.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.949" endtime="20201030 15:51:31.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:31.987" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:31.986" endtime="20201030 15:51:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.984" endtime="20201030 15:51:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.948" endtime="20201030 15:51:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.948" endtime="20201030 15:51:31.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.989" endtime="20201030 15:51:31.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.946" endtime="20201030 15:51:31.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.945" endtime="20201030 15:51:31.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.921" endtime="20201030 15:51:31.992"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.002" endtime="20201030 15:51:32.100"></status>
</kw>
<msg timestamp="20201030 15:51:32.101" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.000" endtime="20201030 15:51:32.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.104" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.102" endtime="20201030 15:51:32.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.105" endtime="20201030 15:51:32.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.996" endtime="20201030 15:51:32.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.994" endtime="20201030 15:51:32.108"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.110" endtime="20201030 15:51:32.112"></status>
</kw>
<msg timestamp="20201030 15:51:32.112" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:32.109" endtime="20201030 15:51:32.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.116" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:32.115" endtime="20201030 15:51:32.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.119" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:32.118" endtime="20201030 15:51:32.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.113" endtime="20201030 15:51:32.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.124" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:32.123" endtime="20201030 15:51:32.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.126" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:32.125" endtime="20201030 15:51:32.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.120" endtime="20201030 15:51:32.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.133" endtime="20201030 15:51:32.426"></status>
</kw>
<msg timestamp="20201030 15:51:32.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074115278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074165639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.132" endtime="20201030 15:51:32.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074115278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074165639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.431" endtime="20201030 15:51:32.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.439" endtime="20201030 15:51:32.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.129" endtime="20201030 15:51:32.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.127" endtime="20201030 15:51:32.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.446" level="INFO">${RESULT} = [{'diff': 5.036099999999877e-05}, {'diff': 5.031899999999312e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.036099999999877e-05}, {'diff': 5.027800000000082e-05}, {'diff': 5.034799999999173e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:32.443" endtime="20201030 15:51:32.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.451" level="INFO">${OVERHEAD} = {'diff': [5.036099999999877e-05, 5.031899999999312e-05, 5.030599999999996e-05, 5.036099999999877e-05, 5.027800000000082e-05, 5.034799999999173e-05, 5.0235999999995173e-05, 5.033299999999963e-05, 5.030...</msg>
<status status="PASS" starttime="20201030 15:51:32.447" endtime="20201030 15:51:32.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.456" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:32.455" endtime="20201030 15:51:32.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.459" level="INFO">VALUE: [5.036099999999877e-05, 5.031899999999312e-05, 5.030599999999996e-05, 5.036099999999877e-05, 5.027800000000082e-05, 5.034799999999173e-05, 5.0235999999995173e-05, 5.033299999999963e-05, 5.030599999999996e-05, 5.026399999999431e-05, 5.032000000000647e-05, 5.027800000000082e-05, 5.025000000000168e-05, 5.031999999999259e-05, 5.027800000000082e-05, 5.027800000000082e-05, 5.030599999999996e-05, 5.027700000000135e-05, 5.027800000000082e-05, 5.03749999999914e-05, 5.036099999999877e-05, 5.034699999999226e-05, 5.032000000000647e-05, 5.034800000000561e-05, 5.031999999999259e-05, 5.034699999999226e-05, 5.033299999999963e-05, 5.025000000000168e-05, 5.030500000000049e-05, 5.034700000000614e-05, 5.026299999999484e-05, 5.025000000000168e-05, 5.034700000000614e-05, 5.036099999999877e-05, 5.034699999997838e-05, 5.0347999999977855e-05, 5.0333000000013506e-05, 5.031999999999259e-05, 5.026400000002207e-05, 5.030500000000049e-05, 5.023600000000905e-05, 5.027699999998747e-05, 5.0277999999986944e-05, 5.0195000000002876e-05, 5.031999999999259e-05, 5.030599999999996e-05, 5.025000000000168e-05, 5.030500000000049e-05, 5.033400000001298e-05, 5.026399999999431e-05]</msg>
<status status="PASS" starttime="20201030 15:51:32.457" endtime="20201030 15:51:32.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.452" endtime="20201030 15:51:32.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.464" endtime="20201030 15:51:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.463" endtime="20201030 15:51:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.461" endtime="20201030 15:51:32.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.992" endtime="20201030 15:51:32.485"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:31.918" endtime="20201030 15:51:32.485" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.492" endtime="20201030 15:51:32.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.491" endtime="20201030 15:51:32.513"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.526" endtime="20201030 15:51:32.543"></status>
</kw>
<msg timestamp="20201030 15:51:32.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.525" endtime="20201030 15:51:32.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.545" endtime="20201030 15:51:32.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:32.548" endtime="20201030 15:51:32.551"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:32.522" endtime="20201030 15:51:32.552"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:32.519" endtime="20201030 15:51:32.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.518" endtime="20201030 15:51:32.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:32.556" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:32.556" endtime="20201030 15:51:32.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.553" endtime="20201030 15:51:32.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.517" endtime="20201030 15:51:32.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.516" endtime="20201030 15:51:32.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.558" endtime="20201030 15:51:32.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.515" endtime="20201030 15:51:32.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.513" endtime="20201030 15:51:32.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.490" endtime="20201030 15:51:32.561"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.570" endtime="20201030 15:51:32.861"></status>
</kw>
<msg timestamp="20201030 15:51:32.862" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.568" endtime="20201030 15:51:32.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.864" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.863" endtime="20201030 15:51:32.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.866" endtime="20201030 15:51:32.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.565" endtime="20201030 15:51:32.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.563" endtime="20201030 15:51:32.869"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.871" endtime="20201030 15:51:32.873"></status>
</kw>
<msg timestamp="20201030 15:51:32.873" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:32.870" endtime="20201030 15:51:32.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.877" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:32.876" endtime="20201030 15:51:32.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.879" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:32.878" endtime="20201030 15:51:32.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.874" endtime="20201030 15:51:32.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.885" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:32.884" endtime="20201030 15:51:32.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.890" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:32.887" endtime="20201030 15:51:32.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.881" endtime="20201030 15:51:32.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.914" endtime="20201030 15:51:33.217"></status>
</kw>
<msg timestamp="20201030 15:51:33.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076544097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076637986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.906" endtime="20201030 15:51:33.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076544097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076637986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.221" endtime="20201030 15:51:33.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.229" endtime="20201030 15:51:33.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.894" endtime="20201030 15:51:33.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.892" endtime="20201030 15:51:33.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.237" level="INFO">${RESULT} = [{'diff': 9.388899999999978e-05}, {'diff': 9.319499999999037e-05}, {'diff': 9.322200000000391e-05}, {'diff': 9.323599999999654e-05}, {'diff': 9.3333000000001e-05}, {'diff': 9.318099999999774e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:33.233" endtime="20201030 15:51:33.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.241" level="INFO">${OVERHEAD} = {'diff': [9.388899999999978e-05, 9.319499999999037e-05, 9.322200000000391e-05, 9.323599999999654e-05, 9.3333000000001e-05, 9.318099999999774e-05, 9.336100000000014e-05, 9.334700000000751e-05, 9.332000...</msg>
<status status="PASS" starttime="20201030 15:51:33.238" endtime="20201030 15:51:33.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.245" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:33.244" endtime="20201030 15:51:33.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.248" level="INFO">VALUE: [9.388899999999978e-05, 9.319499999999037e-05, 9.322200000000391e-05, 9.323599999999654e-05, 9.3333000000001e-05, 9.318099999999774e-05, 9.336100000000014e-05, 9.334700000000751e-05, 9.332000000000784e-05, 9.327800000000219e-05, 9.326300000001009e-05, 9.331900000000837e-05, 9.330499999998798e-05, 9.326300000001009e-05, 9.329199999999482e-05, 9.320800000001128e-05, 9.330499999998798e-05, 9.329199999999482e-05, 9.323599999999654e-05, 9.326400000000956e-05, 9.329099999999535e-05, 9.322200000000391e-05, 9.31939999999909e-05, 9.3333000000001e-05, 9.330500000001574e-05, 9.323599999999654e-05, 9.334800000002086e-05, 9.3333000000001e-05, 9.322200000000391e-05, 9.331999999998009e-05, 9.322200000000391e-05, 9.337500000000665e-05, 9.338899999999928e-05, 9.318000000002602e-05, 9.323599999999654e-05, 9.333300000002875e-05, 9.331999999995233e-05, 9.325000000004469e-05, 9.322200000000391e-05, 9.330499999998798e-05, 9.33479999999931e-05, 9.334699999996587e-05, 9.330499999998798e-05, 9.33059999999597e-05, 9.323599999999654e-05, 9.320800000001128e-05, 9.323599999999654e-05, 9.329200000002258e-05, 9.337500000000665e-05, 9.322200000000391e-05]</msg>
<status status="PASS" starttime="20201030 15:51:33.246" endtime="20201030 15:51:33.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.242" endtime="20201030 15:51:33.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.253" endtime="20201030 15:51:33.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.251" endtime="20201030 15:51:33.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.250" endtime="20201030 15:51:33.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.562" endtime="20201030 15:51:33.273"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:32.487" endtime="20201030 15:51:33.274" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.281" endtime="20201030 15:51:33.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.279" endtime="20201030 15:51:33.301"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.315" endtime="20201030 15:51:33.332"></status>
</kw>
<msg timestamp="20201030 15:51:33.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.313" endtime="20201030 15:51:33.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.333" endtime="20201030 15:51:33.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.338" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:33.336" endtime="20201030 15:51:33.338"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:33.311" endtime="20201030 15:51:33.339"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:33.308" endtime="20201030 15:51:33.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.307" endtime="20201030 15:51:33.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:33.343" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:33.343" endtime="20201030 15:51:33.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.340" endtime="20201030 15:51:33.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.305" endtime="20201030 15:51:33.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.305" endtime="20201030 15:51:33.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.345" endtime="20201030 15:51:33.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.303" endtime="20201030 15:51:33.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.302" endtime="20201030 15:51:33.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.278" endtime="20201030 15:51:33.348"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.356" endtime="20201030 15:51:33.379"></status>
</kw>
<msg timestamp="20201030 15:51:33.379" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.355" endtime="20201030 15:51:33.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.380" endtime="20201030 15:51:33.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.383" endtime="20201030 15:51:33.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.352" endtime="20201030 15:51:33.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.350" endtime="20201030 15:51:33.386"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.388" endtime="20201030 15:51:33.390"></status>
</kw>
<msg timestamp="20201030 15:51:33.390" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:33.387" endtime="20201030 15:51:33.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.394" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:33.393" endtime="20201030 15:51:33.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.396" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:33.395" endtime="20201030 15:51:33.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.391" endtime="20201030 15:51:33.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.402" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:33.401" endtime="20201030 15:51:33.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.404" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:33.403" endtime="20201030 15:51:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.398" endtime="20201030 15:51:33.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.411" endtime="20201030 15:51:33.700"></status>
</kw>
<msg timestamp="20201030 15:51:33.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067401069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067403056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.410" endtime="20201030 15:51:33.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067401069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067403056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.704" endtime="20201030 15:51:33.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.713" endtime="20201030 15:51:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.407" endtime="20201030 15:51:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.406" endtime="20201030 15:51:33.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.719" level="INFO">${RESULT} = [{'diff': 1.987000000008843e-06}, {'diff': 1.9999999999881224e-06}, {'diff': 2.000000000002e-06}, {'diff': 1.986000000009369e-06}, {'diff': 2.014000000008509e-06}, {'diff': 1.986000000009369e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:33.716" endtime="20201030 15:51:33.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.724" level="INFO">${OVERHEAD} = {'diff': [1.987000000008843e-06, 1.9999999999881224e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.014000000008509e-06, 1.986000000009369e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.972000000...</msg>
<status status="PASS" starttime="20201030 15:51:33.720" endtime="20201030 15:51:33.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.729" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:33.727" endtime="20201030 15:51:33.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.731" level="INFO">VALUE: [1.987000000008843e-06, 1.9999999999881224e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.014000000008509e-06, 1.986000000009369e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.9720000000028604e-06, 2.013999999994631e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 1.987000000008843e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.0129999999951576e-06, 1.9999999999881224e-06, 1.986000000009369e-06, 2.000000000002e-06, 1.986999999994965e-06, 1.986000000009369e-06, 1.9859999999954914e-06, 1.986000000009369e-06, 2.013999999994631e-06, 1.9999999999881224e-06, 1.9720000000028604e-06, 2.0409999999942974e-06, 2.000000000002e-06, 2.013999999994631e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.9999999999881224e-06, 2.000000000002e-06, 1.9999999999881224e-06, 2.000000000002e-06, 1.9580000000102293e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.05600000000028e-06, 1.987000000008843e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9999999999881224e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.9999999999881224e-06, 2.014000000008509e-06, 2.000000000002e-06, 1.9720000000028604e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.730" endtime="20201030 15:51:33.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.724" endtime="20201030 15:51:33.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.736" endtime="20201030 15:51:33.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.735" endtime="20201030 15:51:33.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.734" endtime="20201030 15:51:33.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.348" endtime="20201030 15:51:33.757"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:33.275" endtime="20201030 15:51:33.758" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.764" endtime="20201030 15:51:33.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.763" endtime="20201030 15:51:33.785"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.797" endtime="20201030 15:51:33.815"></status>
</kw>
<msg timestamp="20201030 15:51:33.815" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.796" endtime="20201030 15:51:33.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.818" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.817" endtime="20201030 15:51:33.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.824" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:33.821" endtime="20201030 15:51:33.824"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:33.793" endtime="20201030 15:51:33.826"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:33.791" endtime="20201030 15:51:33.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.790" endtime="20201030 15:51:33.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:33.832" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:33.831" endtime="20201030 15:51:33.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.828" endtime="20201030 15:51:33.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.789" endtime="20201030 15:51:33.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.788" endtime="20201030 15:51:33.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.834" endtime="20201030 15:51:33.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.787" endtime="20201030 15:51:33.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.785" endtime="20201030 15:51:33.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.762" endtime="20201030 15:51:33.838"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.848" endtime="20201030 15:51:33.945"></status>
</kw>
<msg timestamp="20201030 15:51:33.946" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.846" endtime="20201030 15:51:33.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.948" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.947" endtime="20201030 15:51:33.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.950" endtime="20201030 15:51:33.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.842" endtime="20201030 15:51:33.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.840" endtime="20201030 15:51:33.953"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.955" endtime="20201030 15:51:33.957"></status>
</kw>
<msg timestamp="20201030 15:51:33.957" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:33.953" endtime="20201030 15:51:33.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.961" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:33.960" endtime="20201030 15:51:33.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.963" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:33.962" endtime="20201030 15:51:33.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.958" endtime="20201030 15:51:33.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.968" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:33.967" endtime="20201030 15:51:33.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.970" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:33.969" endtime="20201030 15:51:33.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.965" endtime="20201030 15:51:33.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.978" endtime="20201030 15:51:34.273"></status>
</kw>
<msg timestamp="20201030 15:51:34.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077651958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077664139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.976" endtime="20201030 15:51:34.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077651958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077664139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.277" endtime="20201030 15:51:34.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.286" endtime="20201030 15:51:34.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.974" endtime="20201030 15:51:34.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.972" endtime="20201030 15:51:34.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.292" level="INFO">${RESULT} = [{'diff': 1.2180999999999997e-05}, {'diff': 1.2180000000000524e-05}, {'diff': 1.2166999999993489e-05}, {'diff': 1.2208999999999137e-05}, {'diff': 1.2167000000007366e-05}, {'diff': 1.2166000000007893e-...</msg>
<status status="PASS" starttime="20201030 15:51:34.289" endtime="20201030 15:51:34.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.298" level="INFO">${OVERHEAD} = {'diff': [1.2180999999999997e-05, 1.2180000000000524e-05, 1.2166999999993489e-05, 1.2208999999999137e-05, 1.2167000000007366e-05, 1.2166000000007893e-05, 1.2180000000000524e-05, 1.2180999999999997e-05...</msg>
<status status="PASS" starttime="20201030 15:51:34.294" endtime="20201030 15:51:34.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.303" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:34.301" endtime="20201030 15:51:34.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.305" level="INFO">VALUE: [1.2180999999999997e-05, 1.2180000000000524e-05, 1.2166999999993489e-05, 1.2208999999999137e-05, 1.2167000000007366e-05, 1.2166000000007893e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2152000000001384e-05, 1.2166999999993489e-05, 1.2165999999994015e-05, 1.2180000000000524e-05, 1.2165999999994015e-05, 1.2194999999992628e-05, 1.2208999999999137e-05, 1.2180999999999997e-05, 1.2083999999995543e-05, 1.2207999999999664e-05, 1.2139000000008227e-05, 1.2249999999991434e-05, 1.2180999999999997e-05, 1.2222000000006172e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2195000000006506e-05, 1.2167000000007366e-05, 1.2153000000000858e-05, 1.2152000000001384e-05, 1.2167000000007366e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.2111000000009087e-05, 1.2180999999999997e-05, 1.2222000000006172e-05, 1.20969999999887e-05, 1.2138999999994349e-05, 1.219400000002091e-05, 1.220899999998526e-05, 1.2165999999980137e-05, 1.2152000000015262e-05, 1.2194999999992628e-05, 1.2167000000007366e-05, 1.2166000000007893e-05, 1.2167000000007366e-05, 1.2110999999981331e-05, 1.2166000000007893e-05, 1.2167000000007366e-05, 1.2193999999993155e-05, 1.2194999999992628e-05]</msg>
<status status="PASS" starttime="20201030 15:51:34.304" endtime="20201030 15:51:34.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.299" endtime="20201030 15:51:34.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.310" endtime="20201030 15:51:34.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.309" endtime="20201030 15:51:34.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.307" endtime="20201030 15:51:34.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.838" endtime="20201030 15:51:34.331"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:33.759" endtime="20201030 15:51:34.332" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.339" endtime="20201030 15:51:34.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.337" endtime="20201030 15:51:34.359"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.372" endtime="20201030 15:51:34.392"></status>
</kw>
<msg timestamp="20201030 15:51:34.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.371" endtime="20201030 15:51:34.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.394" endtime="20201030 15:51:34.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.399" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:34.396" endtime="20201030 15:51:34.400"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:34.368" endtime="20201030 15:51:34.400"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:34.365" endtime="20201030 15:51:34.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.364" endtime="20201030 15:51:34.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:34.405" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:34.404" endtime="20201030 15:51:34.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.402" endtime="20201030 15:51:34.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.363" endtime="20201030 15:51:34.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.363" endtime="20201030 15:51:34.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.407" endtime="20201030 15:51:34.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.361" endtime="20201030 15:51:34.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.359" endtime="20201030 15:51:34.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.336" endtime="20201030 15:51:34.410"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.418" endtime="20201030 15:51:34.718"></status>
</kw>
<msg timestamp="20201030 15:51:34.719" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.417" endtime="20201030 15:51:34.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.728" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.723" endtime="20201030 15:51:34.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.732" endtime="20201030 15:51:34.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.414" endtime="20201030 15:51:34.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.412" endtime="20201030 15:51:34.740"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.747" endtime="20201030 15:51:34.752"></status>
</kw>
<msg timestamp="20201030 15:51:34.753" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:34.743" endtime="20201030 15:51:34.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.763" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:34.762" endtime="20201030 15:51:34.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.768" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:34.765" endtime="20201030 15:51:34.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.756" endtime="20201030 15:51:34.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.779" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:34.777" endtime="20201030 15:51:34.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.786" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:34.783" endtime="20201030 15:51:34.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.772" endtime="20201030 15:51:34.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.798" endtime="20201030 15:51:35.094"></status>
</kw>
<msg timestamp="20201030 15:51:35.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079585528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079608, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:34.796" endtime="20201030 15:51:35.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079585528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079608, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:35.098" endtime="20201030 15:51:35.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.106" endtime="20201030 15:51:35.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.792" endtime="20201030 15:51:35.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.789" endtime="20201030 15:51:35.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.113" level="INFO">${RESULT} = [{'diff': 2.2471999999995607e-05}, {'diff': 2.2555999999993026e-05}, {'diff': 2.256900000000006e-05}, {'diff': 2.256900000000006e-05}, {'diff': 2.261100000000571e-05}, {'diff': 2.256900000000006e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:35.110" endtime="20201030 15:51:35.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.117" level="INFO">${OVERHEAD} = {'diff': [2.2471999999995607e-05, 2.2555999999993026e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.261100000000571e-05, 2.256900000000006e-05, 2.2555999999993026e-05, 2.2499999999994746e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:51:35.114" endtime="20201030 15:51:35.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.122" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:35.121" endtime="20201030 15:51:35.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.125" level="INFO">VALUE: [2.2471999999995607e-05, 2.2555999999993026e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.261100000000571e-05, 2.256900000000006e-05, 2.2555999999993026e-05, 2.2499999999994746e-05, 2.2542000000000395e-05, 2.2514000000001255e-05, 2.2554999999979675e-05, 2.255500000000743e-05, 2.261100000000571e-05, 2.259700000001308e-05, 2.2569999999999535e-05, 2.2582999999992692e-05, 2.2582999999992692e-05, 2.2556000000006904e-05, 2.2527999999993886e-05, 2.256900000000006e-05, 2.2582999999992692e-05, 2.2569999999999535e-05, 2.25410000000148e-05, 2.2527999999993886e-05, 2.256900000000006e-05, 2.2583000000020448e-05, 2.2596999999985323e-05, 2.2556000000006904e-05, 2.2612000000005184e-05, 2.25410000000148e-05, 2.2541999999986517e-05, 2.2542000000014273e-05, 2.2556000000006904e-05, 2.2556000000006904e-05, 2.261100000000571e-05, 2.2542000000014273e-05, 2.2583000000020448e-05, 2.251400000002901e-05, 2.2568999999972306e-05, 2.252799999996613e-05, 2.261100000000571e-05, 2.2459000000030205e-05, 2.2542000000014273e-05, 2.2583999999992166e-05, 2.2582999999964937e-05, 2.2569999999999535e-05, 2.2471999999995607e-05, 2.2638999999990972e-05, 2.2583999999992166e-05, 2.2569999999999535e-05]</msg>
<status status="PASS" starttime="20201030 15:51:35.123" endtime="20201030 15:51:35.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.118" endtime="20201030 15:51:35.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.130" endtime="20201030 15:51:35.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.128" endtime="20201030 15:51:35.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.127" endtime="20201030 15:51:35.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.410" endtime="20201030 15:51:35.150"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:34.333" endtime="20201030 15:51:35.151" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.159" endtime="20201030 15:51:35.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.157" endtime="20201030 15:51:35.179"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.196" endtime="20201030 15:51:35.216"></status>
</kw>
<msg timestamp="20201030 15:51:35.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.194" endtime="20201030 15:51:35.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.217" endtime="20201030 15:51:35.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.224" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:35.222" endtime="20201030 15:51:35.224"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:35.191" endtime="20201030 15:51:35.225"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:35.188" endtime="20201030 15:51:35.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.185" endtime="20201030 15:51:35.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:35.231" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:35.230" endtime="20201030 15:51:35.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.227" endtime="20201030 15:51:35.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.184" endtime="20201030 15:51:35.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.184" endtime="20201030 15:51:35.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.233" endtime="20201030 15:51:35.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.182" endtime="20201030 15:51:35.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.180" endtime="20201030 15:51:35.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.156" endtime="20201030 15:51:35.236"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.240" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:35.250" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:36.393" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:35.238" endtime="20201030 15:51:36.394"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.396" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:36.395" endtime="20201030 15:51:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.236" endtime="20201030 15:51:36.397"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.416" endtime="20201030 15:51:36.427"></status>
</kw>
<msg timestamp="20201030 15:51:36.428" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.405" endtime="20201030 15:51:36.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.430" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.429" endtime="20201030 15:51:36.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.431" endtime="20201030 15:51:36.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.403" endtime="20201030 15:51:36.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.400" endtime="20201030 15:51:36.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.442" endtime="20201030 15:51:36.739"></status>
</kw>
<msg timestamp="20201030 15:51:36.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.176373375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.1763805, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201030 15:51:36.439" endtime="20201030 15:51:36.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.176373375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.1763805, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201030 15:51:36.744" endtime="20201030 15:51:36.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.754" endtime="20201030 15:51:36.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.437" endtime="20201030 15:51:36.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.435" endtime="20201030 15:51:36.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:36.761" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 7.152999999870957e-06}, {'diff': 7.124999999996717e-06}, {'diff': 7.124999999996717e-06}, {'diff': 7.110999999948575e-06}, {'diff': 7.1390000000448595e-06}, {'diff': 7.124999999...</msg>
<status status="PASS" starttime="20201030 15:51:36.757" endtime="20201030 15:51:36.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.766" level="INFO">${RESULT} = {'diff': [0, 7.152999999870957e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.110999999948575e-06, 7.1390000000448595e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.1390000000448595e-06, 7...</msg>
<status status="PASS" starttime="20201030 15:51:36.762" endtime="20201030 15:51:36.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.770" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:36.769" endtime="20201030 15:51:36.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.773" level="INFO">VALUE: [0, 7.152999999870957e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.110999999948575e-06, 7.1390000000448595e-06, 7.124999999996717e-06, 7.124999999996717e-06, 7.1390000000448595e-06, 7.124999999996717e-06, 7.152999999870957e-06, 7.124999999996717e-06, 7.056000000060791e-06, 7.110999999948575e-06, 0.07061348600000006, 2.3469999999026214e-06, 2.3329999998544793e-06, 2.2779999999666956e-06, 2.3329999998544793e-06, 2.333000000076524e-06, 2.3340000001592642e-06, 2.320000000111122e-06, 2.333000000076524e-06, 2.333000000076524e-06, 2.320000000111122e-06, 2.3190000000283817e-06, 2.3199999998890775e-06, 2.2499999998704112e-06, 2.3340000001592642e-06, 2.333000000076524e-06, 2.3329999998544793e-06, 2.2909999999320974e-06, 2.333000000076524e-06, 2.4029999998731455e-06, 2.30600000006298e-06, 2.3340000001592642e-06, 2.3190000000283817e-06, 2.3190000000283817e-06, 2.333000000076524e-06, 2.3469999999026214e-06, 2.320000000111122e-06, 2.320000000111122e-06, 2.3340000001592642e-06, 2.3339999999372196e-06, 2.30600000006298e-06, 2.3340000001592642e-06, 2.3339999999372196e-06, 2.3339999999372196e-06, 2.347999999985362e-06, 2.320000000111122e-06, 2.3190000000283817e-06, 2.3329999998544793e-06, 2.333000000076524e-06, 2.333000000076524e-06, 2.3199999998890775e-06, 2.3340000001592642e-06, 2.389000000047048e-06, 2.333000000076524e-06, 2.3190000000283817e-06, 2.333000000076524e-06, 2.333000000076524e-06, 2.3199999998890775e-06, 2.3340000001592642e-06, 2.3199999998890775e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.771" endtime="20201030 15:51:36.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.767" endtime="20201030 15:51:36.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.778" endtime="20201030 15:51:36.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.776" endtime="20201030 15:51:36.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.775" endtime="20201030 15:51:36.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.399" endtime="20201030 15:51:36.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.398" endtime="20201030 15:51:36.800"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.808" endtime="20201030 15:51:36.822"></status>
</kw>
<msg timestamp="20201030 15:51:36.823" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.806" endtime="20201030 15:51:36.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.825" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.824" endtime="20201030 15:51:36.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.826" endtime="20201030 15:51:36.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.804" endtime="20201030 15:51:36.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.802" endtime="20201030 15:51:36.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.835" endtime="20201030 15:51:37.136"></status>
</kw>
<msg timestamp="20201030 15:51:37.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.834" endtime="20201030 15:51:37.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019234833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.140" endtime="20201030 15:51:37.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.149" endtime="20201030 15:51:37.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.831" endtime="20201030 15:51:37.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.829" endtime="20201030 15:51:37.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.155" level="INFO">${PHILIP_RES} = [{'diff': 1.7209000000000668e-05}, {'diff': 1.7292000000002083e-05}, {'diff': 1.7249999999999904e-05}, {'diff': 1.7249999999999904e-05}, {'diff': 1.7305999999998184e-05}, {'diff': 1.7291999999998614e-...</msg>
<status status="PASS" starttime="20201030 15:51:37.152" endtime="20201030 15:51:37.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.160" level="INFO">${RESULT} = {'diff': [1.7209000000000668e-05, 1.7292000000002083e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7305999999998184e-05, 1.7291999999998614e-05, 1.7263999999999474e-05, 1.7278000000002514e-05...</msg>
<status status="PASS" starttime="20201030 15:51:37.156" endtime="20201030 15:51:37.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.164" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.163" endtime="20201030 15:51:37.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.167" level="INFO">VALUE: [1.7209000000000668e-05, 1.7292000000002083e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7305999999998184e-05, 1.7291999999998614e-05, 1.7263999999999474e-05, 1.7278000000002514e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7277999999999044e-05, 1.727699999999957e-05, 1.7292000000002083e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.727699999999957e-05, 1.7277999999999044e-05, 1.7292000000002083e-05, 1.7277999999999044e-05, 1.7236000000000334e-05, 1.7221999999997295e-05, 1.7277999999999044e-05, 1.7263999999999474e-05, 1.7291999999998614e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7278000000002514e-05, 1.7277999999999044e-05, 1.7249999999999904e-05, 1.7264000000002944e-05, 1.7277999999999044e-05, 1.727699999999957e-05, 1.7277999999999044e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.7236999999999808e-05, 1.7277999999999044e-05, 1.7207999999997725e-05, 1.7209000000000668e-05, 1.7291999999998614e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7291999999998614e-05, 1.7249999999999904e-05, 1.727699999999957e-05, 1.7236000000000334e-05, 1.7278000000002514e-05]</msg>
<status status="PASS" starttime="20201030 15:51:37.166" endtime="20201030 15:51:37.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.161" endtime="20201030 15:51:37.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.172" endtime="20201030 15:51:37.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.170" endtime="20201030 15:51:37.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.169" endtime="20201030 15:51:37.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.800" endtime="20201030 15:51:37.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.800" endtime="20201030 15:51:37.193"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.201" endtime="20201030 15:51:37.215"></status>
</kw>
<msg timestamp="20201030 15:51:37.215" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.199" endtime="20201030 15:51:37.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.218" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.216" endtime="20201030 15:51:37.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.219" endtime="20201030 15:51:37.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.197" endtime="20201030 15:51:37.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.195" endtime="20201030 15:51:37.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.228" endtime="20201030 15:51:37.512"></status>
</kw>
<msg timestamp="20201030 15:51:37.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.226" endtime="20201030 15:51:37.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.516" endtime="20201030 15:51:37.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.525" endtime="20201030 15:51:37.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.223" endtime="20201030 15:51:37.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.222" endtime="20201030 15:51:37.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.533" level="INFO">${PHILIP_RES} = [{'diff': 2.640300000000123e-05}, {'diff': 2.6485999999999177e-05}, {'diff': 2.6499999999998747e-05}, {'diff': 2.64170000000008e-05}, {'diff': 2.6471999999999607e-05}, {'diff': 2.6485999999999177e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:37.528" endtime="20201030 15:51:37.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.537" level="INFO">${RESULT} = {'diff': [2.640300000000123e-05, 2.6485999999999177e-05, 2.6499999999998747e-05, 2.64170000000008e-05, 2.6471999999999607e-05, 2.6485999999999177e-05, 2.644499999999994e-05, 2.638900000000166e-05, 2.6...</msg>
<status status="PASS" starttime="20201030 15:51:37.534" endtime="20201030 15:51:37.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.542" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.541" endtime="20201030 15:51:37.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.545" level="INFO">VALUE: [2.640300000000123e-05, 2.6485999999999177e-05, 2.6499999999998747e-05, 2.64170000000008e-05, 2.6471999999999607e-05, 2.6485999999999177e-05, 2.644499999999994e-05, 2.638900000000166e-05, 2.6486000000002646e-05, 2.6500000000002216e-05, 2.6514000000001786e-05, 2.6486000000002646e-05, 2.6430000000000897e-05, 2.6429999999997428e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.64170000000008e-05, 2.644499999999994e-05, 2.648699999999865e-05, 2.6499999999998747e-05, 2.6513999999998317e-05, 2.6486000000002646e-05, 2.644499999999994e-05, 2.6471999999999607e-05, 2.6555000000001022e-05, 2.6514000000001786e-05, 2.648699999999865e-05, 2.643100000000037e-05, 2.641699999999733e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6429999999997428e-05, 2.643100000000037e-05, 2.648700000000212e-05, 2.6472000000003076e-05, 2.643100000000037e-05, 2.6443999999996998e-05, 2.6514000000001786e-05, 2.6471999999999607e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6429999999997428e-05, 2.6485999999999177e-05, 2.6499999999998747e-05, 2.6499999999998747e-05, 2.6526999999998413e-05, 2.64309999999969e-05, 2.6430000000000897e-05, 2.6514000000001786e-05, 2.6429999999997428e-05]</msg>
<status status="PASS" starttime="20201030 15:51:37.543" endtime="20201030 15:51:37.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.538" endtime="20201030 15:51:37.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.550" endtime="20201030 15:51:37.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.548" endtime="20201030 15:51:37.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.547" endtime="20201030 15:51:37.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.194" endtime="20201030 15:51:37.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.193" endtime="20201030 15:51:37.570"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.579" endtime="20201030 15:51:37.595"></status>
</kw>
<msg timestamp="20201030 15:51:37.595" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.577" endtime="20201030 15:51:37.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.598" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.596" endtime="20201030 15:51:37.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.599" endtime="20201030 15:51:37.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.575" endtime="20201030 15:51:37.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.573" endtime="20201030 15:51:37.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.609" endtime="20201030 15:51:37.894"></status>
</kw>
<msg timestamp="20201030 15:51:37.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.607" endtime="20201030 15:51:37.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.898" endtime="20201030 15:51:37.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.908" endtime="20201030 15:51:37.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.604" endtime="20201030 15:51:37.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.602" endtime="20201030 15:51:37.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.914" level="INFO">${PHILIP_RES} = [{'diff': 3.655600000000009e-05}, {'diff': 3.6639000000001504e-05}, {'diff': 3.655600000000009e-05}, {'diff': 3.651400000000138e-05}, {'diff': 3.6596999999999325e-05}, {'diff': 3.6610999999998894e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:37.911" endtime="20201030 15:51:37.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.918" level="INFO">${RESULT} = {'diff': [3.655600000000009e-05, 3.6639000000001504e-05, 3.655600000000009e-05, 3.651400000000138e-05, 3.6596999999999325e-05, 3.6610999999998894e-05, 3.6596999999999325e-05, 3.6582999999999755e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:51:37.915" endtime="20201030 15:51:37.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.924" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.922" endtime="20201030 15:51:37.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.930" level="INFO">VALUE: [3.655600000000009e-05, 3.6639000000001504e-05, 3.655600000000009e-05, 3.651400000000138e-05, 3.6596999999999325e-05, 3.6610999999998894e-05, 3.6596999999999325e-05, 3.6582999999999755e-05, 3.654200000000052e-05, 3.6625000000001934e-05, 3.6582999999999755e-05, 3.6554999999997145e-05, 3.6569000000000185e-05, 3.655600000000009e-05, 3.651400000000138e-05, 3.6597000000002794e-05, 3.6611000000002364e-05, 3.654200000000052e-05, 3.6554999999997145e-05, 3.652799999999748e-05, 3.6610999999998894e-05, 3.6569000000000185e-05, 3.654199999999705e-05, 3.6624999999998464e-05, 3.6582999999999755e-05, 3.655600000000009e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.654200000000052e-05, 3.652800000000095e-05, 3.65979999999988e-05, 3.6596999999999325e-05, 3.655600000000009e-05, 3.6610999999998894e-05, 3.654200000000052e-05, 3.6582999999999755e-05, 3.6624999999998464e-05, 3.652800000000095e-05, 3.654200000000052e-05, 3.6582999999999755e-05, 3.6638999999998034e-05, 3.652800000000095e-05, 3.6596999999999325e-05, 3.6625000000001934e-05, 3.654200000000052e-05, 3.655600000000009e-05, 3.6569000000000185e-05, 3.654200000000052e-05, 3.6625000000001934e-05, 3.656999999999966e-05]</msg>
<status status="PASS" starttime="20201030 15:51:37.928" endtime="20201030 15:51:37.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.919" endtime="20201030 15:51:37.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.939" endtime="20201030 15:51:37.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.937" endtime="20201030 15:51:37.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.933" endtime="20201030 15:51:37.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.571" endtime="20201030 15:51:37.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.571" endtime="20201030 15:51:37.960"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.969" endtime="20201030 15:51:37.983"></status>
</kw>
<msg timestamp="20201030 15:51:37.983" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.968" endtime="20201030 15:51:37.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.986" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.984" endtime="20201030 15:51:37.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.987" endtime="20201030 15:51:37.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.965" endtime="20201030 15:51:37.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.962" endtime="20201030 15:51:37.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.997" endtime="20201030 15:51:38.282"></status>
</kw>
<msg timestamp="20201030 15:51:38.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.995" endtime="20201030 15:51:38.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019596931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.287" endtime="20201030 15:51:38.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.295" endtime="20201030 15:51:38.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.992" endtime="20201030 15:51:38.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.990" endtime="20201030 15:51:38.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:38.302" level="INFO">${PHILIP_RES} = [{'diff': 4.754200000000111e-05}, {'diff': 4.758300000000035e-05}, {'diff': 4.757000000000025e-05}, {'diff': 4.758300000000035e-05}, {'diff': 4.758399999999982e-05}, {'diff': 4.756899999999731e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:38.299" endtime="20201030 15:51:38.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.307" level="INFO">${RESULT} = {'diff': [4.754200000000111e-05, 4.758300000000035e-05, 4.757000000000025e-05, 4.758300000000035e-05, 4.758399999999982e-05, 4.756899999999731e-05, 4.754099999999817e-05, 4.757000000000025e-05, 4.7556...</msg>
<status status="PASS" starttime="20201030 15:51:38.303" endtime="20201030 15:51:38.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.312" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:38.311" endtime="20201030 15:51:38.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.314" level="INFO">VALUE: [4.754200000000111e-05, 4.758300000000035e-05, 4.757000000000025e-05, 4.758300000000035e-05, 4.758399999999982e-05, 4.756899999999731e-05, 4.754099999999817e-05, 4.757000000000025e-05, 4.755600000000068e-05, 4.758300000000035e-05, 4.758399999999982e-05, 4.747199999999979e-05, 4.758399999999982e-05, 4.751400000000197e-05, 4.758399999999982e-05, 4.748599999999936e-05, 4.754200000000111e-05, 4.758300000000035e-05, 4.758400000000329e-05, 4.758300000000035e-05, 4.754200000000111e-05, 4.748599999999936e-05, 4.762499999999906e-05, 4.755500000000121e-05, 4.758300000000035e-05, 4.748600000000283e-05, 4.758399999999982e-05, 4.748599999999936e-05, 4.754200000000111e-05, 4.756900000000078e-05, 4.752799999999807e-05, 4.756900000000078e-05, 4.759799999999939e-05, 4.755600000000068e-05, 4.748599999999936e-05, 4.756900000000078e-05, 4.748600000000283e-05, 4.758300000000035e-05, 4.7472999999999266e-05, 4.759699999999992e-05, 4.763899999999863e-05, 4.749999999999893e-05, 4.761099999999949e-05, 4.755499999999774e-05, 4.757000000000025e-05, 4.752800000000154e-05, 4.754200000000111e-05, 4.75000000000024e-05, 4.757000000000025e-05, 4.756900000000078e-05]</msg>
<status status="PASS" starttime="20201030 15:51:38.313" endtime="20201030 15:51:38.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.308" endtime="20201030 15:51:38.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.319" endtime="20201030 15:51:38.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.318" endtime="20201030 15:51:38.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.317" endtime="20201030 15:51:38.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.961" endtime="20201030 15:51:38.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.960" endtime="20201030 15:51:38.340"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.349" endtime="20201030 15:51:38.366"></status>
</kw>
<msg timestamp="20201030 15:51:38.367" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.347" endtime="20201030 15:51:38.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.373" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.369" endtime="20201030 15:51:38.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.375" endtime="20201030 15:51:38.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.345" endtime="20201030 15:51:38.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.343" endtime="20201030 15:51:38.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.395" endtime="20201030 15:51:38.690"></status>
</kw>
<msg timestamp="20201030 15:51:38.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020724194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.392" endtime="20201030 15:51:38.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020724194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020783458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.695" endtime="20201030 15:51:38.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.703" endtime="20201030 15:51:38.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.386" endtime="20201030 15:51:38.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.382" endtime="20201030 15:51:38.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:38.713" level="INFO">${PHILIP_RES} = [{'diff': 5.9263999999999845e-05}, {'diff': 5.9486000000000955e-05}, {'diff': 5.941700000000258e-05}, {'diff': 5.9334000000001164e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.936100000000083e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:38.707" endtime="20201030 15:51:38.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.721" level="INFO">${RESULT} = {'diff': [5.9263999999999845e-05, 5.9486000000000955e-05, 5.941700000000258e-05, 5.9334000000001164e-05, 5.93750000000004e-05, 5.936100000000083e-05, 5.9443999999998776e-05, 5.9348000000000734e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:51:38.715" endtime="20201030 15:51:38.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.727" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:38.725" endtime="20201030 15:51:38.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.731" level="INFO">VALUE: [5.9263999999999845e-05, 5.9486000000000955e-05, 5.941700000000258e-05, 5.9334000000001164e-05, 5.93750000000004e-05, 5.936100000000083e-05, 5.9443999999998776e-05, 5.9348000000000734e-05, 5.943100000000215e-05, 5.934700000000126e-05, 5.93750000000004e-05, 5.930499999999908e-05, 5.944499999999825e-05, 5.9347999999997264e-05, 5.943099999999868e-05, 5.931899999999865e-05, 5.936100000000083e-05, 5.938899999999997e-05, 5.940299999999954e-05, 5.936099999999736e-05, 5.9443999999998776e-05, 5.934699999999779e-05, 5.944499999999825e-05, 5.93750000000004e-05, 5.9444000000002245e-05, 5.9415999999999636e-05, 5.93750000000004e-05, 5.945900000000129e-05, 5.933300000000169e-05, 5.9429999999999206e-05, 5.936100000000083e-05, 5.944499999999825e-05, 5.938899999999997e-05, 5.9430000000002675e-05, 5.9348000000000734e-05, 5.944499999999825e-05, 5.940299999999954e-05, 5.938899999999997e-05, 5.93750000000004e-05, 5.9471999999997915e-05, 5.93750000000004e-05, 5.9444000000002245e-05, 5.9430000000002675e-05, 5.934700000000126e-05, 5.938899999999997e-05, 5.940299999999954e-05, 5.943100000000215e-05, 5.936100000000083e-05, 5.934699999999779e-05, 5.9443999999998776e-05]</msg>
<status status="PASS" starttime="20201030 15:51:38.729" endtime="20201030 15:51:38.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.722" endtime="20201030 15:51:38.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.739" endtime="20201030 15:51:38.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.736" endtime="20201030 15:51:38.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.734" endtime="20201030 15:51:38.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.341" endtime="20201030 15:51:38.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.341" endtime="20201030 15:51:38.760"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.769" endtime="20201030 15:51:38.786"></status>
</kw>
<msg timestamp="20201030 15:51:38.787" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.767" endtime="20201030 15:51:38.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.789" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.788" endtime="20201030 15:51:38.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.791" endtime="20201030 15:51:38.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.765" endtime="20201030 15:51:38.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.763" endtime="20201030 15:51:38.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.800" endtime="20201030 15:51:39.087"></status>
</kw>
<msg timestamp="20201030 15:51:39.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.799" endtime="20201030 15:51:39.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022759417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022831486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.091" endtime="20201030 15:51:39.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.100" endtime="20201030 15:51:39.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.796" endtime="20201030 15:51:39.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.794" endtime="20201030 15:51:39.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.107" level="INFO">${PHILIP_RES} = [{'diff': 7.2069000000001e-05}, {'diff': 7.209700000000013e-05}, {'diff': 7.212499999999927e-05}, {'diff': 7.205500000000142e-05}, {'diff': 7.205599999999743e-05}, {'diff': 7.204099999999838e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:39.103" endtime="20201030 15:51:39.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.111" level="INFO">${RESULT} = {'diff': [7.2069000000001e-05, 7.209700000000013e-05, 7.212499999999927e-05, 7.205500000000142e-05, 7.205599999999743e-05, 7.204099999999838e-05, 7.21109999999997e-05, 7.204100000000185e-05, 7.2166999...</msg>
<status status="PASS" starttime="20201030 15:51:39.108" endtime="20201030 15:51:39.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.115" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:39.114" endtime="20201030 15:51:39.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.118" level="INFO">VALUE: [7.2069000000001e-05, 7.209700000000013e-05, 7.212499999999927e-05, 7.205500000000142e-05, 7.205599999999743e-05, 7.204099999999838e-05, 7.21109999999997e-05, 7.204100000000185e-05, 7.216699999999798e-05, 7.213899999999884e-05, 7.20560000000009e-05, 7.213899999999884e-05, 7.202700000000228e-05, 7.212499999999927e-05, 7.2069000000001e-05, 7.212500000000274e-05, 7.216699999999798e-05, 7.204099999999838e-05, 7.21109999999997e-05, 7.212499999999927e-05, 7.213899999999884e-05, 7.213900000000231e-05, 7.201399999999872e-05, 7.213899999999884e-05, 7.212500000000274e-05, 7.212499999999927e-05, 7.213899999999884e-05, 7.201400000000219e-05, 7.212499999999927e-05, 7.216699999999798e-05, 7.202700000000228e-05, 7.213899999999884e-05, 7.219500000000059e-05, 7.215200000000241e-05, 7.213899999999884e-05, 7.213899999999884e-05, 7.202799999999829e-05, 7.213899999999884e-05, 7.212500000000274e-05, 7.21109999999997e-05, 7.21109999999997e-05, 7.212500000000274e-05, 7.209700000000013e-05, 7.199999999999915e-05, 7.216700000000145e-05, 7.215199999999894e-05, 7.202799999999829e-05, 7.212500000000274e-05, 7.212499999999927e-05, 7.204200000000133e-05]</msg>
<status status="PASS" starttime="20201030 15:51:39.117" endtime="20201030 15:51:39.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.112" endtime="20201030 15:51:39.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.123" endtime="20201030 15:51:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.122" endtime="20201030 15:51:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.120" endtime="20201030 15:51:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.761" endtime="20201030 15:51:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.761" endtime="20201030 15:51:39.144"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.154" endtime="20201030 15:51:39.170"></status>
</kw>
<msg timestamp="20201030 15:51:39.171" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.151" endtime="20201030 15:51:39.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.176" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.173" endtime="20201030 15:51:39.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.179" endtime="20201030 15:51:39.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.149" endtime="20201030 15:51:39.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.147" endtime="20201030 15:51:39.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.199" endtime="20201030 15:51:39.494"></status>
</kw>
<msg timestamp="20201030 15:51:39.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:39.196" endtime="20201030 15:51:39.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020696653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:39.498" endtime="20201030 15:51:39.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.507" endtime="20201030 15:51:39.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.190" endtime="20201030 15:51:39.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.186" endtime="20201030 15:51:39.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.513" level="INFO">${PHILIP_RES} = [{'diff': 8.565299999999804e-05}, {'diff': 8.568000000000117e-05}, {'diff': 8.576399999999859e-05}, {'diff': 8.572199999999988e-05}, {'diff': 8.569400000000074e-05}, {'diff': 8.572200000000335e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:39.510" endtime="20201030 15:51:39.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.518" level="INFO">${RESULT} = {'diff': [8.565299999999804e-05, 8.568000000000117e-05, 8.576399999999859e-05, 8.572199999999988e-05, 8.569400000000074e-05, 8.572200000000335e-05, 8.56530000000015e-05, 8.581900000000087e-05, 8.56669...</msg>
<status status="PASS" starttime="20201030 15:51:39.514" endtime="20201030 15:51:39.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.522" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:39.521" endtime="20201030 15:51:39.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.528" level="INFO">VALUE: [8.565299999999804e-05, 8.568000000000117e-05, 8.576399999999859e-05, 8.572199999999988e-05, 8.569400000000074e-05, 8.572200000000335e-05, 8.56530000000015e-05, 8.581900000000087e-05, 8.56669999999976e-05, 8.576399999999859e-05, 8.563900000000194e-05, 8.570899999999979e-05, 8.573699999999893e-05, 8.572199999999988e-05, 8.56799999999977e-05, 8.576400000000206e-05, 8.576400000000206e-05, 8.566599999999813e-05, 8.563899999999847e-05, 8.576299999999912e-05, 8.568100000000065e-05, 8.563799999999899e-05, 8.566700000000108e-05, 8.569500000000022e-05, 8.573600000000292e-05, 8.572199999999988e-05, 8.563899999999847e-05, 8.565199999999856e-05, 8.568100000000065e-05, 8.573699999999893e-05, 8.56530000000015e-05, 8.570800000000031e-05, 8.573599999999945e-05, 8.572199999999988e-05, 8.572299999999936e-05, 8.572299999999936e-05, 8.573599999999945e-05, 8.573599999999945e-05, 8.574999999999902e-05, 8.577699999999869e-05, 8.56530000000015e-05, 8.576400000000206e-05, 8.563900000000194e-05, 8.563800000000246e-05, 8.576400000000206e-05, 8.565199999999856e-05, 8.56669999999976e-05, 8.574999999999902e-05, 8.561099999999933e-05, 8.579100000000173e-05]</msg>
<status status="PASS" starttime="20201030 15:51:39.523" endtime="20201030 15:51:39.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.518" endtime="20201030 15:51:39.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.533" endtime="20201030 15:51:39.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.532" endtime="20201030 15:51:39.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.530" endtime="20201030 15:51:39.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.145" endtime="20201030 15:51:39.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.144" endtime="20201030 15:51:39.554"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.566" endtime="20201030 15:51:39.581"></status>
</kw>
<msg timestamp="20201030 15:51:39.581" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.564" endtime="20201030 15:51:39.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.584" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.582" endtime="20201030 15:51:39.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.585" endtime="20201030 15:51:39.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.562" endtime="20201030 15:51:39.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.556" endtime="20201030 15:51:39.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.595" endtime="20201030 15:51:39.881"></status>
</kw>
<msg timestamp="20201030 15:51:39.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.593" endtime="20201030 15:51:39.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022891944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.885" endtime="20201030 15:51:39.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.893" endtime="20201030 15:51:39.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.589" endtime="20201030 15:51:39.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.588" endtime="20201030 15:51:39.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:39.900" level="INFO">${PHILIP_RES} = [{'diff': 0.00010011099999999995}, {'diff': 0.0001001800000000018}, {'diff': 0.00010006900000000124}, {'diff': 0.00010013900000000256}, {'diff': 0.00010023600000000008}, {'diff': 0.0001001660000000022...</msg>
<status status="PASS" starttime="20201030 15:51:39.897" endtime="20201030 15:51:39.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.905" level="INFO">${RESULT} = {'diff': [0.00010011099999999995, 0.0001001800000000018, 0.00010006900000000124, 0.00010013900000000256, 0.00010023600000000008, 0.00010016600000000223, 0.00010018100000000127, 0.0001001670000000017, ...</msg>
<status status="PASS" starttime="20201030 15:51:39.901" endtime="20201030 15:51:39.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.909" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:39.908" endtime="20201030 15:51:39.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.912" level="INFO">VALUE: [0.00010011099999999995, 0.0001001800000000018, 0.00010006900000000124, 0.00010013900000000256, 0.00010023600000000008, 0.00010016600000000223, 0.00010018100000000127, 0.0001001670000000017, 0.0001001670000000017, 0.0001001800000000018, 0.00010016699999999823, 0.00010017999999999833, 0.00010016599999999876, 0.0001000419999999981, 0.00010018100000000127, 0.00010024999999999964, 0.00010013899999999909, 0.00010015299999999866, 0.0001002220000000005, 0.00010015300000000213, 0.00010023600000000008, 0.00010016699999999823, 0.00010013899999999909, 0.00010012499999999952, 0.0001001670000000017, 0.00010015299999999866, 0.00010023600000000008, 0.00010011099999999995, 0.0001002220000000005, 0.00010019500000000084, 0.00010011099999999995, 0.00010013800000000309, 0.00010024999999999964, 0.00010007000000000071, 0.0001001670000000017, 0.00010015300000000213, 0.0001002220000000005, 0.00010023600000000008, 0.00010005600000000114, 0.00010016699999999823, 0.00010012499999999952, 0.00010025000000000311, 0.00010013899999999909, 0.00010013899999999909, 0.00010008399999999681, 0.0001002220000000005, 0.00010008299999999734, 0.00010024999999999964, 0.0001001809999999978, 0.00010019500000000084]</msg>
<status status="PASS" starttime="20201030 15:51:39.910" endtime="20201030 15:51:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.906" endtime="20201030 15:51:39.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.916" endtime="20201030 15:51:39.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.915" endtime="20201030 15:51:39.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.914" endtime="20201030 15:51:39.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.555" endtime="20201030 15:51:39.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.554" endtime="20201030 15:51:39.937"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.946" endtime="20201030 15:51:39.962"></status>
</kw>
<msg timestamp="20201030 15:51:39.963" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.944" endtime="20201030 15:51:39.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.965" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.964" endtime="20201030 15:51:39.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.966" endtime="20201030 15:51:39.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.942" endtime="20201030 15:51:39.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.940" endtime="20201030 15:51:39.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.975" endtime="20201030 15:51:40.275"></status>
</kw>
<msg timestamp="20201030 15:51:40.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.973" endtime="20201030 15:51:40.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.279" endtime="20201030 15:51:40.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.287" endtime="20201030 15:51:40.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.971" endtime="20201030 15:51:40.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.969" endtime="20201030 15:51:40.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:40.295" level="INFO">${PHILIP_RES} = [{'diff': 0.00011534699999999828}, {'diff': 0.00011547200000000188}, {'diff': 0.00011547199999999841}, {'diff': 0.00011534800000000123}, {'diff': 0.00011552800000000016}, {'diff': 0.000115485999999997...</msg>
<status status="PASS" starttime="20201030 15:51:40.292" endtime="20201030 15:51:40.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.299" level="INFO">${RESULT} = {'diff': [0.00011534699999999828, 0.00011547200000000188, 0.00011547199999999841, 0.00011534800000000123, 0.00011552800000000016, 0.00011548599999999798, 0.00011544399999999927, 0.00011550000000000102...</msg>
<status status="PASS" starttime="20201030 15:51:40.296" endtime="20201030 15:51:40.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.303" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:40.302" endtime="20201030 15:51:40.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.306" level="INFO">VALUE: [0.00011534699999999828, 0.00011547200000000188, 0.00011547199999999841, 0.00011534800000000123, 0.00011552800000000016, 0.00011548599999999798, 0.00011544399999999927, 0.00011550000000000102, 0.00011551399999999712, 0.00011537499999999742, 0.00011541600000000013, 0.00011552700000000068, 0.0001154299999999997, 0.00011552800000000016, 0.0001154169999999996, 0.00011536100000000132, 0.00011552800000000016, 0.00011540300000000003, 0.00011547200000000188, 0.00011543099999999917, 0.00011540300000000003, 0.00011538900000000046, 0.00011552800000000016, 0.00011538800000000099, 0.00011550000000000102, 0.00011548600000000145, 0.00011543099999999917, 0.00011551300000000111, 0.00011547199999999841, 0.00011543099999999917, 0.00011543000000000317, 0.00011550000000000102, 0.00011538800000000099, 0.00011540200000000056, 0.00011552800000000016, 0.00011548599999999798, 0.00011558399999999844, 0.00011540300000000003, 0.00011552800000000016, 0.00011544499999999874, 0.00011552699999999722, 0.00011548600000000145, 0.00011545799999999884, 0.00011540300000000003, 0.00011536099999999785, 0.0001155689999999994, 0.00011551400000000059, 0.0001153750000000009, 0.00011548599999999798, 0.00011548600000000145]</msg>
<status status="PASS" starttime="20201030 15:51:40.304" endtime="20201030 15:51:40.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.300" endtime="20201030 15:51:40.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.311" endtime="20201030 15:51:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.309" endtime="20201030 15:51:40.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.308" endtime="20201030 15:51:40.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.938" endtime="20201030 15:51:40.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.938" endtime="20201030 15:51:40.332"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.340" endtime="20201030 15:51:40.359"></status>
</kw>
<msg timestamp="20201030 15:51:40.360" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.338" endtime="20201030 15:51:40.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.362" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.361" endtime="20201030 15:51:40.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.363" endtime="20201030 15:51:40.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.336" endtime="20201030 15:51:40.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.334" endtime="20201030 15:51:40.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.372" endtime="20201030 15:51:40.658"></status>
</kw>
<msg timestamp="20201030 15:51:40.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019009403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019141056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.371" endtime="20201030 15:51:40.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019009403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019141056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.662" endtime="20201030 15:51:40.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.670" endtime="20201030 15:51:40.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.368" endtime="20201030 15:51:40.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.366" endtime="20201030 15:51:40.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:40.676" level="INFO">${PHILIP_RES} = [{'diff': 0.00013165299999999894}, {'diff': 0.00013159700000000066}, {'diff': 0.00013169400000000164}, {'diff': 0.00013156999999999752}, {'diff': 0.0001316249999999998}, {'diff': 0.0001317080000000012...</msg>
<status status="PASS" starttime="20201030 15:51:40.673" endtime="20201030 15:51:40.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.680" level="INFO">${RESULT} = {'diff': [0.00013165299999999894, 0.00013159700000000066, 0.00013169400000000164, 0.00013156999999999752, 0.0001316249999999998, 0.0001317080000000012, 0.00013168099999999808, 0.00013168099999999808, ...</msg>
<status status="PASS" starttime="20201030 15:51:40.677" endtime="20201030 15:51:40.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.685" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:40.684" endtime="20201030 15:51:40.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.687" level="INFO">VALUE: [0.00013165299999999894, 0.00013159700000000066, 0.00013169400000000164, 0.00013156999999999752, 0.0001316249999999998, 0.0001317080000000012, 0.00013168099999999808, 0.00013168099999999808, 0.00013168100000000155, 0.00013159700000000066, 0.00013166599999999903, 0.00013159700000000066, 0.00013169399999999817, 0.00013170799999999774, 0.00013156899999999805, 0.0001315830000000011, 0.00013169400000000164, 0.00013159700000000066, 0.0001317080000000012, 0.00013155500000000195, 0.00013172200000000078, 0.00013165299999999894, 0.00013155500000000195, 0.00013172200000000078, 0.0001317080000000012, 0.0001315830000000011, 0.00013159700000000066, 0.00013168099999999808, 0.00013168100000000155, 0.00013169400000000164, 0.00013166599999999903, 0.00013166599999999903, 0.00013161100000000023, 0.00013170899999999722, 0.00013161099999999676, 0.00013168100000000155, 0.00013173600000000035, 0.00013169500000000112, 0.00013159800000000013, 0.00013176400000000296, 0.00013168000000000207, 0.0001316799999999986, 0.00013168099999999808, 0.00013172200000000078, 0.00013168099999999808, 0.0001316379999999999, 0.00013165199999999946, 0.0001316669999999985, 0.00013165299999999894, 0.00013165299999999894]</msg>
<status status="PASS" starttime="20201030 15:51:40.686" endtime="20201030 15:51:40.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.681" endtime="20201030 15:51:40.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.693" endtime="20201030 15:51:40.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.691" endtime="20201030 15:51:40.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.690" endtime="20201030 15:51:40.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.332" endtime="20201030 15:51:40.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.332" endtime="20201030 15:51:40.714"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.722" endtime="20201030 15:51:40.741"></status>
</kw>
<msg timestamp="20201030 15:51:40.742" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.720" endtime="20201030 15:51:40.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.744" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.743" endtime="20201030 15:51:40.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.745" endtime="20201030 15:51:40.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.718" endtime="20201030 15:51:40.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.716" endtime="20201030 15:51:40.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.754" endtime="20201030 15:51:41.041"></status>
</kw>
<msg timestamp="20201030 15:51:41.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018596097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018744875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.753" endtime="20201030 15:51:41.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018596097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018744875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.045" endtime="20201030 15:51:41.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.053" endtime="20201030 15:51:41.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.750" endtime="20201030 15:51:41.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.749" endtime="20201030 15:51:41.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:41.059" level="INFO">${PHILIP_RES} = [{'diff': 0.00014877800000000219}, {'diff': 0.000148736}, {'diff': 0.00014876399999999915}, {'diff': 0.000148736}, {'diff': 0.00014884800000000004}, {'diff': 0.00014876299999999967}, {'diff': 0.000148...</msg>
<status status="PASS" starttime="20201030 15:51:41.056" endtime="20201030 15:51:41.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.064" level="INFO">${RESULT} = {'diff': [0.00014877800000000219, 0.000148736, 0.00014876399999999915, 0.000148736, 0.00014884800000000004, 0.00014876299999999967, 0.0001487919999999983, 0.00014880500000000185, 0.0001487780000000021...</msg>
<status status="PASS" starttime="20201030 15:51:41.060" endtime="20201030 15:51:41.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.068" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:41.067" endtime="20201030 15:51:41.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.071" level="INFO">VALUE: [0.00014877800000000219, 0.000148736, 0.00014876399999999915, 0.000148736, 0.00014884800000000004, 0.00014876299999999967, 0.0001487919999999983, 0.00014880500000000185, 0.00014877800000000219, 0.00014877799999999872, 0.00014877699999999924, 0.0001487909999999988, 0.00014880500000000185, 0.00014879200000000176, 0.00014876399999999915, 0.0001487919999999983, 0.00014877699999999924, 0.0001487909999999988, 0.00014888900000000274, 0.00014876399999999915, 0.00014880500000000185, 0.00014876400000000262, 0.00014880500000000185, 0.0001487909999999988, 0.00014872200000000044, 0.00014879100000000228, 0.00014879100000000228, 0.00014880499999999838, 0.000148833000000001, 0.00014888899999999927, 0.00014874999999999958, 0.0001488749999999997, 0.0001488749999999997, 0.00014883400000000047, 0.00014883400000000047, 0.0001486659999999987, 0.00014886100000000013, 0.0001487919999999983, 0.00014880499999999838, 0.00014872200000000044, 0.00014888899999999927, 0.00014874999999999958, 0.0001487919999999983, 0.000148736, 0.00014880499999999838, 0.000148736, 0.00014879200000000176, 0.0001487919999999983, 0.00014880600000000133, 0.00014884700000000056]</msg>
<status status="PASS" starttime="20201030 15:51:41.069" endtime="20201030 15:51:41.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.065" endtime="20201030 15:51:41.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.076" endtime="20201030 15:51:41.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.074" endtime="20201030 15:51:41.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.073" endtime="20201030 15:51:41.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.715" endtime="20201030 15:51:41.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.714" endtime="20201030 15:51:41.096"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.105" endtime="20201030 15:51:41.128"></status>
</kw>
<msg timestamp="20201030 15:51:41.128" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.103" endtime="20201030 15:51:41.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.131" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.130" endtime="20201030 15:51:41.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.132" endtime="20201030 15:51:41.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.101" endtime="20201030 15:51:41.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.099" endtime="20201030 15:51:41.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.141" endtime="20201030 15:51:41.427"></status>
</kw>
<msg timestamp="20201030 15:51:41.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.139" endtime="20201030 15:51:41.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.431" endtime="20201030 15:51:41.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.439" endtime="20201030 15:51:41.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.137" endtime="20201030 15:51:41.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.135" endtime="20201030 15:51:41.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:41.447" level="INFO">${PHILIP_RES} = [{'diff': 0.00016670800000000152}, {'diff': 0.00016677799999999937}, {'diff': 0.00016672199999999762}, {'diff': 0.00016672199999999762}, {'diff': 0.00016668099999999839}, {'diff': 0.000166680999999998...</msg>
<status status="PASS" starttime="20201030 15:51:41.444" endtime="20201030 15:51:41.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.451" level="INFO">${RESULT} = {'diff': [0.00016670800000000152, 0.00016677799999999937, 0.00016672199999999762, 0.00016672199999999762, 0.00016668099999999839, 0.00016668099999999839, 0.00016672300000000057, 0.00016659700000000097...</msg>
<status status="PASS" starttime="20201030 15:51:41.448" endtime="20201030 15:51:41.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.455" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:41.454" endtime="20201030 15:51:41.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.458" level="INFO">VALUE: [0.00016670800000000152, 0.00016677799999999937, 0.00016672199999999762, 0.00016672199999999762, 0.00016668099999999839, 0.00016668099999999839, 0.00016672300000000057, 0.00016659700000000097, 0.00016673600000000066, 0.00016683300000000165, 0.00016673600000000066, 0.0001666250000000001, 0.00016686099999999732, 0.0001667359999999972, 0.00016675000000000023, 0.0001667639999999998, 0.00016687500000000036, 0.00016670799999999805, 0.0001668480000000007, 0.0001667220000000011, 0.00016680499999999904, 0.00016684700000000122, 0.00016675000000000023, 0.00016675000000000023, 0.0001666799999999989, 0.00016673600000000066, 0.00016675000000000023, 0.0001667639999999998, 0.00016680499999999904, 0.00016673600000000066, 0.00016670800000000152, 0.00016668000000000238, 0.0001668189999999986, 0.00016669400000000195, 0.00016683300000000165, 0.0001666799999999989, 0.00016684700000000122, 0.00016669399999999848, 0.0001667220000000011, 0.00016669399999999848, 0.00016673600000000066, 0.0001667639999999998, 0.00016669400000000195, 0.00016668100000000186, 0.00016673700000000014, 0.00016675000000000023, 0.00016679199999999894, 0.00016683299999999818, 0.00016670800000000152, 0.00016676300000000033]</msg>
<status status="PASS" starttime="20201030 15:51:41.456" endtime="20201030 15:51:41.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.452" endtime="20201030 15:51:41.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.813" endtime="20201030 15:51:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.810" endtime="20201030 15:51:41.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.807" endtime="20201030 15:51:41.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.097" endtime="20201030 15:51:41.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.097" endtime="20201030 15:51:41.838"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.856" endtime="20201030 15:51:41.884"></status>
</kw>
<msg timestamp="20201030 15:51:41.885" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.852" endtime="20201030 15:51:41.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.890" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.887" endtime="20201030 15:51:41.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.892" endtime="20201030 15:51:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.847" endtime="20201030 15:51:41.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.843" endtime="20201030 15:51:41.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.901" endtime="20201030 15:51:42.201"></status>
</kw>
<msg timestamp="20201030 15:51:42.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0381095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038294986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:41.900" endtime="20201030 15:51:42.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0381095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038294986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:42.213" endtime="20201030 15:51:42.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.234" endtime="20201030 15:51:42.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.897" endtime="20201030 15:51:42.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.896" endtime="20201030 15:51:42.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:42.250" level="INFO">${PHILIP_RES} = [{'diff': 0.00018548600000000554}, {'diff': 0.0001855409999999974}, {'diff': 0.00018565299999999396}, {'diff': 0.00018558400000000252}, {'diff': 0.00018569400000000014}, {'diff': 0.0001855280000000042...</msg>
<status status="PASS" starttime="20201030 15:51:42.244" endtime="20201030 15:51:42.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.259" level="INFO">${RESULT} = {'diff': [0.00018548600000000554, 0.0001855409999999974, 0.00018565299999999396, 0.00018558400000000252, 0.00018569400000000014, 0.00018552800000000425, 0.00018554199999999688, 0.00018556999999999602,...</msg>
<status status="PASS" starttime="20201030 15:51:42.253" endtime="20201030 15:51:42.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.270" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:42.267" endtime="20201030 15:51:42.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.274" level="INFO">VALUE: [0.00018548600000000554, 0.0001855409999999974, 0.00018565299999999396, 0.00018558400000000252, 0.00018569400000000014, 0.00018552800000000425, 0.00018554199999999688, 0.00018556999999999602, 0.00018558300000000305, 0.00018554100000000434, 0.00018556999999999602, 0.0001855409999999974, 0.00018551299999999826, 0.00018554199999999688, 0.0001855550000000039, 0.00018555600000000338, 0.00018552699999999783, 0.00018559700000000262, 0.00018545799999999946, 0.00018552800000000425, 0.00018555600000000338, 0.00018562500000000176, 0.0001855279999999973, 0.0001857079999999997, 0.00018555600000000338, 0.00018554199999999688, 0.00018558399999999559, 0.00018568000000000057, 0.00018555600000000338, 0.0001855550000000039, 0.00018549999999999817, 0.00018552800000000425, 0.000185666000000001, 0.00018562500000000176, 0.00018547199999999903, 0.00018559700000000262, 0.0001855550000000039, 0.00018554199999999688, 0.00018555499999999697, 0.0001855000000000051, 0.00018568100000000004, 0.00018561099999999525, 0.00018563900000000133, 0.00018563800000000186, 0.00018555499999999697, 0.00018555599999999645, 0.00018558300000000305, 0.0001856110000000022, 0.00018559699999999568, 0.00018556899999999654]</msg>
<status status="PASS" starttime="20201030 15:51:42.272" endtime="20201030 15:51:42.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.261" endtime="20201030 15:51:42.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.280" endtime="20201030 15:51:42.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.278" endtime="20201030 15:51:42.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.277" endtime="20201030 15:51:42.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.840" endtime="20201030 15:51:42.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.839" endtime="20201030 15:51:42.301"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.310" endtime="20201030 15:51:42.329"></status>
</kw>
<msg timestamp="20201030 15:51:42.329" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.308" endtime="20201030 15:51:42.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.331" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.330" endtime="20201030 15:51:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.333" endtime="20201030 15:51:42.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.306" endtime="20201030 15:51:42.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.304" endtime="20201030 15:51:42.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.342" endtime="20201030 15:51:42.627"></status>
</kw>
<msg timestamp="20201030 15:51:42.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018850347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019055486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.340" endtime="20201030 15:51:42.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018850347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019055486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.631" endtime="20201030 15:51:42.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.640" endtime="20201030 15:51:42.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.337" endtime="20201030 15:51:42.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.336" endtime="20201030 15:51:42.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:42.647" level="INFO">${PHILIP_RES} = [{'diff': 0.00020513900000000002}, {'diff': 0.00020509699999999784}, {'diff': 0.00020525000000000057}, {'diff': 0.0002050970000000013}, {'diff': 0.0002050970000000013}, {'diff': 0.0002051949999999983}...</msg>
<status status="PASS" starttime="20201030 15:51:42.643" endtime="20201030 15:51:42.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.651" level="INFO">${RESULT} = {'diff': [0.00020513900000000002, 0.00020509699999999784, 0.00020525000000000057, 0.0002050970000000013, 0.0002050970000000013, 0.0002051949999999983, 0.000205027, 0.00020525000000000057, 0.0002051949...</msg>
<status status="PASS" starttime="20201030 15:51:42.648" endtime="20201030 15:51:42.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.656" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:42.655" endtime="20201030 15:51:42.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.658" level="INFO">VALUE: [0.00020513900000000002, 0.00020509699999999784, 0.00020525000000000057, 0.0002050970000000013, 0.0002050970000000013, 0.0002051949999999983, 0.000205027, 0.00020525000000000057, 0.0002051949999999983, 0.00020509699999999784, 0.00020522200000000143, 0.00020513800000000054, 0.00020515299999999959, 0.0002051940000000023, 0.00020513900000000002, 0.00020519399999999882, 0.00020511100000000088, 0.00020526400000000014, 0.00020520900000000133, 0.00020520800000000186, 0.0002051520000000001, 0.00020516599999999968, 0.00020526400000000014, 0.00020513799999999707, 0.00020525000000000057, 0.00020517999999999925, 0.00020515299999999959, 0.00020513900000000002, 0.00020509699999999784, 0.00020516599999999968, 0.00020502799999999946, 0.00020515299999999959, 0.00020518099999999873, 0.00020516700000000263, 0.00020513900000000002, 0.00020525000000000057, 0.00020517999999999925, 0.00020520899999999787, 0.0002051949999999983, 0.00020522200000000143, 0.00020525000000000057, 0.00020520800000000186, 0.00020513900000000002, 0.00020516599999999968, 0.00020517999999999925, 0.0002052079999999984, 0.0002051949999999983, 0.00020517999999999925, 0.00020513900000000002, 0.00020508399999999774]</msg>
<status status="PASS" starttime="20201030 15:51:42.657" endtime="20201030 15:51:42.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.652" endtime="20201030 15:51:42.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.663" endtime="20201030 15:51:42.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.662" endtime="20201030 15:51:42.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.660" endtime="20201030 15:51:42.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.302" endtime="20201030 15:51:42.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.302" endtime="20201030 15:51:42.684"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.693" endtime="20201030 15:51:42.720"></status>
</kw>
<msg timestamp="20201030 15:51:42.720" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.691" endtime="20201030 15:51:42.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.723" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.721" endtime="20201030 15:51:42.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.724" endtime="20201030 15:51:42.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.688" endtime="20201030 15:51:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.686" endtime="20201030 15:51:42.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.733" endtime="20201030 15:51:43.018"></status>
</kw>
<msg timestamp="20201030 15:51:43.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022927181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.731" endtime="20201030 15:51:43.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022927181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.023" endtime="20201030 15:51:43.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.031" endtime="20201030 15:51:43.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.728" endtime="20201030 15:51:43.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.727" endtime="20201030 15:51:43.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:43.038" level="INFO">${PHILIP_RES} = [{'diff': 0.0002257230000000006}, {'diff': 0.00022577800000000287}, {'diff': 0.00022579199999999897}, {'diff': 0.0002257779999999994}, {'diff': 0.00022579199999999897}, {'diff': 0.00022575000000000026...</msg>
<status status="PASS" starttime="20201030 15:51:43.035" endtime="20201030 15:51:43.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.042" level="INFO">${RESULT} = {'diff': [0.0002257230000000006, 0.00022577800000000287, 0.00022579199999999897, 0.0002257779999999994, 0.00022579199999999897, 0.00022575000000000026, 0.00022573600000000069, 0.00022580599999999854, ...</msg>
<status status="PASS" starttime="20201030 15:51:43.039" endtime="20201030 15:51:43.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.046" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:43.045" endtime="20201030 15:51:43.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.049" level="INFO">VALUE: [0.0002257230000000006, 0.00022577800000000287, 0.00022579199999999897, 0.0002257779999999994, 0.00022579199999999897, 0.00022575000000000026, 0.00022573600000000069, 0.00022580599999999854, 0.0002257909999999995, 0.0002257499999999968, 0.00022577800000000287, 0.00022576399999999983, 0.00022590299999999952, 0.00022582000000000158, 0.0002257779999999994, 0.00022569499999999798, 0.00022576399999999983, 0.00022575000000000026, 0.00022575000000000026, 0.00022586099999999734, 0.00022583300000000167, 0.00022572200000000112, 0.00022584800000000071, 0.00022576399999999983, 0.00022576399999999983, 0.00022594400000000223, 0.00022569499999999798, 0.0002257779999999994, 0.00022576300000000035, 0.00022576399999999983, 0.00022572200000000112, 0.00022576399999999983, 0.0002257909999999995, 0.00022576399999999983, 0.00022570799999999808, 0.00022565299999999927, 0.00022584800000000071, 0.00022577799999999593, 0.00022587500000000038, 0.00022579200000000244, 0.0002257499999999968, 0.0002258610000000008, 0.00022569500000000492, 0.00022569499999999798, 0.0002257919999999955, 0.0002257369999999967, 0.0002258339999999942, 0.00022579100000000296, 0.00022587500000000038, 0.00022583400000000114]</msg>
<status status="PASS" starttime="20201030 15:51:43.047" endtime="20201030 15:51:43.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.043" endtime="20201030 15:51:43.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.054" endtime="20201030 15:51:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.052" endtime="20201030 15:51:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.051" endtime="20201030 15:51:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.685" endtime="20201030 15:51:43.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.684" endtime="20201030 15:51:43.075"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.083" endtime="20201030 15:51:43.108"></status>
</kw>
<msg timestamp="20201030 15:51:43.109" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.082" endtime="20201030 15:51:43.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.111" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.110" endtime="20201030 15:51:43.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.112" endtime="20201030 15:51:43.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.079" endtime="20201030 15:51:43.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.077" endtime="20201030 15:51:43.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.121" endtime="20201030 15:51:43.406"></status>
</kw>
<msg timestamp="20201030 15:51:43.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019183708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:43.120" endtime="20201030 15:51:43.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019183708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:43.410" endtime="20201030 15:51:43.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.418" endtime="20201030 15:51:43.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.117" endtime="20201030 15:51:43.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.115" endtime="20201030 15:51:43.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:43.425" level="INFO">${PHILIP_RES} = [{'diff': 0.00024720800000000223}, {'diff': 0.0002473059999999992}, {'diff': 0.00024729199999999965}, {'diff': 0.0002472780000000001}, {'diff': 0.0002472780000000001}, {'diff': 0.00024720799999999876}...</msg>
<status status="PASS" starttime="20201030 15:51:43.421" endtime="20201030 15:51:43.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.429" level="INFO">${RESULT} = {'diff': [0.00024720800000000223, 0.0002473059999999992, 0.00024729199999999965, 0.0002472780000000001, 0.0002472780000000001, 0.00024720799999999876, 0.00024724999999999747, 0.00024729199999999965, 0...</msg>
<status status="PASS" starttime="20201030 15:51:43.426" endtime="20201030 15:51:43.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.433" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:43.432" endtime="20201030 15:51:43.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.435" level="INFO">VALUE: [0.00024720800000000223, 0.0002473059999999992, 0.00024729199999999965, 0.0002472780000000001, 0.0002472780000000001, 0.00024720799999999876, 0.00024724999999999747, 0.00024729199999999965, 0.0002473470000000019, 0.0002472359999999979, 0.0002472359999999979, 0.00024720799999999876, 0.0002472780000000001, 0.00024733300000000236, 0.0002472640000000005, 0.00024726399999999704, 0.0002472780000000001, 0.0002473060000000027, 0.00024725000000000094, 0.0002472359999999979, 0.0002471389999999969, 0.0002472640000000005, 0.00024725000000000094, 0.0002472640000000005, 0.00024723700000000084, 0.000247167000000003, 0.0002472780000000001, 0.00024725000000000094, 0.0002472220000000018, 0.00024706899999999907, 0.0002472220000000018, 0.00024719500000000214, 0.0002473189999999993, 0.0002473189999999993, 0.00024725000000000094, 0.0002473749999999976, 0.0002473059999999992, 0.0002471809999999991, 0.0002473059999999992, 0.00024720800000000223, 0.00024719500000000214, 0.00024729199999999965, 0.00024734699999999846, 0.00024733300000000236, 0.00024725000000000094, 0.0002473199999999953, 0.0002473049999999963, 0.0002471950000000056, 0.0002471520000000005, 0.0002473190000000028]</msg>
<status status="PASS" starttime="20201030 15:51:43.434" endtime="20201030 15:51:43.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.429" endtime="20201030 15:51:43.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.443" endtime="20201030 15:51:43.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.442" endtime="20201030 15:51:43.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.441" endtime="20201030 15:51:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.076" endtime="20201030 15:51:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.075" endtime="20201030 15:51:43.464"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.473" endtime="20201030 15:51:43.499"></status>
</kw>
<msg timestamp="20201030 15:51:43.500" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.471" endtime="20201030 15:51:43.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.502" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.501" endtime="20201030 15:51:43.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.504" endtime="20201030 15:51:43.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.468" endtime="20201030 15:51:43.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.466" endtime="20201030 15:51:43.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.513" endtime="20201030 15:51:43.799"></status>
</kw>
<msg timestamp="20201030 15:51:43.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021556639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.511" endtime="20201030 15:51:43.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021556639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.803" endtime="20201030 15:51:43.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.811" endtime="20201030 15:51:43.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.508" endtime="20201030 15:51:43.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.507" endtime="20201030 15:51:43.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:43.818" level="INFO">${PHILIP_RES} = [{'diff': 0.0002694580000000002}, {'diff': 0.0002694029999999979}, {'diff': 0.0002694450000000001}, {'diff': 0.00026948599999999934}, {'diff': 0.0002693609999999992}, {'diff': 0.0002694030000000014}, ...</msg>
<status status="PASS" starttime="20201030 15:51:43.815" endtime="20201030 15:51:43.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.823" level="INFO">${RESULT} = {'diff': [0.0002694580000000002, 0.0002694029999999979, 0.0002694450000000001, 0.00026948599999999934, 0.0002693609999999992, 0.0002694030000000014, 0.0002694160000000015, 0.0002694450000000001, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:43.819" endtime="20201030 15:51:43.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.827" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:43.826" endtime="20201030 15:51:43.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.830" level="INFO">VALUE: [0.0002694580000000002, 0.0002694029999999979, 0.0002694450000000001, 0.00026948599999999934, 0.0002693609999999992, 0.0002694030000000014, 0.0002694160000000015, 0.0002694450000000001, 0.0002694450000000001, 0.00026943100000000053, 0.00026941700000000096, 0.00026947199999999977, 0.0002695000000000024, 0.00026947199999999977, 0.0002694999999999989, 0.0002695969999999999, 0.00026943100000000053, 0.00026947199999999977, 0.00026948599999999934, 0.000269512999999999, 0.0002694999999999989, 0.00026940199999999845, 0.0002695280000000015, 0.0002695280000000015, 0.0002693890000000018, 0.00026948599999999934, 0.0002695269999999986, 0.00026943099999999706, 0.00026948599999999934, 0.0002695830000000003, 0.0002695000000000024, 0.0002695000000000024, 0.00026951400000000195, 0.00026954099999999814, 0.0002694580000000002, 0.00026943100000000053, 0.00026952799999999805, 0.0002694450000000001, 0.00026941599999999455, 0.0002695560000000041, 0.0002694020000000019, 0.00026948599999999934, 0.00026952799999999805, 0.00026943100000000053, 0.00026941599999999455, 0.00026959700000000336, 0.00026940299999999445, 0.0002695139999999985, 0.00026948599999999934, 0.0002694999999999989]</msg>
<status status="PASS" starttime="20201030 15:51:43.828" endtime="20201030 15:51:43.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.824" endtime="20201030 15:51:43.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.835" endtime="20201030 15:51:43.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.833" endtime="20201030 15:51:43.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.832" endtime="20201030 15:51:43.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.465" endtime="20201030 15:51:43.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.464" endtime="20201030 15:51:43.856"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.864" endtime="20201030 15:51:43.891"></status>
</kw>
<msg timestamp="20201030 15:51:43.892" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.863" endtime="20201030 15:51:43.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.894" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.893" endtime="20201030 15:51:43.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.895" endtime="20201030 15:51:43.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.860" endtime="20201030 15:51:43.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.858" endtime="20201030 15:51:43.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.904" endtime="20201030 15:51:44.190"></status>
</kw>
<msg timestamp="20201030 15:51:44.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.903" endtime="20201030 15:51:44.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.194" endtime="20201030 15:51:44.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.202" endtime="20201030 15:51:44.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.900" endtime="20201030 15:51:44.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.898" endtime="20201030 15:51:44.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.210" level="INFO">${PHILIP_RES} = [{'diff': 0.0002925419999999998}, {'diff': 0.0002926250000000012}, {'diff': 0.0002926389999999973}, {'diff': 0.00029265300000000036}, {'diff': 0.0002925830000000025}, {'diff': 0.00029265300000000036},...</msg>
<status status="PASS" starttime="20201030 15:51:44.207" endtime="20201030 15:51:44.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.214" level="INFO">${RESULT} = {'diff': [0.0002925419999999998, 0.0002926250000000012, 0.0002926389999999973, 0.00029265300000000036, 0.0002925830000000025, 0.00029265300000000036, 0.0002926529999999969, 0.000292584000000002, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:44.211" endtime="20201030 15:51:44.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.218" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.217" endtime="20201030 15:51:44.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.220" level="INFO">VALUE: [0.0002925419999999998, 0.0002926250000000012, 0.0002926389999999973, 0.00029265300000000036, 0.0002925830000000025, 0.00029265300000000036, 0.0002926529999999969, 0.000292584000000002, 0.0002925970000000021, 0.0002926939999999996, 0.0002926250000000012, 0.00029256999999999894, 0.0002926390000000008, 0.0002925969999999986, 0.00029254200000000327, 0.00029266699999999993, 0.0002926120000000011, 0.0002926809999999995, 0.0002927499999999979, 0.0002927640000000009, 0.0002928059999999996, 0.00029275000000000134, 0.0002927359999999983, 0.0002928059999999996, 0.0002926939999999996, 0.0002927780000000005, 0.00029270799999999916, 0.0002928329999999993, 0.00029266699999999993, 0.0002927640000000009, 0.00029268100000000297, 0.0002927910000000006, 0.000292777000000001, 0.00029269500000000254, 0.0002927220000000022, 0.0002927230000000017, 0.0002927220000000022, 0.0002927780000000005, 0.0002927910000000006, 0.00029284799999999833, 0.00029284699999999886, 0.0002927230000000017, 0.00029280500000000015, 0.0002927220000000022, 0.00029291700000000365, 0.0002928189999999997, 0.00029273600000000177, 0.0002928329999999993, 0.00029280500000000015, 0.00029288899999999757]</msg>
<status status="PASS" starttime="20201030 15:51:44.219" endtime="20201030 15:51:44.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.215" endtime="20201030 15:51:44.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.225" endtime="20201030 15:51:44.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.224" endtime="20201030 15:51:44.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.223" endtime="20201030 15:51:44.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.857" endtime="20201030 15:51:44.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.856" endtime="20201030 15:51:44.246"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.255" endtime="20201030 15:51:44.287"></status>
</kw>
<msg timestamp="20201030 15:51:44.287" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.253" endtime="20201030 15:51:44.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.290" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.289" endtime="20201030 15:51:44.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.291" endtime="20201030 15:51:44.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.250" endtime="20201030 15:51:44.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.249" endtime="20201030 15:51:44.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.300" endtime="20201030 15:51:44.586"></status>
</kw>
<msg timestamp="20201030 15:51:44.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.298" endtime="20201030 15:51:44.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023373139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.590" endtime="20201030 15:51:44.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.598" endtime="20201030 15:51:44.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.296" endtime="20201030 15:51:44.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.294" endtime="20201030 15:51:44.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.604" level="INFO">${PHILIP_RES} = [{'diff': 0.0003166530000000001}, {'diff': 0.000316735999999998}, {'diff': 0.00031675000000000106}, {'diff': 0.0003167079999999989}, {'diff': 0.0003166800000000032}, {'diff': 0.0003167499999999976}, {...</msg>
<status status="PASS" starttime="20201030 15:51:44.601" endtime="20201030 15:51:44.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.608" level="INFO">${RESULT} = {'diff': [0.0003166530000000001, 0.000316735999999998, 0.00031675000000000106, 0.0003167079999999989, 0.0003166800000000032, 0.0003167499999999976, 0.00031675000000000106, 0.00031681899999999943, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:44.605" endtime="20201030 15:51:44.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.613" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.612" endtime="20201030 15:51:44.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.615" level="INFO">VALUE: [0.0003166530000000001, 0.000316735999999998, 0.00031675000000000106, 0.0003167079999999989, 0.0003166800000000032, 0.0003167499999999976, 0.00031675000000000106, 0.00031681899999999943, 0.000316735999999998, 0.00031679199999999977, 0.00031681899999999943, 0.0003168060000000028, 0.00031681899999999943, 0.00031679199999999977, 0.000316735999999998, 0.0003169160000000004, 0.0003168330000000025, 0.00031688900000000075, 0.00031688900000000075, 0.0003168750000000012, 0.0003168749999999977, 0.0003168469999999986, 0.0003168469999999986, 0.0003168330000000025, 0.00031688900000000075, 0.0003167499999999976, 0.0003167220000000054, 0.00031676399999999716, 0.0003168049999999964, 0.00031694399999999956, 0.0003168750000000012, 0.00031672199999999845, 0.0003168479999999946, 0.00031677799999999673, 0.0003167640000000041, 0.0003168610000000016, 0.0003168190000000029, 0.0003168610000000016, 0.0003168610000000016, 0.00031688900000000075, 0.0003167499999999976, 0.0003169860000000052, 0.00031695799999999913, 0.0003168750000000012, 0.000316735999999998, 0.00031687499999999424, 0.00031687499999999424, 0.0003168609999999947, 0.00031677799999999673, 0.00031694499999999903]</msg>
<status status="PASS" starttime="20201030 15:51:44.614" endtime="20201030 15:51:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.609" endtime="20201030 15:51:44.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.621" endtime="20201030 15:51:44.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.619" endtime="20201030 15:51:44.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.618" endtime="20201030 15:51:44.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.247" endtime="20201030 15:51:44.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.247" endtime="20201030 15:51:44.642"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.650" endtime="20201030 15:51:44.681"></status>
</kw>
<msg timestamp="20201030 15:51:44.681" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.649" endtime="20201030 15:51:44.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.684" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.682" endtime="20201030 15:51:44.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.685" endtime="20201030 15:51:44.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.646" endtime="20201030 15:51:44.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.644" endtime="20201030 15:51:44.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.694" endtime="20201030 15:51:44.979"></status>
</kw>
<msg timestamp="20201030 15:51:44.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.692" endtime="20201030 15:51:44.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.984" endtime="20201030 15:51:44.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.992" endtime="20201030 15:51:44.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.690" endtime="20201030 15:51:44.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.688" endtime="20201030 15:51:44.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.998" level="INFO">${PHILIP_RES} = [{'diff': 0.0003416109999999986}, {'diff': 0.0003414859999999985}, {'diff': 0.0003416520000000013}, {'diff': 0.00034162500000000165}, {'diff': 0.00034162500000000165}, {'diff': 0.0003416530000000008},...</msg>
<status status="PASS" starttime="20201030 15:51:44.995" endtime="20201030 15:51:44.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.003" level="INFO">${RESULT} = {'diff': [0.0003416109999999986, 0.0003414859999999985, 0.0003416520000000013, 0.00034162500000000165, 0.00034162500000000165, 0.0003416530000000008, 0.0003416390000000012, 0.0003416390000000012, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:44.999" endtime="20201030 15:51:45.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.007" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.006" endtime="20201030 15:51:45.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.010" level="INFO">VALUE: [0.0003416109999999986, 0.0003414859999999985, 0.0003416520000000013, 0.00034162500000000165, 0.00034162500000000165, 0.0003416530000000008, 0.0003416390000000012, 0.0003416390000000012, 0.0003416109999999986, 0.00034154100000000076, 0.00034158299999999947, 0.00034154200000000023, 0.00034159699999999904, 0.00034177699999999797, 0.0003416249999999982, 0.0003416520000000013, 0.00034151299999999815, 0.0003416659999999974, 0.00034166700000000036, 0.00034145799999999935, 0.00034155500000000033, 0.00034145799999999935, 0.00034172200000000263, 0.00034162500000000165, 0.00034161200000000155, 0.0003416530000000008, 0.00034162500000000165, 0.000341694, 0.00034170899999999907, 0.0003416530000000008, 0.0003416949999999995, 0.0003416119999999981, 0.00034158299999999947, 0.00034163899999999775, 0.000341679999999997, 0.00034159699999999904, 0.0003414999999999946, 0.00034158399999999894, 0.0003416520000000048, 0.00034159699999999904, 0.00034161100000000555, 0.0003415140000000011, 0.0003416520000000048, 0.00034165199999999785, 0.00034170900000000254, 0.0003416379999999983, 0.00034158399999999894, 0.00034151399999999416, 0.0003415000000000015, 0.0003417370000000017]</msg>
<status status="PASS" starttime="20201030 15:51:45.008" endtime="20201030 15:51:45.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.004" endtime="20201030 15:51:45.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.015" endtime="20201030 15:51:45.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.013" endtime="20201030 15:51:45.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.012" endtime="20201030 15:51:45.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.643" endtime="20201030 15:51:45.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.642" endtime="20201030 15:51:45.036"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.044" endtime="20201030 15:51:45.077"></status>
</kw>
<msg timestamp="20201030 15:51:45.077" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.042" endtime="20201030 15:51:45.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.080" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.078" endtime="20201030 15:51:45.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.081" endtime="20201030 15:51:45.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.040" endtime="20201030 15:51:45.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.038" endtime="20201030 15:51:45.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.090" endtime="20201030 15:51:45.376"></status>
</kw>
<msg timestamp="20201030 15:51:45.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.088" endtime="20201030 15:51:45.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022448042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.380" endtime="20201030 15:51:45.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.388" endtime="20201030 15:51:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.086" endtime="20201030 15:51:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.084" endtime="20201030 15:51:45.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.395" level="INFO">${PHILIP_RES} = [{'diff': 0.0003673889999999992}, {'diff': 0.000367362000000003}, {'diff': 0.0003673340000000004}, {'diff': 0.0003675560000000015}, {'diff': 0.00036745800000000106}, {'diff': 0.0003673470000000005}, {...</msg>
<status status="PASS" starttime="20201030 15:51:45.392" endtime="20201030 15:51:45.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.399" level="INFO">${RESULT} = {'diff': [0.0003673889999999992, 0.000367362000000003, 0.0003673340000000004, 0.0003675560000000015, 0.00036745800000000106, 0.0003673470000000005, 0.00036733299999999747, 0.0003673890000000027, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:45.396" endtime="20201030 15:51:45.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.403" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.402" endtime="20201030 15:51:45.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.406" level="INFO">VALUE: [0.0003673889999999992, 0.000367362000000003, 0.0003673340000000004, 0.0003675560000000015, 0.00036745800000000106, 0.0003673470000000005, 0.00036733299999999747, 0.0003673890000000027, 0.0003672910000000022, 0.00036741699999999836, 0.0003674310000000014, 0.0003673610000000001, 0.00036718000000000167, 0.00036737499999999965, 0.0003675140000000028, 0.0003673889999999992, 0.0003674440000000015, 0.00036741699999999836, 0.00036747200000000063, 0.0003673610000000001, 0.0003674579999999976, 0.0003673750000000031, 0.00036734800000000345, 0.0003673059999999978, 0.00036733299999999747, 0.00036738899999999575, 0.0003674440000000015, 0.0003673890000000027, 0.000367362000000003, 0.0003674730000000001, 0.00036738899999999575, 0.000367444999999994, 0.00036734699999999704, 0.000367362000000003, 0.0003672639999999991, 0.00036747200000000063, 0.0003674300000000019, 0.00036744500000000097, 0.0003673189999999979, 0.00036745800000000106, 0.00036730499999999833, 0.00036730600000000474, 0.0003673890000000027, 0.0003673330000000044, 0.0003674170000000018, 0.00036729200000000517, 0.00036749999999999977, 0.00036745800000000106, 0.00036747200000000063, 0.00036733299999999747]</msg>
<status status="PASS" starttime="20201030 15:51:45.404" endtime="20201030 15:51:45.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.400" endtime="20201030 15:51:45.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.411" endtime="20201030 15:51:45.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.409" endtime="20201030 15:51:45.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.408" endtime="20201030 15:51:45.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.036" endtime="20201030 15:51:45.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.036" endtime="20201030 15:51:45.434"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.452" endtime="20201030 15:51:45.485"></status>
</kw>
<msg timestamp="20201030 15:51:45.486" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.448" endtime="20201030 15:51:45.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.491" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.488" endtime="20201030 15:51:45.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.493" endtime="20201030 15:51:45.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.443" endtime="20201030 15:51:45.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.439" endtime="20201030 15:51:45.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.512" endtime="20201030 15:51:45.802"></status>
</kw>
<msg timestamp="20201030 15:51:45.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033586847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033980986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.509" endtime="20201030 15:51:45.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033586847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033980986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.806" endtime="20201030 15:51:45.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.814" endtime="20201030 15:51:45.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.504" endtime="20201030 15:51:45.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.500" endtime="20201030 15:51:45.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.821" level="INFO">${PHILIP_RES} = [{'diff': 0.00039413899999999474}, {'diff': 0.00039406999999999637}, {'diff': 0.0003940269999999982}, {'diff': 0.0003940559999999968}, {'diff': 0.0003940280000000046}, {'diff': 0.00039398599999999895}...</msg>
<status status="PASS" starttime="20201030 15:51:45.817" endtime="20201030 15:51:45.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.825" level="INFO">${RESULT} = {'diff': [0.00039413899999999474, 0.00039406999999999637, 0.0003940269999999982, 0.0003940559999999968, 0.0003940280000000046, 0.00039398599999999895, 0.00039411100000000254, 0.00039420800000000006, 0...</msg>
<status status="PASS" starttime="20201030 15:51:45.822" endtime="20201030 15:51:45.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.829" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.828" endtime="20201030 15:51:45.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.831" level="INFO">VALUE: [0.00039413899999999474, 0.00039406999999999637, 0.0003940269999999982, 0.0003940559999999968, 0.0003940280000000046, 0.00039398599999999895, 0.00039411100000000254, 0.00039420800000000006, 0.0003940139999999981, 0.00039411100000000254, 0.0003941249999999952, 0.00039406999999999637, 0.0003939719999999994, 0.0003941670000000008, 0.0003941670000000008, 0.0003940830000000034, 0.00039405600000000374, 0.0003939999999999985, 0.00039404200000000417, 0.00039409699999999603, 0.00039408299999999646, 0.0003941940000000005, 0.0003939590000000062, 0.00039404200000000417, 0.00039408299999999646, 0.00039404199999999723, 0.000394179999999994, 0.00039411100000000254, 0.0003939449999999997, 0.0003941390000000017, 0.0003940549999999973, 0.0003940559999999968, 0.00039408399999999594, 0.0003940689999999969, 0.0003940830000000034, 0.00039405600000000374, 0.0003939579999999998, 0.0003941250000000021, 0.0003939719999999994, 0.00039415300000000125, 0.00039404200000000417, 0.00039405500000000426, 0.0003941249999999952, 0.00039404199999999723, 0.0003940559999999968, 0.0003941249999999952, 0.00039408399999999594, 0.0003939719999999994, 0.000394014000000005, 0.00039394400000000024]</msg>
<status status="PASS" starttime="20201030 15:51:45.830" endtime="20201030 15:51:45.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.825" endtime="20201030 15:51:45.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.837" endtime="20201030 15:51:45.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.836" endtime="20201030 15:51:45.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.834" endtime="20201030 15:51:45.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.436" endtime="20201030 15:51:45.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.435" endtime="20201030 15:51:45.858"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.866" endtime="20201030 15:51:45.901"></status>
</kw>
<msg timestamp="20201030 15:51:45.902" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.865" endtime="20201030 15:51:45.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.904" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.903" endtime="20201030 15:51:45.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.905" endtime="20201030 15:51:45.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.862" endtime="20201030 15:51:45.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.860" endtime="20201030 15:51:45.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.914" endtime="20201030 15:51:46.201"></status>
</kw>
<msg timestamp="20201030 15:51:46.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018975986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.912" endtime="20201030 15:51:46.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018975986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.205" endtime="20201030 15:51:46.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.213" endtime="20201030 15:51:46.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.910" endtime="20201030 15:51:46.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.908" endtime="20201030 15:51:46.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.219" level="INFO">${PHILIP_RES} = [{'diff': 0.000421556}, {'diff': 0.00042179099999999775}, {'diff': 0.0004216799999999972}, {'diff': 0.0004217089999999993}, {'diff': 0.0004216520000000015}, {'diff': 0.00042163800000000196}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:51:46.216" endtime="20201030 15:51:46.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.224" level="INFO">${RESULT} = {'diff': [0.000421556, 0.00042179099999999775, 0.0004216799999999972, 0.0004217089999999993, 0.0004216520000000015, 0.00042163800000000196, 0.0004216949999999997, 0.0004217089999999993, 0.000421763999...</msg>
<status status="PASS" starttime="20201030 15:51:46.220" endtime="20201030 15:51:46.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.228" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.227" endtime="20201030 15:51:46.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.231" level="INFO">VALUE: [0.000421556, 0.00042179099999999775, 0.0004216799999999972, 0.0004217089999999993, 0.0004216520000000015, 0.00042163800000000196, 0.0004216949999999997, 0.0004217089999999993, 0.0004217639999999981, 0.0004216669999999971, 0.0004217780000000011, 0.00042166700000000057, 0.0004215829999999997, 0.000421653000000001, 0.00042172299999999885, 0.0004216660000000011, 0.00042169400000000024, 0.0004216949999999997, 0.00042165199999999806, 0.00042168100000000014, 0.0004216949999999997, 0.0004214719999999991, 0.00042162500000000186, 0.0004217219999999994, 0.00042166700000000057, 0.00042169399999999677, 0.00042169400000000024, 0.00042161099999999535, 0.0004217219999999994, 0.0004217499999999985, 0.0004215970000000027, 0.00042168000000000067, 0.0004215699999999961, 0.00042180600000000373, 0.0004215829999999962, 0.0004215970000000027, 0.00042166700000000057, 0.00042168100000000014, 0.0004216110000000023, 0.00042179200000000416, 0.00042157000000000305, 0.0004215829999999962, 0.0004217499999999985, 0.00042177799999999765, 0.0004215839999999957, 0.000421653000000001, 0.0004215829999999962, 0.0004215970000000027, 0.0004215699999999961, 0.00042168100000000014]</msg>
<status status="PASS" starttime="20201030 15:51:46.229" endtime="20201030 15:51:46.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.225" endtime="20201030 15:51:46.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.236" endtime="20201030 15:51:46.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.234" endtime="20201030 15:51:46.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.233" endtime="20201030 15:51:46.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.859" endtime="20201030 15:51:46.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.858" endtime="20201030 15:51:46.257"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.266" endtime="20201030 15:51:46.303"></status>
</kw>
<msg timestamp="20201030 15:51:46.303" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.264" endtime="20201030 15:51:46.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.306" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.304" endtime="20201030 15:51:46.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.307" endtime="20201030 15:51:46.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.261" endtime="20201030 15:51:46.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.259" endtime="20201030 15:51:46.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.316" endtime="20201030 15:51:46.602"></status>
</kw>
<msg timestamp="20201030 15:51:46.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.314" endtime="20201030 15:51:46.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022737208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.607" endtime="20201030 15:51:46.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.615" endtime="20201030 15:51:46.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.312" endtime="20201030 15:51:46.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.310" endtime="20201030 15:51:46.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.621" level="INFO">${PHILIP_RES} = [{'diff': 0.0004499159999999981}, {'diff': 0.000449887999999999}, {'diff': 0.0004500420000000012}, {'diff': 0.0004500269999999987}, {'diff': 0.00044997199999999987}, {'diff': 0.00045007000000000033}, ...</msg>
<status status="PASS" starttime="20201030 15:51:46.618" endtime="20201030 15:51:46.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.625" level="INFO">${RESULT} = {'diff': [0.0004499159999999981, 0.000449887999999999, 0.0004500420000000012, 0.0004500269999999987, 0.00044997199999999987, 0.00045007000000000033, 0.00045012499999999914, 0.0004500280000000016, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:46.622" endtime="20201030 15:51:46.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.629" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.628" endtime="20201030 15:51:46.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.632" level="INFO">VALUE: [0.0004499159999999981, 0.000449887999999999, 0.0004500420000000012, 0.0004500269999999987, 0.00044997199999999987, 0.00045007000000000033, 0.00045012499999999914, 0.0004500280000000016, 0.00044993000000000116, 0.00045011099999999957, 0.00044997299999999935, 0.0004500559999999973, 0.0004499580000000003, 0.00044997199999999987, 0.0004501389999999987, 0.0004498610000000028, 0.0004498609999999993, 0.0004500419999999977, 0.00045006900000000086, 0.00044998599999999944, 0.0004499309999999937, 0.0004501250000000026, 0.00045009699999999653, 0.00045005600000000423, 0.0004500549999999978, 0.0004500689999999974, 0.0004500140000000055, 0.0004499589999999998, 0.00045008400000000337, 0.00044991700000000107, 0.00044997199999999987, 0.0004501250000000026, 0.000449999999999999, 0.0004500549999999978, 0.00045008400000000337, 0.00045006999999999686, 0.00044991700000000107, 0.00045012499999999567, 0.0004499860000000064, 0.00045011100000000304, 0.00045006999999999686, 0.000449999999999999, 0.0004499309999999937, 0.00045008399999999643, 0.0004499589999999998, 0.0004499450000000002, 0.00045005600000000423, 0.00045002799999999815, 0.00044997199999999987, 0.00044994400000000073]</msg>
<status status="PASS" starttime="20201030 15:51:46.631" endtime="20201030 15:51:46.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.626" endtime="20201030 15:51:46.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.642" endtime="20201030 15:51:46.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.641" endtime="20201030 15:51:46.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.640" endtime="20201030 15:51:46.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.258" endtime="20201030 15:51:46.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.257" endtime="20201030 15:51:46.663"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.672" endtime="20201030 15:51:46.710"></status>
</kw>
<msg timestamp="20201030 15:51:46.710" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.670" endtime="20201030 15:51:46.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.713" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.711" endtime="20201030 15:51:46.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.714" endtime="20201030 15:51:46.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.667" endtime="20201030 15:51:46.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.665" endtime="20201030 15:51:46.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.723" endtime="20201030 15:51:47.022"></status>
</kw>
<msg timestamp="20201030 15:51:47.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.721" endtime="20201030 15:51:47.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023121042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.031" endtime="20201030 15:51:47.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.049" endtime="20201030 15:51:47.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.719" endtime="20201030 15:51:47.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.717" endtime="20201030 15:51:47.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.057" level="INFO">${PHILIP_RES} = [{'diff': 0.00047920900000000127}, {'diff': 0.0004793330000000019}, {'diff': 0.00047947199999999815}, {'diff': 0.00047947199999999815}, {'diff': 0.00047932000000000183}, {'diff': 0.0004792640000000001...</msg>
<status status="PASS" starttime="20201030 15:51:47.054" endtime="20201030 15:51:47.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.061" level="INFO">${RESULT} = {'diff': [0.00047920900000000127, 0.0004793330000000019, 0.00047947199999999815, 0.00047947199999999815, 0.00047932000000000183, 0.0004792640000000001, 0.0004793890000000002, 0.0004795700000000021, 0....</msg>
<status status="PASS" starttime="20201030 15:51:47.058" endtime="20201030 15:51:47.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.065" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.064" endtime="20201030 15:51:47.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.068" level="INFO">VALUE: [0.00047920900000000127, 0.0004793330000000019, 0.00047947199999999815, 0.00047947199999999815, 0.00047932000000000183, 0.0004792640000000001, 0.0004793890000000002, 0.0004795700000000021, 0.0004792919999999992, 0.0004793609999999976, 0.0004794860000000012, 0.0004793330000000019, 0.00047956899999999913, 0.0004793890000000002, 0.00047947199999999815, 0.00047950000000000076, 0.00047947199999999815, 0.0004794170000000028, 0.0004794860000000012, 0.00047931999999999836, 0.0004793609999999976, 0.00047944500000000195, 0.000479346999999998, 0.0004794170000000028, 0.00047951400000000033, 0.0004794590000000015, 0.00047933399999999793, 0.00047937499999999716, 0.0004793190000000058, 0.00047944399999999554, 0.0004794860000000012, 0.00047933299999999845, 0.00047938899999999673, 0.0004794300000000029, 0.0004794590000000015, 0.00047938899999999673, 0.00047950000000000076, 0.00047944500000000195, 0.0004794310000000024, 0.0004793189999999989, 0.0004794170000000028, 0.00047933299999999845, 0.0004793049999999993, 0.0004794310000000024, 0.00047934700000000496, 0.00047942999999999597, 0.0004793750000000041, 0.0004793609999999976, 0.0004793890000000037, 0.0004794300000000029]</msg>
<status status="PASS" starttime="20201030 15:51:47.066" endtime="20201030 15:51:47.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.062" endtime="20201030 15:51:47.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.076" endtime="20201030 15:51:47.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.074" endtime="20201030 15:51:47.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.073" endtime="20201030 15:51:47.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.664" endtime="20201030 15:51:47.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.663" endtime="20201030 15:51:47.096"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.105" endtime="20201030 15:51:47.147"></status>
</kw>
<msg timestamp="20201030 15:51:47.147" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.103" endtime="20201030 15:51:47.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.150" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.148" endtime="20201030 15:51:47.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.151" endtime="20201030 15:51:47.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.101" endtime="20201030 15:51:47.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.099" endtime="20201030 15:51:47.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.160" endtime="20201030 15:51:47.444"></status>
</kw>
<msg timestamp="20201030 15:51:47.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:47.158" endtime="20201030 15:51:47.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0219205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:47.448" endtime="20201030 15:51:47.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.456" endtime="20201030 15:51:47.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.156" endtime="20201030 15:51:47.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.154" endtime="20201030 15:51:47.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.462" level="INFO">${PHILIP_RES} = [{'diff': 0.0005094439999999978}, {'diff': 0.0005094310000000012}, {'diff': 0.0005094720000000004}, {'diff': 0.0005094720000000004}, {'diff': 0.0005094440000000013}, {'diff': 0.0005094729999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:51:47.459" endtime="20201030 15:51:47.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.467" level="INFO">${RESULT} = {'diff': [0.0005094439999999978, 0.0005094310000000012, 0.0005094720000000004, 0.0005094720000000004, 0.0005094440000000013, 0.0005094729999999999, 0.0005094580000000008, 0.0005093749999999994, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:51:47.463" endtime="20201030 15:51:47.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.472" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.471" endtime="20201030 15:51:47.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.474" level="INFO">VALUE: [0.0005094439999999978, 0.0005094310000000012, 0.0005094720000000004, 0.0005094720000000004, 0.0005094440000000013, 0.0005094729999999999, 0.0005094580000000008, 0.0005093749999999994, 0.000509486, 0.0005094440000000013, 0.000509388999999999, 0.0005094720000000004, 0.0005096670000000018, 0.0005094720000000004, 0.0005095700000000009, 0.0005095419999999982, 0.0005094300000000017, 0.0005094310000000046, 0.0005094439999999978, 0.0005094169999999981, 0.0005095409999999953, 0.0005095560000000013, 0.0005095550000000018, 0.000509583000000001, 0.0005095420000000017, 0.0005093749999999994, 0.0005094309999999977, 0.0005094720000000039, 0.0005096110000000001, 0.0005097360000000037, 0.0005095140000000026, 0.0005096249999999997, 0.0005095700000000009, 0.0005096799999999985, 0.0005094159999999986, 0.0005096799999999985, 0.0005094300000000052, 0.0005095420000000017, 0.0005094579999999974, 0.0005095270000000027, 0.0005096249999999997, 0.0005095140000000026, 0.000509500000000003, 0.0005095280000000021, 0.0005096249999999997, 0.0005094999999999961, 0.0005095129999999962, 0.000509598, 0.0005094579999999974, 0.0005095559999999943]</msg>
<status status="PASS" starttime="20201030 15:51:47.473" endtime="20201030 15:51:47.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.468" endtime="20201030 15:51:47.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.479" endtime="20201030 15:51:47.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.477" endtime="20201030 15:51:47.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.476" endtime="20201030 15:51:47.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.097" endtime="20201030 15:51:47.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.097" endtime="20201030 15:51:47.500"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.508" endtime="20201030 15:51:47.549"></status>
</kw>
<msg timestamp="20201030 15:51:47.549" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.507" endtime="20201030 15:51:47.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.552" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.550" endtime="20201030 15:51:47.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.553" endtime="20201030 15:51:47.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.504" endtime="20201030 15:51:47.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.502" endtime="20201030 15:51:47.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.562" endtime="20201030 15:51:47.863"></status>
</kw>
<msg timestamp="20201030 15:51:47.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020016694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.560" endtime="20201030 15:51:47.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020016694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.867" endtime="20201030 15:51:47.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.875" endtime="20201030 15:51:47.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.558" endtime="20201030 15:51:47.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.556" endtime="20201030 15:51:47.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.884" level="INFO">${PHILIP_RES} = [{'diff': 0.0005404999999999993}, {'diff': 0.0005404579999999971}, {'diff': 0.000540541000000002}, {'diff': 0.0005405689999999977}, {'diff': 0.0005405139999999989}, {'diff': 0.0005406109999999999}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:47.879" endtime="20201030 15:51:47.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.890" level="INFO">${RESULT} = {'diff': [0.0005404999999999993, 0.0005404579999999971, 0.000540541000000002, 0.0005405689999999977, 0.0005405139999999989, 0.0005406109999999999, 0.0005404999999999993, 0.0005404580000000006, 0.00054...</msg>
<status status="PASS" starttime="20201030 15:51:47.885" endtime="20201030 15:51:47.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.896" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.895" endtime="20201030 15:51:47.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.899" level="INFO">VALUE: [0.0005404999999999993, 0.0005404579999999971, 0.000540541000000002, 0.0005405689999999977, 0.0005405139999999989, 0.0005406109999999999, 0.0005404999999999993, 0.0005404580000000006, 0.0005405690000000012, 0.0005403749999999992, 0.0005404310000000009, 0.0005405550000000016, 0.000540444999999997, 0.0005406390000000025, 0.0005406670000000016, 0.0005406800000000017, 0.0005404030000000018, 0.0005407079999999974, 0.0005404999999999993, 0.0005405700000000006, 0.0005405840000000037, 0.0005405280000000054, 0.0005406250000000029, 0.0005408049999999984, 0.0005406519999999956, 0.0005406660000000021, 0.0005408330000000044, 0.0005407499999999996, 0.0005407220000000004, 0.0005406529999999951, 0.0005408329999999975, 0.0005408189999999979, 0.0005408329999999975, 0.0005407779999999987, 0.0005407769999999992, 0.0005407919999999983, 0.0005407499999999996, 0.0005406940000000013, 0.0005406810000000012, 0.000540653000000002, 0.0005406390000000025, 0.0005406940000000013, 0.0005408469999999971, 0.0005408049999999984, 0.0005407080000000009, 0.0005407499999999996, 0.0005407919999999983, 0.0005407090000000003, 0.0005408049999999984, 0.000540736]</msg>
<status status="PASS" starttime="20201030 15:51:47.897" endtime="20201030 15:51:47.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.892" endtime="20201030 15:51:47.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.906" endtime="20201030 15:51:47.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.904" endtime="20201030 15:51:47.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.903" endtime="20201030 15:51:47.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.501" endtime="20201030 15:51:47.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.500" endtime="20201030 15:51:47.927"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.936" endtime="20201030 15:51:47.975"></status>
</kw>
<msg timestamp="20201030 15:51:47.976" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.934" endtime="20201030 15:51:47.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.978" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.977" endtime="20201030 15:51:47.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.979" endtime="20201030 15:51:47.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.932" endtime="20201030 15:51:47.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.930" endtime="20201030 15:51:47.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.988" endtime="20201030 15:51:48.274"></status>
</kw>
<msg timestamp="20201030 15:51:48.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.987" endtime="20201030 15:51:48.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.278" endtime="20201030 15:51:48.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.286" endtime="20201030 15:51:48.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.984" endtime="20201030 15:51:48.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.982" endtime="20201030 15:51:48.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.293" level="INFO">${PHILIP_RES} = [{'diff': 0.0005724159999999992}, {'diff': 0.0005724159999999992}, {'diff': 0.0005724450000000013}, {'diff': 0.000572375}, {'diff': 0.0005722919999999986}, {'diff': 0.000572292000000002}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:48.289" endtime="20201030 15:51:48.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.296" level="INFO">${RESULT} = {'diff': [0.0005724159999999992, 0.0005724159999999992, 0.0005724450000000013, 0.000572375, 0.0005722919999999986, 0.000572292000000002, 0.0005723330000000013, 0.000572472000000001, 0.000572375, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:48.293" endtime="20201030 15:51:48.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.301" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.300" endtime="20201030 15:51:48.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.303" level="INFO">VALUE: [0.0005724159999999992, 0.0005724159999999992, 0.0005724450000000013, 0.000572375, 0.0005722919999999986, 0.000572292000000002, 0.0005723330000000013, 0.000572472000000001, 0.000572375, 0.0005724580000000014, 0.000572375, 0.0005725139999999997, 0.000572375, 0.0005724579999999979, 0.000572472000000001, 0.0005723340000000007, 0.0005725000000000001, 0.000572389000000003, 0.0005724579999999979, 0.000572485999999997, 0.0005724719999999975, 0.0005724159999999992, 0.000572485999999997, 0.0005724439999999983, 0.000572292000000002, 0.000572472999999997, 0.0005725419999999953, 0.0005722779999999955, 0.000572486000000004, 0.0005725690000000019, 0.000572485999999997, 0.0005724579999999979, 0.0005723480000000003, 0.0005723889999999995, 0.000572292000000002, 0.0005724029999999991, 0.0005724719999999975, 0.0005725829999999946, 0.0005724299999999988, 0.0005724439999999983, 0.0005725140000000031, 0.0005724719999999975, 0.0005725970000000011, 0.0005724449999999978, 0.000572375, 0.0005724720000000044, 0.0005723329999999943, 0.0005725130000000037, 0.0005724590000000043, 0.0005724309999999982]</msg>
<status status="PASS" starttime="20201030 15:51:48.302" endtime="20201030 15:51:48.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.297" endtime="20201030 15:51:48.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.309" endtime="20201030 15:51:48.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.308" endtime="20201030 15:51:48.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.306" endtime="20201030 15:51:48.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.928" endtime="20201030 15:51:48.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.928" endtime="20201030 15:51:48.330"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.338" endtime="20201030 15:51:48.383"></status>
</kw>
<msg timestamp="20201030 15:51:48.383" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.337" endtime="20201030 15:51:48.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.385" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.384" endtime="20201030 15:51:48.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.387" endtime="20201030 15:51:48.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.334" endtime="20201030 15:51:48.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.332" endtime="20201030 15:51:48.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.396" endtime="20201030 15:51:48.695"></status>
</kw>
<msg timestamp="20201030 15:51:48.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018915111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.394" endtime="20201030 15:51:48.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018915111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.700" endtime="20201030 15:51:48.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.708" endtime="20201030 15:51:48.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.391" endtime="20201030 15:51:48.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.390" endtime="20201030 15:51:48.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.714" level="INFO">${PHILIP_RES} = [{'diff': 0.0006314030000000026}, {'diff': 0.0006054870000000018}, {'diff': 0.0006054859999999988}, {'diff': 0.0006055129999999985}, {'diff': 0.0006054860000000023}, {'diff': 0.0006054729999999987}, {...</msg>
<status status="PASS" starttime="20201030 15:51:48.711" endtime="20201030 15:51:48.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.719" level="INFO">${RESULT} = {'diff': [0.0006314030000000026, 0.0006054870000000018, 0.0006054859999999988, 0.0006055129999999985, 0.0006054860000000023, 0.0006054729999999987, 0.0006055839999999993, 0.0006055699999999997, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:51:48.715" endtime="20201030 15:51:48.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.724" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.723" endtime="20201030 15:51:48.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.727" level="INFO">VALUE: [0.0006314030000000026, 0.0006054870000000018, 0.0006054859999999988, 0.0006055129999999985, 0.0006054860000000023, 0.0006054729999999987, 0.0006055839999999993, 0.0006055699999999997, 0.0006055420000000006, 0.0006055829999999998, 0.0006056799999999973, 0.0006055410000000011, 0.000605625000000002, 0.0006056249999999985, 0.0006055560000000001, 0.000605513999999998, 0.0006055550000000007, 0.0006055699999999997, 0.0006056249999999985, 0.0006056799999999973, 0.0006053750000000052, 0.0006054859999999954, 0.0006055140000000014, 0.000605528000000001, 0.0006055420000000006, 0.0006056380000000056, 0.0006055560000000001, 0.0006056119999999984, 0.0006056530000000046, 0.0006055829999999998, 0.0006055279999999941, 0.0006055969999999994, 0.0006055140000000014, 0.000605513000000002, 0.0006055420000000006, 0.0006055420000000006, 0.0006055690000000002, 0.0006055699999999997, 0.0006056669999999972, 0.000605528000000001, 0.0006055140000000014, 0.000605528000000001, 0.0006054730000000022, 0.0006055550000000007, 0.0006055839999999993, 0.0006054579999999962, 0.0006054310000000035, 0.0006054999999999949, 0.0006055279999999941, 0.0006054299999999971]</msg>
<status status="PASS" starttime="20201030 15:51:48.725" endtime="20201030 15:51:48.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.720" endtime="20201030 15:51:48.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.732" endtime="20201030 15:51:48.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.731" endtime="20201030 15:51:48.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.729" endtime="20201030 15:51:48.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.331" endtime="20201030 15:51:48.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.330" endtime="20201030 15:51:48.753"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.762" endtime="20201030 15:51:48.815"></status>
</kw>
<msg timestamp="20201030 15:51:48.815" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.760" endtime="20201030 15:51:48.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.818" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.816" endtime="20201030 15:51:48.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.819" endtime="20201030 15:51:48.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.758" endtime="20201030 15:51:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.756" endtime="20201030 15:51:48.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.828" endtime="20201030 15:51:49.114"></status>
</kw>
<msg timestamp="20201030 15:51:49.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02245525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:48.826" endtime="20201030 15:51:49.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02245525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023094125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:49.118" endtime="20201030 15:51:49.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.126" endtime="20201030 15:51:49.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.824" endtime="20201030 15:51:49.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.822" endtime="20201030 15:51:49.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.133" level="INFO">${PHILIP_RES} = [{'diff': 0.0006388750000000006}, {'diff': 0.0006389299999999994}, {'diff': 0.0006388890000000001}, {'diff': 0.000638861000000001}, {'diff': 0.0006388750000000006}, {'diff': 0.0006389029999999997}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:49.129" endtime="20201030 15:51:49.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.137" level="INFO">${RESULT} = {'diff': [0.0006388750000000006, 0.0006389299999999994, 0.0006388890000000001, 0.000638861000000001, 0.0006388750000000006, 0.0006389029999999997, 0.0006388340000000013, 0.0006390279999999998, 0.00063...</msg>
<status status="PASS" starttime="20201030 15:51:49.134" endtime="20201030 15:51:49.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.141" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.140" endtime="20201030 15:51:49.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.143" level="INFO">VALUE: [0.0006388750000000006, 0.0006389299999999994, 0.0006388890000000001, 0.000638861000000001, 0.0006388750000000006, 0.0006389029999999997, 0.0006388340000000013, 0.0006390279999999998, 0.0006388750000000006, 0.0006390000000000007, 0.0006389029999999997, 0.0006389720000000015, 0.0006388750000000006, 0.0006388199999999983, 0.0006390140000000002, 0.0006389300000000028, 0.0006390140000000002, 0.0006390549999999995, 0.0006389590000000014, 0.0006388610000000045, 0.0006388609999999975, 0.0006389020000000037, 0.0006388889999999967, 0.0006389870000000006, 0.0006388610000000045, 0.000639084000000005, 0.000639055999999999, 0.0006389309999999954, 0.0006388189999999988, 0.0006389029999999962, 0.0006387360000000009, 0.0006389720000000015, 0.0006390279999999998, 0.0006390279999999998, 0.0006390140000000002, 0.0006389450000000019, 0.0006389019999999968, 0.0006388329999999984, 0.0006389029999999962, 0.0006389720000000015, 0.0006389159999999963, 0.0006389310000000023, 0.0006387919999999991, 0.0006388749999999971, 0.0006388890000000036, 0.000638958000000002, 0.000638958000000002, 0.0006388609999999975, 0.0006388890000000036, 0.0006388889999999967]</msg>
<status status="PASS" starttime="20201030 15:51:49.142" endtime="20201030 15:51:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.137" endtime="20201030 15:51:49.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.148" endtime="20201030 15:51:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.147" endtime="20201030 15:51:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.146" endtime="20201030 15:51:49.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.754" endtime="20201030 15:51:49.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.754" endtime="20201030 15:51:49.169"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.178" endtime="20201030 15:51:49.226"></status>
</kw>
<msg timestamp="20201030 15:51:49.227" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.176" endtime="20201030 15:51:49.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.229" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.228" endtime="20201030 15:51:49.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.230" endtime="20201030 15:51:49.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.174" endtime="20201030 15:51:49.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.172" endtime="20201030 15:51:49.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.239" endtime="20201030 15:51:49.540"></status>
</kw>
<msg timestamp="20201030 15:51:49.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023595069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024268403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.238" endtime="20201030 15:51:49.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023595069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024268403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.544" endtime="20201030 15:51:49.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.552" endtime="20201030 15:51:49.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.235" endtime="20201030 15:51:49.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.234" endtime="20201030 15:51:49.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.559" level="INFO">${PHILIP_RES} = [{'diff': 0.0006733340000000011}, {'diff': 0.0006734170000000025}, {'diff': 0.0006735409999999997}, {'diff': 0.0006734859999999974}, {'diff': 0.0006733199999999981}, {'diff': 0.0006734720000000013}, {...</msg>
<status status="PASS" starttime="20201030 15:51:49.556" endtime="20201030 15:51:49.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.563" level="INFO">${RESULT} = {'diff': [0.0006733340000000011, 0.0006734170000000025, 0.0006735409999999997, 0.0006734859999999974, 0.0006733199999999981, 0.0006734720000000013, 0.0006734579999999983, 0.0006735409999999997, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:51:49.560" endtime="20201030 15:51:49.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.567" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.566" endtime="20201030 15:51:49.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.569" level="INFO">VALUE: [0.0006733340000000011, 0.0006734170000000025, 0.0006735409999999997, 0.0006734859999999974, 0.0006733199999999981, 0.0006734720000000013, 0.0006734579999999983, 0.0006735409999999997, 0.0006733470000000012, 0.0006735419999999992, 0.0006734579999999983, 0.0006733750000000038, 0.0006735409999999997, 0.0006734720000000013, 0.0006733199999999981, 0.0006735419999999992, 0.0006735279999999996, 0.0006734590000000013, 0.0006735829999999984, 0.0006734720000000013, 0.0006734159999999961, 0.0006735270000000002, 0.0006733750000000038, 0.0006734580000000018, 0.0006734170000000025, 0.0006735000000000005, 0.000673596999999998, 0.0006734730000000008, 0.0006735000000000005, 0.0006735130000000006, 0.0006733749999999969, 0.0006735140000000001, 0.000673485999999994, 0.0006733889999999965, 0.0006733330000000051, 0.0006734860000000009, 0.0006733189999999986, 0.0006733059999999985, 0.0006734440000000022, 0.0006734309999999952, 0.0006733199999999981, 0.0006734310000000021, 0.0006734440000000022, 0.0006734169999999956, 0.0006734170000000025, 0.0006736109999999976, 0.0006733610000000043, 0.0006734580000000018, 0.0006733749999999969, 0.0006734860000000009]</msg>
<status status="PASS" starttime="20201030 15:51:49.568" endtime="20201030 15:51:49.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.564" endtime="20201030 15:51:49.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.575" endtime="20201030 15:51:49.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.574" endtime="20201030 15:51:49.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.573" endtime="20201030 15:51:49.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.170" endtime="20201030 15:51:49.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.169" endtime="20201030 15:51:49.596"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.604" endtime="20201030 15:51:49.654"></status>
</kw>
<msg timestamp="20201030 15:51:49.654" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.603" endtime="20201030 15:51:49.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.657" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.655" endtime="20201030 15:51:49.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.658" endtime="20201030 15:51:49.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.600" endtime="20201030 15:51:49.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.598" endtime="20201030 15:51:49.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.667" endtime="20201030 15:51:49.952"></status>
</kw>
<msg timestamp="20201030 15:51:49.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019447583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.665" endtime="20201030 15:51:49.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019447583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.957" endtime="20201030 15:51:49.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.965" endtime="20201030 15:51:49.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.663" endtime="20201030 15:51:49.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.661" endtime="20201030 15:51:49.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.971" level="INFO">${PHILIP_RES} = [{'diff': 0.0007087360000000015}, {'diff': 0.0007089169999999999}, {'diff': 0.0007088049999999999}, {'diff': 0.0007088059999999993}, {'diff': 0.0007088199999999989}, {'diff': 0.0007087499999999976}, {...</msg>
<status status="PASS" starttime="20201030 15:51:49.968" endtime="20201030 15:51:49.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.976" level="INFO">${RESULT} = {'diff': [0.0007087360000000015, 0.0007089169999999999, 0.0007088049999999999, 0.0007088059999999993, 0.0007088199999999989, 0.0007087499999999976, 0.000708750000000001, 0.0007088199999999989, 0.00070...</msg>
<status status="PASS" starttime="20201030 15:51:49.972" endtime="20201030 15:51:49.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.980" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.979" endtime="20201030 15:51:49.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.983" level="INFO">VALUE: [0.0007087360000000015, 0.0007089169999999999, 0.0007088049999999999, 0.0007088059999999993, 0.0007088199999999989, 0.0007087499999999976, 0.000708750000000001, 0.0007088199999999989, 0.0007086660000000002, 0.0007086939999999993, 0.000708638000000001, 0.0007087919999999998, 0.000708944999999999, 0.0007089860000000017, 0.000708847000000002, 0.0007088189999999994, 0.0007087220000000019, 0.0007088049999999999, 0.0007088199999999989, 0.0007088189999999994, 0.0007089029999999968, 0.0007087780000000002, 0.0007089169999999964, 0.0007088749999999977, 0.0007089170000000034, 0.0007087089999999949, 0.0007088340000000054, 0.0007087640000000006, 0.0007086250000000044, 0.0007088469999999986, 0.0007088340000000054, 0.0007089029999999968, 0.000708832999999999, 0.0007088189999999994, 0.000708750000000001, 0.0007089160000000039, 0.0007086109999999979, 0.0007086800000000032, 0.000708750000000001, 0.0007088199999999989, 0.0007087499999999941, 0.000708750000000001, 0.0007089720000000022, 0.0007087770000000007, 0.0007087499999999941, 0.0007088889999999973, 0.0007090000000000013, 0.0007089580000000026, 0.0007089720000000022, 0.0007089310000000029]</msg>
<status status="PASS" starttime="20201030 15:51:49.981" endtime="20201030 15:51:49.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.977" endtime="20201030 15:51:49.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.988" endtime="20201030 15:51:50.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.986" endtime="20201030 15:51:50.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.985" endtime="20201030 15:51:50.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.597" endtime="20201030 15:51:50.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.596" endtime="20201030 15:51:50.009"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.017" endtime="20201030 15:51:50.066"></status>
</kw>
<msg timestamp="20201030 15:51:50.066" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.016" endtime="20201030 15:51:50.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.069" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.067" endtime="20201030 15:51:50.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.070" endtime="20201030 15:51:50.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.013" endtime="20201030 15:51:50.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.011" endtime="20201030 15:51:50.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.079" endtime="20201030 15:51:50.374"></status>
</kw>
<msg timestamp="20201030 15:51:50.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.077" endtime="20201030 15:51:50.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018887569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.378" endtime="20201030 15:51:50.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.386" endtime="20201030 15:51:50.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.075" endtime="20201030 15:51:50.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.073" endtime="20201030 15:51:50.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.392" level="INFO">${PHILIP_RES} = [{'diff': 0.0007450129999999992}, {'diff': 0.0007450560000000009}, {'diff': 0.0007449859999999996}, {'diff': 0.0007449450000000003}, {'diff': 0.0007450839999999966}, {'diff': 0.0007450550000000014}, {...</msg>
<status status="PASS" starttime="20201030 15:51:50.389" endtime="20201030 15:51:50.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.396" level="INFO">${RESULT} = {'diff': [0.0007450129999999992, 0.0007450560000000009, 0.0007449859999999996, 0.0007449450000000003, 0.0007450839999999966, 0.0007450550000000014, 0.0007452220000000002, 0.0007451109999999997, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:51:50.393" endtime="20201030 15:51:50.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.401" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.400" endtime="20201030 15:51:50.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.403" level="INFO">VALUE: [0.0007450129999999992, 0.0007450560000000009, 0.0007449859999999996, 0.0007449450000000003, 0.0007450839999999966, 0.0007450550000000014, 0.0007452220000000002, 0.0007451109999999997, 0.0007452090000000001, 0.0007450829999999971, 0.0007450139999999987, 0.0007450000000000026, 0.0007450409999999984, 0.0007450420000000013, 0.0007450420000000013, 0.0007450970000000001, 0.0007452220000000002, 0.0007450549999999945, 0.0007452640000000024, 0.0007451249999999993, 0.000745069000000001, 0.0007450420000000013, 0.0007452079999999972, 0.0007451389999999988, 0.0007450550000000014, 0.0007451799999999981, 0.0007450280000000017, 0.0007451529999999984, 0.000745166999999998, 0.0007450280000000017, 0.0007450410000000018, 0.0007450409999999949, 0.0007450000000000026, 0.0007451249999999993, 0.0007451109999999997, 0.0007450979999999996, 0.0007449720000000035, 0.0007449580000000039, 0.0007450139999999952, 0.0007450830000000006, 0.0007451939999999976, 0.0007451389999999988, 0.0007450420000000013, 0.0007451249999999993, 0.0007453189999999943, 0.000745069000000001, 0.0007450560000000009, 0.0007451109999999997, 0.000745084, 0.0007451529999999984]</msg>
<status status="PASS" starttime="20201030 15:51:50.402" endtime="20201030 15:51:50.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.397" endtime="20201030 15:51:50.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.408" endtime="20201030 15:51:50.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.407" endtime="20201030 15:51:50.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.405" endtime="20201030 15:51:50.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.010" endtime="20201030 15:51:50.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.009" endtime="20201030 15:51:50.429"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.437" endtime="20201030 15:51:50.488"></status>
</kw>
<msg timestamp="20201030 15:51:50.489" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.436" endtime="20201030 15:51:50.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.491" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.490" endtime="20201030 15:51:50.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.493" endtime="20201030 15:51:50.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.433" endtime="20201030 15:51:50.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.431" endtime="20201030 15:51:50.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.501" endtime="20201030 15:51:50.788"></status>
</kw>
<msg timestamp="20201030 15:51:50.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.500" endtime="20201030 15:51:50.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.792" endtime="20201030 15:51:50.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.800" endtime="20201030 15:51:50.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.497" endtime="20201030 15:51:50.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.496" endtime="20201030 15:51:50.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.806" level="INFO">${PHILIP_RES} = [{'diff': 0.0007824859999999989}, {'diff': 0.0007822920000000004}, {'diff': 0.0007823329999999996}, {'diff': 0.0007821250000000016}, {'diff': 0.0007823469999999992}, {'diff': 0.0007822360000000021}, {...</msg>
<status status="PASS" starttime="20201030 15:51:50.803" endtime="20201030 15:51:50.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.810" level="INFO">${RESULT} = {'diff': [0.0007824859999999989, 0.0007822920000000004, 0.0007823329999999996, 0.0007821250000000016, 0.0007823469999999992, 0.0007822360000000021, 0.0007822499999999982, 0.0007823190000000001, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:51:50.807" endtime="20201030 15:51:50.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.815" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.814" endtime="20201030 15:51:50.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.817" level="INFO">VALUE: [0.0007824859999999989, 0.0007822920000000004, 0.0007823329999999996, 0.0007821250000000016, 0.0007823469999999992, 0.0007822360000000021, 0.0007822499999999982, 0.0007823190000000001, 0.0007821670000000003, 0.0007822219999999991, 0.0007820689999999998, 0.0007823749999999983, 0.0007823329999999996, 0.0007823469999999992, 0.0007823059999999965, 0.0007822219999999991, 0.0007823059999999965, 0.0007821670000000003, 0.0007821809999999998, 0.0007824449999999997, 0.0007822920000000039, 0.0007822919999999969, 0.0007822360000000056, 0.000782403000000001, 0.0007822080000000065, 0.0007823190000000035, 0.0007822359999999987, 0.0007822219999999991, 0.0007821530000000007, 0.0007821530000000007, 0.0007822219999999991, 0.0007821529999999938, 0.000782208999999999, 0.0007822219999999991, 0.0007819300000000001, 0.000782304999999997, 0.0007822639999999978, 0.0007821670000000003, 0.0007822499999999982, 0.0007820980000000019, 0.0007821939999999999, 0.0007821670000000003, 0.000782305000000004, 0.0007823060000000034, 0.0007823189999999966, 0.0007820559999999963, 0.0007823330000000031, 0.0007823059999999965, 0.000782208999999999, 0.0007822080000000065]</msg>
<status status="PASS" starttime="20201030 15:51:50.816" endtime="20201030 15:51:50.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.811" endtime="20201030 15:51:50.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.825" endtime="20201030 15:51:50.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.824" endtime="20201030 15:51:50.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.823" endtime="20201030 15:51:50.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.430" endtime="20201030 15:51:50.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.429" endtime="20201030 15:51:50.846"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.855" endtime="20201030 15:51:50.910"></status>
</kw>
<msg timestamp="20201030 15:51:50.911" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.853" endtime="20201030 15:51:50.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.913" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.912" endtime="20201030 15:51:50.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.914" endtime="20201030 15:51:50.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.850" endtime="20201030 15:51:50.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.849" endtime="20201030 15:51:50.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.923" endtime="20201030 15:51:51.224"></status>
</kw>
<msg timestamp="20201030 15:51:51.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020316292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.921" endtime="20201030 15:51:51.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020316292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.228" endtime="20201030 15:51:51.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.236" endtime="20201030 15:51:51.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.919" endtime="20201030 15:51:51.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.917" endtime="20201030 15:51:51.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.243" level="INFO">${PHILIP_RES} = [{'diff': 0.0008204999999999983}, {'diff': 0.0008205550000000006}, {'diff': 0.0008206110000000023}, {'diff': 0.0008205560000000001}, {'diff': 0.0008205969999999993}, {'diff': 0.0008206949999999998}, {...</msg>
<status status="PASS" starttime="20201030 15:51:51.239" endtime="20201030 15:51:51.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.248" level="INFO">${RESULT} = {'diff': [0.0008204999999999983, 0.0008205550000000006, 0.0008206110000000023, 0.0008205560000000001, 0.0008205969999999993, 0.0008206949999999998, 0.0008205139999999979, 0.0008205270000000014, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:51:51.244" endtime="20201030 15:51:51.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.252" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.251" endtime="20201030 15:51:51.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.254" level="INFO">VALUE: [0.0008204999999999983, 0.0008205550000000006, 0.0008206110000000023, 0.0008205560000000001, 0.0008205969999999993, 0.0008206949999999998, 0.0008205139999999979, 0.0008205270000000014, 0.0008206109999999989, 0.000820653000000001, 0.0008204160000000009, 0.0008205420000000005, 0.0008205839999999992, 0.0008205560000000035, 0.0008205699999999996, 0.0008205829999999997, 0.000820639000000005, 0.000820638999999998, 0.0008205560000000001, 0.0008207360000000025, 0.0008207920000000007, 0.0008207640000000016, 0.0008207639999999947, 0.0008208050000000008, 0.000820638999999998, 0.0008205970000000062, 0.0008205560000000001, 0.0008205550000000006, 0.0008205829999999997, 0.0008204859999999953, 0.0008206109999999989, 0.0008205550000000006, 0.0008206109999999989, 0.0008206669999999971, 0.0008205839999999992, 0.0008206940000000038, 0.0008206249999999984, 0.0008205690000000002, 0.0008205560000000001, 0.0008205560000000001, 0.0008207079999999964, 0.0008206530000000045, 0.000820541000000001, 0.0008204719999999957, 0.0008205280000000009, 0.0008205969999999993, 0.0008204590000000025, 0.0008206249999999984, 0.0008205140000000083, 0.000820638999999998]</msg>
<status status="PASS" starttime="20201030 15:51:51.253" endtime="20201030 15:51:51.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.249" endtime="20201030 15:51:51.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.259" endtime="20201030 15:51:51.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.258" endtime="20201030 15:51:51.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.257" endtime="20201030 15:51:51.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.847" endtime="20201030 15:51:51.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.847" endtime="20201030 15:51:51.280"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.289" endtime="20201030 15:51:51.346"></status>
</kw>
<msg timestamp="20201030 15:51:51.347" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.287" endtime="20201030 15:51:51.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.349" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.348" endtime="20201030 15:51:51.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.350" endtime="20201030 15:51:51.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.285" endtime="20201030 15:51:51.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.283" endtime="20201030 15:51:51.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.360" endtime="20201030 15:51:51.644"></status>
</kw>
<msg timestamp="20201030 15:51:51.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.358" endtime="20201030 15:51:51.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023457694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.648" endtime="20201030 15:51:51.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.656" endtime="20201030 15:51:51.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.355" endtime="20201030 15:51:51.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.354" endtime="20201030 15:51:51.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.662" level="INFO">${PHILIP_RES} = [{'diff': 0.0008593880000000026}, {'diff': 0.0008593059999999972}, {'diff': 0.0008592359999999993}, {'diff': 0.0008594310000000008}, {'diff': 0.0008593480000000028}, {'diff': 0.000859277000000002}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:51.659" endtime="20201030 15:51:51.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.666" level="INFO">${RESULT} = {'diff': [0.0008593880000000026, 0.0008593059999999972, 0.0008592359999999993, 0.0008594310000000008, 0.0008593480000000028, 0.000859277000000002, 0.0008593330000000003, 0.0008594029999999982, 0.00085...</msg>
<status status="PASS" starttime="20201030 15:51:51.663" endtime="20201030 15:51:51.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.671" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.670" endtime="20201030 15:51:51.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.673" level="INFO">VALUE: [0.0008593880000000026, 0.0008593059999999972, 0.0008592359999999993, 0.0008594310000000008, 0.0008593480000000028, 0.000859277000000002, 0.0008593330000000003, 0.0008594029999999982, 0.0008593339999999998, 0.0008594169999999977, 0.0008594869999999991, 0.0008594440000000009, 0.0008594859999999996, 0.0008593620000000024, 0.0008595559999999974, 0.0008591810000000005, 0.0008593200000000037, 0.0008593479999999959, 0.0008593889999999951, 0.0008594310000000008, 0.0008593060000000041, 0.000859277999999998, 0.0008592640000000054, 0.0008593610000000029, 0.0008593060000000041, 0.0008594310000000008, 0.0008593329999999968, 0.000859180000000001, 0.000859278000000005, 0.0008593340000000033, 0.0008593340000000033, 0.0008593340000000033, 0.0008592359999999993, 0.0008592910000000051, 0.0008594310000000008, 0.0008595280000000052, 0.0008593059999999972, 0.0008593469999999964, 0.0008593610000000029, 0.0008593059999999972, 0.0008594310000000008, 0.0008594859999999996, 0.0008593880000000026, 0.0008594309999999938, 0.0008595420000000048, 0.0008595279999999983, 0.0008595700000000039, 0.000859472, 0.0008593890000000021, 0.0008865839999999958]</msg>
<status status="PASS" starttime="20201030 15:51:51.672" endtime="20201030 15:51:51.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.667" endtime="20201030 15:51:51.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.683" endtime="20201030 15:51:51.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.681" endtime="20201030 15:51:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.680" endtime="20201030 15:51:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.281" endtime="20201030 15:51:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.281" endtime="20201030 15:51:51.704"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.712" endtime="20201030 15:51:51.774"></status>
</kw>
<msg timestamp="20201030 15:51:51.775" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.710" endtime="20201030 15:51:51.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.777" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.776" endtime="20201030 15:51:51.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.779" endtime="20201030 15:51:51.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.708" endtime="20201030 15:51:51.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.706" endtime="20201030 15:51:51.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.789" endtime="20201030 15:51:52.092"></status>
</kw>
<msg timestamp="20201030 15:51:52.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.787" endtime="20201030 15:51:52.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.096" endtime="20201030 15:51:52.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.104" endtime="20201030 15:51:52.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.784" endtime="20201030 15:51:52.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.782" endtime="20201030 15:51:52.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.111" level="INFO">${PHILIP_RES} = [{'diff': 0.0008991250000000006}, {'diff': 0.0008990140000000001}, {'diff': 0.0008991250000000006}, {'diff': 0.0008990700000000018}, {'diff': 0.0008992220000000016}, {'diff': 0.0008990559999999988}, {...</msg>
<status status="PASS" starttime="20201030 15:51:52.108" endtime="20201030 15:51:52.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.115" level="INFO">${RESULT} = {'diff': [0.0008991250000000006, 0.0008990140000000001, 0.0008991250000000006, 0.0008990700000000018, 0.0008992220000000016, 0.0008990559999999988, 0.0008989870000000004, 0.0008993469999999983, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:51:52.112" endtime="20201030 15:51:52.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.119" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.118" endtime="20201030 15:51:52.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.121" level="INFO">VALUE: [0.0008991250000000006, 0.0008990140000000001, 0.0008991250000000006, 0.0008990700000000018, 0.0008992220000000016, 0.0008990559999999988, 0.0008989870000000004, 0.0008993469999999983, 0.000899208999999998, 0.0008992219999999981, 0.0008991810000000024, 0.0008993340000000016, 0.0008991810000000058, 0.000898999999999997, 0.0008992359999999977, 0.0008991529999999998, 0.0008993609999999944, 0.0008993469999999948, 0.000899082999999995, 0.0008992360000000046, 0.0008991949999999985, 0.0008991390000000002, 0.0008993610000000013, 0.0008992640000000038, 0.0008989589999999978, 0.000899291999999996, 0.0008990689999999954, 0.0008993610000000013, 0.0008992219999999981, 0.0008992080000000055, 0.0008992499999999973, 0.0008990700000000018, 0.0008988610000000008, 0.000899098000000001, 0.0008990840000000014, 0.0008991669999999993, 0.0008991529999999998, 0.0008992499999999973, 0.0008993200000000021, 0.0008993060000000025, 0.0008993470000000017, 0.0008992639999999968, 0.0008991250000000006, 0.0008991659999999929, 0.0008989450000000121, 0.0008986940000000054, 0.0008988620000000003, 0.0008987629999999969, 0.0008988749999999934, 0.000898777999999989]</msg>
<status status="PASS" starttime="20201030 15:51:52.120" endtime="20201030 15:51:52.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.115" endtime="20201030 15:51:52.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.127" endtime="20201030 15:51:52.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.126" endtime="20201030 15:51:52.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.125" endtime="20201030 15:51:52.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.704" endtime="20201030 15:51:52.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.704" endtime="20201030 15:51:52.148"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.156" endtime="20201030 15:51:52.216"></status>
</kw>
<msg timestamp="20201030 15:51:52.216" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.155" endtime="20201030 15:51:52.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.219" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.217" endtime="20201030 15:51:52.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.220" endtime="20201030 15:51:52.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.152" endtime="20201030 15:51:52.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.150" endtime="20201030 15:51:52.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.229" endtime="20201030 15:51:52.512"></status>
</kw>
<msg timestamp="20201030 15:51:52.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:52.227" endtime="20201030 15:51:52.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019816111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:52.516" endtime="20201030 15:51:52.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.524" endtime="20201030 15:51:52.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.225" endtime="20201030 15:51:52.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.223" endtime="20201030 15:51:52.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.530" level="INFO">${PHILIP_RES} = [{'diff': 0.0009396109999999999}, {'diff': 0.0009395549999999982}, {'diff': 0.0009395700000000007}, {'diff': 0.0009396529999999986}, {'diff': 0.0009396659999999987}, {'diff': 0.0009396109999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:51:52.527" endtime="20201030 15:51:52.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.535" level="INFO">${RESULT} = {'diff': [0.0009396109999999999, 0.0009395549999999982, 0.0009395700000000007, 0.0009396529999999986, 0.0009396659999999987, 0.0009396109999999999, 0.0009395979999999998, 0.0009395140000000024, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:51:52.531" endtime="20201030 15:51:52.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.539" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.538" endtime="20201030 15:51:52.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.542" level="INFO">VALUE: [0.0009396109999999999, 0.0009395549999999982, 0.0009395700000000007, 0.0009396529999999986, 0.0009396659999999987, 0.0009396109999999999, 0.0009395979999999998, 0.0009395140000000024, 0.0009395970000000003, 0.0009394590000000001, 0.0009394580000000007, 0.0009394859999999998, 0.0009393749999999958, 0.0009393609999999997, 0.0009395840000000003, 0.0009396109999999999, 0.0009397360000000035, 0.0009394580000000041, 0.0009396529999999986, 0.0009401389999999996, 0.0009398619999999996, 0.0009397220000000039, 0.0009400970000000008, 0.0009399439999999981, 0.0009398480000000001, 0.000940042000000002, 0.0009398889999999993, 0.0009398189999999945, 0.0009400140000000029, 0.0009398470000000006, 0.000939915999999999, 0.0009400280000000025, 0.0009400410000000026, 0.0009398470000000006, 0.0009399589999999972, 0.0009399299999999985, 0.000939833000000001, 0.0009398340000000005, 0.0009399589999999972, 0.0009398610000000002, 0.0009400970000000008, 0.0009400970000000008, 0.0009401110000000004, 0.0009397640000000027, 0.0009399580000000046, 0.000939931000000005, 0.0009400270000000099, 0.000939833000000001, 0.000939833000000001, 0.0009400690000000017]</msg>
<status status="PASS" starttime="20201030 15:51:52.540" endtime="20201030 15:51:52.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.536" endtime="20201030 15:51:52.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.547" endtime="20201030 15:51:52.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.545" endtime="20201030 15:51:52.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.544" endtime="20201030 15:51:52.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.149" endtime="20201030 15:51:52.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.148" endtime="20201030 15:51:52.567"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.576" endtime="20201030 15:51:52.642"></status>
</kw>
<msg timestamp="20201030 15:51:52.643" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.574" endtime="20201030 15:51:52.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.648" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.645" endtime="20201030 15:51:52.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.650" endtime="20201030 15:51:52.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.572" endtime="20201030 15:51:52.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.570" endtime="20201030 15:51:52.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.669" endtime="20201030 15:51:52.963"></status>
</kw>
<msg timestamp="20201030 15:51:52.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.666" endtime="20201030 15:51:52.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022683556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.967" endtime="20201030 15:51:52.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.975" endtime="20201030 15:51:52.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.661" endtime="20201030 15:51:52.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.657" endtime="20201030 15:51:52.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.982" level="INFO">${PHILIP_RES} = [{'diff': 0.0009808749999999991}, {'diff': 0.0009807779999999981}, {'diff': 0.0009809450000000004}, {'diff': 0.0009809580000000005}, {'diff': 0.0009809300000000014}, {'diff': 0.0009809019999999988}, {...</msg>
<status status="PASS" starttime="20201030 15:51:52.979" endtime="20201030 15:51:52.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.986" level="INFO">${RESULT} = {'diff': [0.0009808749999999991, 0.0009807779999999981, 0.0009809450000000004, 0.0009809580000000005, 0.0009809300000000014, 0.0009809019999999988, 0.0009808479999999994, 0.0009807920000000012, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:51:52.983" endtime="20201030 15:51:52.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.990" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.989" endtime="20201030 15:51:52.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.993" level="INFO">VALUE: [0.0009808749999999991, 0.0009807779999999981, 0.0009809450000000004, 0.0009809580000000005, 0.0009809300000000014, 0.0009809019999999988, 0.0009808479999999994, 0.0009807920000000012, 0.0009809300000000014, 0.0009808330000000004, 0.000980945000000004, 0.0009808609999999995, 0.0009809859999999962, 0.0009809719999999966, 0.0009809720000000036, 0.0009807500000000025, 0.000981056000000001, 0.0009810549999999946, 0.0009810140000000023, 0.0009808609999999995, 0.0009809029999999982, 0.0009808479999999994, 0.0009809029999999982, 0.0009810140000000023, 0.0009809439999999975, 0.000981027999999995, 0.0009809719999999966, 0.0009811249999999994, 0.0009808889999999987, 0.0009810269999999954, 0.0009810000000000027, 0.0009809029999999982, 0.000981069000000001, 0.000981056000000001, 0.000980957999999997, 0.0009808609999999995, 0.0009808889999999987, 0.0009810280000000018, 0.0009810700000000006, 0.000980875000000006, 0.000980958000000004, 0.000980847000000007, 0.000981041000000002, 0.0009810000000000096, 0.0009810140000000023, 0.0009809870000000026, 0.000981041000000002, 0.0009810970000000002, 0.000980972999999996, 0.0009810979999999997]</msg>
<status status="PASS" starttime="20201030 15:51:52.991" endtime="20201030 15:51:52.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.987" endtime="20201030 15:51:52.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.997" endtime="20201030 15:51:53.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.996" endtime="20201030 15:51:53.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.995" endtime="20201030 15:51:53.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.568" endtime="20201030 15:51:53.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.568" endtime="20201030 15:51:53.018"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.027" endtime="20201030 15:51:53.095"></status>
</kw>
<msg timestamp="20201030 15:51:53.096" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.025" endtime="20201030 15:51:53.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.098" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.097" endtime="20201030 15:51:53.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.099" endtime="20201030 15:51:53.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.023" endtime="20201030 15:51:53.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.021" endtime="20201030 15:51:53.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.108" endtime="20201030 15:51:53.394"></status>
</kw>
<msg timestamp="20201030 15:51:53.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023964542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.107" endtime="20201030 15:51:53.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023964542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.398" endtime="20201030 15:51:53.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.406" endtime="20201030 15:51:53.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.104" endtime="20201030 15:51:53.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.102" endtime="20201030 15:51:53.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.414" level="INFO">${PHILIP_RES} = [{'diff': 0.0010231389999999993}, {'diff': 0.0010232919999999986}, {'diff': 0.0010231249999999997}, {'diff': 0.0010233610000000004}, {'diff': 0.0010234169999999987}, {'diff': 0.0010232639999999994}, {...</msg>
<status status="PASS" starttime="20201030 15:51:53.409" endtime="20201030 15:51:53.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.422" level="INFO">${RESULT} = {'diff': [0.0010231389999999993, 0.0010232919999999986, 0.0010231249999999997, 0.0010233610000000004, 0.0010234169999999987, 0.0010232639999999994, 0.0010232369999999998, 0.0010233610000000004, 0.0010...</msg>
<status status="PASS" starttime="20201030 15:51:53.416" endtime="20201030 15:51:53.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.431" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.429" endtime="20201030 15:51:53.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.436" level="INFO">VALUE: [0.0010231389999999993, 0.0010232919999999986, 0.0010231249999999997, 0.0010233610000000004, 0.0010234169999999987, 0.0010232639999999994, 0.0010232369999999998, 0.0010233610000000004, 0.001023263999999996, 0.0010232360000000038, 0.0010232360000000038, 0.0010232080000000046, 0.001023209000000004, 0.001023264000000003, 0.0010237359999999973, 0.0010238190000000022, 0.0010235699999999945, 0.001023597000000001, 0.001023679999999999, 0.0010237639999999965, 0.0010236389999999998, 0.0010236110000000007, 0.001023597000000001, 0.0010236110000000007, 0.001023679999999999, 0.0010235560000000019, 0.0010236389999999998, 0.001023762999999997, 0.001023861000000001, 0.001023777999999996, 0.001023694999999998, 0.001023597000000001, 0.001023584000000001, 0.0010238340000000012, 0.0010236250000000002, 0.0010237639999999965, 0.0010237359999999973, 0.0010236940000000055, 0.0010236389999999929, 0.001023679999999999, 0.0010236940000000055, 0.0010237219999999908, 0.0010237359999999973, 0.0010237500000000038, 0.001023708000000012, 0.0010238190000000091, 0.0010237500000000038, 0.0010235280000000097, 0.0010237359999999973, 0.0010239860000000045]</msg>
<status status="PASS" starttime="20201030 15:51:53.434" endtime="20201030 15:51:53.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.424" endtime="20201030 15:51:53.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.448" endtime="20201030 15:51:53.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.445" endtime="20201030 15:51:53.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.443" endtime="20201030 15:51:53.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.019" endtime="20201030 15:51:53.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.019" endtime="20201030 15:51:53.473"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.490" endtime="20201030 15:51:53.558"></status>
</kw>
<msg timestamp="20201030 15:51:53.558" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.487" endtime="20201030 15:51:53.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.561" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.560" endtime="20201030 15:51:53.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.562" endtime="20201030 15:51:53.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.482" endtime="20201030 15:51:53.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.478" endtime="20201030 15:51:53.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.571" endtime="20201030 15:51:53.857"></status>
</kw>
<msg timestamp="20201030 15:51:53.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033518125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.569" endtime="20201030 15:51:53.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033518125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034584861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.861" endtime="20201030 15:51:53.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.869" endtime="20201030 15:51:53.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.567" endtime="20201030 15:51:53.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.565" endtime="20201030 15:51:53.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.876" level="INFO">${PHILIP_RES} = [{'diff': 0.0010667359999999987}, {'diff': 0.0010668469999999958}, {'diff': 0.0010668750000000018}, {'diff': 0.0010668750000000018}, {'diff': 0.0010670279999999976}, {'diff': 0.0010669170000000006}, {...</msg>
<status status="PASS" starttime="20201030 15:51:53.873" endtime="20201030 15:51:53.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.881" level="INFO">${RESULT} = {'diff': [0.0010667359999999987, 0.0010668469999999958, 0.0010668750000000018, 0.0010668750000000018, 0.0010670279999999976, 0.0010669170000000006, 0.0010668609999999953, 0.0010669719999999994, 0.0010...</msg>
<status status="PASS" starttime="20201030 15:51:53.877" endtime="20201030 15:51:53.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.885" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.884" endtime="20201030 15:51:53.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.887" level="INFO">VALUE: [0.0010667359999999987, 0.0010668469999999958, 0.0010668750000000018, 0.0010668750000000018, 0.0010670279999999976, 0.0010669170000000006, 0.0010668609999999953, 0.0010669719999999994, 0.0010668890000000014, 0.0010669999999999985, 0.0010671379999999953, 0.0010669999999999985, 0.0010670549999999973, 0.0010670699999999964, 0.0010668190000000036, 0.001067096999999996, 0.0010669999999999985, 0.0010669719999999994, 0.0010670279999999976, 0.0010671940000000005, 0.0010670829999999965, 0.0010670279999999976, 0.001066985999999999, 0.0010669869999999984, 0.0010669729999999988, 0.0010669579999999929, 0.0010670410000000047, 0.0010668469999999958, 0.0010669299999999937, 0.0010669440000000002, 0.0010669860000000059, 0.0010670279999999976, 0.0010670980000000024, 0.0010671109999999956, 0.0010671530000000012, 0.0010670549999999973, 0.0010671520000000018, 0.0010670279999999976, 0.001066902999999994, 0.0010668480000000091, 0.001067180000000001, 0.0010670559999999968, 0.0010670419999999903, 0.0010668610000000023, 0.0010669729999999988, 0.0010669999999999985, 0.0010669719999999994, 0.0010669449999999997, 0.001066985999999992, 0.0010669999999999985]</msg>
<status status="PASS" starttime="20201030 15:51:53.886" endtime="20201030 15:51:53.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.882" endtime="20201030 15:51:53.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.892" endtime="20201030 15:51:53.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.891" endtime="20201030 15:51:53.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.890" endtime="20201030 15:51:53.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.475" endtime="20201030 15:51:53.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.474" endtime="20201030 15:51:53.913"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.922" endtime="20201030 15:51:53.995"></status>
</kw>
<msg timestamp="20201030 15:51:53.995" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.920" endtime="20201030 15:51:53.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.997" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.996" endtime="20201030 15:51:53.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.998" endtime="20201030 15:51:54.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.917" endtime="20201030 15:51:54.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.916" endtime="20201030 15:51:54.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.008" endtime="20201030 15:51:54.313"></status>
</kw>
<msg timestamp="20201030 15:51:54.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.006" endtime="20201030 15:51:54.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.322" endtime="20201030 15:51:54.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.330" endtime="20201030 15:51:54.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.003" endtime="20201030 15:51:54.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.002" endtime="20201030 15:51:54.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.337" level="INFO">${PHILIP_RES} = [{'diff': 0.001110639}, {'diff': 0.0011106939999999989}, {'diff': 0.0011108750000000008}, {'diff': 0.0011109719999999983}, {'diff': 0.001110820000000002}, {'diff': 0.0011105830000000018}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:54.334" endtime="20201030 15:51:54.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.341" level="INFO">${RESULT} = {'diff': [0.001110639, 0.0011106939999999989, 0.0011108750000000008, 0.0011109719999999983, 0.001110820000000002, 0.0011105830000000018, 0.001110833999999998, 0.0011110279999999965, 0.0011108749999999...</msg>
<status status="PASS" starttime="20201030 15:51:54.338" endtime="20201030 15:51:54.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.345" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.344" endtime="20201030 15:51:54.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.347" level="INFO">VALUE: [0.001110639, 0.0011106939999999989, 0.0011108750000000008, 0.0011109719999999983, 0.001110820000000002, 0.0011105830000000018, 0.001110833999999998, 0.0011110279999999965, 0.0011108749999999973, 0.001110818999999999, 0.0011108609999999977, 0.0011107500000000006, 0.0011110000000000009, 0.0011108609999999977, 0.0011107220000000015, 0.0011106670000000027, 0.0011107220000000015, 0.0011107919999999993, 0.0011108749999999973, 0.0011108049999999994, 0.0011108469999999981, 0.0011108329999999986, 0.0011110140000000004, 0.0011108889999999969, 0.0011105279999999995, 0.001110901999999997, 0.001110945000000002, 0.0011107640000000002, 0.0011106810000000022, 0.0011107640000000002, 0.0011108469999999981, 0.0011108619999999972, 0.0011109029999999964, 0.0011109030000000034, 0.0011108610000000047, 0.0011108190000000129, 0.0011105829999999983, 0.0011107909999999999, 0.0011109440000000026, 0.0011108199999999985, 0.0011111250000000045, 0.0011111949999999954, 0.0011112780000000072, 0.0011111799999999894, 0.0011112630000000012, 0.0011110549999999997, 0.0011113469999999986, 0.001111430999999996, 0.001111221999999995, 0.0011111810000000027]</msg>
<status status="PASS" starttime="20201030 15:51:54.346" endtime="20201030 15:51:54.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.342" endtime="20201030 15:51:54.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.352" endtime="20201030 15:51:54.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.351" endtime="20201030 15:51:54.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.350" endtime="20201030 15:51:54.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.914" endtime="20201030 15:51:54.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.914" endtime="20201030 15:51:54.373"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.382" endtime="20201030 15:51:54.452"></status>
</kw>
<msg timestamp="20201030 15:51:54.453" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.380" endtime="20201030 15:51:54.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.455" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.454" endtime="20201030 15:51:54.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.456" endtime="20201030 15:51:54.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.377" endtime="20201030 15:51:54.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.375" endtime="20201030 15:51:54.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.465" endtime="20201030 15:51:54.753"></status>
</kw>
<msg timestamp="20201030 15:51:54.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.464" endtime="20201030 15:51:54.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.757" endtime="20201030 15:51:54.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.765" endtime="20201030 15:51:54.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.461" endtime="20201030 15:51:54.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.459" endtime="20201030 15:51:54.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.772" level="INFO">${PHILIP_RES} = [{'diff': 0.0011557090000000013}, {'diff': 0.0011556670000000026}, {'diff': 0.001155527}, {'diff': 0.0011557079999999983}, {'diff': 0.001155749999999997}, {'diff': 0.0011555840000000012}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:54.769" endtime="20201030 15:51:54.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.776" level="INFO">${RESULT} = {'diff': [0.0011557090000000013, 0.0011556670000000026, 0.001155527, 0.0011557079999999983, 0.001155749999999997, 0.0011555840000000012, 0.001155554999999999, 0.0011557079999999983, 0.0011557360000000...</msg>
<status status="PASS" starttime="20201030 15:51:54.773" endtime="20201030 15:51:54.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.780" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.779" endtime="20201030 15:51:54.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.783" level="INFO">VALUE: [0.0011557090000000013, 0.0011556670000000026, 0.001155527, 0.0011557079999999983, 0.001155749999999997, 0.0011555840000000012, 0.001155554999999999, 0.0011557079999999983, 0.001155736000000001, 0.0011557630000000006, 0.0011556800000000061, 0.0011555690000000021, 0.0011555970000000013, 0.0011556529999999995, 0.001155721999999998, 0.0011553329999999945, 0.0011556669999999991, 0.0011554719999999977, 0.0011555830000000017, 0.0011555830000000017, 0.0011556659999999996, 0.001155444999999998, 0.0011555000000000037, 0.0011555840000000012, 0.0011556669999999991, 0.0011553889999999997, 0.0011555420000000025, 0.001155458000000005, 0.0011554019999999998, 0.0011556110000000008, 0.0011556799999999992, 0.0011555830000000017, 0.0011556669999999991, 0.0011555280000000029, 0.0011555700000000016, 0.001155527999999996, 0.0011557360000000044, 0.0011556249999999935, 0.001155444999999991, 0.0011555420000000094, 0.0011557360000000044, 0.0011557920000000027, 0.001155639, 0.0011559579999999986, 0.0011555979999999938, 0.0011558470000000015, 0.0011557080000000053, 0.0011557359999999905, 0.0011556529999999926, 0.0011557910000000032]</msg>
<status status="PASS" starttime="20201030 15:51:54.781" endtime="20201030 15:51:54.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.777" endtime="20201030 15:51:54.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.791" endtime="20201030 15:51:54.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.789" endtime="20201030 15:51:54.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.788" endtime="20201030 15:51:54.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.374" endtime="20201030 15:51:54.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.373" endtime="20201030 15:51:54.812"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.821" endtime="20201030 15:51:54.904"></status>
</kw>
<msg timestamp="20201030 15:51:54.904" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.819" endtime="20201030 15:51:54.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.906" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.905" endtime="20201030 15:51:54.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.907" endtime="20201030 15:51:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.816" endtime="20201030 15:51:54.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.814" endtime="20201030 15:51:54.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.917" endtime="20201030 15:51:55.217"></status>
</kw>
<msg timestamp="20201030 15:51:55.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024313139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.915" endtime="20201030 15:51:55.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023111778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024313139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.221" endtime="20201030 15:51:55.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.229" endtime="20201030 15:51:55.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.912" endtime="20201030 15:51:55.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.911" endtime="20201030 15:51:55.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.236" level="INFO">${PHILIP_RES} = [{'diff': 0.0012013610000000015}, {'diff': 0.001201457999999999}, {'diff': 0.001201444000000003}, {'diff': 0.0012013879999999977}, {'diff': 0.001201457999999999}, {'diff': 0.0012013610000000015}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:55.233" endtime="20201030 15:51:55.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.241" level="INFO">${RESULT} = {'diff': [0.0012013610000000015, 0.001201457999999999, 0.001201444000000003, 0.0012013879999999977, 0.001201457999999999, 0.0012013610000000015, 0.0012014730000000015, 0.0012014999999999942, 0.0012014...</msg>
<status status="PASS" starttime="20201030 15:51:55.237" endtime="20201030 15:51:55.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.245" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.244" endtime="20201030 15:51:55.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.247" level="INFO">VALUE: [0.0012013610000000015, 0.001201457999999999, 0.001201444000000003, 0.0012013879999999977, 0.001201457999999999, 0.0012013610000000015, 0.0012014730000000015, 0.0012014999999999942, 0.001201472000000002, 0.0012015559999999995, 0.0012014030000000037, 0.001201444000000003, 0.001201471999999995, 0.0012014170000000032, 0.0012014309999999959, 0.0012012919999999996, 0.0012012640000000005, 0.001201167000000003, 0.0012013049999999997, 0.0012013470000000054, 0.0012011810000000026, 0.001201444000000003, 0.0012015140000000007, 0.0012013889999999972, 0.0012017080000000027, 0.0012015000000000012, 0.0012014309999999959, 0.0012014869999999941, 0.001201487000000001, 0.001201472000000002, 0.0012014860000000016, 0.0012015969999999987, 0.0012014169999999963, 0.0012015419999999999, 0.0012014580000000025, 0.0012016390000000043, 0.0012014169999999963, 0.001201458999999988, 0.0012016249999999978, 0.0012015419999999999, 0.0012013190000000062, 0.001201250000000001, 0.0012014030000000037, 0.0012017919999999932, 0.0012019030000000042, 0.0012019999999999947, 0.0012018889999999977, 0.0012013189999999924, 0.0012014729999999946, 0.0012014169999999963]</msg>
<status status="PASS" starttime="20201030 15:51:55.246" endtime="20201030 15:51:55.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.242" endtime="20201030 15:51:55.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.252" endtime="20201030 15:51:55.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.251" endtime="20201030 15:51:55.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.250" endtime="20201030 15:51:55.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.813" endtime="20201030 15:51:55.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.812" endtime="20201030 15:51:55.273"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.282" endtime="20201030 15:51:55.355"></status>
</kw>
<msg timestamp="20201030 15:51:55.356" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.280" endtime="20201030 15:51:55.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.358" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.357" endtime="20201030 15:51:55.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.359" endtime="20201030 15:51:55.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.277" endtime="20201030 15:51:55.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.276" endtime="20201030 15:51:55.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.368" endtime="20201030 15:51:55.656"></status>
</kw>
<msg timestamp="20201030 15:51:55.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018786, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:55.367" endtime="20201030 15:51:55.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018786, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:55.660" endtime="20201030 15:51:55.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.668" endtime="20201030 15:51:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.364" endtime="20201030 15:51:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.363" endtime="20201030 15:51:55.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.675" level="INFO">${PHILIP_RES} = [{'diff': 0.0012480279999999982}, {'diff': 0.0012482359999999998}, {'diff': 0.0012481109999999997}, {'diff': 0.001248263999999999}, {'diff': 0.001248084}, {'diff': 0.0012484300000000018}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:55.671" endtime="20201030 15:51:55.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.679" level="INFO">${RESULT} = {'diff': [0.0012480279999999982, 0.0012482359999999998, 0.0012481109999999997, 0.001248263999999999, 0.001248084, 0.0012484300000000018, 0.0012482229999999997, 0.0012483189999999977, 0.001248624999999...</msg>
<status status="PASS" starttime="20201030 15:51:55.676" endtime="20201030 15:51:55.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.683" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.682" endtime="20201030 15:51:55.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.685" level="INFO">VALUE: [0.0012480279999999982, 0.0012482359999999998, 0.0012481109999999997, 0.001248263999999999, 0.001248084, 0.0012484300000000018, 0.0012482229999999997, 0.0012483189999999977, 0.0012486249999999997, 0.0012489589999999974, 0.001248777999999999, 0.0012486810000000015, 0.001248568999999998, 0.0012486520000000029, 0.0012487360000000003, 0.0012486530000000023, 0.0012486110000000036, 0.0012487090000000006, 0.0012487919999999986, 0.0012486940000000016, 0.001248679999999995, 0.0012485419999999983, 0.0012480419999999978, 0.0012480840000000035, 0.0012481670000000014, 0.0012480139999999987, 0.0012479589999999999, 0.0012480269999999988, 0.001248263999999999, 0.001248263999999999, 0.0012481110000000031, 0.0012480279999999982, 0.001248263999999999, 0.0012484439999999944, 0.001248263999999999, 0.001248098000000003, 0.0012481800000000015, 0.0012481939999999941, 0.0012482229999999928, 0.001248263999999999, 0.001248194000000008, 0.0012887909999999975, 0.0012480970000000036, 0.0012481530000000018, 0.0012482629999999995, 0.001248291999999998, 0.0012482359999999998, 0.0012483610000000034, 0.0012482359999999998, 0.0012482080000000007]</msg>
<status status="PASS" starttime="20201030 15:51:55.684" endtime="20201030 15:51:55.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.679" endtime="20201030 15:51:55.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.690" endtime="20201030 15:51:55.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.689" endtime="20201030 15:51:55.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.688" endtime="20201030 15:51:55.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.274" endtime="20201030 15:51:55.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.274" endtime="20201030 15:51:55.711"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.720" endtime="20201030 15:51:55.803"></status>
</kw>
<msg timestamp="20201030 15:51:55.804" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.718" endtime="20201030 15:51:55.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.806" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.805" endtime="20201030 15:51:55.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.807" endtime="20201030 15:51:55.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.715" endtime="20201030 15:51:55.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.714" endtime="20201030 15:51:55.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.816" endtime="20201030 15:51:56.116"></status>
</kw>
<msg timestamp="20201030 15:51:56.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022891708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.815" endtime="20201030 15:51:56.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022891708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024187597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.120" endtime="20201030 15:51:56.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.128" endtime="20201030 15:51:56.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.812" endtime="20201030 15:51:56.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.810" endtime="20201030 15:51:56.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.134" level="INFO">${PHILIP_RES} = [{'diff': 0.0012958890000000015}, {'diff': 0.0012959170000000006}, {'diff': 0.0012958610000000023}, {'diff': 0.0012959029999999976}, {'diff': 0.0012957920000000005}, {'diff': 0.0012958479999999988}, {...</msg>
<status status="PASS" starttime="20201030 15:51:56.131" endtime="20201030 15:51:56.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.138" level="INFO">${RESULT} = {'diff': [0.0012958890000000015, 0.0012959170000000006, 0.0012958610000000023, 0.0012959029999999976, 0.0012957920000000005, 0.0012958479999999988, 0.0012957920000000005, 0.0012958750000000019, 0.0012...</msg>
<status status="PASS" starttime="20201030 15:51:56.135" endtime="20201030 15:51:56.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.143" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.142" endtime="20201030 15:51:56.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.145" level="INFO">VALUE: [0.0012958890000000015, 0.0012959170000000006, 0.0012958610000000023, 0.0012959029999999976, 0.0012957920000000005, 0.0012958479999999988, 0.0012957920000000005, 0.0012958750000000019, 0.0012956660000000009, 0.001295805000000004, 0.001295708999999999, 0.0012958890000000015, 0.0012964580000000003, 0.0012961390000000017, 0.001296290999999998, 0.001296290999999998, 0.0012961520000000018, 0.0012962640000000053, 0.001296291000000005, 0.001296611000000003, 0.0012963339999999962, 0.0012962089999999996, 0.0012963329999999967, 0.0012963339999999962, 0.0012960550000000043, 0.0012963470000000032, 0.0012964450000000002, 0.001296665999999995, 0.001296195, 0.001296388999999995, 0.0012964450000000072, 0.001296500000000006, 0.0012961390000000017, 0.0012962499999999988, 0.0012962079999999931, 0.0012961809999999935, 0.0012961390000000017, 0.0012960419999999973, 0.0012963470000000032, 0.0012962079999999931, 0.0012962769999999985, 0.0012962219999999997, 0.0012960550000000043, 0.0012959999999999916, 0.0012961529999999943, 0.0012959719999999925, 0.0012962229999999991, 0.0012962920000000044, 0.0012961659999999875, 0.0012963470000000032]</msg>
<status status="PASS" starttime="20201030 15:51:56.144" endtime="20201030 15:51:56.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.139" endtime="20201030 15:51:56.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.151" endtime="20201030 15:51:56.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.149" endtime="20201030 15:51:56.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.148" endtime="20201030 15:51:56.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.712" endtime="20201030 15:51:56.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.712" endtime="20201030 15:51:56.172"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.180" endtime="20201030 15:51:56.260"></status>
</kw>
<msg timestamp="20201030 15:51:56.260" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.178" endtime="20201030 15:51:56.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.263" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.261" endtime="20201030 15:51:56.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.264" endtime="20201030 15:51:56.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.176" endtime="20201030 15:51:56.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.174" endtime="20201030 15:51:56.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.273" endtime="20201030 15:51:56.559"></status>
</kw>
<msg timestamp="20201030 15:51:56.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.271" endtime="20201030 15:51:56.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.563" endtime="20201030 15:51:56.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.571" endtime="20201030 15:51:56.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.269" endtime="20201030 15:51:56.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.267" endtime="20201030 15:51:56.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.578" level="INFO">${PHILIP_RES} = [{'diff': 0.001345111000000003}, {'diff': 0.0013449019999999985}, {'diff': 0.0013448479999999992}, {'diff': 0.0013448750000000023}, {'diff': 0.0013449719999999998}, {'diff': 0.0013450409999999982}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:56.575" endtime="20201030 15:51:56.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.583" level="INFO">${RESULT} = {'diff': [0.001345111000000003, 0.0013449019999999985, 0.0013448479999999992, 0.0013448750000000023, 0.0013449719999999998, 0.0013450409999999982, 0.0013450830000000004, 0.0013450550000000012, 0.00134...</msg>
<status status="PASS" starttime="20201030 15:51:56.579" endtime="20201030 15:51:56.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.587" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.586" endtime="20201030 15:51:56.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.589" level="INFO">VALUE: [0.001345111000000003, 0.0013449019999999985, 0.0013448479999999992, 0.0013448750000000023, 0.0013449719999999998, 0.0013450409999999982, 0.0013450830000000004, 0.0013450550000000012, 0.0013447359999999957, 0.0013449440000000007, 0.0013447639999999983, 0.0013450279999999981, 0.001344902000000002, 0.001344708, 0.0013448750000000023, 0.0013449440000000007, 0.0013447919999999974, 0.0013447919999999974, 0.001344806000000004, 0.001344722999999999, 0.0013450830000000039, 0.0013449450000000002, 0.001344790999999998, 0.0013447629999999988, 0.0013450140000000055, 0.0013447500000000057, 0.001344917000000001, 0.0013446940000000004, 0.0013447500000000057, 0.0013450279999999981, 0.0013450969999999965, 0.0013450839999999964, 0.0013447359999999992, 0.001344917000000001, 0.001344694999999993, 0.001344917000000001, 0.0013445829999999964, 0.0013448890000000019, 0.0013448469999999962, 0.0013442499999999913, 0.001344514000000005, 0.0013444869999999914, 0.0013442359999999987, 0.0013443059999999896, 0.0013443329999999892, 0.0013443330000000031, 0.0013441940000000069, 0.0013443890000000014, 0.0013443189999999966, 0.001344291999999997]</msg>
<status status="PASS" starttime="20201030 15:51:56.588" endtime="20201030 15:51:56.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.583" endtime="20201030 15:51:56.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.594" endtime="20201030 15:51:56.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.593" endtime="20201030 15:51:56.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.592" endtime="20201030 15:51:56.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.172" endtime="20201030 15:51:56.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.172" endtime="20201030 15:51:56.615"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.623" endtime="20201030 15:51:56.709"></status>
</kw>
<msg timestamp="20201030 15:51:56.710" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.622" endtime="20201030 15:51:56.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.715" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.712" endtime="20201030 15:51:56.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.717" endtime="20201030 15:51:56.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.619" endtime="20201030 15:51:56.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.617" endtime="20201030 15:51:56.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.736" endtime="20201030 15:51:57.040"></status>
</kw>
<msg timestamp="20201030 15:51:57.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018280153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.733" endtime="20201030 15:51:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018280153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.044" endtime="20201030 15:51:57.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.052" endtime="20201030 15:51:57.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.728" endtime="20201030 15:51:57.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.724" endtime="20201030 15:51:57.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.058" level="INFO">${PHILIP_RES} = [{'diff': 0.0013940409999999986}, {'diff': 0.0013940409999999986}, {'diff': 0.001394013999999999}, {'diff': 0.0013938879999999994}, {'diff': 0.0013941249999999995}, {'diff': 0.0013938200000000005}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:57.055" endtime="20201030 15:51:57.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.062" level="INFO">${RESULT} = {'diff': [0.0013940409999999986, 0.0013940409999999986, 0.001394013999999999, 0.0013938879999999994, 0.0013941249999999995, 0.0013938200000000005, 0.0013941669999999982, 0.0013942920000000018, 0.00139...</msg>
<status status="PASS" starttime="20201030 15:51:57.059" endtime="20201030 15:51:57.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.067" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.066" endtime="20201030 15:51:57.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.069" level="INFO">VALUE: [0.0013940409999999986, 0.0013940409999999986, 0.001394013999999999, 0.0013938879999999994, 0.0013941249999999995, 0.0013938200000000005, 0.0013941669999999982, 0.0013942920000000018, 0.0013940560000000046, 0.0013941530000000021, 0.001393722, 0.0013934859999999993, 0.001393709, 0.0013936530000000016, 0.0013936670000000012, 0.0013936249999999956, 0.0013935419999999976, 0.0013935419999999976, 0.0013935419999999976, 0.0013935549999999977, 0.0013935830000000038, 0.0013935419999999976, 0.0013936940000000009, 0.001393639000000002, 0.0013936530000000016, 0.0013937639999999987, 0.001393417000000001, 0.0013933049999999975, 0.0013935139999999985, 0.0013934580000000002, 0.0013935419999999976, 0.0013935000000000058, 0.0013935550000000047, 0.0013934580000000002, 0.0013932779999999978, 0.0013933470000000031, 0.001393527999999991, 0.0013937360000000065, 0.0013933049999999975, 0.0013934720000000067, 0.0013935139999999985, 0.0013935689999999973, 0.0013935970000000103, 0.001393611000000003, 0.0013933609999999957, 0.001393611000000003, 0.0013934030000000014, 0.0013934859999999993, 0.0013934589999999997, 0.00139358299999999]</msg>
<status status="PASS" starttime="20201030 15:51:57.068" endtime="20201030 15:51:57.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.063" endtime="20201030 15:51:57.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.080" endtime="20201030 15:51:57.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.078" endtime="20201030 15:51:57.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.077" endtime="20201030 15:51:57.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.616" endtime="20201030 15:51:57.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.615" endtime="20201030 15:51:57.101"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.109" endtime="20201030 15:51:57.196"></status>
</kw>
<msg timestamp="20201030 15:51:57.196" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.108" endtime="20201030 15:51:57.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.198" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.197" endtime="20201030 15:51:57.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.199" endtime="20201030 15:51:57.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.105" endtime="20201030 15:51:57.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.103" endtime="20201030 15:51:57.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.208" endtime="20201030 15:51:57.495"></status>
</kw>
<msg timestamp="20201030 15:51:57.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019930569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021375028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.207" endtime="20201030 15:51:57.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019930569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021375028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.499" endtime="20201030 15:51:57.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.507" endtime="20201030 15:51:57.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.204" endtime="20201030 15:51:57.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.203" endtime="20201030 15:51:57.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.513" level="INFO">${PHILIP_RES} = [{'diff': 0.001444459000000002}, {'diff': 0.001444319999999999}, {'diff': 0.0014441939999999993}, {'diff': 0.001444417}, {'diff': 0.0014444030000000004}, {'diff': 0.001444332999999999}, {'diff': 0.001...</msg>
<status status="PASS" starttime="20201030 15:51:57.510" endtime="20201030 15:51:57.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.517" level="INFO">${RESULT} = {'diff': [0.001444459000000002, 0.001444319999999999, 0.0014441939999999993, 0.001444417, 0.0014444030000000004, 0.001444332999999999, 0.0014447220000000024, 0.0014442780000000002, 0.00144438899999999...</msg>
<status status="PASS" starttime="20201030 15:51:57.514" endtime="20201030 15:51:57.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.522" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.521" endtime="20201030 15:51:57.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.524" level="INFO">VALUE: [0.001444459000000002, 0.001444319999999999, 0.0014441939999999993, 0.001444417, 0.0014444030000000004, 0.001444332999999999, 0.0014447220000000024, 0.0014442780000000002, 0.0014443889999999973, 0.0014446810000000032, 0.001444514000000001, 0.001444542, 0.001444514000000001, 0.0014445689999999997, 0.0014443890000000043, 0.0014444299999999966, 0.001444542, 0.0014443749999999977, 0.0014444580000000026, 0.0014444449999999956, 0.0014443060000000063, 0.0014443189999999995, 0.001444416000000004, 0.0014444860000000018, 0.0014445699999999992, 0.0014446670000000036, 0.0014445280000000005, 0.001444415999999997, 0.0014444439999999892, 0.0014446389999999976, 0.0014444859999999948, 0.0014442779999999933, 0.0014444720000000022, 0.0014444019999999974, 0.0014440969999999914, 0.0014445409999999936, 0.0014442910000000003, 0.0014444860000000087, 0.001444444000000003, 0.0014442640000000007, 0.00144393000000001, 0.0014437640000000002, 0.001443818999999999, 0.001444028, 0.0014436669999999957, 0.0014435140000000068, 0.0014436389999999966, 0.0014437640000000002, 0.0014436669999999957, 0.0014437359999999871]</msg>
<status status="PASS" starttime="20201030 15:51:57.523" endtime="20201030 15:51:57.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.518" endtime="20201030 15:51:57.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.530" endtime="20201030 15:51:57.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.528" endtime="20201030 15:51:57.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.527" endtime="20201030 15:51:57.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.102" endtime="20201030 15:51:57.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.101" endtime="20201030 15:51:57.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.397" endtime="20201030 15:51:57.551"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:35.153" endtime="20201030 15:51:57.551" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:14.192" endtime="20201030 15:51:57.560"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.686" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:57.694" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:58.882" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:57.684" endtime="20201030 15:51:58.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.885" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:58.883" endtime="20201030 15:51:58.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.683" endtime="20201030 15:51:58.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.888" endtime="20201030 15:51:59.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.886" endtime="20201030 15:51:59.090"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.102" endtime="20201030 15:51:59.123"></status>
</kw>
<msg timestamp="20201030 15:51:59.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.101" endtime="20201030 15:51:59.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.126" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.124" endtime="20201030 15:51:59.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.129" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:59.127" endtime="20201030 15:51:59.129"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:59.098" endtime="20201030 15:51:59.130"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:59.096" endtime="20201030 15:51:59.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.095" endtime="20201030 15:51:59.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:59.135" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:59.134" endtime="20201030 15:51:59.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.132" endtime="20201030 15:51:59.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.094" endtime="20201030 15:51:59.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.093" endtime="20201030 15:51:59.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.138" endtime="20201030 15:51:59.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.092" endtime="20201030 15:51:59.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.141" endtime="20201030 15:51:59.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.090" endtime="20201030 15:51:59.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.682" endtime="20201030 15:51:59.144"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.150" endtime="20201030 15:51:59.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.148" endtime="20201030 15:51:59.170"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.185" endtime="20201030 15:51:59.210"></status>
</kw>
<msg timestamp="20201030 15:51:59.211" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.182" endtime="20201030 15:51:59.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.213" endtime="20201030 15:51:59.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.223" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:59.219" endtime="20201030 15:51:59.224"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:59.179" endtime="20201030 15:51:59.225"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:59.176" endtime="20201030 15:51:59.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.175" endtime="20201030 15:51:59.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:59.235" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:59.234" endtime="20201030 15:51:59.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.229" endtime="20201030 15:51:59.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.174" endtime="20201030 15:51:59.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.174" endtime="20201030 15:51:59.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.239" endtime="20201030 15:51:59.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.172" endtime="20201030 15:51:59.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.170" endtime="20201030 15:51:59.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.147" endtime="20201030 15:51:59.245"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.268" endtime="20201030 15:51:59.290"></status>
</kw>
<msg timestamp="20201030 15:51:59.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.265" endtime="20201030 15:51:59.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.291" endtime="20201030 15:51:59.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.294" endtime="20201030 15:51:59.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.256" endtime="20201030 15:51:59.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.252" endtime="20201030 15:51:59.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.304" endtime="20201030 15:51:59.605"></status>
</kw>
<msg timestamp="20201030 15:51:59.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112196861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112202917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.302" endtime="20201030 15:51:59.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112196861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112202917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.610" endtime="20201030 15:51:59.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.618" endtime="20201030 15:51:59.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.299" endtime="20201030 15:51:59.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.297" endtime="20201030 15:51:59.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.625" level="INFO">${RESULT} = [{'diff': 6.05600000000428e-06}, {'diff': 6.069000000011315e-06}, {'diff': 6.05600000000428e-06}, {'diff': 6.083000000003946e-06}, {'diff': 6.083000000003946e-06}, {'diff': 6.055999999990402e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:59.621" endtime="20201030 15:51:59.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:59.629" level="INFO">${ACCURACY} = {'diff': [6.05600000000428e-06, 6.069000000011315e-06, 6.05600000000428e-06, 6.083000000003946e-06, 6.083000000003946e-06, 6.055999999990402e-06, 5.9589999999998255e-06, 6.02800000000514e-06, 6.068999...</msg>
<status status="PASS" starttime="20201030 15:51:59.626" endtime="20201030 15:51:59.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.634" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:51:59.633" endtime="20201030 15:51:59.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.636" level="INFO">VALUE: [6.05600000000428e-06, 6.069000000011315e-06, 6.05600000000428e-06, 6.083000000003946e-06, 6.083000000003946e-06, 6.055999999990402e-06, 5.9589999999998255e-06, 6.02800000000514e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.05600000000428e-06, 6.0550000000048065e-06, 6.042000000011649e-06, 6.0689999999974376e-06, 6.02800000000514e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.070000000010789e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 5.999999999992123e-06, 6.069000000011315e-06, 6.0689999999974376e-06, 6.05600000000428e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.05600000000428e-06, 6.027000000005667e-06, 6.040999999998298e-06, 6.0689999999974376e-06, 6.05600000000428e-06, 6.069999999996911e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.02800000000514e-06, 6.083000000003946e-06, 6.05600000000428e-06, 6.0550000000048065e-06, 6.054999999990929e-06, 6.02800000000514e-06, 6.11200000000256e-06, 6.040999999998298e-06, 6.027000000005667e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.054999999990929e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201030 15:51:59.635" endtime="20201030 15:51:59.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.630" endtime="20201030 15:51:59.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.641" endtime="20201030 15:51:59.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.639" endtime="20201030 15:51:59.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.638" endtime="20201030 15:51:59.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.248" endtime="20201030 15:51:59.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.247" endtime="20201030 15:51:59.662"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.670" endtime="20201030 15:51:59.688"></status>
</kw>
<msg timestamp="20201030 15:51:59.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.669" endtime="20201030 15:51:59.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.689" endtime="20201030 15:51:59.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.692" endtime="20201030 15:51:59.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.666" endtime="20201030 15:51:59.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.664" endtime="20201030 15:51:59.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.701" endtime="20201030 15:51:59.989"></status>
</kw>
<msg timestamp="20201030 15:51:59.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.699" endtime="20201030 15:51:59.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022757542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.994" endtime="20201030 15:52:00.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.012" endtime="20201030 15:52:00.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.697" endtime="20201030 15:52:00.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.695" endtime="20201030 15:52:00.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.026" level="INFO">${RESULT} = [{'diff': 6.055999999997341e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.027000000002197e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:00.019" endtime="20201030 15:52:00.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:00.039" level="INFO">${ACCURACY} = {'diff': [6.055999999997341e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.027000000002197e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.124...</msg>
<status status="PASS" starttime="20201030 15:52:00.028" endtime="20201030 15:52:00.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.053" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:00.050" endtime="20201030 15:52:00.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.062" level="INFO">VALUE: [6.055999999997341e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.027000000002197e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.097000000000047e-06, 5.999999999999062e-06, 6.069000000000907e-06, 5.9729999999993955e-06, 6.110999999999617e-06, 5.999999999999062e-06, 6.027000000002197e-06, 6.0689999999974376e-06, 6.124999999999187e-06, 6.054999999997868e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.014000000002101e-06, 6.014000000002101e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.110999999999617e-06, 6.026999999998728e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 6.042000000001241e-06, 5.958000000000352e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.040999999998298e-06]</msg>
<status status="PASS" starttime="20201030 15:52:00.057" endtime="20201030 15:52:00.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.042" endtime="20201030 15:52:00.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.083" endtime="20201030 15:52:00.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.070" endtime="20201030 15:52:00.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.067" endtime="20201030 15:52:00.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.663" endtime="20201030 15:52:00.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.662" endtime="20201030 15:52:00.106"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.114" endtime="20201030 15:52:00.130"></status>
</kw>
<msg timestamp="20201030 15:52:00.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.113" endtime="20201030 15:52:00.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.132" endtime="20201030 15:52:00.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.135" endtime="20201030 15:52:00.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.110" endtime="20201030 15:52:00.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.108" endtime="20201030 15:52:00.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.144" endtime="20201030 15:52:00.432"></status>
</kw>
<msg timestamp="20201030 15:52:00.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021048403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.142" endtime="20201030 15:52:00.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021048403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.436" endtime="20201030 15:52:00.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.445" endtime="20201030 15:52:00.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.140" endtime="20201030 15:52:00.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.138" endtime="20201030 15:52:00.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.451" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.000000000002531e-06}, {'diff': 6.040999999998298e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:00.448" endtime="20201030 15:52:00.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:00.456" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.000000000002531e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.041...</msg>
<status status="PASS" starttime="20201030 15:52:00.452" endtime="20201030 15:52:00.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.464" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:00.459" endtime="20201030 15:52:00.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.466" level="INFO">VALUE: [6.0839999999999506e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.000000000002531e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.0829999999970075e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.11199999999909e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.1389999999987566e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.125000000002656e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.069000000000907e-06, 5.958000000000352e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0139999999986316e-06, 6.0839999999999506e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.026999999998728e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.069999999996911e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201030 15:52:00.465" endtime="20201030 15:52:00.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.456" endtime="20201030 15:52:00.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.472" endtime="20201030 15:52:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.470" endtime="20201030 15:52:00.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.468" endtime="20201030 15:52:00.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.107" endtime="20201030 15:52:00.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.106" endtime="20201030 15:52:00.496"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.506" endtime="20201030 15:52:00.526"></status>
</kw>
<msg timestamp="20201030 15:52:00.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.504" endtime="20201030 15:52:00.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.528" endtime="20201030 15:52:00.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.530" endtime="20201030 15:52:00.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.501" endtime="20201030 15:52:00.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.499" endtime="20201030 15:52:00.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.540" endtime="20201030 15:52:00.835"></status>
</kw>
<msg timestamp="20201030 15:52:00.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024123903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.538" endtime="20201030 15:52:00.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024123903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.845" endtime="20201030 15:52:00.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.865" endtime="20201030 15:52:00.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.536" endtime="20201030 15:52:00.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.534" endtime="20201030 15:52:00.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.880" level="INFO">${RESULT} = [{'diff': 6.028000000001671e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.0839999999999506e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:00.873" endtime="20201030 15:52:00.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:00.889" level="INFO">${ACCURACY} = {'diff': [6.028000000001671e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.07...</msg>
<status status="PASS" starttime="20201030 15:52:00.882" endtime="20201030 15:52:00.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.899" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:00.897" endtime="20201030 15:52:00.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.904" level="INFO">VALUE: [6.028000000001671e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.124999999999187e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.040999999998298e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 5.985999999999492e-06, 6.0279999999982015e-06, 6.110999999999617e-06, 6.000000000002531e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.09800000000299e-06, 6.0829999999970075e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.040999999998298e-06, 5.985999999999492e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201030 15:52:00.902" endtime="20201030 15:52:00.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.891" endtime="20201030 15:52:00.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.910" endtime="20201030 15:52:00.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.908" endtime="20201030 15:52:00.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.907" endtime="20201030 15:52:00.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.497" endtime="20201030 15:52:00.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.496" endtime="20201030 15:52:00.932"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.944" endtime="20201030 15:52:00.959"></status>
</kw>
<msg timestamp="20201030 15:52:00.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.941" endtime="20201030 15:52:00.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.961" endtime="20201030 15:52:00.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.964" endtime="20201030 15:52:00.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.938" endtime="20201030 15:52:00.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.935" endtime="20201030 15:52:00.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.973" endtime="20201030 15:52:01.261"></status>
</kw>
<msg timestamp="20201030 15:52:01.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.972" endtime="20201030 15:52:01.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024996083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025002125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.265" endtime="20201030 15:52:01.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.274" endtime="20201030 15:52:01.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.969" endtime="20201030 15:52:01.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.968" endtime="20201030 15:52:01.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.280" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.041000000001767e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:01.277" endtime="20201030 15:52:01.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:01.285" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.000...</msg>
<status status="PASS" starttime="20201030 15:52:01.281" endtime="20201030 15:52:01.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.290" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:01.289" endtime="20201030 15:52:01.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.292" level="INFO">VALUE: [6.042000000001241e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.000000000002531e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.014000000002101e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.000000000002531e-06, 6.070000000000381e-06, 6.027000000002197e-06, 5.985999999999492e-06, 6.041000000001767e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.096999999996577e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.054999999997868e-06, 5.999999999999062e-06, 6.055999999997341e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201030 15:52:01.291" endtime="20201030 15:52:01.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.286" endtime="20201030 15:52:01.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.297" endtime="20201030 15:52:01.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.295" endtime="20201030 15:52:01.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.294" endtime="20201030 15:52:01.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.933" endtime="20201030 15:52:01.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.932" endtime="20201030 15:52:01.318"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.327" endtime="20201030 15:52:01.346"></status>
</kw>
<msg timestamp="20201030 15:52:01.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.325" endtime="20201030 15:52:01.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.348" endtime="20201030 15:52:01.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.350" endtime="20201030 15:52:01.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.323" endtime="20201030 15:52:01.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.321" endtime="20201030 15:52:01.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.359" endtime="20201030 15:52:01.656"></status>
</kw>
<msg timestamp="20201030 15:52:01.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024733306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024739361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.358" endtime="20201030 15:52:01.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024733306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024739361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.665" endtime="20201030 15:52:01.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.684" endtime="20201030 15:52:01.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.355" endtime="20201030 15:52:01.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.353" endtime="20201030 15:52:01.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.698" level="INFO">${RESULT} = [{'diff': 6.055000000001337e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:01.691" endtime="20201030 15:52:01.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:01.707" level="INFO">${ACCURACY} = {'diff': [6.055000000001337e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.013...</msg>
<status status="PASS" starttime="20201030 15:52:01.700" endtime="20201030 15:52:01.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.715" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:01.713" endtime="20201030 15:52:01.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.717" level="INFO">VALUE: [6.055000000001337e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.013000000002627e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.069999999996911e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.11199999999909e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 15:52:01.716" endtime="20201030 15:52:01.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.708" endtime="20201030 15:52:01.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.722" endtime="20201030 15:52:01.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.720" endtime="20201030 15:52:01.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.719" endtime="20201030 15:52:01.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.319" endtime="20201030 15:52:01.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.318" endtime="20201030 15:52:01.743"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.752" endtime="20201030 15:52:01.773"></status>
</kw>
<msg timestamp="20201030 15:52:01.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.750" endtime="20201030 15:52:01.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.774" endtime="20201030 15:52:01.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.777" endtime="20201030 15:52:01.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.747" endtime="20201030 15:52:01.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.745" endtime="20201030 15:52:01.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.786" endtime="20201030 15:52:02.071"></status>
</kw>
<msg timestamp="20201030 15:52:02.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.784" endtime="20201030 15:52:02.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.075" endtime="20201030 15:52:02.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.083" endtime="20201030 15:52:02.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.782" endtime="20201030 15:52:02.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.780" endtime="20201030 15:52:02.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.090" level="INFO">${RESULT} = [{'diff': 6.110999999999617e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.0279999999982015e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:02.087" endtime="20201030 15:52:02.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:02.094" level="INFO">${ACCURACY} = {'diff': [6.110999999999617e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.05...</msg>
<status status="PASS" starttime="20201030 15:52:02.091" endtime="20201030 15:52:02.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.099" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:02.098" endtime="20201030 15:52:02.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.101" level="INFO">VALUE: [6.110999999999617e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.056000000000811e-06, 5.971999999999922e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.0139999999986316e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.083000000000477e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.041999999997771e-06, 5.999999999999062e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.028000000001671e-06]</msg>
<status status="PASS" starttime="20201030 15:52:02.100" endtime="20201030 15:52:02.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.095" endtime="20201030 15:52:02.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.118" endtime="20201030 15:52:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.116" endtime="20201030 15:52:02.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.115" endtime="20201030 15:52:02.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.744" endtime="20201030 15:52:02.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.743" endtime="20201030 15:52:02.139"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.153" endtime="20201030 15:52:02.170"></status>
</kw>
<msg timestamp="20201030 15:52:02.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.151" endtime="20201030 15:52:02.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.171" endtime="20201030 15:52:02.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.174" endtime="20201030 15:52:02.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.147" endtime="20201030 15:52:02.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.144" endtime="20201030 15:52:02.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.183" endtime="20201030 15:52:02.482"></status>
</kw>
<msg timestamp="20201030 15:52:02.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027573583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.181" endtime="20201030 15:52:02.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027573583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027579625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.491" endtime="20201030 15:52:02.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.509" endtime="20201030 15:52:02.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.179" endtime="20201030 15:52:02.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.177" endtime="20201030 15:52:02.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.521" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.069000000000907e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:02.516" endtime="20201030 15:52:02.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:02.526" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0139999999986316e-06, 6.070...</msg>
<status status="PASS" starttime="20201030 15:52:02.522" endtime="20201030 15:52:02.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.530" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:02.529" endtime="20201030 15:52:02.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.533" level="INFO">VALUE: [6.042000000001241e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 5.985999999999492e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.042000000001241e-06, 5.971999999999922e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.097000000000047e-06, 5.985999999999492e-06, 6.070000000000381e-06, 6.000000000002531e-06, 6.041999999997771e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.1389999999987566e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 5.971999999999922e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.0139999999986316e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 15:52:02.532" endtime="20201030 15:52:02.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.527" endtime="20201030 15:52:02.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.538" endtime="20201030 15:52:02.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.536" endtime="20201030 15:52:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.535" endtime="20201030 15:52:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.141" endtime="20201030 15:52:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.140" endtime="20201030 15:52:02.558"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.567" endtime="20201030 15:52:02.582"></status>
</kw>
<msg timestamp="20201030 15:52:02.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.566" endtime="20201030 15:52:02.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.584" endtime="20201030 15:52:02.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.586" endtime="20201030 15:52:02.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.563" endtime="20201030 15:52:02.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.561" endtime="20201030 15:52:02.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.595" endtime="20201030 15:52:02.880"></status>
</kw>
<msg timestamp="20201030 15:52:02.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.593" endtime="20201030 15:52:02.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.884" endtime="20201030 15:52:02.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.892" endtime="20201030 15:52:02.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.591" endtime="20201030 15:52:02.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.589" endtime="20201030 15:52:02.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.899" level="INFO">${RESULT} = [{'diff': 6.041000000001767e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.0839999999999506e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:02.896" endtime="20201030 15:52:02.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:02.903" level="INFO">${ACCURACY} = {'diff': [6.041000000001767e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.08...</msg>
<status status="PASS" starttime="20201030 15:52:02.900" endtime="20201030 15:52:02.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.907" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:02.906" endtime="20201030 15:52:02.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.910" level="INFO">VALUE: [6.041000000001767e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.0139999999986316e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 5.971999999999922e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 15:52:02.908" endtime="20201030 15:52:02.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.904" endtime="20201030 15:52:02.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.915" endtime="20201030 15:52:02.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.913" endtime="20201030 15:52:02.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.912" endtime="20201030 15:52:02.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.559" endtime="20201030 15:52:02.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.559" endtime="20201030 15:52:02.937"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.949" endtime="20201030 15:52:02.969"></status>
</kw>
<msg timestamp="20201030 15:52:02.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.947" endtime="20201030 15:52:02.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.971" endtime="20201030 15:52:02.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.973" endtime="20201030 15:52:02.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.944" endtime="20201030 15:52:02.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.941" endtime="20201030 15:52:02.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.982" endtime="20201030 15:52:03.267"></status>
</kw>
<msg timestamp="20201030 15:52:03.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028847181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028853236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.981" endtime="20201030 15:52:03.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028847181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028853236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.271" endtime="20201030 15:52:03.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.279" endtime="20201030 15:52:03.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.978" endtime="20201030 15:52:03.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.976" endtime="20201030 15:52:03.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.285" level="INFO">${RESULT} = [{'diff': 6.055000000001337e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.056000000000811e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:03.282" endtime="20201030 15:52:03.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.289" level="INFO">${ACCURACY} = {'diff': [6.055000000001337e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.05...</msg>
<status status="PASS" starttime="20201030 15:52:03.286" endtime="20201030 15:52:03.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.294" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.293" endtime="20201030 15:52:03.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.296" level="INFO">VALUE: [6.055000000001337e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.070000000000381e-06, 5.971999999999922e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.069999999996911e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.055000000001337e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201030 15:52:03.295" endtime="20201030 15:52:03.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.290" endtime="20201030 15:52:03.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.302" endtime="20201030 15:52:03.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.301" endtime="20201030 15:52:03.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.299" endtime="20201030 15:52:03.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.939" endtime="20201030 15:52:03.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.938" endtime="20201030 15:52:03.323"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.331" endtime="20201030 15:52:03.351"></status>
</kw>
<msg timestamp="20201030 15:52:03.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.330" endtime="20201030 15:52:03.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.353" endtime="20201030 15:52:03.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.355" endtime="20201030 15:52:03.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.327" endtime="20201030 15:52:03.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.325" endtime="20201030 15:52:03.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.364" endtime="20201030 15:52:03.649"></status>
</kw>
<msg timestamp="20201030 15:52:03.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.362" endtime="20201030 15:52:03.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024205681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.653" endtime="20201030 15:52:03.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.662" endtime="20201030 15:52:03.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.360" endtime="20201030 15:52:03.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.358" endtime="20201030 15:52:03.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.668" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.069000000000907e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:03.665" endtime="20201030 15:52:03.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.673" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.04...</msg>
<status status="PASS" starttime="20201030 15:52:03.669" endtime="20201030 15:52:03.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.677" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.676" endtime="20201030 15:52:03.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.680" level="INFO">VALUE: [6.042000000001241e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.083000000000477e-06, 5.986999999998965e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.000000000002531e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.055999999997341e-06, 6.056000000000811e-06, 5.9729999999993955e-06, 6.054999999997868e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201030 15:52:03.678" endtime="20201030 15:52:03.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.674" endtime="20201030 15:52:03.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.685" endtime="20201030 15:52:03.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.683" endtime="20201030 15:52:03.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.682" endtime="20201030 15:52:03.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.324" endtime="20201030 15:52:03.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.323" endtime="20201030 15:52:03.706"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.714" endtime="20201030 15:52:03.732"></status>
</kw>
<msg timestamp="20201030 15:52:03.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.713" endtime="20201030 15:52:03.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.733" endtime="20201030 15:52:03.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.736" endtime="20201030 15:52:03.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.710" endtime="20201030 15:52:03.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.708" endtime="20201030 15:52:03.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.744" endtime="20201030 15:52:04.032"></status>
</kw>
<msg timestamp="20201030 15:52:04.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02323525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023241319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:03.743" endtime="20201030 15:52:04.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02323525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023241319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:04.037" endtime="20201030 15:52:04.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.045" endtime="20201030 15:52:04.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.740" endtime="20201030 15:52:04.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.739" endtime="20201030 15:52:04.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.051" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.070000000000381e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:04.048" endtime="20201030 15:52:04.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.055" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.056...</msg>
<status status="PASS" starttime="20201030 15:52:04.052" endtime="20201030 15:52:04.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.060" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.059" endtime="20201030 15:52:04.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.062" level="INFO">VALUE: [6.069000000000907e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.012999999999158e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.125000000002656e-06, 6.041000000001767e-06, 6.0689999999974376e-06, 6.139000000002226e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.014000000002101e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.027000000002197e-06, 6.041999999997771e-06, 6.11199999999909e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.1389999999987566e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201030 15:52:04.061" endtime="20201030 15:52:04.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.056" endtime="20201030 15:52:04.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.067" endtime="20201030 15:52:04.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.066" endtime="20201030 15:52:04.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.064" endtime="20201030 15:52:04.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.707" endtime="20201030 15:52:04.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.706" endtime="20201030 15:52:04.088"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.096" endtime="20201030 15:52:04.116"></status>
</kw>
<msg timestamp="20201030 15:52:04.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.095" endtime="20201030 15:52:04.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.117" endtime="20201030 15:52:04.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.120" endtime="20201030 15:52:04.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.092" endtime="20201030 15:52:04.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.090" endtime="20201030 15:52:04.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.129" endtime="20201030 15:52:04.416"></status>
</kw>
<msg timestamp="20201030 15:52:04.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.127" endtime="20201030 15:52:04.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022959736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022965806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.420" endtime="20201030 15:52:04.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.428" endtime="20201030 15:52:04.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.125" endtime="20201030 15:52:04.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.123" endtime="20201030 15:52:04.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.435" level="INFO">${RESULT} = [{'diff': 6.069999999996911e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.056000000000811e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:04.431" endtime="20201030 15:52:04.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.439" level="INFO">${ACCURACY} = {'diff': [6.069999999996911e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0549...</msg>
<status status="PASS" starttime="20201030 15:52:04.436" endtime="20201030 15:52:04.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.443" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.442" endtime="20201030 15:52:04.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.445" level="INFO">VALUE: [6.069999999996911e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.11199999999909e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.0139999999986316e-06, 6.0689999999974376e-06, 6.012999999999158e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 5.971999999999922e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.054999999997868e-06]</msg>
<status status="PASS" starttime="20201030 15:52:04.444" endtime="20201030 15:52:04.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.439" endtime="20201030 15:52:04.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.451" endtime="20201030 15:52:04.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.450" endtime="20201030 15:52:04.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.449" endtime="20201030 15:52:04.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.089" endtime="20201030 15:52:04.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.088" endtime="20201030 15:52:04.472"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.481" endtime="20201030 15:52:04.496"></status>
</kw>
<msg timestamp="20201030 15:52:04.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.479" endtime="20201030 15:52:04.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.498" endtime="20201030 15:52:04.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.500" endtime="20201030 15:52:04.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.477" endtime="20201030 15:52:04.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.475" endtime="20201030 15:52:04.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.509" endtime="20201030 15:52:04.794"></status>
</kw>
<msg timestamp="20201030 15:52:04.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020518542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.507" endtime="20201030 15:52:04.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020518542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.798" endtime="20201030 15:52:04.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.806" endtime="20201030 15:52:04.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.505" endtime="20201030 15:52:04.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.503" endtime="20201030 15:52:04.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.813" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.0979999999995205e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:04.809" endtime="20201030 15:52:04.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.818" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.028000000001671e-06, 6.0979999999995205e-06, 6.014000000002101e-06, 6.028000000001671e-06, 6.04...</msg>
<status status="PASS" starttime="20201030 15:52:04.814" endtime="20201030 15:52:04.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.822" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.821" endtime="20201030 15:52:04.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.824" level="INFO">VALUE: [6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.028000000001671e-06, 6.0979999999995205e-06, 6.014000000002101e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.124999999999187e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.027000000002197e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.040999999998298e-06, 5.971999999999922e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.042000000001241e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.026999999998728e-06]</msg>
<status status="PASS" starttime="20201030 15:52:04.823" endtime="20201030 15:52:04.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.818" endtime="20201030 15:52:04.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.829" endtime="20201030 15:52:04.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.828" endtime="20201030 15:52:04.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.827" endtime="20201030 15:52:04.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.473" endtime="20201030 15:52:04.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.472" endtime="20201030 15:52:04.850"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.859" endtime="20201030 15:52:04.881"></status>
</kw>
<msg timestamp="20201030 15:52:04.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.857" endtime="20201030 15:52:04.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.882" endtime="20201030 15:52:04.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.885" endtime="20201030 15:52:04.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.855" endtime="20201030 15:52:04.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.853" endtime="20201030 15:52:04.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.894" endtime="20201030 15:52:05.180"></status>
</kw>
<msg timestamp="20201030 15:52:05.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.892" endtime="20201030 15:52:05.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024341014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.184" endtime="20201030 15:52:05.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.193" endtime="20201030 15:52:05.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.890" endtime="20201030 15:52:05.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.888" endtime="20201030 15:52:05.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.199" level="INFO">${RESULT} = [{'diff': 6.054999999997868e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.083000000000477e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:05.196" endtime="20201030 15:52:05.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.203" level="INFO">${ACCURACY} = {'diff': [6.054999999997868e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.05...</msg>
<status status="PASS" starttime="20201030 15:52:05.200" endtime="20201030 15:52:05.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.208" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.207" endtime="20201030 15:52:05.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.210" level="INFO">VALUE: [6.054999999997868e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.0139999999986316e-06, 6.0689999999974376e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.041000000001767e-06, 5.999999999999062e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.000000000002531e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 5.999999999999062e-06, 5.999999999999062e-06, 6.0689999999974376e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.014000000002101e-06, 6.014000000002101e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201030 15:52:05.209" endtime="20201030 15:52:05.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.204" endtime="20201030 15:52:05.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.215" endtime="20201030 15:52:05.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.214" endtime="20201030 15:52:05.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.212" endtime="20201030 15:52:05.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.851" endtime="20201030 15:52:05.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.850" endtime="20201030 15:52:05.236"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.244" endtime="20201030 15:52:05.264"></status>
</kw>
<msg timestamp="20201030 15:52:05.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.243" endtime="20201030 15:52:05.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.266" endtime="20201030 15:52:05.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.268" endtime="20201030 15:52:05.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.240" endtime="20201030 15:52:05.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.238" endtime="20201030 15:52:05.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.277" endtime="20201030 15:52:05.562"></status>
</kw>
<msg timestamp="20201030 15:52:05.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02549525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025501306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:05.276" endtime="20201030 15:52:05.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02549525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025501306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:05.566" endtime="20201030 15:52:05.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.574" endtime="20201030 15:52:05.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.273" endtime="20201030 15:52:05.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.271" endtime="20201030 15:52:05.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.580" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.124999999999187e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:05.577" endtime="20201030 15:52:05.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.584" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.040999999998298e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.027...</msg>
<status status="PASS" starttime="20201030 15:52:05.581" endtime="20201030 15:52:05.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.589" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.588" endtime="20201030 15:52:05.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.591" level="INFO">VALUE: [6.056000000000811e-06, 6.040999999998298e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.042000000001241e-06, 5.999999999999062e-06, 6.069000000000907e-06, 6.0139999999986316e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0139999999986316e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.041999999997771e-06, 6.026999999998728e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.083000000000477e-06, 6.0279999999982015e-06]</msg>
<status status="PASS" starttime="20201030 15:52:05.590" endtime="20201030 15:52:05.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.585" endtime="20201030 15:52:05.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.597" endtime="20201030 15:52:05.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.596" endtime="20201030 15:52:05.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.594" endtime="20201030 15:52:05.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.237" endtime="20201030 15:52:05.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.236" endtime="20201030 15:52:05.618"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.626" endtime="20201030 15:52:05.642"></status>
</kw>
<msg timestamp="20201030 15:52:05.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.625" endtime="20201030 15:52:05.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.643" endtime="20201030 15:52:05.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.646" endtime="20201030 15:52:05.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.622" endtime="20201030 15:52:05.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.620" endtime="20201030 15:52:05.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.655" endtime="20201030 15:52:05.940"></status>
</kw>
<msg timestamp="20201030 15:52:05.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.653" endtime="20201030 15:52:05.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.945" endtime="20201030 15:52:05.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.954" endtime="20201030 15:52:05.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.651" endtime="20201030 15:52:05.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.649" endtime="20201030 15:52:05.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.960" level="INFO">${RESULT} = [{'diff': 6.026999999998728e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.055000000001337e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:05.957" endtime="20201030 15:52:05.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.965" level="INFO">${ACCURACY} = {'diff': [6.026999999998728e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.06...</msg>
<status status="PASS" starttime="20201030 15:52:05.961" endtime="20201030 15:52:05.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.970" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.969" endtime="20201030 15:52:05.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.972" level="INFO">VALUE: [6.026999999998728e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.040999999998298e-06, 6.027000000002197e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.139000000002226e-06, 6.040999999998298e-06, 6.069999999996911e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.026999999998728e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.026999999998728e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201030 15:52:05.971" endtime="20201030 15:52:05.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.966" endtime="20201030 15:52:05.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.977" endtime="20201030 15:52:05.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.975" endtime="20201030 15:52:05.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.974" endtime="20201030 15:52:05.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.619" endtime="20201030 15:52:05.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.618" endtime="20201030 15:52:05.998"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.007" endtime="20201030 15:52:06.027"></status>
</kw>
<msg timestamp="20201030 15:52:06.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.006" endtime="20201030 15:52:06.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.029" endtime="20201030 15:52:06.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.031" endtime="20201030 15:52:06.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.003" endtime="20201030 15:52:06.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.000" endtime="20201030 15:52:06.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.040" endtime="20201030 15:52:06.329"></status>
</kw>
<msg timestamp="20201030 15:52:06.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.039" endtime="20201030 15:52:06.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.333" endtime="20201030 15:52:06.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.343" endtime="20201030 15:52:06.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.036" endtime="20201030 15:52:06.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.035" endtime="20201030 15:52:06.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.351" level="INFO">${RESULT} = [{'diff': 6.028000000001671e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.014000000002101e-06}, {'diff': 6.042000000001241e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:06.347" endtime="20201030 15:52:06.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.355" level="INFO">${ACCURACY} = {'diff': [6.028000000001671e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0689...</msg>
<status status="PASS" starttime="20201030 15:52:06.352" endtime="20201030 15:52:06.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.359" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.358" endtime="20201030 15:52:06.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.362" level="INFO">VALUE: [6.028000000001671e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.014000000002101e-06, 5.999999999999062e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.041000000001767e-06, 6.042000000001241e-06, 5.999999999999062e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.139000000002226e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201030 15:52:06.360" endtime="20201030 15:52:06.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.356" endtime="20201030 15:52:06.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.367" endtime="20201030 15:52:06.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.365" endtime="20201030 15:52:06.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.364" endtime="20201030 15:52:06.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.998" endtime="20201030 15:52:06.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.998" endtime="20201030 15:52:06.388"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.396" endtime="20201030 15:52:06.415"></status>
</kw>
<msg timestamp="20201030 15:52:06.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.395" endtime="20201030 15:52:06.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.417" endtime="20201030 15:52:06.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.419" endtime="20201030 15:52:06.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.392" endtime="20201030 15:52:06.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.390" endtime="20201030 15:52:06.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.428" endtime="20201030 15:52:06.712"></status>
</kw>
<msg timestamp="20201030 15:52:06.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024317597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.427" endtime="20201030 15:52:06.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024311528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024317597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.716" endtime="20201030 15:52:06.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.725" endtime="20201030 15:52:06.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.424" endtime="20201030 15:52:06.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.422" endtime="20201030 15:52:06.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.731" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.0279999999982015e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:06.728" endtime="20201030 15:52:06.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.735" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.054999999997868e-06, 6.069...</msg>
<status status="PASS" starttime="20201030 15:52:06.732" endtime="20201030 15:52:06.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.739" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.738" endtime="20201030 15:52:06.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.742" level="INFO">VALUE: [6.069000000000907e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.054999999997868e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.014000000002101e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.041000000001767e-06, 5.999999999999062e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.097000000000047e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201030 15:52:06.740" endtime="20201030 15:52:06.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.736" endtime="20201030 15:52:06.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.748" endtime="20201030 15:52:06.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.746" endtime="20201030 15:52:06.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.745" endtime="20201030 15:52:06.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.388" endtime="20201030 15:52:06.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.388" endtime="20201030 15:52:06.768"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.777" endtime="20201030 15:52:06.792"></status>
</kw>
<msg timestamp="20201030 15:52:06.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.775" endtime="20201030 15:52:06.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.793" endtime="20201030 15:52:06.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.795" endtime="20201030 15:52:06.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.773" endtime="20201030 15:52:06.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.771" endtime="20201030 15:52:06.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.804" endtime="20201030 15:52:07.093"></status>
</kw>
<msg timestamp="20201030 15:52:07.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.803" endtime="20201030 15:52:07.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.097" endtime="20201030 15:52:07.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.105" endtime="20201030 15:52:07.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.800" endtime="20201030 15:52:07.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.799" endtime="20201030 15:52:07.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.112" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.042000000001241e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:07.109" endtime="20201030 15:52:07.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.117" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0829999999970075e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.070...</msg>
<status status="PASS" starttime="20201030 15:52:07.113" endtime="20201030 15:52:07.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.121" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.120" endtime="20201030 15:52:07.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.124" level="INFO">VALUE: [6.070000000000381e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0829999999970075e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.040999999998298e-06, 6.0139999999986316e-06, 6.026999999998728e-06, 6.014000000002101e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 5.971999999999922e-06, 6.125000000002656e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.000000000002531e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.0139999999986316e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.122" endtime="20201030 15:52:07.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.118" endtime="20201030 15:52:07.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.133" endtime="20201030 15:52:07.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.131" endtime="20201030 15:52:07.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.130" endtime="20201030 15:52:07.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.769" endtime="20201030 15:52:07.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.769" endtime="20201030 15:52:07.153"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.162" endtime="20201030 15:52:07.183"></status>
</kw>
<msg timestamp="20201030 15:52:07.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.160" endtime="20201030 15:52:07.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.184" endtime="20201030 15:52:07.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.187" endtime="20201030 15:52:07.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.158" endtime="20201030 15:52:07.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.156" endtime="20201030 15:52:07.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.196" endtime="20201030 15:52:07.482"></status>
</kw>
<msg timestamp="20201030 15:52:07.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.194" endtime="20201030 15:52:07.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.486" endtime="20201030 15:52:07.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.494" endtime="20201030 15:52:07.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.192" endtime="20201030 15:52:07.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.190" endtime="20201030 15:52:07.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.501" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:07.498" endtime="20201030 15:52:07.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.505" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 5.9999...</msg>
<status status="PASS" starttime="20201030 15:52:07.502" endtime="20201030 15:52:07.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.509" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.508" endtime="20201030 15:52:07.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.512" level="INFO">VALUE: [6.083000000000477e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 5.999999999999062e-06, 6.110999999999617e-06, 5.999999999999062e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.069999999996911e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.0139999999986316e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.027000000002197e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.041000000001767e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.054999999997868e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.510" endtime="20201030 15:52:07.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.506" endtime="20201030 15:52:07.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.517" endtime="20201030 15:52:07.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.515" endtime="20201030 15:52:07.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.514" endtime="20201030 15:52:07.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.154" endtime="20201030 15:52:07.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.154" endtime="20201030 15:52:07.537"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.546" endtime="20201030 15:52:07.566"></status>
</kw>
<msg timestamp="20201030 15:52:07.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.545" endtime="20201030 15:52:07.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.567" endtime="20201030 15:52:07.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.570" endtime="20201030 15:52:07.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.542" endtime="20201030 15:52:07.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.540" endtime="20201030 15:52:07.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.579" endtime="20201030 15:52:07.867"></status>
</kw>
<msg timestamp="20201030 15:52:07.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024792806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024798847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.577" endtime="20201030 15:52:07.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024792806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024798847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.871" endtime="20201030 15:52:07.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.879" endtime="20201030 15:52:07.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.575" endtime="20201030 15:52:07.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.573" endtime="20201030 15:52:07.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.886" level="INFO">${RESULT} = [{'diff': 6.040999999998298e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.026999999998728e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:07.882" endtime="20201030 15:52:07.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.890" level="INFO">${ACCURACY} = {'diff': [6.040999999998298e-06, 6.055000000001337e-06, 6.026999999998728e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.11199999999909e-06, 6.08299...</msg>
<status status="PASS" starttime="20201030 15:52:07.887" endtime="20201030 15:52:07.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.896" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.895" endtime="20201030 15:52:07.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.900" level="INFO">VALUE: [6.040999999998298e-06, 6.055000000001337e-06, 6.026999999998728e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.11199999999909e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.056000000000811e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.041000000001767e-06, 6.125000000002656e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.1389999999987566e-06, 6.041000000001767e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.014000000002101e-06, 6.028000000001671e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.012999999999158e-06, 6.014000000002101e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.898" endtime="20201030 15:52:07.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.891" endtime="20201030 15:52:07.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.908" endtime="20201030 15:52:07.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.906" endtime="20201030 15:52:07.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.904" endtime="20201030 15:52:07.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.538" endtime="20201030 15:52:07.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.538" endtime="20201030 15:52:07.930"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.938" endtime="20201030 15:52:07.958"></status>
</kw>
<msg timestamp="20201030 15:52:07.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.937" endtime="20201030 15:52:07.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.960" endtime="20201030 15:52:07.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.963" endtime="20201030 15:52:07.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.934" endtime="20201030 15:52:07.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.932" endtime="20201030 15:52:07.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.972" endtime="20201030 15:52:08.257"></status>
</kw>
<msg timestamp="20201030 15:52:08.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.970" endtime="20201030 15:52:08.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024488542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024494542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.261" endtime="20201030 15:52:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.269" endtime="20201030 15:52:08.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.968" endtime="20201030 15:52:08.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.966" endtime="20201030 15:52:08.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.275" level="INFO">${RESULT} = [{'diff': 6.000000000002531e-06}, {'diff': 6.0979999999995205e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.083000000000477e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:08.272" endtime="20201030 15:52:08.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.280" level="INFO">${ACCURACY} = {'diff': [6.000000000002531e-06, 6.0979999999995205e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.02...</msg>
<status status="PASS" starttime="20201030 15:52:08.276" endtime="20201030 15:52:08.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.284" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.283" endtime="20201030 15:52:08.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.287" level="INFO">VALUE: [6.000000000002531e-06, 6.0979999999995205e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.000000000002531e-06, 6.041000000001767e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0829999999970075e-06, 6.040999999998298e-06, 6.026999999998728e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0829999999970075e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.286" endtime="20201030 15:52:08.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.281" endtime="20201030 15:52:08.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.292" endtime="20201030 15:52:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.290" endtime="20201030 15:52:08.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.289" endtime="20201030 15:52:08.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.931" endtime="20201030 15:52:08.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.930" endtime="20201030 15:52:08.313"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.321" endtime="20201030 15:52:08.339"></status>
</kw>
<msg timestamp="20201030 15:52:08.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.320" endtime="20201030 15:52:08.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.341" endtime="20201030 15:52:08.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.343" endtime="20201030 15:52:08.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.317" endtime="20201030 15:52:08.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.315" endtime="20201030 15:52:08.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.353" endtime="20201030 15:52:08.639"></status>
</kw>
<msg timestamp="20201030 15:52:08.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023290333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023296431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.352" endtime="20201030 15:52:08.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023290333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023296431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.643" endtime="20201030 15:52:08.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.651" endtime="20201030 15:52:08.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.348" endtime="20201030 15:52:08.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.346" endtime="20201030 15:52:08.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.658" level="INFO">${RESULT} = [{'diff': 6.0979999999995205e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.137999999999283e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.070000000000381e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:08.654" endtime="20201030 15:52:08.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.662" level="INFO">${ACCURACY} = {'diff': [6.0979999999995205e-06, 6.0839999999999506e-06, 6.137999999999283e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.056000000000811e-06, 5.99...</msg>
<status status="PASS" starttime="20201030 15:52:08.659" endtime="20201030 15:52:08.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.666" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.665" endtime="20201030 15:52:08.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.668" level="INFO">VALUE: [6.0979999999995205e-06, 6.0839999999999506e-06, 6.137999999999283e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.056000000000811e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.027000000002197e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.027000000002197e-06, 6.069999999996911e-06, 6.1389999999987566e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.069999999996911e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.667" endtime="20201030 15:52:08.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.663" endtime="20201030 15:52:08.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.674" endtime="20201030 15:52:08.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.672" endtime="20201030 15:52:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.671" endtime="20201030 15:52:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.314" endtime="20201030 15:52:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.313" endtime="20201030 15:52:08.694"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.703" endtime="20201030 15:52:08.722"></status>
</kw>
<msg timestamp="20201030 15:52:08.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.701" endtime="20201030 15:52:08.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.723" endtime="20201030 15:52:08.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.726" endtime="20201030 15:52:08.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.699" endtime="20201030 15:52:08.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.697" endtime="20201030 15:52:08.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.734" endtime="20201030 15:52:09.020"></status>
</kw>
<msg timestamp="20201030 15:52:09.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:08.733" endtime="20201030 15:52:09.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0235205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:09.025" endtime="20201030 15:52:09.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.034" endtime="20201030 15:52:09.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.730" endtime="20201030 15:52:09.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.729" endtime="20201030 15:52:09.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.042" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.055999999997341e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:09.038" endtime="20201030 15:52:09.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.046" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.07...</msg>
<status status="PASS" starttime="20201030 15:52:09.043" endtime="20201030 15:52:09.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.052" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.051" endtime="20201030 15:52:09.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.056" level="INFO">VALUE: [6.069000000000907e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.056000000000811e-06, 5.986999999998965e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.027000000002197e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.014000000002101e-06, 6.083000000000477e-06, 6.027000000002197e-06, 6.028000000001671e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.027000000002197e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.1389999999987566e-06, 6.055999999997341e-06]</msg>
<status status="PASS" starttime="20201030 15:52:09.054" endtime="20201030 15:52:09.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.047" endtime="20201030 15:52:09.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.062" endtime="20201030 15:52:09.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.061" endtime="20201030 15:52:09.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.059" endtime="20201030 15:52:09.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.695" endtime="20201030 15:52:09.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.695" endtime="20201030 15:52:09.083"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.092" endtime="20201030 15:52:09.108"></status>
</kw>
<msg timestamp="20201030 15:52:09.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.090" endtime="20201030 15:52:09.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.110" endtime="20201030 15:52:09.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.112" endtime="20201030 15:52:09.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.088" endtime="20201030 15:52:09.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.086" endtime="20201030 15:52:09.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.121" endtime="20201030 15:52:09.409"></status>
</kw>
<msg timestamp="20201030 15:52:09.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021354472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:09.119" endtime="20201030 15:52:09.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021354472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:09.413" endtime="20201030 15:52:09.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.421" endtime="20201030 15:52:09.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.117" endtime="20201030 15:52:09.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.115" endtime="20201030 15:52:09.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.427" level="INFO">${RESULT} = [{'diff': 6.028000000001671e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.125000000002656e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.026999999998728e-06}, {'diff': 6.055000000001337e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:09.424" endtime="20201030 15:52:09.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.432" level="INFO">${ACCURACY} = {'diff': [6.028000000001671e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.041999999997771e-06, 6.026999999998728e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.040...</msg>
<status status="PASS" starttime="20201030 15:52:09.428" endtime="20201030 15:52:09.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.437" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.436" endtime="20201030 15:52:09.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.439" level="INFO">VALUE: [6.028000000001671e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.041999999997771e-06, 6.026999999998728e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 5.971999999999922e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.125000000002656e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0829999999970075e-06, 6.0279999999982015e-06, 6.1389999999987566e-06, 6.054999999997868e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.000000000002531e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.026999999998728e-06]</msg>
<status status="PASS" starttime="20201030 15:52:09.438" endtime="20201030 15:52:09.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.433" endtime="20201030 15:52:09.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.444" endtime="20201030 15:52:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.443" endtime="20201030 15:52:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.442" endtime="20201030 15:52:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.084" endtime="20201030 15:52:09.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.084" endtime="20201030 15:52:09.465"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.473" endtime="20201030 15:52:09.491"></status>
</kw>
<msg timestamp="20201030 15:52:09.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.472" endtime="20201030 15:52:09.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.493" endtime="20201030 15:52:09.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.495" endtime="20201030 15:52:09.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.469" endtime="20201030 15:52:09.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.467" endtime="20201030 15:52:09.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.504" endtime="20201030 15:52:09.793"></status>
</kw>
<msg timestamp="20201030 15:52:09.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021446819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.503" endtime="20201030 15:52:09.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021446819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.798" endtime="20201030 15:52:09.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.811" endtime="20201030 15:52:09.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.500" endtime="20201030 15:52:09.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.498" endtime="20201030 15:52:09.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.818" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.040999999998298e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:09.814" endtime="20201030 15:52:09.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.822" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.042...</msg>
<status status="PASS" starttime="20201030 15:52:09.818" endtime="20201030 15:52:09.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.826" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.825" endtime="20201030 15:52:09.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.829" level="INFO">VALUE: [6.070000000000381e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.069000000000907e-06, 5.971999999999922e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.070000000000381e-06, 5.999999999999062e-06, 6.040999999998298e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.1529999999983265e-06, 6.083000000000477e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201030 15:52:09.827" endtime="20201030 15:52:09.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.822" endtime="20201030 15:52:09.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.834" endtime="20201030 15:52:09.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.832" endtime="20201030 15:52:09.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.831" endtime="20201030 15:52:09.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.466" endtime="20201030 15:52:09.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.465" endtime="20201030 15:52:09.854"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.863" endtime="20201030 15:52:09.881"></status>
</kw>
<msg timestamp="20201030 15:52:09.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.861" endtime="20201030 15:52:09.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.883" endtime="20201030 15:52:09.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.885" endtime="20201030 15:52:09.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.859" endtime="20201030 15:52:09.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.857" endtime="20201030 15:52:09.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.894" endtime="20201030 15:52:10.182"></status>
</kw>
<msg timestamp="20201030 15:52:10.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024011056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.893" endtime="20201030 15:52:10.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024011056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024017125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.186" endtime="20201030 15:52:10.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.194" endtime="20201030 15:52:10.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.890" endtime="20201030 15:52:10.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.888" endtime="20201030 15:52:10.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.201" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.013000000002627e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:10.198" endtime="20201030 15:52:10.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.205" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.013000000002627e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.0420...</msg>
<status status="PASS" starttime="20201030 15:52:10.202" endtime="20201030 15:52:10.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.209" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.208" endtime="20201030 15:52:10.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.212" level="INFO">VALUE: [6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.013000000002627e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0829999999970075e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.09800000000299e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.055000000001337e-06, 5.971999999999922e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201030 15:52:10.210" endtime="20201030 15:52:10.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.206" endtime="20201030 15:52:10.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.217" endtime="20201030 15:52:10.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.216" endtime="20201030 15:52:10.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.215" endtime="20201030 15:52:10.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.855" endtime="20201030 15:52:10.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.855" endtime="20201030 15:52:10.238"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.247" endtime="20201030 15:52:10.266"></status>
</kw>
<msg timestamp="20201030 15:52:10.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.245" endtime="20201030 15:52:10.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.268" endtime="20201030 15:52:10.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.270" endtime="20201030 15:52:10.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.243" endtime="20201030 15:52:10.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.241" endtime="20201030 15:52:10.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.279" endtime="20201030 15:52:10.577"></status>
</kw>
<msg timestamp="20201030 15:52:10.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.277" endtime="20201030 15:52:10.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.581" endtime="20201030 15:52:10.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.589" endtime="20201030 15:52:10.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.275" endtime="20201030 15:52:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.273" endtime="20201030 15:52:10.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.595" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.083000000000477e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:10.592" endtime="20201030 15:52:10.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.600" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.0139999999986316e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.056...</msg>
<status status="PASS" starttime="20201030 15:52:10.596" endtime="20201030 15:52:10.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.605" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.604" endtime="20201030 15:52:10.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.607" level="INFO">VALUE: [6.042000000001241e-06, 6.0139999999986316e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.012999999999158e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 6.056000000000811e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.1389999999987566e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.069999999996911e-06, 6.138000000002752e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.0979999999995205e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201030 15:52:10.606" endtime="20201030 15:52:10.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.601" endtime="20201030 15:52:10.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.612" endtime="20201030 15:52:10.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.610" endtime="20201030 15:52:10.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.609" endtime="20201030 15:52:10.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.239" endtime="20201030 15:52:10.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.238" endtime="20201030 15:52:10.633"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.641" endtime="20201030 15:52:10.661"></status>
</kw>
<msg timestamp="20201030 15:52:10.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.640" endtime="20201030 15:52:10.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.662" endtime="20201030 15:52:10.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.665" endtime="20201030 15:52:10.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.637" endtime="20201030 15:52:10.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.635" endtime="20201030 15:52:10.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.673" endtime="20201030 15:52:10.960"></status>
</kw>
<msg timestamp="20201030 15:52:10.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024230153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024236181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.672" endtime="20201030 15:52:10.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024230153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024236181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.965" endtime="20201030 15:52:10.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.974" endtime="20201030 15:52:10.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.669" endtime="20201030 15:52:10.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.668" endtime="20201030 15:52:10.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.980" level="INFO">${RESULT} = [{'diff': 6.0279999999982015e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.055000000001337e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:10.977" endtime="20201030 15:52:10.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.984" level="INFO">${ACCURACY} = {'diff': [6.0279999999982015e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.056...</msg>
<status status="PASS" starttime="20201030 15:52:10.981" endtime="20201030 15:52:10.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.989" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.988" endtime="20201030 15:52:10.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.991" level="INFO">VALUE: [6.0279999999982015e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 5.985999999999492e-06, 5.958000000000352e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.11199999999909e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.069999999996911e-06, 6.055000000001337e-06, 5.971999999999922e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 15:52:10.990" endtime="20201030 15:52:10.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.985" endtime="20201030 15:52:10.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.996" endtime="20201030 15:52:11.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.995" endtime="20201030 15:52:11.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.994" endtime="20201030 15:52:11.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.634" endtime="20201030 15:52:11.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.633" endtime="20201030 15:52:11.017"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.026" endtime="20201030 15:52:11.043"></status>
</kw>
<msg timestamp="20201030 15:52:11.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.024" endtime="20201030 15:52:11.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.044" endtime="20201030 15:52:11.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.047" endtime="20201030 15:52:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.022" endtime="20201030 15:52:11.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.020" endtime="20201030 15:52:11.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.055" endtime="20201030 15:52:11.340"></status>
</kw>
<msg timestamp="20201030 15:52:11.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.054" endtime="20201030 15:52:11.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.345" endtime="20201030 15:52:11.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.353" endtime="20201030 15:52:11.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.051" endtime="20201030 15:52:11.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.050" endtime="20201030 15:52:11.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.359" level="INFO">${RESULT} = [{'diff': 1.0834000000001232e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 1.940300000000117e-05}, {'diff': 2.033300000000085e-05}, {'diff': 2.2262999999998062e-05}, {'diff': 2.6069999999999566e-05...</msg>
<status status="PASS" starttime="20201030 15:52:11.356" endtime="20201030 15:52:11.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.363" level="INFO">${ACCURACY} = {'diff': [1.0834000000001232e-05, 2.4236000000000396e-05, 1.940300000000117e-05, 2.033300000000085e-05, 2.2262999999998062e-05, 2.6069999999999566e-05, 2.2305999999999715e-05, 2.136100000000099e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:11.360" endtime="20201030 15:52:11.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.368" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.367" endtime="20201030 15:52:11.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.370" level="INFO">VALUE: [1.0834000000001232e-05, 2.4236000000000396e-05, 1.940300000000117e-05, 2.033300000000085e-05, 2.2262999999998062e-05, 2.6069999999999566e-05, 2.2305999999999715e-05, 2.136100000000099e-05, 2.136099999999752e-05, 2.1264000000000005e-05, 2.5166000000000077e-05, 2.04029999999987e-05, 2.131899999999881e-05, 1.93890000000016e-05, 2.3263999999998536e-05, 1.9416000000001266e-05, 2.515299999999998e-05, 2.4208000000001256e-05, 2.416699999999855e-05, 2.2333999999998855e-05, 2.515299999999998e-05, 1.9444000000000405e-05, 2.0334000000000324e-05, 2.418099999999812e-05, 2.4207999999997787e-05, 2.516700000000302e-05, 2.2305999999999715e-05, 2.133299999999838e-05, 2.2262999999998062e-05, 2.2250000000001435e-05, 1.9457999999999975e-05, 2.4222000000000826e-05, 1.944499999999988e-05, 2.1333999999997855e-05, 2.5179999999999647e-05, 2.133300000000185e-05, 1.93890000000016e-05, 2.513900000000041e-05, 2.134700000000142e-05, 1.9444000000000405e-05, 2.2291999999996676e-05, 2.518100000000259e-05, 2.516699999999955e-05, 2.3207999999996787e-05, 2.613900000000141e-05, 2.333300000000038e-05, 2.036099999999999e-05, 2.419500000000116e-05, 1.943100000000031e-05, 2.043099999999784e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.369" endtime="20201030 15:52:11.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.364" endtime="20201030 15:52:11.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.376" endtime="20201030 15:52:11.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.374" endtime="20201030 15:52:11.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.373" endtime="20201030 15:52:11.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.018" endtime="20201030 15:52:11.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.017" endtime="20201030 15:52:11.397"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.405" endtime="20201030 15:52:11.428"></status>
</kw>
<msg timestamp="20201030 15:52:11.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.404" endtime="20201030 15:52:11.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.429" endtime="20201030 15:52:11.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.432" endtime="20201030 15:52:11.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.401" endtime="20201030 15:52:11.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.399" endtime="20201030 15:52:11.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.441" endtime="20201030 15:52:11.728"></status>
</kw>
<msg timestamp="20201030 15:52:11.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023876681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.439" endtime="20201030 15:52:11.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023876681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.732" endtime="20201030 15:52:11.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.740" endtime="20201030 15:52:11.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.437" endtime="20201030 15:52:11.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.435" endtime="20201030 15:52:11.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.747" level="INFO">${RESULT} = [{'diff': 3.090199999999932e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.4222000000000826e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:11.743" endtime="20201030 15:52:11.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.752" level="INFO">${ACCURACY} = {'diff': [3.090199999999932e-05, 2.036099999999999e-05, 2.2263999999997536e-05, 2.2264000000001005e-05, 2.136100000000099e-05, 2.4222000000000826e-05, 2.034700000000042e-05, 2.3208000000000256e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:11.748" endtime="20201030 15:52:11.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.757" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.756" endtime="20201030 15:52:11.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.759" level="INFO">VALUE: [3.090199999999932e-05, 2.036099999999999e-05, 2.2263999999997536e-05, 2.2264000000001005e-05, 2.136100000000099e-05, 2.4222000000000826e-05, 2.034700000000042e-05, 2.3208000000000256e-05, 2.034700000000042e-05, 2.512499999999737e-05, 1.937499999999856e-05, 2.519499999999869e-05, 2.033300000000085e-05, 2.415299999999898e-05, 2.136100000000099e-05, 2.2278000000000575e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.1334000000001324e-05, 2.034700000000042e-05, 2.3304999999997772e-05, 2.229100000000067e-05, 2.3208000000000256e-05, 2.036099999999999e-05, 2.520900000000173e-05, 2.4222000000000826e-05, 2.129100000000314e-05, 2.3208000000000256e-05, 2.416700000000202e-05, 2.512500000000084e-05, 2.134700000000142e-05, 2.137500000000056e-05, 2.1320000000001754e-05, 2.416700000000202e-05, 2.3235999999999396e-05, 2.037499999999956e-05, 1.845900000000192e-05, 2.416700000000202e-05, 2.419499999999769e-05, 2.420900000000073e-05, 2.5179999999999647e-05, 2.137500000000056e-05, 2.4249999999999966e-05, 2.6096999999999232e-05, 2.3208000000000256e-05, 2.511100000000127e-05, 2.22770000000011e-05, 2.034700000000042e-05, 2.2305999999999715e-05, 2.4193999999998217e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.758" endtime="20201030 15:52:11.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.753" endtime="20201030 15:52:11.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.764" endtime="20201030 15:52:11.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.763" endtime="20201030 15:52:11.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.761" endtime="20201030 15:52:11.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.398" endtime="20201030 15:52:11.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.397" endtime="20201030 15:52:11.785"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.793" endtime="20201030 15:52:11.814"></status>
</kw>
<msg timestamp="20201030 15:52:11.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.792" endtime="20201030 15:52:11.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.817" endtime="20201030 15:52:11.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.823" endtime="20201030 15:52:11.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.789" endtime="20201030 15:52:11.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.787" endtime="20201030 15:52:11.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.841" endtime="20201030 15:52:12.133"></status>
</kw>
<msg timestamp="20201030 15:52:12.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.838" endtime="20201030 15:52:12.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.137" endtime="20201030 15:52:12.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.146" endtime="20201030 15:52:12.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.833" endtime="20201030 15:52:12.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.829" endtime="20201030 15:52:12.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.152" level="INFO">${RESULT} = [{'diff': 9.847999999999801e-06}, {'diff': 2.4207999999997787e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.6110999999998802e-0...</msg>
<status status="PASS" starttime="20201030 15:52:12.149" endtime="20201030 15:52:12.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.157" level="INFO">${ACCURACY} = {'diff': [9.847999999999801e-06, 2.4207999999997787e-05, 2.3278000000001575e-05, 2.2235999999998396e-05, 2.5179999999999647e-05, 2.6110999999998802e-05, 2.2264000000001005e-05, 2.1319999999998285e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:12.153" endtime="20201030 15:52:12.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.161" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.160" endtime="20201030 15:52:12.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.164" level="INFO">VALUE: [9.847999999999801e-06, 2.4207999999997787e-05, 2.3278000000001575e-05, 2.2235999999998396e-05, 2.5179999999999647e-05, 2.6110999999998802e-05, 2.2264000000001005e-05, 2.1319999999998285e-05, 2.04029999999987e-05, 2.5166000000000077e-05, 2.130499999999924e-05, 2.229100000000067e-05, 1.943100000000031e-05, 1.9402000000001696e-05, 2.322300000000277e-05, 2.513900000000041e-05, 2.2320000000002754e-05, 2.5207999999998787e-05, 2.3292000000001145e-05, 2.6096999999999232e-05, 2.137499999999709e-05, 2.03890000000026e-05, 2.4193999999998217e-05, 2.1305999999998715e-05, 2.1249999999996966e-05, 2.04029999999987e-05, 2.2319999999999285e-05, 2.4208000000001256e-05, 1.938899999999813e-05, 1.9444000000000405e-05, 2.516699999999955e-05, 2.131899999999881e-05, 2.415299999999898e-05, 2.1264000000000005e-05, 2.518100000000259e-05, 2.3221999999999826e-05, 2.0306000000001184e-05, 1.94029999999977e-05, 2.42230000000003e-05, 2.1334000000001324e-05, 2.22770000000011e-05, 1.9429999999997366e-05, 2.516699999999955e-05, 2.136100000000099e-05, 2.6124999999998372e-05, 2.3221999999999826e-05, 1.943100000000031e-05, 2.138900000000013e-05, 2.412499999999984e-05, 1.943100000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.162" endtime="20201030 15:52:12.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.157" endtime="20201030 15:52:12.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.173" endtime="20201030 15:52:12.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.172" endtime="20201030 15:52:12.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.170" endtime="20201030 15:52:12.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.786" endtime="20201030 15:52:12.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.785" endtime="20201030 15:52:12.194"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.203" endtime="20201030 15:52:12.224"></status>
</kw>
<msg timestamp="20201030 15:52:12.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.201" endtime="20201030 15:52:12.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.225" endtime="20201030 15:52:12.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.228" endtime="20201030 15:52:12.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.198" endtime="20201030 15:52:12.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.196" endtime="20201030 15:52:12.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.237" endtime="20201030 15:52:12.522"></status>
</kw>
<msg timestamp="20201030 15:52:12.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025597097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.235" endtime="20201030 15:52:12.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025597097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.526" endtime="20201030 15:52:12.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.534" endtime="20201030 15:52:12.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.233" endtime="20201030 15:52:12.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.231" endtime="20201030 15:52:12.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.541" level="INFO">${RESULT} = [{'diff': 2.5166000000000077e-05}, {'diff': 2.50970000000017e-05}, {'diff': 2.512499999999737e-05}, {'diff': 1.9444000000000405e-05}, {'diff': 2.0387999999999656e-05}, {'diff': 2.2249999999997966e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:12.538" endtime="20201030 15:52:12.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.545" level="INFO">${ACCURACY} = {'diff': [2.5166000000000077e-05, 2.50970000000017e-05, 2.512499999999737e-05, 1.9444000000000405e-05, 2.0387999999999656e-05, 2.2249999999997966e-05, 2.3250000000002435e-05, 2.50970000000017e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:52:12.542" endtime="20201030 15:52:12.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.549" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.548" endtime="20201030 15:52:12.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.552" level="INFO">VALUE: [2.5166000000000077e-05, 2.50970000000017e-05, 2.512499999999737e-05, 1.9444000000000405e-05, 2.0387999999999656e-05, 2.2249999999997966e-05, 2.3250000000002435e-05, 2.50970000000017e-05, 2.3208000000000256e-05, 2.5179999999999647e-05, 2.5179999999999647e-05, 2.1292000000002614e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.6082999999999662e-05, 2.1415999999999796e-05, 1.938899999999813e-05, 2.2277999999997106e-05, 2.512500000000084e-05, 1.943100000000031e-05, 2.613899999999794e-05, 2.2276999999997632e-05, 2.4249999999999966e-05, 2.130499999999924e-05, 2.515299999999998e-05, 2.420900000000073e-05, 2.134699999999795e-05, 2.50970000000017e-05, 2.034700000000042e-05, 2.14029999999997e-05, 1.9513999999998255e-05, 1.948699999999859e-05, 2.3263999999998536e-05, 2.223700000000134e-05, 2.2264000000001005e-05, 2.233299999999938e-05, 2.318099999999712e-05, 2.2207999999999256e-05, 2.3249999999998966e-05, 2.2305999999999715e-05, 2.133299999999838e-05, 2.415300000000245e-05, 2.3263999999998536e-05, 2.037499999999956e-05, 2.516700000000302e-05, 2.512499999999737e-05, 2.2263999999997536e-05, 2.3235999999999396e-05, 2.036099999999999e-05, 2.3278000000001575e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.551" endtime="20201030 15:52:12.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.546" endtime="20201030 15:52:12.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.558" endtime="20201030 15:52:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.556" endtime="20201030 15:52:12.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.555" endtime="20201030 15:52:12.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.195" endtime="20201030 15:52:12.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.194" endtime="20201030 15:52:12.578"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.587" endtime="20201030 15:52:12.610"></status>
</kw>
<msg timestamp="20201030 15:52:12.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.585" endtime="20201030 15:52:12.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.611" endtime="20201030 15:52:12.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.614" endtime="20201030 15:52:12.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.583" endtime="20201030 15:52:12.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.581" endtime="20201030 15:52:12.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.623" endtime="20201030 15:52:12.908"></status>
</kw>
<msg timestamp="20201030 15:52:12.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.621" endtime="20201030 15:52:12.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.912" endtime="20201030 15:52:12.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.920" endtime="20201030 15:52:12.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.619" endtime="20201030 15:52:12.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.617" endtime="20201030 15:52:12.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.926" level="INFO">${RESULT} = [{'diff': 5.9729999999993955e-06}, {'diff': 2.037499999999956e-05}, {'diff': 2.5138000000000937e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.3249999999998966e-05...</msg>
<status status="PASS" starttime="20201030 15:52:12.923" endtime="20201030 15:52:12.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.931" level="INFO">${ACCURACY} = {'diff': [5.9729999999993955e-06, 2.037499999999956e-05, 2.5138000000000937e-05, 2.2221999999998826e-05, 2.036099999999999e-05, 2.3249999999998966e-05, 2.1305999999998715e-05, 2.319500000000016e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:12.927" endtime="20201030 15:52:12.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.936" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.935" endtime="20201030 15:52:12.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.938" level="INFO">VALUE: [5.9729999999993955e-06, 2.037499999999956e-05, 2.5138000000000937e-05, 2.2221999999998826e-05, 2.036099999999999e-05, 2.3249999999998966e-05, 2.1305999999998715e-05, 2.319500000000016e-05, 1.9401999999998226e-05, 2.038899999999913e-05, 2.129099999999967e-05, 2.4249999999999966e-05, 2.134699999999795e-05, 2.037499999999956e-05, 2.038899999999913e-05, 2.415299999999898e-05, 2.3221999999999826e-05, 2.4236000000000396e-05, 2.4179999999998647e-05, 2.2278000000000575e-05, 2.6069000000000092e-05, 1.937500000000203e-05, 2.513900000000041e-05, 2.0429999999998366e-05, 2.513900000000041e-05, 1.937500000000203e-05, 2.03890000000026e-05, 2.415300000000245e-05, 1.943100000000031e-05, 2.2278000000000575e-05, 2.5082999999998662e-05, 2.034700000000042e-05, 1.93890000000016e-05, 2.5138000000000937e-05, 2.0347999999999894e-05, 2.5179999999999647e-05, 2.5221999999998357e-05, 2.2249999999997966e-05, 2.6096999999999232e-05, 2.3208000000000256e-05, 2.2264000000001005e-05, 2.133300000000185e-05, 2.513900000000041e-05, 2.513900000000041e-05, 2.4193999999998217e-05, 2.5166000000000077e-05, 2.5207999999998787e-05, 1.936099999999899e-05, 2.036099999999999e-05, 2.415300000000245e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.937" endtime="20201030 15:52:12.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.932" endtime="20201030 15:52:12.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.943" endtime="20201030 15:52:12.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.942" endtime="20201030 15:52:12.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.940" endtime="20201030 15:52:12.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.579" endtime="20201030 15:52:12.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.579" endtime="20201030 15:52:12.964"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.972" endtime="20201030 15:52:12.992"></status>
</kw>
<msg timestamp="20201030 15:52:12.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.971" endtime="20201030 15:52:12.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.993" endtime="20201030 15:52:12.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.996" endtime="20201030 15:52:12.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.968" endtime="20201030 15:52:12.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.966" endtime="20201030 15:52:12.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.005" endtime="20201030 15:52:13.291"></status>
</kw>
<msg timestamp="20201030 15:52:13.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.004" endtime="20201030 15:52:13.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024295889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024329653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.295" endtime="20201030 15:52:13.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.303" endtime="20201030 15:52:13.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.001" endtime="20201030 15:52:13.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.999" endtime="20201030 15:52:13.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.310" level="INFO">${RESULT} = [{'diff': 3.376399999999863e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.3264000000002005e-05...</msg>
<status status="PASS" starttime="20201030 15:52:13.307" endtime="20201030 15:52:13.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.314" level="INFO">${ACCURACY} = {'diff': [3.376399999999863e-05, 2.3235999999999396e-05, 2.2250000000001435e-05, 2.5179999999999647e-05, 2.518099999999912e-05, 2.3264000000002005e-05, 1.943100000000031e-05, 2.034700000000042e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:13.311" endtime="20201030 15:52:13.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.318" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.317" endtime="20201030 15:52:13.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.321" level="INFO">VALUE: [3.376399999999863e-05, 2.3235999999999396e-05, 2.2250000000001435e-05, 2.5179999999999647e-05, 2.518099999999912e-05, 2.3264000000002005e-05, 1.943100000000031e-05, 2.034700000000042e-05, 2.3180000000001116e-05, 2.518100000000259e-05, 2.4207999999997787e-05, 2.419499999999769e-05, 2.133299999999838e-05, 2.4222000000000826e-05, 2.5166000000000077e-05, 2.3221999999999826e-05, 2.1305999999998715e-05, 2.137500000000056e-05, 2.4236000000000396e-05, 2.230500000000024e-05, 2.138900000000013e-05, 2.231899999999981e-05, 2.3263999999998536e-05, 2.037499999999956e-05, 2.2249999999997966e-05, 2.133300000000185e-05, 1.9444000000000405e-05, 2.044499999999741e-05, 2.03890000000026e-05, 2.518099999999912e-05, 2.3221999999999826e-05, 2.2194000000003156e-05, 2.512500000000084e-05, 2.04029999999987e-05, 2.4222000000000826e-05, 2.2333999999998855e-05, 2.518099999999912e-05, 2.0319999999997285e-05, 2.1334000000001324e-05, 2.3250000000002435e-05, 2.3277999999998106e-05, 2.2264000000001005e-05, 2.1320000000001754e-05, 2.3263999999998536e-05, 2.4222000000000826e-05, 2.3264000000002005e-05, 2.037500000000303e-05, 2.3250000000002435e-05, 2.42230000000003e-05, 2.516699999999955e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.320" endtime="20201030 15:52:13.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.315" endtime="20201030 15:52:13.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.326" endtime="20201030 15:52:13.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.324" endtime="20201030 15:52:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.323" endtime="20201030 15:52:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.965" endtime="20201030 15:52:13.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.964" endtime="20201030 15:52:13.347"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.355" endtime="20201030 15:52:13.374"></status>
</kw>
<msg timestamp="20201030 15:52:13.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.354" endtime="20201030 15:52:13.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.375" endtime="20201030 15:52:13.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.378" endtime="20201030 15:52:13.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.351" endtime="20201030 15:52:13.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.349" endtime="20201030 15:52:13.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.387" endtime="20201030 15:52:13.671"></status>
</kw>
<msg timestamp="20201030 15:52:13.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023340208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023361528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.385" endtime="20201030 15:52:13.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023340208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023361528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.676" endtime="20201030 15:52:13.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.684" endtime="20201030 15:52:13.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.383" endtime="20201030 15:52:13.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.381" endtime="20201030 15:52:13.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.690" level="INFO">${RESULT} = [{'diff': 2.1319999999998285e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.5110999999997802e-05}, {'diff': 2.130499999999924e-05}, {'diff': 2.040300000000217e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:13.687" endtime="20201030 15:52:13.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.694" level="INFO">${ACCURACY} = {'diff': [2.1319999999998285e-05, 2.4236000000000396e-05, 2.512500000000084e-05, 2.5110999999997802e-05, 2.130499999999924e-05, 2.040300000000217e-05, 2.136100000000099e-05, 2.2292000000000145e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:13.691" endtime="20201030 15:52:13.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.699" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.698" endtime="20201030 15:52:13.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.701" level="INFO">VALUE: [2.1319999999998285e-05, 2.4236000000000396e-05, 2.512500000000084e-05, 2.5110999999997802e-05, 2.130499999999924e-05, 2.040300000000217e-05, 2.136100000000099e-05, 2.2292000000000145e-05, 2.323699999999887e-05, 1.940300000000117e-05, 2.138900000000013e-05, 2.034700000000042e-05, 2.3194000000000686e-05, 2.1333999999997855e-05, 2.4222000000000826e-05, 2.1291999999999145e-05, 2.320899999999973e-05, 2.413900000000288e-05, 2.2236000000001865e-05, 2.522299999999783e-05, 2.037499999999956e-05, 2.1291999999999145e-05, 2.1277999999999575e-05, 2.3208000000000256e-05, 2.034700000000042e-05, 2.518099999999912e-05, 2.5166000000000077e-05, 2.2250000000001435e-05, 2.416700000000202e-05, 2.615300000000098e-05, 2.136100000000099e-05, 2.4151999999999507e-05, 2.14029999999997e-05, 1.9429999999997366e-05, 2.516699999999955e-05, 2.036099999999999e-05, 2.512500000000084e-05, 2.4236000000000396e-05, 2.1319999999998285e-05, 2.3208000000000256e-05, 1.943100000000031e-05, 1.945899999999945e-05, 2.420900000000073e-05, 2.512500000000084e-05, 2.133300000000185e-05, 2.037500000000303e-05, 2.1319999999998285e-05, 2.037499999999956e-05, 2.512500000000084e-05, 1.940300000000117e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.700" endtime="20201030 15:52:13.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.695" endtime="20201030 15:52:13.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.707" endtime="20201030 15:52:13.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.705" endtime="20201030 15:52:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.704" endtime="20201030 15:52:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.348" endtime="20201030 15:52:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.347" endtime="20201030 15:52:13.728"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.736" endtime="20201030 15:52:13.756"></status>
</kw>
<msg timestamp="20201030 15:52:13.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.735" endtime="20201030 15:52:13.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.757" endtime="20201030 15:52:13.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.760" endtime="20201030 15:52:13.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.732" endtime="20201030 15:52:13.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.730" endtime="20201030 15:52:13.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.769" endtime="20201030 15:52:14.054"></status>
</kw>
<msg timestamp="20201030 15:52:14.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.767" endtime="20201030 15:52:14.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024240764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024254431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.058" endtime="20201030 15:52:14.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.067" endtime="20201030 15:52:14.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.765" endtime="20201030 15:52:14.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.763" endtime="20201030 15:52:14.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.073" level="INFO">${RESULT} = [{'diff': 1.3666999999998458e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.133300000000185e-05}, {'diff': 2.040300000000217e-05}, {'diff': 2.419500000000116e-05}, {'diff': 1.938899999999813e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:14.070" endtime="20201030 15:52:14.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.078" level="INFO">${ACCURACY} = {'diff': [1.3666999999998458e-05, 2.3221999999999826e-05, 2.133300000000185e-05, 2.040300000000217e-05, 2.419500000000116e-05, 1.938899999999813e-05, 2.230500000000024e-05, 2.037499999999956e-05, 2.50...</msg>
<status status="PASS" starttime="20201030 15:52:14.074" endtime="20201030 15:52:14.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.083" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.082" endtime="20201030 15:52:14.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.085" level="INFO">VALUE: [1.3666999999998458e-05, 2.3221999999999826e-05, 2.133300000000185e-05, 2.040300000000217e-05, 2.419500000000116e-05, 1.938899999999813e-05, 2.230500000000024e-05, 2.037499999999956e-05, 2.5097999999997705e-05, 1.8443999999999405e-05, 2.516699999999955e-05, 2.133300000000185e-05, 2.3249999999998966e-05, 1.941699999999727e-05, 2.512500000000084e-05, 2.3236000000002865e-05, 1.936099999999899e-05, 1.938899999999813e-05, 2.036099999999999e-05, 2.3263999999998536e-05, 2.613900000000141e-05, 2.5082999999998662e-05, 2.415299999999898e-05, 2.038899999999913e-05, 2.137500000000056e-05, 2.3208000000000256e-05, 1.9387999999998656e-05, 2.037499999999956e-05, 2.4208000000001256e-05, 2.034700000000042e-05, 2.5098000000001175e-05, 2.3250000000002435e-05, 2.036099999999999e-05, 2.0361999999999464e-05, 2.4193999999998217e-05, 2.512500000000084e-05, 2.1306000000002184e-05, 2.4152000000002977e-05, 1.9527999999997825e-05, 2.415299999999898e-05, 2.4070000000001035e-05, 2.415299999999898e-05, 2.2264000000001005e-05, 1.9430000000000835e-05, 2.2319999999999285e-05, 2.4165999999999077e-05, 2.3221999999999826e-05, 2.412499999999984e-05, 2.413899999999941e-05, 1.9430000000000835e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.084" endtime="20201030 15:52:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.079" endtime="20201030 15:52:14.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.090" endtime="20201030 15:52:14.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.089" endtime="20201030 15:52:14.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.088" endtime="20201030 15:52:14.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.728" endtime="20201030 15:52:14.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.728" endtime="20201030 15:52:14.111"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.119" endtime="20201030 15:52:14.137"></status>
</kw>
<msg timestamp="20201030 15:52:14.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.118" endtime="20201030 15:52:14.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.139" endtime="20201030 15:52:14.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.141" endtime="20201030 15:52:14.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.115" endtime="20201030 15:52:14.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.113" endtime="20201030 15:52:14.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.150" endtime="20201030 15:52:14.436"></status>
</kw>
<msg timestamp="20201030 15:52:14.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.149" endtime="20201030 15:52:14.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.440" endtime="20201030 15:52:14.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.449" endtime="20201030 15:52:14.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.146" endtime="20201030 15:52:14.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.145" endtime="20201030 15:52:14.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.455" level="INFO">${RESULT} = [{'diff': 2.133299999999838e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.323699999999887e-05}, {'diff': 2.131900000000228e-05}, {'diff': 2.3264000000002005e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:14.452" endtime="20201030 15:52:14.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.459" level="INFO">${ACCURACY} = {'diff': [2.133299999999838e-05, 2.2250000000001435e-05, 2.513900000000041e-05, 2.323699999999887e-05, 2.131900000000228e-05, 2.3264000000002005e-05, 1.938899999999813e-05, 1.936099999999899e-05, 2.22...</msg>
<status status="PASS" starttime="20201030 15:52:14.456" endtime="20201030 15:52:14.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.464" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.463" endtime="20201030 15:52:14.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.466" level="INFO">VALUE: [2.133299999999838e-05, 2.2250000000001435e-05, 2.513900000000041e-05, 2.323699999999887e-05, 2.131900000000228e-05, 2.3264000000002005e-05, 1.938899999999813e-05, 1.936099999999899e-05, 2.2250000000001435e-05, 2.416700000000202e-05, 2.4236000000000396e-05, 2.230500000000024e-05, 2.3151999999998507e-05, 2.1291999999999145e-05, 2.4207999999997787e-05, 2.4208000000001256e-05, 2.229100000000067e-05, 2.3194000000000686e-05, 2.1264000000000005e-05, 2.1319999999998285e-05, 2.2249999999997966e-05, 2.1320000000001754e-05, 2.5110999999997802e-05, 2.129099999999967e-05, 1.941700000000074e-05, 2.034700000000042e-05, 2.040300000000217e-05, 1.83890000000006e-05, 2.1333999999997855e-05, 2.036099999999999e-05, 2.133300000000185e-05, 2.5098000000001175e-05, 2.4263999999999536e-05, 2.3249999999998966e-05, 2.6055999999999996e-05, 2.034700000000042e-05, 2.4222000000000826e-05, 2.1347999999997425e-05, 2.6069999999999566e-05, 1.940300000000117e-05, 2.2292000000000145e-05, 2.134700000000142e-05, 2.033300000000085e-05, 2.037499999999956e-05, 2.412500000000331e-05, 2.0347999999999894e-05, 2.038899999999913e-05, 2.613899999999794e-05, 2.512500000000084e-05, 2.418100000000159e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.465" endtime="20201030 15:52:14.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.460" endtime="20201030 15:52:14.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.471" endtime="20201030 15:52:14.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.469" endtime="20201030 15:52:14.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.468" endtime="20201030 15:52:14.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.112" endtime="20201030 15:52:14.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.111" endtime="20201030 15:52:14.492"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.500" endtime="20201030 15:52:14.520"></status>
</kw>
<msg timestamp="20201030 15:52:14.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.499" endtime="20201030 15:52:14.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.521" endtime="20201030 15:52:14.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.524" endtime="20201030 15:52:14.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.496" endtime="20201030 15:52:14.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.494" endtime="20201030 15:52:14.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.533" endtime="20201030 15:52:14.818"></status>
</kw>
<msg timestamp="20201030 15:52:14.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023737528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023751167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.531" endtime="20201030 15:52:14.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023737528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023751167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.822" endtime="20201030 15:52:14.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.830" endtime="20201030 15:52:14.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.529" endtime="20201030 15:52:14.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.527" endtime="20201030 15:52:14.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.836" level="INFO">${RESULT} = [{'diff': 1.3638999999999318e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.4222000000000826e-05}, {'diff': 2.418099999999812e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.3235999999999396e-05...</msg>
<status status="PASS" starttime="20201030 15:52:14.833" endtime="20201030 15:52:14.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.840" level="INFO">${ACCURACY} = {'diff': [1.3638999999999318e-05, 2.2263999999997536e-05, 2.4222000000000826e-05, 2.418099999999812e-05, 2.034700000000042e-05, 2.3235999999999396e-05, 1.9430000000000835e-05, 2.516699999999955e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:14.837" endtime="20201030 15:52:14.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.845" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.844" endtime="20201030 15:52:14.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.847" level="INFO">VALUE: [1.3638999999999318e-05, 2.2263999999997536e-05, 2.4222000000000826e-05, 2.418099999999812e-05, 2.034700000000042e-05, 2.3235999999999396e-05, 1.9430000000000835e-05, 2.516699999999955e-05, 2.418099999999812e-05, 2.418100000000159e-05, 2.415299999999898e-05, 2.518099999999912e-05, 1.940300000000117e-05, 2.037499999999956e-05, 2.4208000000001256e-05, 2.3278000000001575e-05, 2.033300000000085e-05, 2.0429999999998366e-05, 2.3236000000002865e-05, 2.3221999999999826e-05, 2.3193999999997217e-05, 2.2264000000001005e-05, 2.2319999999999285e-05, 2.2305999999999715e-05, 2.3208000000000256e-05, 2.2276999999997632e-05, 2.1361999999996995e-05, 2.219499999999916e-05, 1.940300000000117e-05, 2.419500000000116e-05, 2.5208000000002256e-05, 2.2292000000000145e-05, 2.416699999999855e-05, 2.3221999999999826e-05, 2.140300000000317e-05, 1.9387999999998656e-05, 2.130499999999924e-05, 2.512500000000084e-05, 2.3194000000000686e-05, 2.6082999999999662e-05, 1.9429999999997366e-05, 2.513900000000041e-05, 2.412499999999984e-05, 2.131900000000228e-05, 1.9415999999997796e-05, 1.943100000000031e-05, 2.6069999999999566e-05, 2.511100000000127e-05, 2.036099999999999e-05, 2.229100000000067e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.846" endtime="20201030 15:52:14.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.841" endtime="20201030 15:52:14.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.853" endtime="20201030 15:52:14.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.852" endtime="20201030 15:52:14.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.850" endtime="20201030 15:52:14.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.493" endtime="20201030 15:52:14.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.492" endtime="20201030 15:52:14.874"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.882" endtime="20201030 15:52:14.903"></status>
</kw>
<msg timestamp="20201030 15:52:14.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.881" endtime="20201030 15:52:14.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.904" endtime="20201030 15:52:14.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.907" endtime="20201030 15:52:14.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.878" endtime="20201030 15:52:14.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.876" endtime="20201030 15:52:14.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.921" endtime="20201030 15:52:15.220"></status>
</kw>
<msg timestamp="20201030 15:52:15.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023398333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023423458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.918" endtime="20201030 15:52:15.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023398333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023423458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.224" endtime="20201030 15:52:15.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.232" endtime="20201030 15:52:15.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.914" endtime="20201030 15:52:15.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.911" endtime="20201030 15:52:15.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.239" level="INFO">${RESULT} = [{'diff': 2.512500000000084e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.6110999999998802e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.0347999999999894e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:15.235" endtime="20201030 15:52:15.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.244" level="INFO">${ACCURACY} = {'diff': [2.512500000000084e-05, 2.034700000000042e-05, 2.2264000000001005e-05, 2.6110999999998802e-05, 2.036099999999999e-05, 2.0347999999999894e-05, 2.3249999999998966e-05, 2.515299999999998e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:15.240" endtime="20201030 15:52:15.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.248" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.247" endtime="20201030 15:52:15.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.251" level="INFO">VALUE: [2.512500000000084e-05, 2.034700000000042e-05, 2.2264000000001005e-05, 2.6110999999998802e-05, 2.036099999999999e-05, 2.0347999999999894e-05, 2.3249999999998966e-05, 2.515299999999998e-05, 2.034700000000042e-05, 1.9387999999998656e-05, 2.3221999999999826e-05, 2.036099999999999e-05, 2.513899999999694e-05, 2.3249999999998966e-05, 2.323699999999887e-05, 2.2305999999999715e-05, 2.418100000000159e-05, 2.037499999999956e-05, 2.129099999999967e-05, 2.037499999999956e-05, 2.512500000000084e-05, 2.2221999999998826e-05, 2.420900000000073e-05, 1.941699999999727e-05, 2.3250000000002435e-05, 2.4193999999998217e-05, 2.5166000000000077e-05, 2.4193999999998217e-05, 1.940300000000117e-05, 2.033300000000085e-05, 2.42230000000003e-05, 2.5179999999999647e-05, 2.512500000000084e-05, 2.5069999999998566e-05, 1.941700000000074e-05, 2.613900000000141e-05, 2.036099999999999e-05, 2.5084000000001605e-05, 2.134700000000142e-05, 2.2292000000000145e-05, 2.129099999999967e-05, 2.4208000000001256e-05, 2.131899999999881e-05, 2.5166000000000077e-05, 2.2264000000001005e-05, 2.3221999999999826e-05, 2.3236000000002865e-05, 2.4208000000001256e-05, 1.943100000000031e-05, 2.036099999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.249" endtime="20201030 15:52:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.244" endtime="20201030 15:52:15.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.255" endtime="20201030 15:52:15.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.254" endtime="20201030 15:52:15.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.253" endtime="20201030 15:52:15.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.875" endtime="20201030 15:52:15.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.874" endtime="20201030 15:52:15.276"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.285" endtime="20201030 15:52:15.303"></status>
</kw>
<msg timestamp="20201030 15:52:15.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.283" endtime="20201030 15:52:15.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.305" endtime="20201030 15:52:15.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.307" endtime="20201030 15:52:15.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.281" endtime="20201030 15:52:15.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.279" endtime="20201030 15:52:15.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.316" endtime="20201030 15:52:15.616"></status>
</kw>
<msg timestamp="20201030 15:52:15.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023027139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023062736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.314" endtime="20201030 15:52:15.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023027139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023062736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.620" endtime="20201030 15:52:15.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.629" endtime="20201030 15:52:15.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.312" endtime="20201030 15:52:15.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.310" endtime="20201030 15:52:15.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.635" level="INFO">${RESULT} = [{'diff': 3.5597000000001794e-05}, {'diff': 2.03890000000026e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.033300000000085e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:15.632" endtime="20201030 15:52:15.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.639" level="INFO">${ACCURACY} = {'diff': [3.5597000000001794e-05, 2.03890000000026e-05, 2.4236000000000396e-05, 2.518099999999912e-05, 2.236099999999852e-05, 2.033300000000085e-05, 2.511100000000127e-05, 2.04029999999987e-05, 1.9403...</msg>
<status status="PASS" starttime="20201030 15:52:15.636" endtime="20201030 15:52:15.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.644" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.643" endtime="20201030 15:52:15.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.646" level="INFO">VALUE: [3.5597000000001794e-05, 2.03890000000026e-05, 2.4236000000000396e-05, 2.518099999999912e-05, 2.236099999999852e-05, 2.033300000000085e-05, 2.511100000000127e-05, 2.04029999999987e-05, 1.940300000000117e-05, 2.3249999999998966e-05, 2.134700000000142e-05, 2.3221999999999826e-05, 2.1348000000000894e-05, 2.1291999999999145e-05, 2.3152000000001977e-05, 1.944499999999988e-05, 2.2278000000000575e-05, 2.134700000000142e-05, 2.613900000000141e-05, 2.037500000000303e-05, 2.4208000000001256e-05, 2.215300000000045e-05, 1.9319999999999754e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.4208000000001256e-05, 2.040300000000217e-05, 2.4263999999999536e-05, 2.230500000000024e-05, 2.6110999999998802e-05, 2.036099999999999e-05, 2.4222000000000826e-05, 2.1334000000001324e-05, 2.2290999999997202e-05, 2.515299999999998e-05, 2.0430000000001836e-05, 2.1291999999999145e-05, 2.3236000000002865e-05, 2.419499999999769e-05, 2.6083999999999136e-05, 2.5110999999997802e-05, 2.3262999999999062e-05, 2.134699999999795e-05, 2.318099999999712e-05, 2.420899999999726e-05, 2.230500000000024e-05, 2.4207999999997787e-05, 2.4236000000000396e-05, 2.0387999999999656e-05, 2.50970000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.645" endtime="20201030 15:52:15.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.640" endtime="20201030 15:52:15.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.651" endtime="20201030 15:52:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.650" endtime="20201030 15:52:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.648" endtime="20201030 15:52:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.277" endtime="20201030 15:52:15.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.276" endtime="20201030 15:52:15.672"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.681" endtime="20201030 15:52:15.703"></status>
</kw>
<msg timestamp="20201030 15:52:15.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.679" endtime="20201030 15:52:15.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.704" endtime="20201030 15:52:15.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.707" endtime="20201030 15:52:15.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.677" endtime="20201030 15:52:15.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.674" endtime="20201030 15:52:15.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.716" endtime="20201030 15:52:16.002"></status>
</kw>
<msg timestamp="20201030 15:52:16.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024269931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024289361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.714" endtime="20201030 15:52:16.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024269931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024289361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.006" endtime="20201030 15:52:16.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.014" endtime="20201030 15:52:16.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.711" endtime="20201030 15:52:16.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.710" endtime="20201030 15:52:16.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.020" level="INFO">${RESULT} = [{'diff': 1.9429999999997366e-05}, {'diff': 2.5180000000003117e-05}, {'diff': 2.416700000000202e-05}, {'diff': 2.413900000000288e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.2278000000000575e-05...</msg>
<status status="PASS" starttime="20201030 15:52:16.017" endtime="20201030 15:52:16.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.025" level="INFO">${ACCURACY} = {'diff': [1.9429999999997366e-05, 2.5180000000003117e-05, 2.416700000000202e-05, 2.413900000000288e-05, 2.2305999999999715e-05, 2.2278000000000575e-05, 2.2235999999998396e-05, 1.933300000000332e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:16.021" endtime="20201030 15:52:16.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.029" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.028" endtime="20201030 15:52:16.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.031" level="INFO">VALUE: [1.9429999999997366e-05, 2.5180000000003117e-05, 2.416700000000202e-05, 2.413900000000288e-05, 2.2305999999999715e-05, 2.2278000000000575e-05, 2.2235999999998396e-05, 1.933300000000332e-05, 2.513900000000041e-05, 2.0415999999998796e-05, 2.408300000000113e-05, 2.420900000000073e-05, 2.3250000000002435e-05, 2.5221999999998357e-05, 2.513900000000041e-05, 2.513900000000041e-05, 2.3165999999998077e-05, 2.2263999999997536e-05, 2.2320000000002754e-05, 2.3235999999999396e-05, 2.315300000000145e-05, 2.5179999999999647e-05, 2.2305999999999715e-05, 2.333300000000038e-05, 1.936099999999899e-05, 2.2292000000000145e-05, 2.5179999999999647e-05, 1.941700000000074e-05, 2.513900000000041e-05, 1.9430000000000835e-05, 2.4306000000001715e-05, 2.3292000000001145e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.3235999999999396e-05, 2.515299999999998e-05, 2.2292000000000145e-05, 2.516699999999955e-05, 2.030499999999824e-05, 2.036099999999999e-05, 2.416699999999855e-05, 2.6082999999999662e-05, 2.42230000000003e-05, 2.518099999999912e-05, 2.318100000000059e-05, 2.0334000000000324e-05, 2.612500000000184e-05, 2.519499999999869e-05, 2.413899999999941e-05, 2.4179999999998647e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.030" endtime="20201030 15:52:16.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.025" endtime="20201030 15:52:16.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.037" endtime="20201030 15:52:16.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.036" endtime="20201030 15:52:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.035" endtime="20201030 15:52:16.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.673" endtime="20201030 15:52:16.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.672" endtime="20201030 15:52:16.058"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.066" endtime="20201030 15:52:16.081"></status>
</kw>
<msg timestamp="20201030 15:52:16.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.065" endtime="20201030 15:52:16.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.083" endtime="20201030 15:52:16.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.085" endtime="20201030 15:52:16.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.062" endtime="20201030 15:52:16.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.060" endtime="20201030 15:52:16.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.094" endtime="20201030 15:52:16.380"></status>
</kw>
<msg timestamp="20201030 15:52:16.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.093" endtime="20201030 15:52:16.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.384" endtime="20201030 15:52:16.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.392" endtime="20201030 15:52:16.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.090" endtime="20201030 15:52:16.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.088" endtime="20201030 15:52:16.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.398" level="INFO">${RESULT} = [{'diff': 6.9730000000003955e-06}, {'diff': 2.4208000000001256e-05}, {'diff': 2.3291999999997676e-05}, {'diff': 2.5138000000000937e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.3276999999998632e-...</msg>
<status status="PASS" starttime="20201030 15:52:16.395" endtime="20201030 15:52:16.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.403" level="INFO">${ACCURACY} = {'diff': [6.9730000000003955e-06, 2.4208000000001256e-05, 2.3291999999997676e-05, 2.5138000000000937e-05, 2.1250000000000435e-05, 2.3276999999998632e-05, 2.04029999999987e-05, 2.3235999999999396e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:16.399" endtime="20201030 15:52:16.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.408" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.407" endtime="20201030 15:52:16.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.410" level="INFO">VALUE: [6.9730000000003955e-06, 2.4208000000001256e-05, 2.3291999999997676e-05, 2.5138000000000937e-05, 2.1250000000000435e-05, 2.3276999999998632e-05, 2.04029999999987e-05, 2.3235999999999396e-05, 2.3194000000000686e-05, 2.136099999999752e-05, 2.2264000000001005e-05, 1.93890000000016e-05, 2.6069000000000092e-05, 2.034699999999695e-05, 2.411100000000027e-05, 2.0347999999999894e-05, 2.3250000000002435e-05, 2.034700000000042e-05, 2.2249999999997966e-05, 2.3235999999999396e-05, 1.943100000000031e-05, 2.3250000000002435e-05, 2.036099999999999e-05, 1.943100000000031e-05, 1.9457999999999975e-05, 2.133300000000185e-05, 2.2250000000001435e-05, 2.418100000000159e-05, 2.1334000000001324e-05, 2.133299999999838e-05, 2.419499999999769e-05, 2.1250000000000435e-05, 2.3194000000000686e-05, 2.2292000000000145e-05, 2.50970000000017e-05, 2.3221999999999826e-05, 2.037500000000303e-05, 2.413900000000288e-05, 2.6110999999998802e-05, 2.040300000000217e-05, 2.518100000000259e-05, 2.419499999999769e-05, 2.3207999999996787e-05, 2.416699999999855e-05, 2.1305999999998715e-05, 2.3236000000002865e-05, 2.3263999999998536e-05, 2.1306000000002184e-05, 2.5098000000001175e-05, 2.034699999999695e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.409" endtime="20201030 15:52:16.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.404" endtime="20201030 15:52:16.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.415" endtime="20201030 15:52:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.414" endtime="20201030 15:52:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.413" endtime="20201030 15:52:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.059" endtime="20201030 15:52:16.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.058" endtime="20201030 15:52:16.436"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.445" endtime="20201030 15:52:16.463"></status>
</kw>
<msg timestamp="20201030 15:52:16.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.443" endtime="20201030 15:52:16.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.464" endtime="20201030 15:52:16.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.467" endtime="20201030 15:52:16.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.440" endtime="20201030 15:52:16.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.438" endtime="20201030 15:52:16.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.476" endtime="20201030 15:52:16.762"></status>
</kw>
<msg timestamp="20201030 15:52:16.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023823097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023847292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.474" endtime="20201030 15:52:16.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023823097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023847292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.767" endtime="20201030 15:52:16.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.775" endtime="20201030 15:52:16.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.472" endtime="20201030 15:52:16.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.470" endtime="20201030 15:52:16.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.781" level="INFO">${RESULT} = [{'diff': 2.419499999999769e-05}, {'diff': 2.512500000000084e-05}, {'diff': 1.943099999999684e-05}, {'diff': 2.515299999999998e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.1305999999998715e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:16.778" endtime="20201030 15:52:16.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.785" level="INFO">${ACCURACY} = {'diff': [2.419499999999769e-05, 2.512500000000084e-05, 1.943099999999684e-05, 2.515299999999998e-05, 2.2278000000000575e-05, 2.1305999999998715e-05, 2.419499999999769e-05, 2.2250000000001435e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:52:16.782" endtime="20201030 15:52:16.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.790" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.789" endtime="20201030 15:52:16.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.792" level="INFO">VALUE: [2.419499999999769e-05, 2.512500000000084e-05, 1.943099999999684e-05, 2.515299999999998e-05, 2.2278000000000575e-05, 2.1305999999998715e-05, 2.419499999999769e-05, 2.2250000000001435e-05, 2.3264000000002005e-05, 1.9485999999999115e-05, 2.419499999999769e-05, 1.94029999999977e-05, 2.136100000000099e-05, 2.136100000000099e-05, 1.848699999999759e-05, 2.036099999999999e-05, 2.034700000000042e-05, 2.136099999999752e-05, 2.5208000000002256e-05, 1.9429999999997366e-05, 2.130499999999924e-05, 2.513900000000041e-05, 2.1291999999999145e-05, 2.32229999999993e-05, 2.0347999999999894e-05, 2.2249999999997966e-05, 2.4207999999997787e-05, 2.133299999999838e-05, 2.2291999999996676e-05, 2.034700000000042e-05, 2.4166000000002547e-05, 2.0334000000000324e-05, 2.234699999999895e-05, 2.518099999999912e-05, 2.1277999999999575e-05, 2.319500000000016e-05, 2.408300000000113e-05, 2.315300000000145e-05, 2.4180000000002116e-05, 2.131899999999881e-05, 2.613900000000141e-05, 1.937500000000203e-05, 2.613900000000141e-05, 2.138900000000013e-05, 2.134700000000142e-05, 2.3264000000002005e-05, 2.419499999999769e-05, 2.037499999999956e-05, 1.9429999999997366e-05, 1.940300000000117e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.791" endtime="20201030 15:52:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.786" endtime="20201030 15:52:16.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.797" endtime="20201030 15:52:16.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.796" endtime="20201030 15:52:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.794" endtime="20201030 15:52:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.437" endtime="20201030 15:52:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.436" endtime="20201030 15:52:16.818"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.826" endtime="20201030 15:52:16.850"></status>
</kw>
<msg timestamp="20201030 15:52:16.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.825" endtime="20201030 15:52:16.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.851" endtime="20201030 15:52:16.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.854" endtime="20201030 15:52:16.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.822" endtime="20201030 15:52:16.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.820" endtime="20201030 15:52:16.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.863" endtime="20201030 15:52:17.150"></status>
</kw>
<msg timestamp="20201030 15:52:17.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023775708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023794125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.861" endtime="20201030 15:52:17.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023775708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023794125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.154" endtime="20201030 15:52:17.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.162" endtime="20201030 15:52:17.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.859" endtime="20201030 15:52:17.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.857" endtime="20201030 15:52:17.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.169" level="INFO">${RESULT} = [{'diff': 1.841699999999974e-05}, {'diff': 2.415300000000245e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.3222000000003296e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.5179999999999647e-05...</msg>
<status status="PASS" starttime="20201030 15:52:17.165" endtime="20201030 15:52:17.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.173" level="INFO">${ACCURACY} = {'diff': [1.841699999999974e-05, 2.415300000000245e-05, 2.2249999999997966e-05, 2.3222000000003296e-05, 2.2249999999997966e-05, 2.5179999999999647e-05, 2.037499999999956e-05, 2.3208000000000256e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:17.169" endtime="20201030 15:52:17.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.178" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.177" endtime="20201030 15:52:17.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.181" level="INFO">VALUE: [1.841699999999974e-05, 2.415300000000245e-05, 2.2249999999997966e-05, 2.3222000000003296e-05, 2.2249999999997966e-05, 2.5179999999999647e-05, 2.037499999999956e-05, 2.3208000000000256e-05, 2.4208000000001256e-05, 2.2290999999997202e-05, 2.2264000000001005e-05, 2.419500000000116e-05, 2.513900000000041e-05, 2.037500000000303e-05, 1.9444000000000405e-05, 2.2250000000001435e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.515299999999998e-05, 2.2305999999999715e-05, 2.1306000000002184e-05, 2.413899999999941e-05, 2.034699999999695e-05, 2.3221999999999826e-05, 2.512499999999737e-05, 2.1334000000001324e-05, 2.319499999999669e-05, 1.9444000000000405e-05, 2.420900000000073e-05, 2.5110999999997802e-05, 2.408300000000113e-05, 2.036099999999999e-05, 2.5152000000000507e-05, 1.9485999999999115e-05, 2.037499999999956e-05, 2.3221999999999826e-05, 2.416700000000202e-05, 2.3292000000001145e-05, 2.3250000000002435e-05, 2.1319999999998285e-05, 2.138900000000013e-05, 2.0292000000001614e-05, 2.32229999999993e-05, 2.3264000000002005e-05, 2.415299999999898e-05, 1.938899999999813e-05, 2.2292000000000145e-05, 2.1319999999998285e-05, 2.6124999999998372e-05, 2.3221999999999826e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.179" endtime="20201030 15:52:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.174" endtime="20201030 15:52:17.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.190" endtime="20201030 15:52:17.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.189" endtime="20201030 15:52:17.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.188" endtime="20201030 15:52:17.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.819" endtime="20201030 15:52:17.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.818" endtime="20201030 15:52:17.211"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.219" endtime="20201030 15:52:17.237"></status>
</kw>
<msg timestamp="20201030 15:52:17.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.218" endtime="20201030 15:52:17.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.239" endtime="20201030 15:52:17.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.241" endtime="20201030 15:52:17.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.215" endtime="20201030 15:52:17.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.213" endtime="20201030 15:52:17.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.250" endtime="20201030 15:52:17.534"></status>
</kw>
<msg timestamp="20201030 15:52:17.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.249" endtime="20201030 15:52:17.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022582028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.538" endtime="20201030 15:52:17.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.546" endtime="20201030 15:52:17.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.246" endtime="20201030 15:52:17.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.245" endtime="20201030 15:52:17.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.553" level="INFO">${RESULT} = [{'diff': 2.8027999999999387e-05}, {'diff': 2.3194000000000686e-05}, {'diff': 2.516699999999955e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.4096999999997232e-05}, {'diff': 2.031899999999781e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:17.550" endtime="20201030 15:52:17.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.558" level="INFO">${ACCURACY} = {'diff': [2.8027999999999387e-05, 2.3194000000000686e-05, 2.516699999999955e-05, 2.416699999999855e-05, 2.4096999999997232e-05, 2.031899999999781e-05, 2.6026999999997913e-05, 1.940300000000117e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:17.554" endtime="20201030 15:52:17.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.562" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.561" endtime="20201030 15:52:17.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.565" level="INFO">VALUE: [2.8027999999999387e-05, 2.3194000000000686e-05, 2.516699999999955e-05, 2.416699999999855e-05, 2.4096999999997232e-05, 2.031899999999781e-05, 2.6026999999997913e-05, 1.940300000000117e-05, 2.4193999999998217e-05, 2.2278000000000575e-05, 2.033299999999738e-05, 2.4165999999999077e-05, 2.5193999999999217e-05, 2.3249999999998966e-05, 2.2250000000001435e-05, 2.0361999999999464e-05, 2.2262999999998062e-05, 2.2236000000001865e-05, 2.3235999999999396e-05, 2.2278000000000575e-05, 2.611100000000227e-05, 2.415300000000245e-05, 2.1291999999999145e-05, 2.2264000000001005e-05, 2.0291999999998145e-05, 2.2250000000001435e-05, 2.418100000000159e-05, 1.938899999999813e-05, 2.0361999999999464e-05, 2.413900000000288e-05, 2.418100000000159e-05, 2.131900000000228e-05, 1.9457999999999975e-05, 2.3278000000001575e-05, 2.0334000000000324e-05, 2.0347999999999894e-05, 2.3207999999996787e-05, 2.513900000000041e-05, 2.615300000000098e-05, 2.130499999999924e-05, 2.416700000000202e-05, 2.512500000000084e-05, 2.233300000000285e-05, 2.037499999999956e-05, 2.4193999999998217e-05, 2.2263999999997536e-05, 2.418100000000159e-05, 2.4179999999998647e-05, 2.130500000000271e-05, 2.4151999999999507e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.563" endtime="20201030 15:52:17.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.559" endtime="20201030 15:52:17.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.570" endtime="20201030 15:52:17.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.568" endtime="20201030 15:52:17.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.567" endtime="20201030 15:52:17.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.212" endtime="20201030 15:52:17.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.211" endtime="20201030 15:52:17.590"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.599" endtime="20201030 15:52:17.619"></status>
</kw>
<msg timestamp="20201030 15:52:17.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.598" endtime="20201030 15:52:17.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.621" endtime="20201030 15:52:17.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.623" endtime="20201030 15:52:17.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.595" endtime="20201030 15:52:17.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.593" endtime="20201030 15:52:17.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.632" endtime="20201030 15:52:17.919"></status>
</kw>
<msg timestamp="20201030 15:52:17.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024785, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:17.630" endtime="20201030 15:52:17.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024750292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024785, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:17.923" endtime="20201030 15:52:17.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.931" endtime="20201030 15:52:17.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.628" endtime="20201030 15:52:17.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.626" endtime="20201030 15:52:17.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.938" level="INFO">${RESULT} = [{'diff': 3.470800000000135e-05}, {'diff': 2.1306000000002184e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.036099999999999e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:17.935" endtime="20201030 15:52:17.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.942" level="INFO">${ACCURACY} = {'diff': [3.470800000000135e-05, 2.1306000000002184e-05, 2.038899999999913e-05, 2.230500000000024e-05, 2.4236000000000396e-05, 2.036099999999999e-05, 2.131899999999881e-05, 2.4166000000002547e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:52:17.939" endtime="20201030 15:52:17.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.946" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.945" endtime="20201030 15:52:17.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.949" level="INFO">VALUE: [3.470800000000135e-05, 2.1306000000002184e-05, 2.038899999999913e-05, 2.230500000000024e-05, 2.4236000000000396e-05, 2.036099999999999e-05, 2.131899999999881e-05, 2.4166000000002547e-05, 2.3250000000002435e-05, 2.418100000000159e-05, 2.131899999999881e-05, 2.034699999999695e-05, 2.036099999999999e-05, 2.512500000000084e-05, 2.229100000000067e-05, 2.420900000000073e-05, 2.419500000000116e-05, 2.3221999999999826e-05, 2.1319999999998285e-05, 2.3221999999999826e-05, 2.4193999999998217e-05, 2.5083999999998136e-05, 2.2276999999997632e-05, 2.137499999999709e-05, 2.613900000000141e-05, 2.131899999999881e-05, 2.131899999999881e-05, 2.133300000000185e-05, 2.512499999999737e-05, 2.518099999999912e-05, 1.940300000000117e-05, 2.131900000000228e-05, 2.03890000000026e-05, 2.2193999999999686e-05, 2.6055999999999996e-05, 2.2276999999997632e-05, 2.129099999999967e-05, 2.033300000000085e-05, 2.6110999999998802e-05, 2.229100000000067e-05, 2.320899999999973e-05, 1.93890000000016e-05, 2.1320000000001754e-05, 2.3249999999998966e-05, 2.037499999999956e-05, 2.3249999999998966e-05, 2.513899999999694e-05, 2.2250000000001435e-05, 2.034699999999695e-05, 2.4165999999999077e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.948" endtime="20201030 15:52:17.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.943" endtime="20201030 15:52:17.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.954" endtime="20201030 15:52:17.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.952" endtime="20201030 15:52:17.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.951" endtime="20201030 15:52:17.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.592" endtime="20201030 15:52:17.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.591" endtime="20201030 15:52:17.975"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.983" endtime="20201030 15:52:18.005"></status>
</kw>
<msg timestamp="20201030 15:52:18.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.982" endtime="20201030 15:52:18.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.007" endtime="20201030 15:52:18.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.009" endtime="20201030 15:52:18.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.979" endtime="20201030 15:52:18.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.977" endtime="20201030 15:52:18.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.018" endtime="20201030 15:52:18.304"></status>
</kw>
<msg timestamp="20201030 15:52:18.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.017" endtime="20201030 15:52:18.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.308" endtime="20201030 15:52:18.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.316" endtime="20201030 15:52:18.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.014" endtime="20201030 15:52:18.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.013" endtime="20201030 15:52:18.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.323" level="INFO">${RESULT} = [{'diff': 6.945000000001256e-06}, {'diff': 2.1320000000001754e-05}, {'diff': 2.5110999999997802e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.130500000000271e-05}, {'diff': 2.2305999999999715e-05...</msg>
<status status="PASS" starttime="20201030 15:52:18.319" endtime="20201030 15:52:18.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.327" level="INFO">${ACCURACY} = {'diff': [6.945000000001256e-06, 2.1320000000001754e-05, 2.5110999999997802e-05, 2.3221999999999826e-05, 2.130500000000271e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:18.324" endtime="20201030 15:52:18.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.331" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.330" endtime="20201030 15:52:18.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.334" level="INFO">VALUE: [6.945000000001256e-06, 2.1320000000001754e-05, 2.5110999999997802e-05, 2.3221999999999826e-05, 2.130500000000271e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 2.512500000000084e-05, 2.1305999999998715e-05, 2.6069999999999566e-05, 2.4236000000000396e-05, 1.9430000000000835e-05, 2.2250000000001435e-05, 2.3180000000001116e-05, 2.134700000000142e-05, 2.2319999999999285e-05, 2.131899999999881e-05, 2.229100000000067e-05, 2.034700000000042e-05, 1.938899999999813e-05, 2.04029999999987e-05, 2.5166000000000077e-05, 2.5110999999997802e-05, 2.036099999999999e-05, 1.943100000000031e-05, 2.231899999999981e-05, 2.034700000000042e-05, 2.1277999999999575e-05, 2.130499999999924e-05, 2.3180000000001116e-05, 2.2319999999999285e-05, 2.4249999999999966e-05, 2.1320000000001754e-05, 2.515299999999998e-05, 2.2305999999999715e-05, 1.944499999999988e-05, 2.3194000000000686e-05, 2.2278000000000575e-05, 2.3194000000000686e-05, 2.313900000000188e-05, 2.0402000000002696e-05, 2.5166000000000077e-05, 2.512500000000084e-05, 2.418100000000159e-05, 1.940300000000117e-05, 2.029100000000214e-05, 2.1320000000001754e-05, 2.513900000000041e-05, 2.513900000000041e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.332" endtime="20201030 15:52:18.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.328" endtime="20201030 15:52:18.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.339" endtime="20201030 15:52:18.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.338" endtime="20201030 15:52:18.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.337" endtime="20201030 15:52:18.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.976" endtime="20201030 15:52:18.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.975" endtime="20201030 15:52:18.360"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.369" endtime="20201030 15:52:18.387"></status>
</kw>
<msg timestamp="20201030 15:52:18.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.367" endtime="20201030 15:52:18.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.389" endtime="20201030 15:52:18.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.391" endtime="20201030 15:52:18.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.365" endtime="20201030 15:52:18.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.363" endtime="20201030 15:52:18.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.400" endtime="20201030 15:52:18.686"></status>
</kw>
<msg timestamp="20201030 15:52:18.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023976708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.399" endtime="20201030 15:52:18.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023953472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023976708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.691" endtime="20201030 15:52:18.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.699" endtime="20201030 15:52:18.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.396" endtime="20201030 15:52:18.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.395" endtime="20201030 15:52:18.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.705" level="INFO">${RESULT} = [{'diff': 2.3235999999999396e-05}, {'diff': 1.9401999999998226e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.323699999999887e-05}, {'diff': 2.230500000000024e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:18.702" endtime="20201030 15:52:18.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.710" level="INFO">${ACCURACY} = {'diff': [2.3235999999999396e-05, 1.9401999999998226e-05, 2.2250000000001435e-05, 2.513900000000041e-05, 2.323699999999887e-05, 2.230500000000024e-05, 2.415299999999898e-05, 2.415300000000245e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 15:52:18.706" endtime="20201030 15:52:18.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.715" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.714" endtime="20201030 15:52:18.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.717" level="INFO">VALUE: [2.3235999999999396e-05, 1.9401999999998226e-05, 2.2250000000001435e-05, 2.513900000000041e-05, 2.323699999999887e-05, 2.230500000000024e-05, 2.415299999999898e-05, 2.415300000000245e-05, 2.1292000000002614e-05, 2.519500000000216e-05, 2.418100000000159e-05, 2.034700000000042e-05, 2.1319999999998285e-05, 2.0429999999998366e-05, 2.2263999999997536e-05, 2.036099999999999e-05, 2.2276999999997632e-05, 2.134700000000142e-05, 2.0387999999999656e-05, 2.2264000000001005e-05, 2.2249999999997966e-05, 2.416699999999855e-05, 2.2264000000001005e-05, 2.2362000000001464e-05, 2.2305999999999715e-05, 2.3208000000000256e-05, 2.131900000000228e-05, 2.233299999999938e-05, 2.229100000000067e-05, 2.131900000000228e-05, 2.4180000000002116e-05, 2.3221999999999826e-05, 1.9416000000001266e-05, 2.3250000000002435e-05, 2.2319999999999285e-05, 2.611100000000227e-05, 2.036099999999999e-05, 2.2305999999999715e-05, 2.131899999999881e-05, 2.2319999999999285e-05, 2.1348000000000894e-05, 2.4236000000000396e-05, 2.137500000000056e-05, 2.615299999999751e-05, 2.2278000000000575e-05, 1.9429999999997366e-05, 2.034700000000042e-05, 2.1306000000002184e-05, 2.3221999999999826e-05, 2.323699999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.716" endtime="20201030 15:52:18.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.711" endtime="20201030 15:52:18.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.722" endtime="20201030 15:52:18.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.720" endtime="20201030 15:52:18.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.719" endtime="20201030 15:52:18.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.361" endtime="20201030 15:52:18.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.360" endtime="20201030 15:52:18.743"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.751" endtime="20201030 15:52:18.769"></status>
</kw>
<msg timestamp="20201030 15:52:18.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.750" endtime="20201030 15:52:18.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.770" endtime="20201030 15:52:18.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.773" endtime="20201030 15:52:18.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.747" endtime="20201030 15:52:18.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.745" endtime="20201030 15:52:18.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.782" endtime="20201030 15:52:19.069"></status>
</kw>
<msg timestamp="20201030 15:52:19.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.780" endtime="20201030 15:52:19.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023038347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.074" endtime="20201030 15:52:19.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.082" endtime="20201030 15:52:19.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.778" endtime="20201030 15:52:19.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.776" endtime="20201030 15:52:19.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.088" level="INFO">${RESULT} = [{'diff': 1.3665999999998985e-05}, {'diff': 1.9430000000000835e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.131899999999881e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.3221999999999826e-05...</msg>
<status status="PASS" starttime="20201030 15:52:19.085" endtime="20201030 15:52:19.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.092" level="INFO">${ACCURACY} = {'diff': [1.3665999999998985e-05, 1.9430000000000835e-05, 2.2305999999999715e-05, 2.131899999999881e-05, 2.036099999999999e-05, 2.3221999999999826e-05, 2.037499999999956e-05, 2.320899999999973e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:19.089" endtime="20201030 15:52:19.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.097" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.096" endtime="20201030 15:52:19.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.099" level="INFO">VALUE: [1.3665999999998985e-05, 1.9430000000000835e-05, 2.2305999999999715e-05, 2.131899999999881e-05, 2.036099999999999e-05, 2.3221999999999826e-05, 2.037499999999956e-05, 2.320899999999973e-05, 2.1305999999998715e-05, 2.2304999999996772e-05, 2.229100000000067e-05, 2.418100000000159e-05, 2.413900000000288e-05, 2.411100000000027e-05, 2.037499999999956e-05, 2.5193999999999217e-05, 2.134699999999795e-05, 1.93890000000016e-05, 2.418100000000159e-05, 2.2264000000001005e-05, 2.036099999999999e-05, 2.42230000000003e-05, 2.3320000000000285e-05, 2.3249999999998966e-05, 2.416699999999855e-05, 2.416700000000202e-05, 2.131899999999881e-05, 2.1291999999999145e-05, 2.3221999999999826e-05, 2.0387999999999656e-05, 2.419499999999769e-05, 2.034700000000042e-05, 1.941700000000074e-05, 1.93890000000016e-05, 2.512500000000084e-05, 2.516699999999955e-05, 1.943100000000031e-05, 2.3235999999999396e-05, 2.034700000000042e-05, 2.512499999999737e-05, 2.5166000000000077e-05, 2.418100000000159e-05, 2.1291999999999145e-05, 2.031899999999781e-05, 1.93890000000016e-05, 2.322300000000277e-05, 2.22770000000011e-05, 2.2319999999999285e-05, 2.42230000000003e-05, 2.3193999999997217e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.098" endtime="20201030 15:52:19.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.093" endtime="20201030 15:52:19.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.105" endtime="20201030 15:52:19.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.103" endtime="20201030 15:52:19.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.102" endtime="20201030 15:52:19.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.744" endtime="20201030 15:52:19.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.743" endtime="20201030 15:52:19.125"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.134" endtime="20201030 15:52:19.152"></status>
</kw>
<msg timestamp="20201030 15:52:19.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.133" endtime="20201030 15:52:19.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.154" endtime="20201030 15:52:19.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.157" endtime="20201030 15:52:19.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.130" endtime="20201030 15:52:19.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.128" endtime="20201030 15:52:19.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.165" endtime="20201030 15:52:19.452"></status>
</kw>
<msg timestamp="20201030 15:52:19.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.164" endtime="20201030 15:52:19.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.456" endtime="20201030 15:52:19.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.465" endtime="20201030 15:52:19.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.161" endtime="20201030 15:52:19.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.160" endtime="20201030 15:52:19.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.471" level="INFO">${RESULT} = [{'diff': 1.837500000000103e-05}, {'diff': 2.033300000000085e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.515299999999998e-05}, {'diff': 2.038899999999913e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:19.468" endtime="20201030 15:52:19.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.475" level="INFO">${ACCURACY} = {'diff': [1.837500000000103e-05, 2.033300000000085e-05, 2.2235999999998396e-05, 2.038899999999913e-05, 2.515299999999998e-05, 2.038899999999913e-05, 2.3249999999998966e-05, 2.418099999999812e-05, 2.03...</msg>
<status status="PASS" starttime="20201030 15:52:19.472" endtime="20201030 15:52:19.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.479" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.478" endtime="20201030 15:52:19.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.482" level="INFO">VALUE: [1.837500000000103e-05, 2.033300000000085e-05, 2.2235999999998396e-05, 2.038899999999913e-05, 2.515299999999998e-05, 2.038899999999913e-05, 2.3249999999998966e-05, 2.418099999999812e-05, 2.034700000000042e-05, 1.941699999999727e-05, 2.231899999999981e-05, 2.136100000000099e-05, 2.4208000000001256e-05, 1.9430000000000835e-05, 2.4084000000000605e-05, 2.3249999999998966e-05, 2.236100000000199e-05, 2.42230000000003e-05, 2.518099999999912e-05, 2.136100000000099e-05, 1.9444000000000405e-05, 2.1291999999999145e-05, 2.2180000000000116e-05, 2.134700000000142e-05, 2.234699999999895e-05, 1.941700000000074e-05, 2.3221999999999826e-05, 2.2278000000000575e-05, 2.034700000000042e-05, 2.516700000000302e-05, 2.3264000000002005e-05, 1.943100000000031e-05, 2.615300000000098e-05, 2.0320000000000754e-05, 2.320899999999973e-05, 2.6110999999998802e-05, 2.4277999999999106e-05, 2.1334000000001324e-05, 2.4249999999999966e-05, 2.5110999999997802e-05, 2.512500000000084e-05, 2.229100000000067e-05, 2.3264000000002005e-05, 2.134700000000142e-05, 2.136100000000099e-05, 1.940300000000117e-05, 2.5166000000000077e-05, 2.4236000000000396e-05, 2.230500000000024e-05, 2.5235999999997927e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.481" endtime="20201030 15:52:19.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.476" endtime="20201030 15:52:19.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.488" endtime="20201030 15:52:19.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.486" endtime="20201030 15:52:19.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.485" endtime="20201030 15:52:19.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.126" endtime="20201030 15:52:19.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.126" endtime="20201030 15:52:19.508"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.517" endtime="20201030 15:52:19.534"></status>
</kw>
<msg timestamp="20201030 15:52:19.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.516" endtime="20201030 15:52:19.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.535" endtime="20201030 15:52:19.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.538" endtime="20201030 15:52:19.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.513" endtime="20201030 15:52:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.511" endtime="20201030 15:52:19.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.546" endtime="20201030 15:52:19.833"></status>
</kw>
<msg timestamp="20201030 15:52:19.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02106975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:19.545" endtime="20201030 15:52:19.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02106975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:19.837" endtime="20201030 15:52:19.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.845" endtime="20201030 15:52:19.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.542" endtime="20201030 15:52:19.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.541" endtime="20201030 15:52:19.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.852" level="INFO">${RESULT} = [{'diff': 1.1792000000000052e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.134700000000142e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.033299999999738e-05}, {'diff': 2.034700000000042e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:19.848" endtime="20201030 15:52:19.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.856" level="INFO">${ACCURACY} = {'diff': [1.1792000000000052e-05, 2.512500000000084e-05, 2.134700000000142e-05, 2.231899999999981e-05, 2.033299999999738e-05, 2.034700000000042e-05, 2.419500000000116e-05, 2.1429999999999366e-05, 2.61...</msg>
<status status="PASS" starttime="20201030 15:52:19.853" endtime="20201030 15:52:19.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.861" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.860" endtime="20201030 15:52:19.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.863" level="INFO">VALUE: [1.1792000000000052e-05, 2.512500000000084e-05, 2.134700000000142e-05, 2.231899999999981e-05, 2.033299999999738e-05, 2.034700000000042e-05, 2.419500000000116e-05, 2.1429999999999366e-05, 2.613900000000141e-05, 2.415299999999898e-05, 2.1305999999998715e-05, 2.4305999999998246e-05, 2.2305999999999715e-05, 1.9402000000001696e-05, 2.515299999999998e-05, 2.6069000000000092e-05, 2.512500000000084e-05, 2.515299999999998e-05, 2.3250000000002435e-05, 2.229100000000067e-05, 2.416699999999855e-05, 2.4222000000000826e-05, 2.033299999999738e-05, 2.418100000000159e-05, 2.3221999999999826e-05, 2.415300000000245e-05, 2.037499999999956e-05, 2.231899999999981e-05, 2.3235999999999396e-05, 2.512499999999737e-05, 2.2263999999997536e-05, 2.2264000000001005e-05, 2.416699999999855e-05, 2.518100000000259e-05, 2.3264000000002005e-05, 2.318100000000059e-05, 2.320899999999973e-05, 2.4194000000001686e-05, 2.1250000000000435e-05, 2.3166000000001546e-05, 2.512500000000084e-05, 2.1362000000000464e-05, 2.3249999999998966e-05, 2.512500000000084e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.513900000000041e-05, 2.415299999999898e-05, 2.3221999999999826e-05, 2.136100000000099e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.862" endtime="20201030 15:52:19.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.857" endtime="20201030 15:52:19.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.868" endtime="20201030 15:52:19.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.867" endtime="20201030 15:52:19.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.866" endtime="20201030 15:52:19.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.509" endtime="20201030 15:52:19.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.509" endtime="20201030 15:52:19.889"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.898" endtime="20201030 15:52:19.915"></status>
</kw>
<msg timestamp="20201030 15:52:19.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.896" endtime="20201030 15:52:19.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.917" endtime="20201030 15:52:19.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.919" endtime="20201030 15:52:19.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.893" endtime="20201030 15:52:19.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.891" endtime="20201030 15:52:19.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.928" endtime="20201030 15:52:20.215"></status>
</kw>
<msg timestamp="20201030 15:52:20.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:19.927" endtime="20201030 15:52:20.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:20.220" endtime="20201030 15:52:20.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.228" endtime="20201030 15:52:20.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.924" endtime="20201030 15:52:20.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.922" endtime="20201030 15:52:20.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.235" level="INFO">${RESULT} = [{'diff': 2.415299999999898e-05}, {'diff': 2.1334000000001324e-05}, {'diff': 1.9430000000000835e-05}, {'diff': 2.0458000000000975e-05}, {'diff': 2.5166000000000077e-05}, {'diff': 2.2305999999999715e-0...</msg>
<status status="PASS" starttime="20201030 15:52:20.232" endtime="20201030 15:52:20.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.239" level="INFO">${ACCURACY} = {'diff': [2.415299999999898e-05, 2.1334000000001324e-05, 1.9430000000000835e-05, 2.0458000000000975e-05, 2.5166000000000077e-05, 2.2305999999999715e-05, 1.9415999999997796e-05, 2.32229999999993e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:20.236" endtime="20201030 15:52:20.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.244" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.243" endtime="20201030 15:52:20.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.246" level="INFO">VALUE: [2.415299999999898e-05, 2.1334000000001324e-05, 1.9430000000000835e-05, 2.0458000000000975e-05, 2.5166000000000077e-05, 2.2305999999999715e-05, 1.9415999999997796e-05, 2.32229999999993e-05, 2.515299999999998e-05, 2.1334000000001324e-05, 2.038899999999913e-05, 2.036099999999999e-05, 2.513900000000041e-05, 2.233299999999938e-05, 2.419500000000116e-05, 2.418099999999812e-05, 2.133300000000185e-05, 2.2249999999997966e-05, 2.4236000000000396e-05, 2.613900000000141e-05, 2.5166000000000077e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.036099999999999e-05, 2.4193999999998217e-05, 2.2236000000001865e-05, 2.034700000000042e-05, 2.1362000000000464e-05, 2.4222000000000826e-05, 2.136100000000099e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.134700000000142e-05, 2.1334000000001324e-05, 2.034700000000042e-05, 2.416700000000202e-05, 2.130499999999924e-05, 2.3277999999998106e-05, 2.036099999999999e-05, 1.9416000000001266e-05, 2.42230000000003e-05, 2.2278000000000575e-05, 2.136100000000099e-05, 2.3264000000002005e-05, 2.037499999999956e-05, 2.134700000000142e-05, 2.230500000000024e-05, 2.512500000000084e-05, 2.2305999999999715e-05, 2.037499999999956e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.245" endtime="20201030 15:52:20.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.240" endtime="20201030 15:52:20.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.251" endtime="20201030 15:52:20.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.250" endtime="20201030 15:52:20.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.249" endtime="20201030 15:52:20.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.890" endtime="20201030 15:52:20.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.889" endtime="20201030 15:52:20.272"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.281" endtime="20201030 15:52:20.303"></status>
</kw>
<msg timestamp="20201030 15:52:20.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.279" endtime="20201030 15:52:20.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.305" endtime="20201030 15:52:20.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.307" endtime="20201030 15:52:20.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.277" endtime="20201030 15:52:20.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.275" endtime="20201030 15:52:20.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.316" endtime="20201030 15:52:20.600"></status>
</kw>
<msg timestamp="20201030 15:52:20.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026055875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026090625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.315" endtime="20201030 15:52:20.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026055875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026090625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.605" endtime="20201030 15:52:20.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.613" endtime="20201030 15:52:20.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.312" endtime="20201030 15:52:20.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.311" endtime="20201030 15:52:20.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.619" level="INFO">${RESULT} = [{'diff': 3.475000000000006e-05}, {'diff': 2.1306000000002184e-05}, {'diff': 2.3249999999998966e-05}, {'diff': 2.4222000000000826e-05}, {'diff': 2.516699999999955e-05}, {'diff': 1.93890000000016e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:20.616" endtime="20201030 15:52:20.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.623" level="INFO">${ACCURACY} = {'diff': [3.475000000000006e-05, 2.1306000000002184e-05, 2.3249999999998966e-05, 2.4222000000000826e-05, 2.516699999999955e-05, 1.93890000000016e-05, 2.320899999999973e-05, 2.2333999999998855e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 15:52:20.620" endtime="20201030 15:52:20.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.628" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.627" endtime="20201030 15:52:20.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.630" level="INFO">VALUE: [3.475000000000006e-05, 2.1306000000002184e-05, 2.3249999999998966e-05, 2.4222000000000826e-05, 2.516699999999955e-05, 1.93890000000016e-05, 2.320899999999973e-05, 2.2333999999998855e-05, 2.0387999999999656e-05, 2.320899999999973e-05, 2.0306000000001184e-05, 2.5222000000001826e-05, 2.3249999999998966e-05, 2.613899999999794e-05, 2.4194000000001686e-05, 2.2236000000001865e-05, 2.037499999999956e-05, 2.3264000000002005e-05, 2.133300000000185e-05, 2.331900000000081e-05, 2.518099999999912e-05, 2.034700000000042e-05, 2.4208000000001256e-05, 2.416699999999855e-05, 2.5194000000002686e-05, 2.22770000000011e-05, 2.037499999999956e-05, 2.3207999999996787e-05, 2.5083999999998136e-05, 1.9457999999999975e-05, 2.136100000000099e-05, 2.518100000000259e-05, 2.2278000000000575e-05, 2.6082999999999662e-05, 2.4193999999998217e-05, 2.0415999999998796e-05, 2.038899999999913e-05, 1.941700000000074e-05, 2.2305999999999715e-05, 1.93890000000016e-05, 2.0306000000001184e-05, 2.2278000000000575e-05, 2.6069000000000092e-05, 2.519499999999869e-05, 1.9444000000000405e-05, 2.2263999999997536e-05, 2.037499999999956e-05, 1.9444000000000405e-05, 2.133300000000185e-05, 2.2292000000000145e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.629" endtime="20201030 15:52:20.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.624" endtime="20201030 15:52:20.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.636" endtime="20201030 15:52:20.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.634" endtime="20201030 15:52:20.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.633" endtime="20201030 15:52:20.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.273" endtime="20201030 15:52:20.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.272" endtime="20201030 15:52:20.657"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.665" endtime="20201030 15:52:20.684"></status>
</kw>
<msg timestamp="20201030 15:52:20.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.664" endtime="20201030 15:52:20.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.685" endtime="20201030 15:52:20.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.688" endtime="20201030 15:52:20.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.661" endtime="20201030 15:52:20.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.659" endtime="20201030 15:52:20.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.696" endtime="20201030 15:52:20.982"></status>
</kw>
<msg timestamp="20201030 15:52:20.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023326028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.695" endtime="20201030 15:52:20.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023326028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023351208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.987" endtime="20201030 15:52:20.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.995" endtime="20201030 15:52:20.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.692" endtime="20201030 15:52:20.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.691" endtime="20201030 15:52:20.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.001" level="INFO">${RESULT} = [{'diff': 2.5179999999999647e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.133300000000185e-05}, {'diff': 2.1291999999999145e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.3249999999998966e-05...</msg>
<status status="PASS" starttime="20201030 15:52:20.998" endtime="20201030 15:52:21.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.006" level="INFO">${ACCURACY} = {'diff': [2.5179999999999647e-05, 2.2221999999998826e-05, 2.133300000000185e-05, 2.1291999999999145e-05, 2.518099999999912e-05, 2.3249999999998966e-05, 2.3207999999996787e-05, 2.4208000000001256e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:21.002" endtime="20201030 15:52:21.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.011" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.010" endtime="20201030 15:52:21.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.013" level="INFO">VALUE: [2.5179999999999647e-05, 2.2221999999998826e-05, 2.133300000000185e-05, 2.1291999999999145e-05, 2.518099999999912e-05, 2.3249999999998966e-05, 2.3207999999996787e-05, 2.4208000000001256e-05, 2.2305999999999715e-05, 2.2250000000001435e-05, 2.037499999999956e-05, 2.423700000000334e-05, 2.036099999999999e-05, 2.0347999999999894e-05, 2.6028000000000856e-05, 2.03890000000026e-05, 2.038899999999913e-05, 2.131899999999881e-05, 2.1291999999999145e-05, 2.3207999999996787e-05, 2.6028000000000856e-05, 2.3249999999998966e-05, 1.940300000000117e-05, 2.034700000000042e-05, 2.418100000000159e-05, 2.413899999999941e-05, 2.22770000000011e-05, 2.04029999999987e-05, 2.6110999999998802e-05, 2.1305999999998715e-05, 1.941700000000074e-05, 2.4236000000000396e-05, 2.037499999999956e-05, 2.40970000000007e-05, 2.3194000000000686e-05, 2.038899999999913e-05, 2.4208000000001256e-05, 2.2235999999998396e-05, 2.133299999999838e-05, 2.130499999999924e-05, 2.0347999999999894e-05, 2.04029999999987e-05, 2.611100000000227e-05, 2.6097999999998706e-05, 2.4165999999999077e-05, 2.5096999999998232e-05, 2.036099999999999e-05, 2.3180000000001116e-05, 2.3249999999998966e-05, 2.1305999999998715e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.012" endtime="20201030 15:52:21.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.007" endtime="20201030 15:52:21.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.018" endtime="20201030 15:52:21.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.017" endtime="20201030 15:52:21.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.015" endtime="20201030 15:52:21.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.657" endtime="20201030 15:52:21.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.657" endtime="20201030 15:52:21.039"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.047" endtime="20201030 15:52:21.068"></status>
</kw>
<msg timestamp="20201030 15:52:21.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.046" endtime="20201030 15:52:21.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.070" endtime="20201030 15:52:21.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.072" endtime="20201030 15:52:21.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.043" endtime="20201030 15:52:21.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.041" endtime="20201030 15:52:21.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.081" endtime="20201030 15:52:21.369"></status>
</kw>
<msg timestamp="20201030 15:52:21.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.080" endtime="20201030 15:52:21.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.373" endtime="20201030 15:52:21.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.381" endtime="20201030 15:52:21.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.077" endtime="20201030 15:52:21.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.075" endtime="20201030 15:52:21.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.388" level="INFO">${RESULT} = [{'diff': 3.083400000000042e-05}, {'diff': 1.9430000000000835e-05}, {'diff': 2.4180000000002116e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.1319999999998285e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:21.385" endtime="20201030 15:52:21.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.392" level="INFO">${ACCURACY} = {'diff': [3.083400000000042e-05, 1.9430000000000835e-05, 2.4180000000002116e-05, 2.416699999999855e-05, 2.038899999999913e-05, 2.1319999999998285e-05, 2.4222000000000826e-05, 1.9430000000000835e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:21.389" endtime="20201030 15:52:21.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.396" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.395" endtime="20201030 15:52:21.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.399" level="INFO">VALUE: [3.083400000000042e-05, 1.9430000000000835e-05, 2.4180000000002116e-05, 2.416699999999855e-05, 2.038899999999913e-05, 2.1319999999998285e-05, 2.4222000000000826e-05, 1.9430000000000835e-05, 1.94029999999977e-05, 2.511100000000127e-05, 2.5179999999999647e-05, 1.9416000000001266e-05, 2.318099999999712e-05, 2.4208000000001256e-05, 2.1320000000001754e-05, 2.3221999999999826e-05, 2.2278000000000575e-05, 2.129099999999967e-05, 2.133300000000185e-05, 2.0347999999999894e-05, 1.9416000000001266e-05, 2.4166000000002547e-05, 2.037500000000303e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.1306000000002184e-05, 2.1415999999999796e-05, 2.412499999999984e-05, 2.415299999999898e-05, 2.036099999999999e-05, 1.9471999999999545e-05, 2.5166000000000077e-05, 2.329100000000167e-05, 2.3263999999998536e-05, 2.136100000000099e-05, 2.2276999999997632e-05, 2.4222000000000826e-05, 2.5179999999999647e-05, 2.6082999999999662e-05, 2.1291999999999145e-05, 1.93890000000016e-05, 2.037500000000303e-05, 2.4235999999996927e-05, 2.1291999999999145e-05, 2.038899999999913e-05, 2.3264000000002005e-05, 2.513900000000041e-05, 2.4194000000001686e-05, 1.940300000000117e-05, 2.512500000000084e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.397" endtime="20201030 15:52:21.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.393" endtime="20201030 15:52:21.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.404" endtime="20201030 15:52:21.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.402" endtime="20201030 15:52:21.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.401" endtime="20201030 15:52:21.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.040" endtime="20201030 15:52:21.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.039" endtime="20201030 15:52:21.424"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.433" endtime="20201030 15:52:21.452"></status>
</kw>
<msg timestamp="20201030 15:52:21.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.431" endtime="20201030 15:52:21.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.453" endtime="20201030 15:52:21.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.456" endtime="20201030 15:52:21.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.429" endtime="20201030 15:52:21.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.427" endtime="20201030 15:52:21.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.465" endtime="20201030 15:52:21.750"></status>
</kw>
<msg timestamp="20201030 15:52:21.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024374042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.463" endtime="20201030 15:52:21.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024374042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.754" endtime="20201030 15:52:21.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.762" endtime="20201030 15:52:21.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.461" endtime="20201030 15:52:21.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.459" endtime="20201030 15:52:21.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.769" level="INFO">${RESULT} = [{'diff': 3.07639999999991e-05}, {'diff': 2.133299999999838e-05}, {'diff': 2.511100000000127e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.2305999999999715e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:21.765" endtime="20201030 15:52:21.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.773" level="INFO">${ACCURACY} = {'diff': [3.07639999999991e-05, 2.133299999999838e-05, 2.511100000000127e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.130499999999924e-05, 2.6082999999999662e-05, 2.51...</msg>
<status status="PASS" starttime="20201030 15:52:21.770" endtime="20201030 15:52:21.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.777" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.776" endtime="20201030 15:52:21.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.779" level="INFO">VALUE: [3.07639999999991e-05, 2.133299999999838e-05, 2.511100000000127e-05, 2.2292000000000145e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.130499999999924e-05, 2.6082999999999662e-05, 2.516699999999955e-05, 1.9430000000000835e-05, 2.3221999999999826e-05, 2.512500000000084e-05, 2.03890000000026e-05, 1.940300000000117e-05, 2.2292000000000145e-05, 2.416699999999855e-05, 2.129099999999967e-05, 2.416699999999855e-05, 2.419500000000116e-05, 2.5166000000000077e-05, 2.037499999999956e-05, 2.3277999999998106e-05, 1.941700000000074e-05, 2.3221999999999826e-05, 2.036099999999999e-05, 2.6069000000000092e-05, 2.136100000000099e-05, 2.233299999999938e-05, 2.2290999999997202e-05, 2.416700000000202e-05, 2.6069000000000092e-05, 2.416699999999855e-05, 2.1320000000001754e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2.0334000000000324e-05, 2.4179999999998647e-05, 2.0306000000001184e-05, 2.3249999999998966e-05, 2.136100000000099e-05, 2.131900000000228e-05, 2.2334000000002324e-05, 2.515299999999998e-05, 2.134699999999795e-05, 2.320899999999973e-05, 2.4165999999999077e-05, 1.944499999999988e-05, 2.6110999999998802e-05, 1.9387999999998656e-05, 2.2264000000001005e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.778" endtime="20201030 15:52:21.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.774" endtime="20201030 15:52:21.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.785" endtime="20201030 15:52:21.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.784" endtime="20201030 15:52:21.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.783" endtime="20201030 15:52:21.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.425" endtime="20201030 15:52:21.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.425" endtime="20201030 15:52:21.806"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.815" endtime="20201030 15:52:21.835"></status>
</kw>
<msg timestamp="20201030 15:52:21.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.813" endtime="20201030 15:52:21.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.836" endtime="20201030 15:52:21.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.839" endtime="20201030 15:52:21.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.810" endtime="20201030 15:52:21.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.808" endtime="20201030 15:52:21.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.848" endtime="20201030 15:52:22.133"></status>
</kw>
<msg timestamp="20201030 15:52:22.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.846" endtime="20201030 15:52:22.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024489528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024504194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.137" endtime="20201030 15:52:22.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.145" endtime="20201030 15:52:22.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.844" endtime="20201030 15:52:22.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.842" endtime="20201030 15:52:22.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.151" level="INFO">${RESULT} = [{'diff': 1.4665999999999985e-05}, {'diff': 2.3262999999999062e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.14029999999997e-05}, {'diff': 2.040300000000217e-05}, {'diff': 2.2250000000001435e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:22.148" endtime="20201030 15:52:22.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.156" level="INFO">${ACCURACY} = {'diff': [1.4665999999999985e-05, 2.3262999999999062e-05, 2.1264000000000005e-05, 2.14029999999997e-05, 2.040300000000217e-05, 2.2250000000001435e-05, 2.6096999999999232e-05, 2.519499999999869e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:22.152" endtime="20201030 15:52:22.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.161" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.160" endtime="20201030 15:52:22.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.163" level="INFO">VALUE: [1.4665999999999985e-05, 2.3262999999999062e-05, 2.1264000000000005e-05, 2.14029999999997e-05, 2.040300000000217e-05, 2.2250000000001435e-05, 2.6096999999999232e-05, 2.519499999999869e-05, 2.231899999999981e-05, 2.513900000000041e-05, 2.034700000000042e-05, 2.519499999999869e-05, 2.319499999999669e-05, 1.940300000000117e-05, 2.3249999999998966e-05, 2.419499999999769e-05, 2.3249999999998966e-05, 2.5194000000002686e-05, 2.037499999999956e-05, 2.1264000000000005e-05, 2.511100000000127e-05, 2.134699999999795e-05, 2.133300000000185e-05, 2.033300000000085e-05, 2.5096999999998232e-05, 2.229100000000067e-05, 2.515299999999998e-05, 2.3221999999999826e-05, 2.613899999999794e-05, 1.9416000000001266e-05, 2.1348000000000894e-05, 2.3278000000001575e-05, 2.137500000000056e-05, 2.0401999999999226e-05, 2.3277999999998106e-05, 2.036099999999999e-05, 2.0361999999999464e-05, 2.4208000000001256e-05, 2.3291999999997676e-05, 2.6069999999999566e-05, 2.2278000000000575e-05, 2.038899999999913e-05, 2.03890000000026e-05, 2.1291999999999145e-05, 2.3235999999999396e-05, 2.4236000000000396e-05, 2.1347999999997425e-05, 2.2278000000000575e-05, 2.3221999999999826e-05, 2.518100000000259e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.162" endtime="20201030 15:52:22.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.157" endtime="20201030 15:52:22.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.168" endtime="20201030 15:52:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.167" endtime="20201030 15:52:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.166" endtime="20201030 15:52:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.807" endtime="20201030 15:52:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.806" endtime="20201030 15:52:22.189"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.198" endtime="20201030 15:52:22.220"></status>
</kw>
<msg timestamp="20201030 15:52:22.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.196" endtime="20201030 15:52:22.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.222" endtime="20201030 15:52:22.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.224" endtime="20201030 15:52:22.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.194" endtime="20201030 15:52:22.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.192" endtime="20201030 15:52:22.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.233" endtime="20201030 15:52:22.521"></status>
</kw>
<msg timestamp="20201030 15:52:22.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023260917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.232" endtime="20201030 15:52:22.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023229028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023260917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.525" endtime="20201030 15:52:22.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.534" endtime="20201030 15:52:22.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.229" endtime="20201030 15:52:22.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.227" endtime="20201030 15:52:22.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.540" level="INFO">${RESULT} = [{'diff': 3.188900000000022e-05}, {'diff': 2.413899999999941e-05}, {'diff': 1.9361999999998464e-05}, {'diff': 2.512500000000084e-05}, {'diff': 1.941699999999727e-05}, {'diff': 2.515299999999998e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:22.537" endtime="20201030 15:52:22.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.544" level="INFO">${ACCURACY} = {'diff': [3.188900000000022e-05, 2.413899999999941e-05, 1.9361999999998464e-05, 2.512500000000084e-05, 1.941699999999727e-05, 2.515299999999998e-05, 2.033300000000085e-05, 2.04029999999987e-05, 2.6139...</msg>
<status status="PASS" starttime="20201030 15:52:22.541" endtime="20201030 15:52:22.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.548" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.547" endtime="20201030 15:52:22.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.551" level="INFO">VALUE: [3.188900000000022e-05, 2.413899999999941e-05, 1.9361999999998464e-05, 2.512500000000084e-05, 1.941699999999727e-05, 2.515299999999998e-05, 2.033300000000085e-05, 2.04029999999987e-05, 2.613900000000141e-05, 2.515299999999998e-05, 2.0333999999996855e-05, 2.6069000000000092e-05, 2.415299999999898e-05, 2.3236000000002865e-05, 2.230500000000024e-05, 2.416700000000202e-05, 2.131899999999881e-05, 2.320899999999973e-05, 2.1291999999999145e-05, 2.513900000000041e-05, 2.5166000000000077e-05, 2.137500000000056e-05, 2.3264000000002005e-05, 2.3250000000002435e-05, 2.6096999999999232e-05, 2.3250000000002435e-05, 2.136100000000099e-05, 2.3235999999999396e-05, 2.0292000000001614e-05, 2.131899999999881e-05, 2.134699999999795e-05, 2.3222000000003296e-05, 2.5082999999998662e-05, 2.034700000000042e-05, 2.6082999999999662e-05, 2.515299999999998e-05, 2.038899999999913e-05, 2.2263999999997536e-05, 2.131899999999881e-05, 2.418099999999812e-05, 2.3278000000001575e-05, 2.2292000000000145e-05, 2.0347999999999894e-05, 1.9429999999997366e-05, 2.231899999999981e-05, 2.513900000000041e-05, 1.937499999999856e-05, 1.940300000000117e-05, 2.22770000000011e-05, 2.513900000000041e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.549" endtime="20201030 15:52:22.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.545" endtime="20201030 15:52:22.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.560" endtime="20201030 15:52:22.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.559" endtime="20201030 15:52:22.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.557" endtime="20201030 15:52:22.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.190" endtime="20201030 15:52:22.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.189" endtime="20201030 15:52:22.581"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.589" endtime="20201030 15:52:22.608"></status>
</kw>
<msg timestamp="20201030 15:52:22.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.588" endtime="20201030 15:52:22.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.609" endtime="20201030 15:52:22.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.612" endtime="20201030 15:52:22.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.585" endtime="20201030 15:52:22.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.583" endtime="20201030 15:52:22.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.621" endtime="20201030 15:52:22.906"></status>
</kw>
<msg timestamp="20201030 15:52:22.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023312014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023328556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.619" endtime="20201030 15:52:22.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023312014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023328556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.911" endtime="20201030 15:52:22.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.919" endtime="20201030 15:52:22.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.617" endtime="20201030 15:52:22.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.615" endtime="20201030 15:52:22.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.925" level="INFO">${RESULT} = [{'diff': 1.6542000000001333e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.3221999999999826e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 1.94029999999977e-05}, {'diff': 2.511100000000127e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:22.922" endtime="20201030 15:52:22.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.929" level="INFO">${ACCURACY} = {'diff': [1.6542000000001333e-05, 2.513900000000041e-05, 2.3221999999999826e-05, 2.2278000000000575e-05, 1.94029999999977e-05, 2.511100000000127e-05, 2.3250000000002435e-05, 2.3263999999998536e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:22.926" endtime="20201030 15:52:22.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.934" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.933" endtime="20201030 15:52:22.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.936" level="INFO">VALUE: [1.6542000000001333e-05, 2.513900000000041e-05, 2.3221999999999826e-05, 2.2278000000000575e-05, 1.94029999999977e-05, 2.511100000000127e-05, 2.3250000000002435e-05, 2.3263999999998536e-05, 1.938899999999813e-05, 2.4179999999998647e-05, 2.131899999999881e-05, 2.034700000000042e-05, 2.231899999999981e-05, 2.0402000000002696e-05, 1.940300000000117e-05, 2.130499999999924e-05, 2.131899999999881e-05, 1.944499999999988e-05, 2.4263999999999536e-05, 2.4236000000000396e-05, 2.320899999999973e-05, 2.3221999999999826e-05, 1.941700000000074e-05, 2.3249999999998966e-05, 2.415299999999898e-05, 2.131899999999881e-05, 2.512500000000084e-05, 2.3235999999999396e-05, 2.136100000000099e-05, 2.133299999999838e-05, 2.220899999999873e-05, 2.416699999999855e-05, 1.941700000000074e-05, 2.137500000000056e-05, 2.2264000000001005e-05, 2.6069000000000092e-05, 2.5110999999997802e-05, 2.034700000000042e-05, 2.037499999999956e-05, 2.515299999999998e-05, 1.93890000000016e-05, 2.3221999999999826e-05, 2.512500000000084e-05, 2.2264000000001005e-05, 2.5166000000000077e-05, 2.3249999999998966e-05, 2.5152000000000507e-05, 2.418099999999812e-05, 2.419500000000116e-05, 2.4222000000000826e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.935" endtime="20201030 15:52:22.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.930" endtime="20201030 15:52:22.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.942" endtime="20201030 15:52:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.941" endtime="20201030 15:52:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.939" endtime="20201030 15:52:22.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.582" endtime="20201030 15:52:22.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.581" endtime="20201030 15:52:22.963"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.972" endtime="20201030 15:52:22.993"></status>
</kw>
<msg timestamp="20201030 15:52:22.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.970" endtime="20201030 15:52:22.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.995" endtime="20201030 15:52:22.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.997" endtime="20201030 15:52:22.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.967" endtime="20201030 15:52:22.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.965" endtime="20201030 15:52:22.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.006" endtime="20201030 15:52:23.292"></status>
</kw>
<msg timestamp="20201030 15:52:23.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.004" endtime="20201030 15:52:23.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023032653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.296" endtime="20201030 15:52:23.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.304" endtime="20201030 15:52:23.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.002" endtime="20201030 15:52:23.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.000" endtime="20201030 15:52:23.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.310" level="INFO">${RESULT} = [{'diff': 5.9486000000000955e-05}, {'diff': 5.476400000000228e-05}, {'diff': 5.191700000000202e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.186100000000027e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:23.307" endtime="20201030 15:52:23.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.316" level="INFO">${ACCURACY} = {'diff': [5.9486000000000955e-05, 5.476400000000228e-05, 5.191700000000202e-05, 5.099999999999896e-05, 5.190299999999898e-05, 5.186100000000027e-05, 5.001300000000153e-05, 5.377800000000085e-05, 5.191...</msg>
<status status="PASS" starttime="20201030 15:52:23.312" endtime="20201030 15:52:23.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.320" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.319" endtime="20201030 15:52:23.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.323" level="INFO">VALUE: [5.9486000000000955e-05, 5.476400000000228e-05, 5.191700000000202e-05, 5.099999999999896e-05, 5.190299999999898e-05, 5.186100000000027e-05, 5.001300000000153e-05, 5.377800000000085e-05, 5.191700000000202e-05, 5.4777999999998384e-05, 5.379099999999748e-05, 5.662500000000112e-05, 5.095800000000025e-05, 5.093100000000059e-05, 5.373600000000214e-05, 5.381999999999956e-05, 5.284699999999823e-05, 5.097199999999982e-05, 4.995899999999873e-05, 5.087499999999884e-05, 5.098599999999939e-05, 5.570900000000101e-05, 5.3929999999997175e-05, 5.18609999999968e-05, 4.902799999999957e-05, 5.0943999999997214e-05, 5.3735999999998674e-05, 5.479200000000142e-05, 5.090300000000145e-05, 5.481900000000109e-05, 5.093099999999712e-05, 5.3777999999997383e-05, 5.56670000000023e-05, 4.994399999999968e-05, 5.183299999999766e-05, 5.097199999999982e-05, 5.282000000000203e-05, 5.665300000000026e-05, 5.383399999999913e-05, 5.284800000000117e-05, 5.480500000000152e-05, 4.997199999999882e-05, 5.186100000000027e-05, 5.480500000000152e-05, 5.186100000000027e-05, 5.562500000000012e-05, 5.288900000000041e-05, 5.281899999999909e-05, 5.6652000000000785e-05, 5.384699999999923e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.321" endtime="20201030 15:52:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.316" endtime="20201030 15:52:23.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.327" endtime="20201030 15:52:23.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.326" endtime="20201030 15:52:23.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.325" endtime="20201030 15:52:23.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.964" endtime="20201030 15:52:23.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.963" endtime="20201030 15:52:23.348"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.357" endtime="20201030 15:52:23.381"></status>
</kw>
<msg timestamp="20201030 15:52:23.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.355" endtime="20201030 15:52:23.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.382" endtime="20201030 15:52:23.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.385" endtime="20201030 15:52:23.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.353" endtime="20201030 15:52:23.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.351" endtime="20201030 15:52:23.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.394" endtime="20201030 15:52:23.680"></status>
</kw>
<msg timestamp="20201030 15:52:23.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024680667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.392" endtime="20201030 15:52:23.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024680667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.684" endtime="20201030 15:52:23.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.693" endtime="20201030 15:52:23.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.390" endtime="20201030 15:52:23.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.388" endtime="20201030 15:52:23.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.699" level="INFO">${RESULT} = [{'diff': 3.567999999999974e-05}, {'diff': 5.6679999999999925e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 4.993000000000011e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.290299999999998e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:23.696" endtime="20201030 15:52:23.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.703" level="INFO">${ACCURACY} = {'diff': [3.567999999999974e-05, 5.6679999999999925e-05, 5.4777999999998384e-05, 4.993000000000011e-05, 5.5722000000001104e-05, 5.290299999999998e-05, 5.187499999999984e-05, 5.191699999999855e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 15:52:23.700" endtime="20201030 15:52:23.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.707" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.706" endtime="20201030 15:52:23.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.710" level="INFO">VALUE: [3.567999999999974e-05, 5.6679999999999925e-05, 5.4777999999998384e-05, 4.993000000000011e-05, 5.5722000000001104e-05, 5.290299999999998e-05, 5.187499999999984e-05, 5.191699999999855e-05, 5.3763999999997814e-05, 5.184800000000017e-05, 5.18609999999968e-05, 4.997200000000229e-05, 5.4791999999997953e-05, 5.566699999999883e-05, 5.18470000000007e-05, 5.290299999999998e-05, 5.287500000000084e-05, 5.0902000000001973e-05, 5.093100000000059e-05, 5.101399999999853e-05, 5.377800000000085e-05, 5.5722000000001104e-05, 5.5721999999997635e-05, 5.090300000000145e-05, 5.566699999999883e-05, 5.1943999999998214e-05, 4.997199999999882e-05, 5.090299999999798e-05, 5.186100000000027e-05, 5.383299999999966e-05, 5.000000000000143e-05, 5.283399999999813e-05, 5.002800000000057e-05, 5.5736000000000674e-05, 5.183300000000113e-05, 5.184800000000017e-05, 5.276400000000028e-05, 5.56809999999984e-05, 5.281899999999909e-05, 5.572300000000058e-05, 5.5722000000001104e-05, 5.3735999999998674e-05, 5.188899999999941e-05, 5.383399999999913e-05, 5.56670000000023e-05, 5.281899999999909e-05, 5.5722000000001104e-05, 5.669500000000244e-05, 5.281999999999856e-05, 5.005600000000318e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.709" endtime="20201030 15:52:23.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.704" endtime="20201030 15:52:23.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.715" endtime="20201030 15:52:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.713" endtime="20201030 15:52:23.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.712" endtime="20201030 15:52:23.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.349" endtime="20201030 15:52:23.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.348" endtime="20201030 15:52:23.736"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.744" endtime="20201030 15:52:23.766"></status>
</kw>
<msg timestamp="20201030 15:52:23.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.743" endtime="20201030 15:52:23.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.768" endtime="20201030 15:52:23.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.770" endtime="20201030 15:52:23.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.740" endtime="20201030 15:52:23.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.738" endtime="20201030 15:52:23.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.779" endtime="20201030 15:52:24.065"></status>
</kw>
<msg timestamp="20201030 15:52:24.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.778" endtime="20201030 15:52:24.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024083181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.069" endtime="20201030 15:52:24.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.077" endtime="20201030 15:52:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.775" endtime="20201030 15:52:24.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.773" endtime="20201030 15:52:24.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.084" level="INFO">${RESULT} = [{'diff': 6.047299999999839e-05}, {'diff': 5.480600000000099e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.08469999999997e-05}, {'diff': 5.38479999999987e-05}, {'diff': 5.476299999999934e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:24.081" endtime="20201030 15:52:24.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.088" level="INFO">${ACCURACY} = {'diff': [6.047299999999839e-05, 5.480600000000099e-05, 5.18470000000007e-05, 5.08469999999997e-05, 5.38479999999987e-05, 5.476299999999934e-05, 5.576300000000034e-05, 5.5694000000001964e-05, 5.188799...</msg>
<status status="PASS" starttime="20201030 15:52:24.085" endtime="20201030 15:52:24.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.092" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.091" endtime="20201030 15:52:24.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.095" level="INFO">VALUE: [6.047299999999839e-05, 5.480600000000099e-05, 5.18470000000007e-05, 5.08469999999997e-05, 5.38479999999987e-05, 5.476299999999934e-05, 5.576300000000034e-05, 5.5694000000001964e-05, 5.1887999999999934e-05, 5.290299999999998e-05, 5.566699999999883e-05, 4.902799999999957e-05, 5.480499999999805e-05, 5.086099999999927e-05, 5.377800000000085e-05, 5.093099999999712e-05, 5.184699999999723e-05, 5.277799999999985e-05, 5.479100000000195e-05, 5.190299999999898e-05, 5.279099999999995e-05, 5.083300000000013e-05, 5.5694000000001964e-05, 5.6707999999999065e-05, 5.090300000000145e-05, 5.562500000000012e-05, 4.995799999999925e-05, 4.998600000000186e-05, 5.380599999999999e-05, 5.095800000000025e-05, 5.199999999999996e-05, 5.5693999999998495e-05, 5.5763999999999814e-05, 5.180500000000199e-05, 5.0929999999997644e-05, 5.4777999999998384e-05, 5.279099999999995e-05, 4.9973000000001766e-05, 5.382000000000303e-05, 5.191699999999855e-05, 5.086100000000274e-05, 5.0943999999997214e-05, 5.5707999999998065e-05, 5.377800000000085e-05, 5.09729999999993e-05, 5.383299999999966e-05, 5.286100000000127e-05, 5.280500000000299e-05, 5.4749999999999244e-05, 5.379200000000042e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.093" endtime="20201030 15:52:24.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.089" endtime="20201030 15:52:24.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.100" endtime="20201030 15:52:24.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.099" endtime="20201030 15:52:24.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.098" endtime="20201030 15:52:24.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.737" endtime="20201030 15:52:24.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.736" endtime="20201030 15:52:24.121"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.130" endtime="20201030 15:52:24.149"></status>
</kw>
<msg timestamp="20201030 15:52:24.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.128" endtime="20201030 15:52:24.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.151" endtime="20201030 15:52:24.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.153" endtime="20201030 15:52:24.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.126" endtime="20201030 15:52:24.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.124" endtime="20201030 15:52:24.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.163" endtime="20201030 15:52:24.448"></status>
</kw>
<msg timestamp="20201030 15:52:24.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.161" endtime="20201030 15:52:24.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020336903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.452" endtime="20201030 15:52:24.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.460" endtime="20201030 15:52:24.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.158" endtime="20201030 15:52:24.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.156" endtime="20201030 15:52:24.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.466" level="INFO">${RESULT} = [{'diff': 4.1374999999999745e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.5805999999998523e-05}, {'diff': 5.376400000000128e-05}, {'diff': 5.104200000000114e-05}, {'diff': 5.483400000000013e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:24.463" endtime="20201030 15:52:24.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.471" level="INFO">${ACCURACY} = {'diff': [4.1374999999999745e-05, 5.288900000000041e-05, 5.5805999999998523e-05, 5.376400000000128e-05, 5.104200000000114e-05, 5.483400000000013e-05, 5.281899999999909e-05, 4.9973000000001766e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 15:52:24.467" endtime="20201030 15:52:24.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.476" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.475" endtime="20201030 15:52:24.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.478" level="INFO">VALUE: [4.1374999999999745e-05, 5.288900000000041e-05, 5.5805999999998523e-05, 5.376400000000128e-05, 5.104200000000114e-05, 5.483400000000013e-05, 5.281899999999909e-05, 4.9973000000001766e-05, 5.483300000000066e-05, 5.4722000000000104e-05, 5.481900000000109e-05, 5.577699999999991e-05, 5.390300000000098e-05, 5.477700000000238e-05, 5.290299999999998e-05, 4.994399999999968e-05, 5.194500000000116e-05, 5.18470000000007e-05, 5.107000000000028e-05, 5.090300000000145e-05, 5.1014000000002e-05, 5.5707999999998065e-05, 5.484700000000023e-05, 5.666699999999983e-05, 5.566699999999883e-05, 5.2916000000000074e-05, 5.473700000000262e-05, 5.581899999999862e-05, 5.187499999999984e-05, 5.387499999999837e-05, 5.28470000000017e-05, 5.193099999999812e-05, 5.5693999999998495e-05, 5.101399999999853e-05, 5.3763999999997814e-05, 5.388900000000141e-05, 4.993099999999959e-05, 5.4722000000000104e-05, 5.291699999999955e-05, 5.283300000000213e-05, 5.48609999999998e-05, 5.4749999999999244e-05, 5.098599999999939e-05, 5.569500000000144e-05, 5.579200000000242e-05, 4.9945000000002626e-05, 5.194500000000116e-05, 5.280599999999899e-05, 5.197200000000082e-05, 5.10409999999982e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.477" endtime="20201030 15:52:24.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.472" endtime="20201030 15:52:24.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.483" endtime="20201030 15:52:24.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.482" endtime="20201030 15:52:24.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.480" endtime="20201030 15:52:24.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.122" endtime="20201030 15:52:24.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.122" endtime="20201030 15:52:24.504"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.512" endtime="20201030 15:52:24.536"></status>
</kw>
<msg timestamp="20201030 15:52:24.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.511" endtime="20201030 15:52:24.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.537" endtime="20201030 15:52:24.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.540" endtime="20201030 15:52:24.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.508" endtime="20201030 15:52:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.506" endtime="20201030 15:52:24.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.548" endtime="20201030 15:52:24.835"></status>
</kw>
<msg timestamp="20201030 15:52:24.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024510083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024556236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.547" endtime="20201030 15:52:24.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024510083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024556236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.839" endtime="20201030 15:52:24.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.848" endtime="20201030 15:52:24.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.544" endtime="20201030 15:52:24.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.543" endtime="20201030 15:52:24.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.854" level="INFO">${RESULT} = [{'diff': 4.6153000000000166e-05}, {'diff': 5.480500000000152e-05}, {'diff': 4.998599999999839e-05}, {'diff': 5.379199999999695e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.187499999999984e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:24.851" endtime="20201030 15:52:24.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.858" level="INFO">${ACCURACY} = {'diff': [4.6153000000000166e-05, 5.480500000000152e-05, 4.998599999999839e-05, 5.379199999999695e-05, 5.5763999999999814e-05, 5.187499999999984e-05, 4.906999999999828e-05, 5.475000000000271e-05, 5.37...</msg>
<status status="PASS" starttime="20201030 15:52:24.855" endtime="20201030 15:52:24.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.863" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.862" endtime="20201030 15:52:24.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.865" level="INFO">VALUE: [4.6153000000000166e-05, 5.480500000000152e-05, 4.998599999999839e-05, 5.379199999999695e-05, 5.5763999999999814e-05, 5.187499999999984e-05, 4.906999999999828e-05, 5.475000000000271e-05, 5.3749999999998244e-05, 5.379200000000042e-05, 5.281900000000256e-05, 5.482000000000056e-05, 5.186100000000027e-05, 5.377699999999791e-05, 5.384800000000217e-05, 5.5707999999998065e-05, 5.288900000000041e-05, 5.186100000000027e-05, 5.290299999999998e-05, 5.5721999999997635e-05, 5.56809999999984e-05, 5.094500000000016e-05, 5.28470000000017e-05, 5.4735999999999674e-05, 5.100000000000243e-05, 5.188899999999941e-05, 5.663900000000069e-05, 5.290299999999998e-05, 4.991700000000002e-05, 5.1929999999998644e-05, 5.091700000000102e-05, 5.088899999999841e-05, 5.383299999999966e-05, 5.288899999999694e-05, 5.0014000000001e-05, 5.2749999999997244e-05, 5.4707999999997065e-05, 5.100000000000243e-05, 5.379200000000042e-05, 5.2929999999999644e-05, 5.377800000000085e-05, 5.18609999999968e-05, 5.4722000000000104e-05, 5.288900000000041e-05, 5.376400000000128e-05, 5.380500000000052e-05, 5.577699999999991e-05, 5.187499999999984e-05, 5.006899999999981e-05, 5.18470000000007e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.864" endtime="20201030 15:52:24.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.859" endtime="20201030 15:52:24.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.870" endtime="20201030 15:52:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.868" endtime="20201030 15:52:24.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.867" endtime="20201030 15:52:24.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.505" endtime="20201030 15:52:24.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.504" endtime="20201030 15:52:24.891"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.899" endtime="20201030 15:52:24.922"></status>
</kw>
<msg timestamp="20201030 15:52:24.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.898" endtime="20201030 15:52:24.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.924" endtime="20201030 15:52:24.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.926" endtime="20201030 15:52:24.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.895" endtime="20201030 15:52:24.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.893" endtime="20201030 15:52:24.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.935" endtime="20201030 15:52:25.220"></status>
</kw>
<msg timestamp="20201030 15:52:25.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024558514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.934" endtime="20201030 15:52:25.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024558514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024624722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.225" endtime="20201030 15:52:25.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.233" endtime="20201030 15:52:25.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.931" endtime="20201030 15:52:25.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.929" endtime="20201030 15:52:25.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.239" level="INFO">${RESULT} = [{'diff': 6.620800000000163e-05}, {'diff': 4.994399999999968e-05}, {'diff': 5.280599999999899e-05}, {'diff': 5.2929999999999644e-05}, {'diff': 5.0929999999997644e-05}, {'diff': 5.286199999999727e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:25.236" endtime="20201030 15:52:25.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.243" level="INFO">${ACCURACY} = {'diff': [6.620800000000163e-05, 4.994399999999968e-05, 5.280599999999899e-05, 5.2929999999999644e-05, 5.0929999999997644e-05, 5.286199999999727e-05, 5.088900000000188e-05, 5.5791999999998954e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 15:52:25.240" endtime="20201030 15:52:25.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.248" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.247" endtime="20201030 15:52:25.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.250" level="INFO">VALUE: [6.620800000000163e-05, 4.994399999999968e-05, 5.280599999999899e-05, 5.2929999999999644e-05, 5.0929999999997644e-05, 5.286199999999727e-05, 5.088900000000188e-05, 5.5791999999998954e-05, 5.18470000000007e-05, 5.097199999999982e-05, 5.663900000000069e-05, 5.484700000000023e-05, 5.4735999999999674e-05, 5.198600000000039e-05, 5.091699999999755e-05, 5.091700000000102e-05, 5.5694000000001964e-05, 5.666699999999983e-05, 5.2943999999999214e-05, 5.4694000000000964e-05, 4.995799999999925e-05, 5.093000000000111e-05, 5.10279999999981e-05, 5.380599999999999e-05, 5.5708000000001534e-05, 5.18470000000007e-05, 5.580600000000199e-05, 5.280599999999899e-05, 5.6638000000001215e-05, 5.091700000000102e-05, 5.186100000000027e-05, 5.090300000000145e-05, 5.094400000000068e-05, 5.290299999999998e-05, 5.5707999999998065e-05, 5.188900000000288e-05, 5.0929999999997644e-05, 5.377700000000138e-05, 5.101299999999906e-05, 5.377800000000085e-05, 5.379200000000042e-05, 5.293099999999912e-05, 5.280499999999952e-05, 5.288900000000041e-05, 5.388899999999794e-05, 5.279099999999995e-05, 5.280599999999899e-05, 5.280499999999952e-05, 5.002800000000057e-05, 5.187500000000331e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.249" endtime="20201030 15:52:25.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.244" endtime="20201030 15:52:25.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.256" endtime="20201030 15:52:25.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.254" endtime="20201030 15:52:25.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.253" endtime="20201030 15:52:25.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.892" endtime="20201030 15:52:25.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.891" endtime="20201030 15:52:25.277"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.285" endtime="20201030 15:52:25.304"></status>
</kw>
<msg timestamp="20201030 15:52:25.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.284" endtime="20201030 15:52:25.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.306" endtime="20201030 15:52:25.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.308" endtime="20201030 15:52:25.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.281" endtime="20201030 15:52:25.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.279" endtime="20201030 15:52:25.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.317" endtime="20201030 15:52:25.604"></status>
</kw>
<msg timestamp="20201030 15:52:25.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.316" endtime="20201030 15:52:25.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020542028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.608" endtime="20201030 15:52:25.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.616" endtime="20201030 15:52:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.313" endtime="20201030 15:52:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.312" endtime="20201030 15:52:25.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.623" level="INFO">${RESULT} = [{'diff': 5.293099999999912e-05}, {'diff': 5.088899999999841e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.581899999999862e-05}, {'diff': 5.477800000000185e-05}, {'diff': 5.28340000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:25.619" endtime="20201030 15:52:25.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.627" level="INFO">${ACCURACY} = {'diff': [5.293099999999912e-05, 5.088899999999841e-05, 5.568100000000187e-05, 5.581899999999862e-05, 5.477800000000185e-05, 5.28340000000016e-05, 5.387499999999837e-05, 5.380599999999999e-05, 5.66530...</msg>
<status status="PASS" starttime="20201030 15:52:25.623" endtime="20201030 15:52:25.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.632" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.631" endtime="20201030 15:52:25.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.634" level="INFO">VALUE: [5.293099999999912e-05, 5.088899999999841e-05, 5.568100000000187e-05, 5.581899999999862e-05, 5.477800000000185e-05, 5.28340000000016e-05, 5.387499999999837e-05, 5.380599999999999e-05, 5.665300000000026e-05, 5.384800000000217e-05, 5.570900000000101e-05, 5.480500000000152e-05, 5.380599999999999e-05, 5.090299999999798e-05, 5.093100000000059e-05, 5.098599999999939e-05, 5.095800000000025e-05, 5.187499999999984e-05, 5.28470000000017e-05, 5.282000000000203e-05, 5.576300000000034e-05, 4.995799999999925e-05, 5.484700000000023e-05, 5.5707999999998065e-05, 5.187499999999984e-05, 4.995799999999925e-05, 5.477800000000185e-05, 5.293099999999912e-05, 5.381900000000009e-05, 5.0902000000001973e-05, 5.281899999999909e-05, 5.5777999999999384e-05, 5.286100000000127e-05, 5.187499999999984e-05, 5.288900000000041e-05, 5.5805999999998523e-05, 4.9959000000002196e-05, 5.3749999999998244e-05, 5.195800000000125e-05, 5.187499999999984e-05, 4.995799999999925e-05, 5.670900000000201e-05, 5.090300000000145e-05, 5.193000000000211e-05, 5.180600000000146e-05, 5.379200000000042e-05, 5.195900000000073e-05, 5.5750000000000244e-05, 5.1929999999998644e-05, 5.091700000000102e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.633" endtime="20201030 15:52:25.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.628" endtime="20201030 15:52:25.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.639" endtime="20201030 15:52:25.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.638" endtime="20201030 15:52:25.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.637" endtime="20201030 15:52:25.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.277" endtime="20201030 15:52:25.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.277" endtime="20201030 15:52:25.660"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.668" endtime="20201030 15:52:25.691"></status>
</kw>
<msg timestamp="20201030 15:52:25.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.667" endtime="20201030 15:52:25.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.692" endtime="20201030 15:52:25.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.695" endtime="20201030 15:52:25.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.664" endtime="20201030 15:52:25.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.662" endtime="20201030 15:52:25.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.703" endtime="20201030 15:52:25.990"></status>
</kw>
<msg timestamp="20201030 15:52:25.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023911861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023967569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.702" endtime="20201030 15:52:25.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023911861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023967569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.995" endtime="20201030 15:52:26.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.003" endtime="20201030 15:52:26.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.699" endtime="20201030 15:52:26.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.698" endtime="20201030 15:52:26.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.009" level="INFO">${RESULT} = [{'diff': 5.5708000000001534e-05}, {'diff': 5.193100000000159e-05}, {'diff': 5.3749999999998244e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.004100000000067e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.006" endtime="20201030 15:52:26.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.014" level="INFO">${ACCURACY} = {'diff': [5.5708000000001534e-05, 5.193100000000159e-05, 5.3749999999998244e-05, 5.38609999999988e-05, 5.288900000000041e-05, 5.004100000000067e-05, 5.373600000000214e-05, 5.386200000000174e-05, 4.997...</msg>
<status status="PASS" starttime="20201030 15:52:26.010" endtime="20201030 15:52:26.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.018" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.017" endtime="20201030 15:52:26.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.020" level="INFO">VALUE: [5.5708000000001534e-05, 5.193100000000159e-05, 5.3749999999998244e-05, 5.38609999999988e-05, 5.288900000000041e-05, 5.004100000000067e-05, 5.373600000000214e-05, 5.386200000000174e-05, 4.997200000000229e-05, 5.482000000000056e-05, 5.4735999999999674e-05, 5.095899999999973e-05, 5.002800000000057e-05, 5.379100000000095e-05, 5.569499999999797e-05, 5.482000000000056e-05, 5.4777999999998384e-05, 5.5694000000001964e-05, 5.186100000000027e-05, 5.283300000000213e-05, 5.283300000000213e-05, 5.380599999999999e-05, 5.1943999999998214e-05, 5.5679999999998925e-05, 5.188899999999941e-05, 5.380599999999999e-05, 5.5693999999998495e-05, 5.191700000000202e-05, 5.1915999999999074e-05, 5.479100000000195e-05, 5.095899999999973e-05, 5.002800000000057e-05, 5.094400000000068e-05, 5.097199999999982e-05, 5.093100000000059e-05, 5.00270000000011e-05, 5.287500000000084e-05, 5.188899999999941e-05, 5.095899999999973e-05, 5.5722000000001104e-05, 5.194500000000116e-05, 4.999999999999796e-05, 5.00279999999971e-05, 5.088900000000188e-05, 5.293099999999912e-05, 5.5736000000000674e-05, 5.5750000000000244e-05, 5.006899999999981e-05, 5.001299999999806e-05, 5.380599999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.019" endtime="20201030 15:52:26.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.014" endtime="20201030 15:52:26.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.025" endtime="20201030 15:52:26.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.024" endtime="20201030 15:52:26.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.023" endtime="20201030 15:52:26.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.661" endtime="20201030 15:52:26.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.660" endtime="20201030 15:52:26.046"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.055" endtime="20201030 15:52:26.077"></status>
</kw>
<msg timestamp="20201030 15:52:26.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.053" endtime="20201030 15:52:26.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.079" endtime="20201030 15:52:26.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.081" endtime="20201030 15:52:26.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.051" endtime="20201030 15:52:26.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.048" endtime="20201030 15:52:26.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.090" endtime="20201030 15:52:26.377"></status>
</kw>
<msg timestamp="20201030 15:52:26.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.089" endtime="20201030 15:52:26.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024635917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.381" endtime="20201030 15:52:26.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.390" endtime="20201030 15:52:26.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.086" endtime="20201030 15:52:26.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.084" endtime="20201030 15:52:26.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.398" level="INFO">${RESULT} = [{'diff': 4.145800000000116e-05}, {'diff': 5.288899999999694e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.280599999999899e-05}, {'diff': 5.5777999999999384e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:26.394" endtime="20201030 15:52:26.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.402" level="INFO">${ACCURACY} = {'diff': [4.145800000000116e-05, 5.288899999999694e-05, 5.188899999999941e-05, 5.4749999999999244e-05, 5.280599999999899e-05, 5.5777999999999384e-05, 5.4763999999998814e-05, 5.375000000000171e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 15:52:26.399" endtime="20201030 15:52:26.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.406" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.405" endtime="20201030 15:52:26.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.408" level="INFO">VALUE: [4.145800000000116e-05, 5.288899999999694e-05, 5.188899999999941e-05, 5.4749999999999244e-05, 5.280599999999899e-05, 5.5777999999999384e-05, 5.4763999999998814e-05, 5.375000000000171e-05, 5.477800000000185e-05, 5.188899999999941e-05, 5.5693999999998495e-05, 5.4735999999999674e-05, 5.5750000000000244e-05, 5.000000000000143e-05, 5.272200000000157e-05, 5.002800000000057e-05, 5.5721999999997635e-05, 5.091700000000102e-05, 5.186100000000027e-05, 5.583400000000113e-05, 5.379099999999748e-05, 5.5707999999998065e-05, 5.388899999999794e-05, 5.091700000000102e-05, 5.198600000000039e-05, 5.473600000000314e-05, 5.3735999999998674e-05, 5.566699999999883e-05, 5.481900000000109e-05, 5.091699999999755e-05, 5.4763999999998814e-05, 5.28470000000017e-05, 5.283399999999813e-05, 5.1943999999998214e-05, 4.997199999999882e-05, 5.5694000000001964e-05, 5.379100000000095e-05, 5.1014000000002e-05, 5.5722000000001104e-05, 5.180599999999799e-05, 5.376400000000128e-05, 5.287500000000084e-05, 4.995800000000272e-05, 5.28340000000016e-05, 5.568100000000187e-05, 5.091699999999755e-05, 5.197200000000082e-05, 5.279099999999995e-05, 5.4722000000000104e-05, 5.4722000000000104e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.407" endtime="20201030 15:52:26.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.402" endtime="20201030 15:52:26.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.414" endtime="20201030 15:52:26.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.413" endtime="20201030 15:52:26.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.412" endtime="20201030 15:52:26.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.047" endtime="20201030 15:52:26.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.046" endtime="20201030 15:52:26.435"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.444" endtime="20201030 15:52:26.469"></status>
</kw>
<msg timestamp="20201030 15:52:26.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.442" endtime="20201030 15:52:26.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.470" endtime="20201030 15:52:26.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.473" endtime="20201030 15:52:26.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.439" endtime="20201030 15:52:26.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.437" endtime="20201030 15:52:26.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.482" endtime="20201030 15:52:26.766"></status>
</kw>
<msg timestamp="20201030 15:52:26.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.480" endtime="20201030 15:52:26.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022639194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.770" endtime="20201030 15:52:26.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.779" endtime="20201030 15:52:26.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.478" endtime="20201030 15:52:26.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.476" endtime="20201030 15:52:26.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.785" level="INFO">${RESULT} = [{'diff': 6.145800000000035e-05}, {'diff': 5.480599999999752e-05}, {'diff': 5.005599999999971e-05}, {'diff': 5.191699999999855e-05}, {'diff': 5.579200000000242e-05}, {'diff': 5.5750000000000244e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.782" endtime="20201030 15:52:26.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.790" level="INFO">${ACCURACY} = {'diff': [6.145800000000035e-05, 5.480599999999752e-05, 5.005599999999971e-05, 5.191699999999855e-05, 5.579200000000242e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.095800000000025e-05, 5.47...</msg>
<status status="PASS" starttime="20201030 15:52:26.786" endtime="20201030 15:52:26.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.795" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.794" endtime="20201030 15:52:26.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.797" level="INFO">VALUE: [6.145800000000035e-05, 5.480599999999752e-05, 5.005599999999971e-05, 5.191699999999855e-05, 5.579200000000242e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.095800000000025e-05, 5.479200000000142e-05, 5.1915999999999074e-05, 5.5763999999999814e-05, 5.094400000000068e-05, 5.1916000000002543e-05, 5.102800000000157e-05, 5.191699999999855e-05, 5.4777999999998384e-05, 5.381999999999956e-05, 5.480500000000152e-05, 5.0957999999996784e-05, 5.4735999999999674e-05, 4.999999999999796e-05, 5.198600000000039e-05, 5.28470000000017e-05, 5.000000000000143e-05, 5.6707999999999065e-05, 5.4791999999997953e-05, 5.5736000000000674e-05, 5.282000000000203e-05, 5.481899999999762e-05, 5.284699999999823e-05, 5.480600000000099e-05, 5.379100000000095e-05, 5.095899999999973e-05, 5.4777999999998384e-05, 5.001399999999753e-05, 5.488900000000241e-05, 5.093100000000059e-05, 5.384699999999923e-05, 5.199999999999996e-05, 5.093099999999712e-05, 5.480500000000152e-05, 5.28470000000017e-05, 5.2888000000000934e-05, 5.391700000000055e-05, 5.576300000000034e-05, 5.290299999999998e-05, 5.570899999999754e-05, 5.098599999999939e-05, 5.000000000000143e-05, 5.473699999999915e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.796" endtime="20201030 15:52:26.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.791" endtime="20201030 15:52:26.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.802" endtime="20201030 15:52:26.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.800" endtime="20201030 15:52:26.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.799" endtime="20201030 15:52:26.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.436" endtime="20201030 15:52:26.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.435" endtime="20201030 15:52:26.823"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.831" endtime="20201030 15:52:26.852"></status>
</kw>
<msg timestamp="20201030 15:52:26.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.830" endtime="20201030 15:52:26.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.853" endtime="20201030 15:52:26.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.856" endtime="20201030 15:52:26.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.827" endtime="20201030 15:52:26.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.825" endtime="20201030 15:52:26.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.865" endtime="20201030 15:52:27.150"></status>
</kw>
<msg timestamp="20201030 15:52:27.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.863" endtime="20201030 15:52:27.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.155" endtime="20201030 15:52:27.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.163" endtime="20201030 15:52:27.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.861" endtime="20201030 15:52:27.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.859" endtime="20201030 15:52:27.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.169" level="INFO">${RESULT} = [{'diff': 5.097199999999982e-05}, {'diff': 5.094400000000068e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.190299999999898e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:27.166" endtime="20201030 15:52:27.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.173" level="INFO">${ACCURACY} = {'diff': [5.097199999999982e-05, 5.094400000000068e-05, 5.288900000000041e-05, 5.099999999999896e-05, 5.293099999999912e-05, 5.190299999999898e-05, 5.281999999999856e-05, 5.191699999999855e-05, 5.3805...</msg>
<status status="PASS" starttime="20201030 15:52:27.170" endtime="20201030 15:52:27.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.178" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.177" endtime="20201030 15:52:27.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.180" level="INFO">VALUE: [5.097199999999982e-05, 5.094400000000068e-05, 5.288900000000041e-05, 5.099999999999896e-05, 5.293099999999912e-05, 5.190299999999898e-05, 5.281999999999856e-05, 5.191699999999855e-05, 5.380500000000052e-05, 5.5736000000000674e-05, 5.4791999999997953e-05, 5.4763999999998814e-05, 5.286100000000127e-05, 5.191699999999855e-05, 5.4763999999998814e-05, 5.380500000000052e-05, 5.5750000000000244e-05, 5.5707999999998065e-05, 5.183300000000113e-05, 5.480500000000152e-05, 4.999999999999796e-05, 5.377800000000085e-05, 5.0014000000001e-05, 5.187499999999984e-05, 5.38470000000027e-05, 5.5750000000000244e-05, 5.470900000000001e-05, 5.28470000000017e-05, 5.187499999999984e-05, 5.566699999999883e-05, 5.290299999999998e-05, 5.283300000000213e-05, 5.376300000000181e-05, 5.5708000000001534e-05, 5.0888000000002404e-05, 5.290299999999998e-05, 4.9987000000001336e-05, 4.995799999999925e-05, 5.475000000000271e-05, 5.004200000000014e-05, 5.3777999999997383e-05, 5.091699999999755e-05, 5.3721999999999104e-05, 5.288899999999694e-05, 5.6679999999999925e-05, 5.282000000000203e-05, 5.4791999999997953e-05, 5.286100000000127e-05, 5.094500000000016e-05, 5.4707999999997065e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.179" endtime="20201030 15:52:27.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.174" endtime="20201030 15:52:27.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.185" endtime="20201030 15:52:27.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.184" endtime="20201030 15:52:27.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.182" endtime="20201030 15:52:27.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.824" endtime="20201030 15:52:27.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.823" endtime="20201030 15:52:27.206"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.214" endtime="20201030 15:52:27.239"></status>
</kw>
<msg timestamp="20201030 15:52:27.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.213" endtime="20201030 15:52:27.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.240" endtime="20201030 15:52:27.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.243" endtime="20201030 15:52:27.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.210" endtime="20201030 15:52:27.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.208" endtime="20201030 15:52:27.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.251" endtime="20201030 15:52:27.537"></status>
</kw>
<msg timestamp="20201030 15:52:27.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025508278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025553472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.250" endtime="20201030 15:52:27.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025508278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025553472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.541" endtime="20201030 15:52:27.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.549" endtime="20201030 15:52:27.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.247" endtime="20201030 15:52:27.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.246" endtime="20201030 15:52:27.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.555" level="INFO">${RESULT} = [{'diff': 4.519400000000187e-05}, {'diff': 5.388900000000141e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.483400000000013e-05}, {'diff': 5.191700000000202e-05}, {'diff': 5.1014000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:27.552" endtime="20201030 15:52:27.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.559" level="INFO">${ACCURACY} = {'diff': [4.519400000000187e-05, 5.388900000000141e-05, 5.4777999999998384e-05, 5.483400000000013e-05, 5.191700000000202e-05, 5.1014000000002e-05, 5.284699999999823e-05, 5.286100000000127e-05, 5.09170...</msg>
<status status="PASS" starttime="20201030 15:52:27.556" endtime="20201030 15:52:27.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.564" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.563" endtime="20201030 15:52:27.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.566" level="INFO">VALUE: [4.519400000000187e-05, 5.388900000000141e-05, 5.4777999999998384e-05, 5.483400000000013e-05, 5.191700000000202e-05, 5.1014000000002e-05, 5.284699999999823e-05, 5.286100000000127e-05, 5.091700000000102e-05, 5.380599999999999e-05, 5.481900000000109e-05, 5.191700000000202e-05, 5.1915999999999074e-05, 5.388900000000141e-05, 5.181899999999809e-05, 5.580600000000199e-05, 5.387499999999837e-05, 5.0014000000001e-05, 5.481899999999762e-05, 5.5736000000000674e-05, 5.197200000000082e-05, 5.2929999999999644e-05, 5.481900000000109e-05, 5.5736000000000674e-05, 5.579099999999948e-05, 5.180600000000146e-05, 5.187500000000331e-05, 5.198600000000039e-05, 5.3777999999997383e-05, 5.093000000000111e-05, 5.288900000000041e-05, 5.281899999999909e-05, 5.5763999999999814e-05, 5.376400000000128e-05, 5.4749999999999244e-05, 5.5791999999998954e-05, 5.2930000000003113e-05, 5.000000000000143e-05, 5.381899999999662e-05, 5.191699999999855e-05, 5.4735999999999674e-05, 4.999999999999796e-05, 5.100000000000243e-05, 5.66809999999994e-05, 5.387500000000184e-05, 5.091699999999755e-05, 5.5736000000000674e-05, 5.577800000000285e-05, 5.5694000000001964e-05, 5.283299999999866e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.565" endtime="20201030 15:52:27.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.560" endtime="20201030 15:52:27.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.628" endtime="20201030 15:52:27.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.626" endtime="20201030 15:52:27.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.625" endtime="20201030 15:52:27.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.207" endtime="20201030 15:52:27.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.206" endtime="20201030 15:52:27.648"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.657" endtime="20201030 15:52:27.676"></status>
</kw>
<msg timestamp="20201030 15:52:27.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.655" endtime="20201030 15:52:27.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.678" endtime="20201030 15:52:27.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.680" endtime="20201030 15:52:27.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.653" endtime="20201030 15:52:27.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.651" endtime="20201030 15:52:27.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.689" endtime="20201030 15:52:27.975"></status>
</kw>
<msg timestamp="20201030 15:52:27.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.687" endtime="20201030 15:52:27.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.979" endtime="20201030 15:52:27.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.987" endtime="20201030 15:52:27.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.685" endtime="20201030 15:52:27.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.683" endtime="20201030 15:52:27.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.993" level="INFO">${RESULT} = [{'diff': 5.4749999999999244e-05}, {'diff': 4.907000000000175e-05}, {'diff': 5.5721999999997635e-05}, {'diff': 5.195900000000073e-05}, {'diff': 5.481899999999762e-05}, {'diff': 5.5707999999998065e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:27.990" endtime="20201030 15:52:27.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.998" level="INFO">${ACCURACY} = {'diff': [5.4749999999999244e-05, 4.907000000000175e-05, 5.5721999999997635e-05, 5.195900000000073e-05, 5.481899999999762e-05, 5.5707999999998065e-05, 4.9959000000002196e-05, 5.2916000000000074e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:27.994" endtime="20201030 15:52:27.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.003" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.002" endtime="20201030 15:52:28.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.005" level="INFO">VALUE: [5.4749999999999244e-05, 4.907000000000175e-05, 5.5721999999997635e-05, 5.195900000000073e-05, 5.481899999999762e-05, 5.5707999999998065e-05, 4.9959000000002196e-05, 5.2916000000000074e-05, 4.997199999999882e-05, 5.6764000000000814e-05, 5.095899999999973e-05, 5.195800000000125e-05, 5.387500000000184e-05, 5.5750000000000244e-05, 5.568100000000187e-05, 5.19730000000003e-05, 5.187499999999984e-05, 5.098599999999939e-05, 5.379100000000095e-05, 5.484699999999676e-05, 5.5694000000001964e-05, 5.094400000000068e-05, 5.483300000000066e-05, 5.193100000000159e-05, 5.281900000000256e-05, 5.286100000000127e-05, 5.577800000000285e-05, 5.56809999999984e-05, 5.095800000000025e-05, 5.286100000000127e-05, 5.5763999999999814e-05, 5.286100000000127e-05, 5.381900000000009e-05, 5.5721999999997635e-05, 5.5736000000000674e-05, 5.475000000000271e-05, 5.3916000000001074e-05, 5.283399999999813e-05, 5.5777999999999384e-05, 5.4749999999999244e-05, 5.3777999999997383e-05, 5.476400000000228e-05, 5.186100000000027e-05, 5.384699999999923e-05, 5.568100000000187e-05, 5.381900000000009e-05, 5.288900000000041e-05, 5.286100000000127e-05, 5.479200000000142e-05, 5.0014000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.004" endtime="20201030 15:52:28.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.999" endtime="20201030 15:52:28.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.010" endtime="20201030 15:52:28.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.009" endtime="20201030 15:52:28.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.008" endtime="20201030 15:52:28.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.649" endtime="20201030 15:52:28.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.649" endtime="20201030 15:52:28.031"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.039" endtime="20201030 15:52:28.062"></status>
</kw>
<msg timestamp="20201030 15:52:28.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.038" endtime="20201030 15:52:28.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.063" endtime="20201030 15:52:28.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.066" endtime="20201030 15:52:28.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.035" endtime="20201030 15:52:28.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.033" endtime="20201030 15:52:28.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.075" endtime="20201030 15:52:28.379"></status>
</kw>
<msg timestamp="20201030 15:52:28.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.073" endtime="20201030 15:52:28.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024314778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024370514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.384" endtime="20201030 15:52:28.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.392" endtime="20201030 15:52:28.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.070" endtime="20201030 15:52:28.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.069" endtime="20201030 15:52:28.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.398" level="INFO">${RESULT} = [{'diff': 5.5736000000000674e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.283300000000213e-05}, {'diff': 5.663900000000069e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:28.395" endtime="20201030 15:52:28.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.402" level="INFO">${ACCURACY} = {'diff': [5.5736000000000674e-05, 5.4735999999999674e-05, 5.291699999999955e-05, 5.4722000000000104e-05, 5.283300000000213e-05, 5.663900000000069e-05, 5.005599999999971e-05, 5.6693999999999495e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:28.399" endtime="20201030 15:52:28.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.407" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.406" endtime="20201030 15:52:28.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.409" level="INFO">VALUE: [5.5736000000000674e-05, 5.4735999999999674e-05, 5.291699999999955e-05, 5.4722000000000104e-05, 5.283300000000213e-05, 5.663900000000069e-05, 5.005599999999971e-05, 5.6693999999999495e-05, 5.093000000000111e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.2916000000000074e-05, 5.4722000000000104e-05, 5.38479999999987e-05, 5.28609999999978e-05, 5.379199999999695e-05, 4.994499999999916e-05, 5.386100000000227e-05, 5.283299999999866e-05, 5.280499999999952e-05, 5.006899999999981e-05, 5.5750000000000244e-05, 5.4735999999999674e-05, 5.099999999999896e-05, 5.4749999999999244e-05, 5.4735999999999674e-05, 5.480599999999752e-05, 5.377800000000085e-05, 5.099999999999896e-05, 5.5666000000002824e-05, 5.565299999999926e-05, 5.00409999999972e-05, 5.473600000000314e-05, 5.5693999999998495e-05, 5.470900000000001e-05, 5.579200000000242e-05, 5.4735999999999674e-05, 5.280599999999899e-05, 5.5791999999998954e-05, 5.5694000000001964e-05, 5.184699999999723e-05, 5.098600000000286e-05, 5.091700000000102e-05, 4.995899999999873e-05, 5.291700000000302e-05, 5.666699999999983e-05, 4.994399999999968e-05, 5.291699999999955e-05, 5.188899999999941e-05, 4.9931000000003056e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.408" endtime="20201030 15:52:28.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.403" endtime="20201030 15:52:28.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.414" endtime="20201030 15:52:28.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.413" endtime="20201030 15:52:28.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.411" endtime="20201030 15:52:28.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.032" endtime="20201030 15:52:28.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.031" endtime="20201030 15:52:28.435"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.443" endtime="20201030 15:52:28.465"></status>
</kw>
<msg timestamp="20201030 15:52:28.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.442" endtime="20201030 15:52:28.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.466" endtime="20201030 15:52:28.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.469" endtime="20201030 15:52:28.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.439" endtime="20201030 15:52:28.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.437" endtime="20201030 15:52:28.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.477" endtime="20201030 15:52:28.763"></status>
</kw>
<msg timestamp="20201030 15:52:28.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.476" endtime="20201030 15:52:28.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022391167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.767" endtime="20201030 15:52:28.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.775" endtime="20201030 15:52:28.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.473" endtime="20201030 15:52:28.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.472" endtime="20201030 15:52:28.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.782" level="INFO">${RESULT} = [{'diff': 5.86810000000014e-05}, {'diff': 5.4791999999997953e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.100000000000243e-05}, {'diff': 5.000000000000143e-05}, {'diff': 5.383399999999913e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:28.779" endtime="20201030 15:52:28.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.786" level="INFO">${ACCURACY} = {'diff': [5.86810000000014e-05, 5.4791999999997953e-05, 5.290299999999998e-05, 5.100000000000243e-05, 5.000000000000143e-05, 5.383399999999913e-05, 5.48479999999997e-05, 5.381999999999956e-05, 5.09169...</msg>
<status status="PASS" starttime="20201030 15:52:28.783" endtime="20201030 15:52:28.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.790" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.789" endtime="20201030 15:52:28.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.793" level="INFO">VALUE: [5.86810000000014e-05, 5.4791999999997953e-05, 5.290299999999998e-05, 5.100000000000243e-05, 5.000000000000143e-05, 5.383399999999913e-05, 5.48479999999997e-05, 5.381999999999956e-05, 5.091699999999755e-05, 5.002800000000057e-05, 5.4735999999999674e-05, 5.5722000000001104e-05, 5.195900000000073e-05, 5.4777999999998384e-05, 5.099999999999896e-05, 5.377699999999791e-05, 5.0986999999998867e-05, 5.5736000000000674e-05, 5.195900000000073e-05, 5.383299999999966e-05, 5.577800000000285e-05, 5.4777999999998384e-05, 5.187499999999984e-05, 5.004200000000014e-05, 5.195800000000125e-05, 5.093100000000059e-05, 5.006899999999981e-05, 4.998600000000186e-05, 5.090300000000145e-05, 5.100000000000243e-05, 4.9972999999998297e-05, 5.187499999999984e-05, 5.5763999999999814e-05, 5.5721999999997635e-05, 5.483300000000066e-05, 5.186100000000027e-05, 5.101399999999853e-05, 5.572300000000058e-05, 5.187499999999984e-05, 5.2929999999999644e-05, 5.28479999999977e-05, 5.480599999999752e-05, 5.284699999999823e-05, 5.10279999999981e-05, 5.28470000000017e-05, 5.38609999999988e-05, 5.187499999999984e-05, 5.094400000000068e-05, 5.000000000000143e-05, 5.477800000000185e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.791" endtime="20201030 15:52:28.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.787" endtime="20201030 15:52:28.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.798" endtime="20201030 15:52:28.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.797" endtime="20201030 15:52:28.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.796" endtime="20201030 15:52:28.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.436" endtime="20201030 15:52:28.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.435" endtime="20201030 15:52:28.819"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.828" endtime="20201030 15:52:28.853"></status>
</kw>
<msg timestamp="20201030 15:52:28.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.826" endtime="20201030 15:52:28.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.854" endtime="20201030 15:52:28.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.857" endtime="20201030 15:52:28.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.824" endtime="20201030 15:52:28.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.822" endtime="20201030 15:52:28.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.866" endtime="20201030 15:52:29.152"></status>
</kw>
<msg timestamp="20201030 15:52:29.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024900875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.864" endtime="20201030 15:52:29.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024847083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024900875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.156" endtime="20201030 15:52:29.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.164" endtime="20201030 15:52:29.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.862" endtime="20201030 15:52:29.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.860" endtime="20201030 15:52:29.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.171" level="INFO">${RESULT} = [{'diff': 5.379200000000042e-05}, {'diff': 5.379200000000042e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.5707999999998065e-05}, {'diff': 5.187499999999984e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:29.167" endtime="20201030 15:52:29.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.176" level="INFO">${ACCURACY} = {'diff': [5.379200000000042e-05, 5.379200000000042e-05, 5.4722000000000104e-05, 5.482000000000056e-05, 5.5707999999998065e-05, 5.187499999999984e-05, 5.095800000000025e-05, 5.195900000000073e-05, 5.08...</msg>
<status status="PASS" starttime="20201030 15:52:29.172" endtime="20201030 15:52:29.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.180" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.179" endtime="20201030 15:52:29.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.183" level="INFO">VALUE: [5.379200000000042e-05, 5.379200000000042e-05, 5.4722000000000104e-05, 5.482000000000056e-05, 5.5707999999998065e-05, 5.187499999999984e-05, 5.095800000000025e-05, 5.195900000000073e-05, 5.08339999999996e-05, 4.993099999999959e-05, 5.097199999999982e-05, 5.276400000000028e-05, 5.1014000000002e-05, 5.377800000000085e-05, 4.993000000000011e-05, 5.380500000000052e-05, 5.5777999999999384e-05, 5.286100000000127e-05, 5.577800000000285e-05, 5.4749999999999244e-05, 5.002800000000057e-05, 5.658299999999894e-05, 5.194499999999769e-05, 5.4735999999999674e-05, 5.19730000000003e-05, 5.5679999999998925e-05, 5.083299999999666e-05, 5.190299999999898e-05, 5.566699999999883e-05, 5.5750000000000244e-05, 5.093099999999712e-05, 5.284800000000117e-05, 5.10279999999981e-05, 5.284699999999823e-05, 5.480600000000099e-05, 5.379200000000042e-05, 5.5763999999999814e-05, 5.280599999999899e-05, 5.576300000000034e-05, 5.283299999999866e-05, 5.093100000000059e-05, 5.4708000000000534e-05, 5.481900000000109e-05, 5.5665999999999355e-05, 5.193100000000159e-05, 5.377800000000085e-05, 5.177799999999885e-05, 5.18609999999968e-05, 5.487499999999937e-05, 5.379200000000042e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.181" endtime="20201030 15:52:29.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.176" endtime="20201030 15:52:29.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.188" endtime="20201030 15:52:29.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.186" endtime="20201030 15:52:29.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.185" endtime="20201030 15:52:29.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.820" endtime="20201030 15:52:29.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.819" endtime="20201030 15:52:29.208"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.217" endtime="20201030 15:52:29.238"></status>
</kw>
<msg timestamp="20201030 15:52:29.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.215" endtime="20201030 15:52:29.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.239" endtime="20201030 15:52:29.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.242" endtime="20201030 15:52:29.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.213" endtime="20201030 15:52:29.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.211" endtime="20201030 15:52:29.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.251" endtime="20201030 15:52:29.537"></status>
</kw>
<msg timestamp="20201030 15:52:29.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.249" endtime="20201030 15:52:29.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022588972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.541" endtime="20201030 15:52:29.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.549" endtime="20201030 15:52:29.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.247" endtime="20201030 15:52:29.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.245" endtime="20201030 15:52:29.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.555" level="INFO">${RESULT} = [{'diff': 6.617999999999902e-05}, {'diff': 5.197200000000082e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.2929999999999644e-05}, {'diff': 4.995899999999873e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:29.552" endtime="20201030 15:52:29.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.559" level="INFO">${ACCURACY} = {'diff': [6.617999999999902e-05, 5.197200000000082e-05, 5.4722000000000104e-05, 5.094500000000016e-05, 5.2929999999999644e-05, 4.995899999999873e-05, 5.1957999999997784e-05, 4.995799999999925e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 15:52:29.556" endtime="20201030 15:52:29.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.564" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.563" endtime="20201030 15:52:29.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.566" level="INFO">VALUE: [6.617999999999902e-05, 5.197200000000082e-05, 5.4722000000000104e-05, 5.094500000000016e-05, 5.2929999999999644e-05, 4.995899999999873e-05, 5.1957999999997784e-05, 4.995799999999925e-05, 5.1943999999998214e-05, 5.1014000000002e-05, 5.281900000000256e-05, 4.997200000000229e-05, 5.288900000000041e-05, 5.281900000000256e-05, 5.284800000000117e-05, 5.66809999999994e-05, 4.995899999999873e-05, 5.4735999999999674e-05, 5.290299999999998e-05, 4.995899999999873e-05, 5.579200000000242e-05, 5.179100000000242e-05, 5.194500000000116e-05, 5.570900000000101e-05, 5.28340000000016e-05, 5.002800000000057e-05, 5.381900000000009e-05, 5.38609999999988e-05, 4.998600000000186e-05, 5.5777999999999384e-05, 4.997199999999882e-05, 5.097199999999982e-05, 5.093100000000059e-05, 5.195800000000125e-05, 5.093100000000059e-05, 5.481899999999762e-05, 5.288900000000041e-05, 5.291699999999955e-05, 5.186100000000027e-05, 4.998599999999839e-05, 5.5750000000000244e-05, 5.1929999999998644e-05, 5.097199999999982e-05, 5.188899999999941e-05, 5.193100000000159e-05, 5.563899999999969e-05, 5.090300000000145e-05, 5.387499999999837e-05, 4.906899999999881e-05, 5.662500000000112e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.565" endtime="20201030 15:52:29.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.560" endtime="20201030 15:52:29.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.571" endtime="20201030 15:52:29.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.570" endtime="20201030 15:52:29.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.568" endtime="20201030 15:52:29.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.209" endtime="20201030 15:52:29.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.209" endtime="20201030 15:52:29.592"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.600" endtime="20201030 15:52:29.619"></status>
</kw>
<msg timestamp="20201030 15:52:29.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.599" endtime="20201030 15:52:29.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.621" endtime="20201030 15:52:29.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.624" endtime="20201030 15:52:29.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.596" endtime="20201030 15:52:29.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.594" endtime="20201030 15:52:29.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.632" endtime="20201030 15:52:29.918"></status>
</kw>
<msg timestamp="20201030 15:52:29.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020816181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020857625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.631" endtime="20201030 15:52:29.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020816181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020857625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.922" endtime="20201030 15:52:29.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.930" endtime="20201030 15:52:29.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.628" endtime="20201030 15:52:29.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.627" endtime="20201030 15:52:29.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.936" level="INFO">${RESULT} = [{'diff': 4.144400000000159e-05}, {'diff': 5.384699999999923e-05}, {'diff': 5.470900000000001e-05}, {'diff': 5.290299999999998e-05}, {'diff': 4.998600000000186e-05}, {'diff': 5.5763999999999814e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:29.933" endtime="20201030 15:52:29.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.941" level="INFO">${ACCURACY} = {'diff': [4.144400000000159e-05, 5.384699999999923e-05, 5.470900000000001e-05, 5.290299999999998e-05, 4.998600000000186e-05, 5.5763999999999814e-05, 5.483299999999719e-05, 5.379200000000042e-05, 5.184...</msg>
<status status="PASS" starttime="20201030 15:52:29.937" endtime="20201030 15:52:29.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.945" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.944" endtime="20201030 15:52:29.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.947" level="INFO">VALUE: [4.144400000000159e-05, 5.384699999999923e-05, 5.470900000000001e-05, 5.290299999999998e-05, 4.998600000000186e-05, 5.5763999999999814e-05, 5.483299999999719e-05, 5.379200000000042e-05, 5.184800000000017e-05, 5.5763999999999814e-05, 5.283300000000213e-05, 5.480599999999752e-05, 5.4763999999998814e-05, 5.4763999999998814e-05, 5.380500000000052e-05, 5.387500000000184e-05, 4.998600000000186e-05, 5.184800000000017e-05, 5.5791999999998954e-05, 5.475000000000271e-05, 5.288900000000041e-05, 5.382000000000303e-05, 5.1929999999998644e-05, 5.5707999999998065e-05, 5.4763999999998814e-05, 5.38609999999988e-05, 5.484700000000023e-05, 5.0929999999997644e-05, 5.673700000000115e-05, 5.281899999999909e-05, 5.290299999999998e-05, 5.488899999999894e-05, 5.5722000000001104e-05, 5.377800000000085e-05, 5.58610000000008e-05, 5.28609999999978e-05, 5.677700000000091e-05, 5.283299999999866e-05, 5.195800000000125e-05, 5.012499999999809e-05, 5.5693999999998495e-05, 5.090300000000145e-05, 5.184800000000017e-05, 5.00279999999971e-05, 5.387500000000184e-05, 5.286100000000127e-05, 5.5791999999998954e-05, 5.090300000000145e-05, 5.577800000000285e-05, 5.481900000000109e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.946" endtime="20201030 15:52:29.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.941" endtime="20201030 15:52:29.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.953" endtime="20201030 15:52:29.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.952" endtime="20201030 15:52:29.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.950" endtime="20201030 15:52:29.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.593" endtime="20201030 15:52:29.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.592" endtime="20201030 15:52:29.974"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.982" endtime="20201030 15:52:30.001"></status>
</kw>
<msg timestamp="20201030 15:52:30.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.981" endtime="20201030 15:52:30.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.003" endtime="20201030 15:52:30.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.005" endtime="20201030 15:52:30.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.978" endtime="20201030 15:52:30.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.976" endtime="20201030 15:52:30.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.014" endtime="20201030 15:52:30.299"></status>
</kw>
<msg timestamp="20201030 15:52:30.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020660181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.012" endtime="20201030 15:52:30.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020660181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020712139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.303" endtime="20201030 15:52:30.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.311" endtime="20201030 15:52:30.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.010" endtime="20201030 15:52:30.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.008" endtime="20201030 15:52:30.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.318" level="INFO">${RESULT} = [{'diff': 5.195800000000125e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.475000000000271e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.099999999999896e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:30.315" endtime="20201030 15:52:30.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.323" level="INFO">${ACCURACY} = {'diff': [5.195800000000125e-05, 5.190299999999898e-05, 5.5763999999999814e-05, 5.475000000000271e-05, 5.568100000000187e-05, 5.099999999999896e-05, 5.475000000000271e-05, 5.195900000000073e-05, 5.667...</msg>
<status status="PASS" starttime="20201030 15:52:30.319" endtime="20201030 15:52:30.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.327" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.326" endtime="20201030 15:52:30.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.330" level="INFO">VALUE: [5.195800000000125e-05, 5.190299999999898e-05, 5.5763999999999814e-05, 5.475000000000271e-05, 5.568100000000187e-05, 5.099999999999896e-05, 5.475000000000271e-05, 5.195900000000073e-05, 5.6679999999999925e-05, 5.465300000000173e-05, 5.291699999999955e-05, 5.4735999999999674e-05, 5.194400000000168e-05, 5.198600000000039e-05, 5.187499999999984e-05, 5.4735999999999674e-05, 5.186199999999974e-05, 5.479099999999848e-05, 5.381900000000009e-05, 5.091699999999755e-05, 5.568100000000187e-05, 5.375000000000171e-05, 5.099999999999896e-05, 5.190299999999898e-05, 5.280599999999899e-05, 5.198600000000039e-05, 5.5694000000001964e-05, 5.5735999999997204e-05, 5.4722000000000104e-05, 5.290299999999998e-05, 5.476299999999934e-05, 5.6666000000000355e-05, 5.370900000000248e-05, 5.10279999999981e-05, 5.569500000000144e-05, 5.187499999999984e-05, 5.2929999999999644e-05, 5.091700000000102e-05, 4.993000000000011e-05, 5.480599999999752e-05, 5.28470000000017e-05, 4.998600000000186e-05, 5.387500000000184e-05, 5.184800000000017e-05, 5.390300000000098e-05, 5.190299999999898e-05, 5.288900000000041e-05, 4.995799999999925e-05, 5.091700000000102e-05, 5.2902000000000504e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.328" endtime="20201030 15:52:30.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.324" endtime="20201030 15:52:30.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.335" endtime="20201030 15:52:30.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.333" endtime="20201030 15:52:30.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.332" endtime="20201030 15:52:30.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.975" endtime="20201030 15:52:30.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.974" endtime="20201030 15:52:30.355"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.364" endtime="20201030 15:52:30.383"></status>
</kw>
<msg timestamp="20201030 15:52:30.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.362" endtime="20201030 15:52:30.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.384" endtime="20201030 15:52:30.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.387" endtime="20201030 15:52:30.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.360" endtime="20201030 15:52:30.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.358" endtime="20201030 15:52:30.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.397" endtime="20201030 15:52:30.684"></status>
</kw>
<msg timestamp="20201030 15:52:30.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02108725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:30.395" endtime="20201030 15:52:30.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02108725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:30.688" endtime="20201030 15:52:30.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.696" endtime="20201030 15:52:30.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.393" endtime="20201030 15:52:30.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.391" endtime="20201030 15:52:30.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.703" level="INFO">${RESULT} = [{'diff': 4.809699999999695e-05}, {'diff': 5.28609999999978e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.177799999999885e-05}, {'diff': 5.6750000000001244e-05}, {'diff': 5.4749999999999244e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:30.700" endtime="20201030 15:52:30.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.707" level="INFO">${ACCURACY} = {'diff': [4.809699999999695e-05, 5.28609999999978e-05, 5.4722000000000104e-05, 5.177799999999885e-05, 5.6750000000001244e-05, 5.4749999999999244e-05, 5.470900000000001e-05, 5.095800000000025e-05, 5.18...</msg>
<status status="PASS" starttime="20201030 15:52:30.704" endtime="20201030 15:52:30.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.711" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.710" endtime="20201030 15:52:30.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.714" level="INFO">VALUE: [4.809699999999695e-05, 5.28609999999978e-05, 5.4722000000000104e-05, 5.177799999999885e-05, 5.6750000000001244e-05, 5.4749999999999244e-05, 5.470900000000001e-05, 5.095800000000025e-05, 5.187499999999984e-05, 5.391700000000055e-05, 5.093000000000111e-05, 5.388900000000141e-05, 5.477800000000185e-05, 5.004200000000014e-05, 5.093000000000111e-05, 5.479200000000142e-05, 4.998599999999839e-05, 5.001399999999753e-05, 5.182000000000103e-05, 5.383299999999966e-05, 4.997200000000229e-05, 5.290299999999998e-05, 5.28470000000017e-05, 5.18340000000006e-05, 5.5763999999999814e-05, 5.28609999999978e-05, 5.090300000000145e-05, 4.993099999999959e-05, 5.087500000000231e-05, 5.18470000000007e-05, 5.288900000000041e-05, 5.5722000000001104e-05, 5.380599999999999e-05, 5.380599999999999e-05, 5.282000000000203e-05, 5.187499999999984e-05, 5.5750000000000244e-05, 5.4735999999999674e-05, 5.1943999999998214e-05, 5.28609999999978e-05, 4.991700000000002e-05, 5.193000000000211e-05, 5.4749999999999244e-05, 5.5763999999999814e-05, 4.995899999999873e-05, 5.098599999999939e-05, 5.379100000000095e-05, 5.6735999999998205e-05, 5.4749999999999244e-05, 4.994399999999968e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.712" endtime="20201030 15:52:30.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.708" endtime="20201030 15:52:30.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.719" endtime="20201030 15:52:30.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.717" endtime="20201030 15:52:30.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.716" endtime="20201030 15:52:30.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.356" endtime="20201030 15:52:30.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.356" endtime="20201030 15:52:30.739"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.748" endtime="20201030 15:52:30.771"></status>
</kw>
<msg timestamp="20201030 15:52:30.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.746" endtime="20201030 15:52:30.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.772" endtime="20201030 15:52:30.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.775" endtime="20201030 15:52:30.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.744" endtime="20201030 15:52:30.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.742" endtime="20201030 15:52:30.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.784" endtime="20201030 15:52:31.069"></status>
</kw>
<msg timestamp="20201030 15:52:31.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.782" endtime="20201030 15:52:31.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.073" endtime="20201030 15:52:31.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.081" endtime="20201030 15:52:31.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.779" endtime="20201030 15:52:31.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.778" endtime="20201030 15:52:31.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.087" level="INFO">${RESULT} = [{'diff': 3.6611000000002364e-05}, {'diff': 5.102800000000157e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.379200000000042e-05}, {'diff': 5.5777999999999384e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:31.084" endtime="20201030 15:52:31.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.092" level="INFO">${ACCURACY} = {'diff': [3.6611000000002364e-05, 5.102800000000157e-05, 5.380599999999999e-05, 5.5777999999999384e-05, 5.379200000000042e-05, 5.5777999999999384e-05, 5.1887999999999934e-05, 4.995899999999873e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:31.088" endtime="20201030 15:52:31.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.096" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.095" endtime="20201030 15:52:31.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.098" level="INFO">VALUE: [3.6611000000002364e-05, 5.102800000000157e-05, 5.380599999999999e-05, 5.5777999999999384e-05, 5.379200000000042e-05, 5.5777999999999384e-05, 5.1887999999999934e-05, 4.995899999999873e-05, 5.187499999999984e-05, 5.2916000000000074e-05, 5.2735999999997674e-05, 5.18470000000007e-05, 5.005500000000024e-05, 4.9972999999998297e-05, 5.566699999999883e-05, 5.662500000000112e-05, 5.388900000000141e-05, 5.279199999999942e-05, 5.56670000000023e-05, 5.569499999999797e-05, 5.380599999999999e-05, 5.5750000000000244e-05, 5.186199999999974e-05, 5.377800000000085e-05, 5.284699999999823e-05, 5.1014000000002e-05, 5.377800000000085e-05, 5.279199999999942e-05, 4.997199999999882e-05, 5.090300000000145e-05, 5.1957999999997784e-05, 5.5694000000001964e-05, 5.087499999999884e-05, 4.997199999999882e-05, 5.181900000000156e-05, 5.2902000000000504e-05, 5.280500000000299e-05, 4.994399999999968e-05, 4.995899999999873e-05, 5.18470000000007e-05, 5.0915999999998074e-05, 5.197200000000082e-05, 5.284800000000117e-05, 5.087499999999884e-05, 5.099999999999896e-05, 5.4708000000000534e-05, 5.663899999999722e-05, 5.384699999999923e-05, 5.002699999999763e-05, 5.283300000000213e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.097" endtime="20201030 15:52:31.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.092" endtime="20201030 15:52:31.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.104" endtime="20201030 15:52:31.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.103" endtime="20201030 15:52:31.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.101" endtime="20201030 15:52:31.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.740" endtime="20201030 15:52:31.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.740" endtime="20201030 15:52:31.125"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.133" endtime="20201030 15:52:31.152"></status>
</kw>
<msg timestamp="20201030 15:52:31.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.132" endtime="20201030 15:52:31.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.154" endtime="20201030 15:52:31.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.156" endtime="20201030 15:52:31.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.129" endtime="20201030 15:52:31.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.127" endtime="20201030 15:52:31.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.165" endtime="20201030 15:52:31.451"></status>
</kw>
<msg timestamp="20201030 15:52:31.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.164" endtime="20201030 15:52:31.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.455" endtime="20201030 15:52:31.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.463" endtime="20201030 15:52:31.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.161" endtime="20201030 15:52:31.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.159" endtime="20201030 15:52:31.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.469" level="INFO">${RESULT} = [{'diff': 6.234699999999732e-05}, {'diff': 5.282000000000203e-05}, {'diff': 5.379200000000042e-05}, {'diff': 5.291699999999955e-05}, {'diff': 4.995899999999873e-05}, {'diff': 4.995799999999925e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:31.466" endtime="20201030 15:52:31.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.474" level="INFO">${ACCURACY} = {'diff': [6.234699999999732e-05, 5.282000000000203e-05, 5.379200000000042e-05, 5.291699999999955e-05, 4.995899999999873e-05, 4.995799999999925e-05, 4.997200000000229e-05, 5.484700000000023e-05, 5.5693...</msg>
<status status="PASS" starttime="20201030 15:52:31.470" endtime="20201030 15:52:31.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.479" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.478" endtime="20201030 15:52:31.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.481" level="INFO">VALUE: [6.234699999999732e-05, 5.282000000000203e-05, 5.379200000000042e-05, 5.291699999999955e-05, 4.995899999999873e-05, 4.995799999999925e-05, 4.997200000000229e-05, 5.484700000000023e-05, 5.5693999999998495e-05, 5.56809999999984e-05, 5.387499999999837e-05, 5.379199999999695e-05, 5.388900000000141e-05, 5.662500000000112e-05, 5.187499999999984e-05, 5.190299999999898e-05, 5.579099999999948e-05, 5.570899999999754e-05, 5.377700000000138e-05, 5.090299999999798e-05, 5.48479999999997e-05, 5.280499999999952e-05, 5.476400000000228e-05, 5.005500000000024e-05, 5.379200000000042e-05, 5.190300000000245e-05, 5.568100000000187e-05, 5.281999999999856e-05, 5.483300000000066e-05, 5.379099999999748e-05, 5.088900000000188e-05, 5.388900000000141e-05, 5.284800000000117e-05, 5.480600000000099e-05, 5.088899999999841e-05, 5.090300000000145e-05, 5.091700000000102e-05, 5.5680000000002394e-05, 5.569500000000144e-05, 5.290299999999998e-05, 5.662500000000112e-05, 5.377699999999791e-05, 5.187499999999984e-05, 5.004200000000014e-05, 5.094400000000068e-05, 5.091699999999755e-05, 5.4749999999999244e-05, 5.197200000000082e-05, 4.991700000000002e-05, 5.4694000000000964e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.480" endtime="20201030 15:52:31.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.475" endtime="20201030 15:52:31.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.486" endtime="20201030 15:52:31.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.485" endtime="20201030 15:52:31.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.484" endtime="20201030 15:52:31.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.126" endtime="20201030 15:52:31.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.125" endtime="20201030 15:52:31.507"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.515" endtime="20201030 15:52:31.534"></status>
</kw>
<msg timestamp="20201030 15:52:31.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.514" endtime="20201030 15:52:31.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.535" endtime="20201030 15:52:31.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.538" endtime="20201030 15:52:31.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.511" endtime="20201030 15:52:31.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.509" endtime="20201030 15:52:31.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.547" endtime="20201030 15:52:31.832"></status>
</kw>
<msg timestamp="20201030 15:52:31.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.545" endtime="20201030 15:52:31.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.836" endtime="20201030 15:52:31.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.844" endtime="20201030 15:52:31.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.543" endtime="20201030 15:52:31.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.541" endtime="20201030 15:52:31.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.851" level="INFO">${RESULT} = [{'diff': 4.527799999999929e-05}, {'diff': 5.004200000000014e-05}, {'diff': 4.986100000000174e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.104199999999767e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:31.847" endtime="20201030 15:52:31.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.855" level="INFO">${ACCURACY} = {'diff': [4.527799999999929e-05, 5.004200000000014e-05, 4.986100000000174e-05, 5.383299999999966e-05, 5.186100000000027e-05, 5.104199999999767e-05, 5.5722000000001104e-05, 5.005500000000024e-05, 5.484...</msg>
<status status="PASS" starttime="20201030 15:52:31.852" endtime="20201030 15:52:31.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.859" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.858" endtime="20201030 15:52:31.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.862" level="INFO">VALUE: [4.527799999999929e-05, 5.004200000000014e-05, 4.986100000000174e-05, 5.383299999999966e-05, 5.186100000000027e-05, 5.104199999999767e-05, 5.5722000000001104e-05, 5.005500000000024e-05, 5.484700000000023e-05, 5.183299999999766e-05, 5.38479999999987e-05, 5.090299999999798e-05, 5.387500000000184e-05, 5.280599999999899e-05, 5.191700000000202e-05, 5.5791999999998954e-05, 5.3763999999997814e-05, 5.1929999999998644e-05, 5.568100000000187e-05, 5.199999999999996e-05, 4.9945000000002626e-05, 5.5777999999999384e-05, 5.570899999999754e-05, 5.388900000000141e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.094400000000068e-05, 5.5750000000000244e-05, 5.276300000000081e-05, 5.483400000000013e-05, 5.199999999999996e-05, 5.5679999999998925e-05, 5.291699999999955e-05, 4.9945000000002626e-05, 5.291699999999955e-05, 5.388900000000141e-05, 5.566699999999883e-05, 5.4791999999997953e-05, 5.583299999999819e-05, 5.390300000000098e-05, 5.56809999999984e-05, 5.482000000000056e-05, 5.097199999999982e-05, 5.281999999999856e-05, 5.579200000000242e-05, 4.995799999999925e-05, 5.580600000000199e-05, 4.995799999999925e-05, 5.6750000000001244e-05, 5.19730000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.860" endtime="20201030 15:52:31.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.856" endtime="20201030 15:52:31.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.866" endtime="20201030 15:52:31.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.865" endtime="20201030 15:52:31.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.864" endtime="20201030 15:52:31.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.508" endtime="20201030 15:52:31.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.507" endtime="20201030 15:52:31.887"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.896" endtime="20201030 15:52:31.916"></status>
</kw>
<msg timestamp="20201030 15:52:31.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.894" endtime="20201030 15:52:31.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.917" endtime="20201030 15:52:31.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.919" endtime="20201030 15:52:31.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.892" endtime="20201030 15:52:31.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.890" endtime="20201030 15:52:31.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.928" endtime="20201030 15:52:32.214"></status>
</kw>
<msg timestamp="20201030 15:52:32.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.927" endtime="20201030 15:52:32.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.218" endtime="20201030 15:52:32.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.226" endtime="20201030 15:52:32.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.924" endtime="20201030 15:52:32.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.923" endtime="20201030 15:52:32.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.233" level="INFO">${RESULT} = [{'diff': 6.618099999999849e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.194499999999769e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.3777999999997383e-05}, {'diff': 5.284800000000117e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:32.230" endtime="20201030 15:52:32.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.237" level="INFO">${ACCURACY} = {'diff': [6.618099999999849e-05, 5.094500000000016e-05, 5.194499999999769e-05, 5.4735999999999674e-05, 5.3777999999997383e-05, 5.284800000000117e-05, 5.288900000000041e-05, 5.18470000000007e-05, 4.997...</msg>
<status status="PASS" starttime="20201030 15:52:32.234" endtime="20201030 15:52:32.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.241" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.240" endtime="20201030 15:52:32.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.244" level="INFO">VALUE: [6.618099999999849e-05, 5.094500000000016e-05, 5.194499999999769e-05, 5.4735999999999674e-05, 5.3777999999997383e-05, 5.284800000000117e-05, 5.288900000000041e-05, 5.18470000000007e-05, 4.997199999999882e-05, 5.195800000000125e-05, 5.5722000000001104e-05, 5.281900000000256e-05, 5.382000000000303e-05, 5.000000000000143e-05, 5.187499999999984e-05, 4.997199999999882e-05, 5.4749999999999244e-05, 5.290299999999998e-05, 5.56809999999984e-05, 5.088899999999841e-05, 5.188899999999941e-05, 5.482000000000056e-05, 5.5735999999997204e-05, 5.090299999999798e-05, 5.281999999999856e-05, 5.095800000000025e-05, 5.197200000000082e-05, 4.9972999999998297e-05, 5.6666000000000355e-05, 5.490299999999851e-05, 5.0901999999998504e-05, 4.998599999999839e-05, 5.38479999999987e-05, 5.5722000000001104e-05, 5.5722000000001104e-05, 5.088900000000188e-05, 5.4722000000000104e-05, 5.572300000000058e-05, 5.186100000000027e-05, 5.280599999999899e-05, 5.5722000000001104e-05, 5.5750000000000244e-05, 5.090300000000145e-05, 5.4735999999999674e-05, 5.4708000000000534e-05, 5.091700000000102e-05, 5.28609999999978e-05, 5.4749999999999244e-05, 5.280599999999899e-05, 5.6693999999999495e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.242" endtime="20201030 15:52:32.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.238" endtime="20201030 15:52:32.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.249" endtime="20201030 15:52:32.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.248" endtime="20201030 15:52:32.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.247" endtime="20201030 15:52:32.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.888" endtime="20201030 15:52:32.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.887" endtime="20201030 15:52:32.270"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.279" endtime="20201030 15:52:32.297"></status>
</kw>
<msg timestamp="20201030 15:52:32.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.277" endtime="20201030 15:52:32.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.299" endtime="20201030 15:52:32.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.301" endtime="20201030 15:52:32.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.275" endtime="20201030 15:52:32.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.273" endtime="20201030 15:52:32.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.310" endtime="20201030 15:52:32.601"></status>
</kw>
<msg timestamp="20201030 15:52:32.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020332375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.308" endtime="20201030 15:52:32.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020332375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.605" endtime="20201030 15:52:32.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.613" endtime="20201030 15:52:32.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.306" endtime="20201030 15:52:32.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.304" endtime="20201030 15:52:32.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.620" level="INFO">${RESULT} = [{'diff': 4.5166999999998736e-05}, {'diff': 5.1971999999997354e-05}, {'diff': 5.384800000000217e-05}, {'diff': 5.565300000000273e-05}, {'diff': 5.1971999999997354e-05}, {'diff': 5.56670000000023e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:32.617" endtime="20201030 15:52:32.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.625" level="INFO">${ACCURACY} = {'diff': [4.5166999999998736e-05, 5.1971999999997354e-05, 5.384800000000217e-05, 5.565300000000273e-05, 5.1971999999997354e-05, 5.56670000000023e-05, 5.390300000000098e-05, 5.4637999999999215e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:52:32.621" endtime="20201030 15:52:32.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.629" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.628" endtime="20201030 15:52:32.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.632" level="INFO">VALUE: [4.5166999999998736e-05, 5.1971999999997354e-05, 5.384800000000217e-05, 5.565300000000273e-05, 5.1971999999997354e-05, 5.56670000000023e-05, 5.390300000000098e-05, 5.4637999999999215e-05, 5.579200000000242e-05, 5.0901999999998504e-05, 5.004100000000067e-05, 5.093000000000111e-05, 5.291699999999955e-05, 5.098599999999939e-05, 5.56809999999984e-05, 5.197200000000082e-05, 5.187499999999984e-05, 5.004200000000014e-05, 5.390300000000098e-05, 5.281899999999909e-05, 5.484700000000023e-05, 5.290299999999998e-05, 5.56809999999984e-05, 5.097199999999982e-05, 5.5694000000001964e-05, 5.48479999999997e-05, 5.5694000000001964e-05, 5.2943999999999214e-05, 5.5679999999998925e-05, 5.3763999999997814e-05, 5.484700000000023e-05, 5.5791999999998954e-05, 5.279099999999995e-05, 5.481899999999762e-05, 5.583300000000166e-05, 5.187499999999984e-05, 5.188900000000288e-05, 5.098599999999939e-05, 5.188899999999941e-05, 5.100000000000243e-05, 5.197200000000082e-05, 5.3763999999997814e-05, 5.099999999999896e-05, 5.386199999999827e-05, 5.098599999999939e-05, 5.568100000000187e-05, 5.097200000000329e-05, 5.38609999999988e-05, 5.4722000000000104e-05, 5.6735999999998205e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.630" endtime="20201030 15:52:32.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.626" endtime="20201030 15:52:32.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.693" endtime="20201030 15:52:32.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.692" endtime="20201030 15:52:32.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.691" endtime="20201030 15:52:32.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.271" endtime="20201030 15:52:32.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.270" endtime="20201030 15:52:32.714"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.723" endtime="20201030 15:52:32.745"></status>
</kw>
<msg timestamp="20201030 15:52:32.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.721" endtime="20201030 15:52:32.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.746" endtime="20201030 15:52:32.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.749" endtime="20201030 15:52:32.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.719" endtime="20201030 15:52:32.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.717" endtime="20201030 15:52:32.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.758" endtime="20201030 15:52:33.045"></status>
</kw>
<msg timestamp="20201030 15:52:33.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023443875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.756" endtime="20201030 15:52:33.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023443875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.049" endtime="20201030 15:52:33.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.057" endtime="20201030 15:52:33.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.754" endtime="20201030 15:52:33.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.752" endtime="20201030 15:52:33.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.063" level="INFO">${RESULT} = [{'diff': 6.333299999999875e-05}, {'diff': 5.484700000000023e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.004100000000067e-05}, {'diff': 4.997199999999882e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:33.060" endtime="20201030 15:52:33.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.067" level="INFO">${ACCURACY} = {'diff': [6.333299999999875e-05, 5.484700000000023e-05, 5.4749999999999244e-05, 5.187499999999984e-05, 5.004100000000067e-05, 4.997199999999882e-05, 5.377800000000085e-05, 5.38609999999988e-05, 5.2875...</msg>
<status status="PASS" starttime="20201030 15:52:33.064" endtime="20201030 15:52:33.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.072" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.071" endtime="20201030 15:52:33.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.074" level="INFO">VALUE: [6.333299999999875e-05, 5.484700000000023e-05, 5.4749999999999244e-05, 5.187499999999984e-05, 5.004100000000067e-05, 4.997199999999882e-05, 5.377800000000085e-05, 5.38609999999988e-05, 5.287500000000084e-05, 5.475000000000271e-05, 5.186100000000027e-05, 5.1943999999998214e-05, 5.379200000000042e-05, 5.5777999999999384e-05, 5.4694000000000964e-05, 5.472300000000305e-05, 5.288900000000041e-05, 5.4722000000000104e-05, 5.4749999999999244e-05, 4.994499999999916e-05, 5.38470000000027e-05, 5.565299999999926e-05, 5.663900000000069e-05, 5.284699999999823e-05, 5.000000000000143e-05, 5.186100000000027e-05, 5.283299999999866e-05, 5.561200000000002e-05, 5.3721999999999104e-05, 5.283300000000213e-05, 5.094500000000016e-05, 5.088900000000188e-05, 5.4763999999998814e-05, 5.097199999999982e-05, 5.187499999999984e-05, 5.5791999999998954e-05, 5.280599999999899e-05, 5.191700000000202e-05, 5.6750000000001244e-05, 5.5680000000002394e-05, 5.187499999999984e-05, 5.281999999999856e-05, 5.387499999999837e-05, 5.280600000000246e-05, 5.186100000000027e-05, 5.581899999999862e-05, 5.187499999999984e-05, 5.087499999999884e-05, 5.08469999999997e-05, 5.088900000000188e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.073" endtime="20201030 15:52:33.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.068" endtime="20201030 15:52:33.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.079" endtime="20201030 15:52:33.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.078" endtime="20201030 15:52:33.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.077" endtime="20201030 15:52:33.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.715" endtime="20201030 15:52:33.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.715" endtime="20201030 15:52:33.100"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.108" endtime="20201030 15:52:33.132"></status>
</kw>
<msg timestamp="20201030 15:52:33.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.107" endtime="20201030 15:52:33.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.134" endtime="20201030 15:52:33.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.136" endtime="20201030 15:52:33.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.104" endtime="20201030 15:52:33.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.102" endtime="20201030 15:52:33.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.145" endtime="20201030 15:52:33.447"></status>
</kw>
<msg timestamp="20201030 15:52:33.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024580014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.144" endtime="20201030 15:52:33.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024534819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024580014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.452" endtime="20201030 15:52:33.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.460" endtime="20201030 15:52:33.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.141" endtime="20201030 15:52:33.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.140" endtime="20201030 15:52:33.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.466" level="INFO">${RESULT} = [{'diff': 4.5195000000001345e-05}, {'diff': 5.6749999999997774e-05}, {'diff': 5.386200000000174e-05}, {'diff': 5.284699999999823e-05}, {'diff': 5.193100000000159e-05}, {'diff': 5.098599999999939e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:33.463" endtime="20201030 15:52:33.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.470" level="INFO">${ACCURACY} = {'diff': [4.5195000000001345e-05, 5.6749999999997774e-05, 5.386200000000174e-05, 5.284699999999823e-05, 5.193100000000159e-05, 5.098599999999939e-05, 5.281899999999909e-05, 5.099999999999896e-05, 5.58...</msg>
<status status="PASS" starttime="20201030 15:52:33.467" endtime="20201030 15:52:33.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.475" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.474" endtime="20201030 15:52:33.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.477" level="INFO">VALUE: [4.5195000000001345e-05, 5.6749999999997774e-05, 5.386200000000174e-05, 5.284699999999823e-05, 5.193100000000159e-05, 5.098599999999939e-05, 5.281899999999909e-05, 5.099999999999896e-05, 5.5805999999998523e-05, 5.581999999999809e-05, 5.56809999999984e-05, 5.097199999999982e-05, 5.101399999999853e-05, 5.005500000000024e-05, 5.6750000000001244e-05, 5.483300000000066e-05, 5.281999999999856e-05, 5.002800000000057e-05, 5.579099999999948e-05, 5.099999999999896e-05, 5.395899999999926e-05, 5.3708000000003e-05, 5.291699999999955e-05, 5.2929999999999644e-05, 5.5791999999998954e-05, 4.995899999999873e-05, 5.477700000000238e-05, 5.099999999999896e-05, 5.387499999999837e-05, 5.0901999999998504e-05, 5.288900000000041e-05, 5.58610000000008e-05, 5.6750000000001244e-05, 5.1971999999997354e-05, 5.191700000000202e-05, 5.480499999999805e-05, 5.2749999999997244e-05, 5.004100000000067e-05, 5.10279999999981e-05, 5.18470000000007e-05, 5.1014000000002e-05, 5.193099999999812e-05, 5.5763999999999814e-05, 5.18470000000007e-05, 5.098599999999939e-05, 5.388900000000141e-05, 5.388900000000141e-05, 5.091700000000102e-05, 5.663900000000069e-05, 5.104100000000167e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.476" endtime="20201030 15:52:33.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.471" endtime="20201030 15:52:33.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.483" endtime="20201030 15:52:33.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.482" endtime="20201030 15:52:33.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.480" endtime="20201030 15:52:33.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.101" endtime="20201030 15:52:33.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.100" endtime="20201030 15:52:33.504"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.512" endtime="20201030 15:52:33.533"></status>
</kw>
<msg timestamp="20201030 15:52:33.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.511" endtime="20201030 15:52:33.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.535" endtime="20201030 15:52:33.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.537" endtime="20201030 15:52:33.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.508" endtime="20201030 15:52:33.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.506" endtime="20201030 15:52:33.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.546" endtime="20201030 15:52:33.832"></status>
</kw>
<msg timestamp="20201030 15:52:33.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.545" endtime="20201030 15:52:33.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022510111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.836" endtime="20201030 15:52:33.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.844" endtime="20201030 15:52:33.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.542" endtime="20201030 15:52:33.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.540" endtime="20201030 15:52:33.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.851" level="INFO">${RESULT} = [{'diff': 4.704200000000061e-05}, {'diff': 5.3749999999998244e-05}, {'diff': 5.194400000000168e-05}, {'diff': 5.662500000000112e-05}, {'diff': 5.005499999999677e-05}, {'diff': 5.5665999999999355e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:33.847" endtime="20201030 15:52:33.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.855" level="INFO">${ACCURACY} = {'diff': [4.704200000000061e-05, 5.3749999999998244e-05, 5.194400000000168e-05, 5.662500000000112e-05, 5.005499999999677e-05, 5.5665999999999355e-05, 5.19730000000003e-05, 5.5680000000002394e-05, 5.47...</msg>
<status status="PASS" starttime="20201030 15:52:33.852" endtime="20201030 15:52:33.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.860" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.859" endtime="20201030 15:52:33.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.862" level="INFO">VALUE: [4.704200000000061e-05, 5.3749999999998244e-05, 5.194400000000168e-05, 5.662500000000112e-05, 5.005499999999677e-05, 5.5665999999999355e-05, 5.19730000000003e-05, 5.5680000000002394e-05, 5.473699999999915e-05, 5.38609999999988e-05, 5.3735999999998674e-05, 5.2902000000000504e-05, 5.5694000000001964e-05, 5.283399999999813e-05, 5.0915999999998074e-05, 5.093100000000059e-05, 5.283299999999866e-05, 5.2902000000000504e-05, 4.995899999999873e-05, 5.666699999999983e-05, 5.5777999999999384e-05, 5.0887999999998934e-05, 5.0915999999998074e-05, 5.106900000000081e-05, 5.28470000000017e-05, 5.088899999999841e-05, 5.569499999999797e-05, 5.3902000000001504e-05, 5.0915999999998074e-05, 5.283299999999866e-05, 5.202699999999963e-05, 5.280599999999899e-05, 5.28470000000017e-05, 5.280599999999899e-05, 5.093100000000059e-05, 5.2929999999999644e-05, 4.999999999999796e-05, 5.099999999999896e-05, 5.379200000000042e-05, 5.388900000000141e-05, 5.281900000000256e-05, 5.5708000000001534e-05, 5.580499999999905e-05, 5.470900000000001e-05, 5.098599999999939e-05, 5.666699999999983e-05, 5.482000000000056e-05, 5.4708000000000534e-05, 5.5763999999999814e-05, 5.559700000000098e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.861" endtime="20201030 15:52:33.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.856" endtime="20201030 15:52:33.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.867" endtime="20201030 15:52:33.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.866" endtime="20201030 15:52:33.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.865" endtime="20201030 15:52:33.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.505" endtime="20201030 15:52:33.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.504" endtime="20201030 15:52:33.888"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.897" endtime="20201030 15:52:33.915"></status>
</kw>
<msg timestamp="20201030 15:52:33.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.895" endtime="20201030 15:52:33.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.916" endtime="20201030 15:52:33.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.919" endtime="20201030 15:52:33.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.893" endtime="20201030 15:52:33.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.890" endtime="20201030 15:52:33.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.928" endtime="20201030 15:52:34.214"></status>
</kw>
<msg timestamp="20201030 15:52:34.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.926" endtime="20201030 15:52:34.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.218" endtime="20201030 15:52:34.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.226" endtime="20201030 15:52:34.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.924" endtime="20201030 15:52:34.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.922" endtime="20201030 15:52:34.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.233" level="INFO">${RESULT} = [{'diff': 4.143000000000202e-05}, {'diff': 5.295900000000173e-05}, {'diff': 5.583300000000166e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.005500000000024e-05}, {'diff': 5.5750000000000244e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:34.230" endtime="20201030 15:52:34.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.237" level="INFO">${ACCURACY} = {'diff': [4.143000000000202e-05, 5.295900000000173e-05, 5.583300000000166e-05, 5.4722000000000104e-05, 5.005500000000024e-05, 5.5750000000000244e-05, 5.380599999999999e-05, 5.5791999999998954e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 15:52:34.234" endtime="20201030 15:52:34.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.241" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.240" endtime="20201030 15:52:34.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.244" level="INFO">VALUE: [4.143000000000202e-05, 5.295900000000173e-05, 5.583300000000166e-05, 5.4722000000000104e-05, 5.005500000000024e-05, 5.5750000000000244e-05, 5.380599999999999e-05, 5.5791999999998954e-05, 5.191699999999855e-05, 5.388899999999794e-05, 5.099999999999896e-05, 5.095800000000025e-05, 5.2014000000003e-05, 5.000000000000143e-05, 5.568100000000187e-05, 5.187499999999984e-05, 5.098599999999939e-05, 5.580499999999905e-05, 5.193000000000211e-05, 5.286100000000127e-05, 5.191700000000202e-05, 5.563899999999969e-05, 5.5708000000001534e-05, 5.480600000000099e-05, 5.188900000000288e-05, 5.194400000000168e-05, 5.377800000000085e-05, 5.002699999999763e-05, 5.5777999999999384e-05, 5.380599999999999e-05, 5.580500000000252e-05, 5.191700000000202e-05, 5.193099999999812e-05, 5.5777999999999384e-05, 5.094500000000016e-05, 5.101399999999853e-05, 5.284699999999823e-05, 5.481899999999762e-05, 5.381900000000009e-05, 5.577800000000285e-05, 5.090299999999798e-05, 5.00279999999971e-05, 5.672299999999811e-05, 5.286100000000127e-05, 5.001399999999753e-05, 5.384699999999923e-05, 5.383399999999913e-05, 5.28470000000017e-05, 5.665300000000026e-05, 5.097199999999982e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.242" endtime="20201030 15:52:34.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.238" endtime="20201030 15:52:34.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.249" endtime="20201030 15:52:34.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.247" endtime="20201030 15:52:34.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.246" endtime="20201030 15:52:34.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.889" endtime="20201030 15:52:34.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.888" endtime="20201030 15:52:34.269"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.278" endtime="20201030 15:52:34.303"></status>
</kw>
<msg timestamp="20201030 15:52:34.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.276" endtime="20201030 15:52:34.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.305" endtime="20201030 15:52:34.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.307" endtime="20201030 15:52:34.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.274" endtime="20201030 15:52:34.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.272" endtime="20201030 15:52:34.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.316" endtime="20201030 15:52:34.602"></status>
</kw>
<msg timestamp="20201030 15:52:34.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025786625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025851931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.315" endtime="20201030 15:52:34.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025786625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025851931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.606" endtime="20201030 15:52:34.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.614" endtime="20201030 15:52:34.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.312" endtime="20201030 15:52:34.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.310" endtime="20201030 15:52:34.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.621" level="INFO">${RESULT} = [{'diff': 6.530600000000109e-05}, {'diff': 5.379199999999695e-05}, {'diff': 5.6694000000002964e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.287499999999737e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:34.618" endtime="20201030 15:52:34.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.625" level="INFO">${ACCURACY} = {'diff': [6.530600000000109e-05, 5.379199999999695e-05, 5.6694000000002964e-05, 5.38609999999988e-05, 5.4777999999998384e-05, 5.287499999999737e-05, 5.380599999999999e-05, 4.994399999999968e-05, 5.288...</msg>
<status status="PASS" starttime="20201030 15:52:34.622" endtime="20201030 15:52:34.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.629" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.628" endtime="20201030 15:52:34.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.632" level="INFO">VALUE: [6.530600000000109e-05, 5.379199999999695e-05, 5.6694000000002964e-05, 5.38609999999988e-05, 5.4777999999998384e-05, 5.287499999999737e-05, 5.380599999999999e-05, 4.994399999999968e-05, 5.288899999999694e-05, 5.090300000000145e-05, 5.199999999999996e-05, 5.388900000000141e-05, 5.566699999999883e-05, 5.099999999999896e-05, 5.277700000000038e-05, 5.205599999999824e-05, 5.380499999999705e-05, 5.291699999999955e-05, 5.093100000000059e-05, 5.383299999999966e-05, 5.472299999999958e-05, 5.5736000000000674e-05, 5.190299999999898e-05, 5.5693999999998495e-05, 5.483400000000013e-05, 5.19730000000003e-05, 5.5722000000001104e-05, 5.5708000000001534e-05, 5.388900000000141e-05, 4.998600000000186e-05, 5.186100000000027e-05, 5.579200000000242e-05, 5.091600000000154e-05, 5.090299999999798e-05, 5.384699999999923e-05, 5.281899999999909e-05, 5.5693999999998495e-05, 5.5750000000000244e-05, 5.007000000000275e-05, 5.187499999999984e-05, 5.004100000000067e-05, 5.187499999999984e-05, 5.197200000000082e-05, 5.4749999999999244e-05, 5.5791999999998954e-05, 4.995899999999873e-05, 5.5666000000002824e-05, 5.577700000000338e-05, 5.475000000000271e-05, 5.48479999999997e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.630" endtime="20201030 15:52:34.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.626" endtime="20201030 15:52:34.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.637" endtime="20201030 15:52:34.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.636" endtime="20201030 15:52:34.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.635" endtime="20201030 15:52:34.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.270" endtime="20201030 15:52:34.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.270" endtime="20201030 15:52:34.658"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.667" endtime="20201030 15:52:34.690"></status>
</kw>
<msg timestamp="20201030 15:52:34.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.665" endtime="20201030 15:52:34.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.692" endtime="20201030 15:52:34.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.694" endtime="20201030 15:52:34.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.663" endtime="20201030 15:52:34.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.661" endtime="20201030 15:52:34.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.703" endtime="20201030 15:52:34.989"></status>
</kw>
<msg timestamp="20201030 15:52:34.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023652333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.701" endtime="20201030 15:52:34.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023652333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023723292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.993" endtime="20201030 15:52:35.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.001" endtime="20201030 15:52:35.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.699" endtime="20201030 15:52:35.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.697" endtime="20201030 15:52:35.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.010" level="INFO">${RESULT} = [{'diff': 7.095899999999891e-05}, {'diff': 8.241599999999835e-05}, {'diff': 8.255599999999752e-05}, {'diff': 8.337500000000012e-05}, {'diff': 8.16659999999976e-05}, {'diff': 8.154200000000042e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:35.006" endtime="20201030 15:52:35.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.015" level="INFO">${ACCURACY} = {'diff': [7.095899999999891e-05, 8.241599999999835e-05, 8.255599999999752e-05, 8.337500000000012e-05, 8.16659999999976e-05, 8.154200000000042e-05, 8.251399999999881e-05, 8.629100000000223e-05, 8.43189...</msg>
<status status="PASS" starttime="20201030 15:52:35.011" endtime="20201030 15:52:35.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.019" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.018" endtime="20201030 15:52:35.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.022" level="INFO">VALUE: [7.095899999999891e-05, 8.241599999999835e-05, 8.255599999999752e-05, 8.337500000000012e-05, 8.16659999999976e-05, 8.154200000000042e-05, 8.251399999999881e-05, 8.629100000000223e-05, 8.431899999999937e-05, 8.537499999999865e-05, 8.52920000000007e-05, 8.057000000000203e-05, 8.431900000000284e-05, 8.149999999999824e-05, 8.433400000000188e-05, 8.444399999999949e-05, 8.333400000000088e-05, 8.148600000000214e-05, 8.531900000000037e-05, 8.251400000000228e-05, 8.338899999999969e-05, 8.720800000000181e-05, 8.531900000000037e-05, 8.537499999999865e-05, 8.241600000000182e-05, 8.055499999999952e-05, 8.622299999999986e-05, 8.34720000000011e-05, 8.338899999999969e-05, 8.148599999999867e-05, 8.3459000000001e-05, 8.633300000000094e-05, 8.156900000000009e-05, 8.345800000000153e-05, 8.436099999999808e-05, 8.062500000000083e-05, 8.530600000000027e-05, 8.334700000000098e-05, 8.062499999999737e-05, 8.623599999999995e-05, 8.06390000000004e-05, 8.241699999999783e-05, 8.636100000000008e-05, 8.336200000000002e-05, 8.252800000000185e-05, 8.442999999999992e-05, 8.249999999999924e-05, 8.43469999999985e-05, 8.636100000000008e-05, 8.1458999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.020" endtime="20201030 15:52:35.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.016" endtime="20201030 15:52:35.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.027" endtime="20201030 15:52:35.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.025" endtime="20201030 15:52:35.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.024" endtime="20201030 15:52:35.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.659" endtime="20201030 15:52:35.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.659" endtime="20201030 15:52:35.047"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.056" endtime="20201030 15:52:35.077"></status>
</kw>
<msg timestamp="20201030 15:52:35.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.054" endtime="20201030 15:52:35.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.078" endtime="20201030 15:52:35.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.081" endtime="20201030 15:52:35.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.052" endtime="20201030 15:52:35.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.050" endtime="20201030 15:52:35.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.090" endtime="20201030 15:52:35.377"></status>
</kw>
<msg timestamp="20201030 15:52:35.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.088" endtime="20201030 15:52:35.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.381" endtime="20201030 15:52:35.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.389" endtime="20201030 15:52:35.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.086" endtime="20201030 15:52:35.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.084" endtime="20201030 15:52:35.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.396" level="INFO">${RESULT} = [{'diff': 7.288899999999959e-05}, {'diff': 8.156999999999956e-05}, {'diff': 8.430600000000274e-05}, {'diff': 8.43330000000024e-05}, {'diff': 8.634799999999998e-05}, {'diff': 8.622299999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:35.393" endtime="20201030 15:52:35.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.400" level="INFO">${ACCURACY} = {'diff': [7.288899999999959e-05, 8.156999999999956e-05, 8.430600000000274e-05, 8.43330000000024e-05, 8.634799999999998e-05, 8.622299999999986e-05, 8.147299999999857e-05, 8.631999999999737e-05, 8.24170...</msg>
<status status="PASS" starttime="20201030 15:52:35.397" endtime="20201030 15:52:35.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.404" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.403" endtime="20201030 15:52:35.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.407" level="INFO">VALUE: [7.288899999999959e-05, 8.156999999999956e-05, 8.430600000000274e-05, 8.43330000000024e-05, 8.634799999999998e-05, 8.622299999999986e-05, 8.147299999999857e-05, 8.631999999999737e-05, 8.24170000000013e-05, 8.34309999999984e-05, 8.623599999999995e-05, 8.151400000000128e-05, 8.533299999999994e-05, 8.144399999999996e-05, 8.241699999999783e-05, 8.53469999999995e-05, 8.238899999999869e-05, 8.430600000000274e-05, 8.444500000000243e-05, 8.245800000000053e-05, 8.144399999999996e-05, 8.245800000000053e-05, 8.244499999999697e-05, 8.43049999999998e-05, 8.738899999999675e-05, 8.056999999999856e-05, 8.624999999999952e-05, 8.44170000000033e-05, 8.431899999999937e-05, 8.442999999999992e-05, 8.252800000000185e-05, 8.143000000000039e-05, 8.243100000000086e-05, 8.631900000000137e-05, 8.437500000000112e-05, 8.341699999999883e-05, 8.241600000000182e-05, 8.63189999999979e-05, 8.525000000000199e-05, 8.155599999999999e-05, 8.24170000000013e-05, 8.159699999999923e-05, 8.24170000000013e-05, 8.436100000000155e-05, 8.231899999999737e-05, 8.344399999999849e-05, 8.436099999999808e-05, 8.715299999999954e-05, 8.633300000000094e-05, 8.337500000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.405" endtime="20201030 15:52:35.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.401" endtime="20201030 15:52:35.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.412" endtime="20201030 15:52:35.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.410" endtime="20201030 15:52:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.409" endtime="20201030 15:52:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.048" endtime="20201030 15:52:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.048" endtime="20201030 15:52:35.432"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.441" endtime="20201030 15:52:35.463"></status>
</kw>
<msg timestamp="20201030 15:52:35.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.439" endtime="20201030 15:52:35.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.465" endtime="20201030 15:52:35.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.468" endtime="20201030 15:52:35.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.437" endtime="20201030 15:52:35.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.435" endtime="20201030 15:52:35.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.478" endtime="20201030 15:52:35.763"></status>
</kw>
<msg timestamp="20201030 15:52:35.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.476" endtime="20201030 15:52:35.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.767" endtime="20201030 15:52:35.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.775" endtime="20201030 15:52:35.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.473" endtime="20201030 15:52:35.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.471" endtime="20201030 15:52:35.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.782" level="INFO">${RESULT} = [{'diff': 9.294400000000105e-05}, {'diff': 8.44309999999994e-05}, {'diff': 8.050000000000071e-05}, {'diff': 8.336100000000055e-05}, {'diff': 8.256900000000109e-05}, {'diff': 8.145799999999953e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:35.779" endtime="20201030 15:52:35.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.786" level="INFO">${ACCURACY} = {'diff': [9.294400000000105e-05, 8.44309999999994e-05, 8.050000000000071e-05, 8.336100000000055e-05, 8.256900000000109e-05, 8.145799999999953e-05, 8.623599999999995e-05, 8.638899999999922e-05, 8.14449...</msg>
<status status="PASS" starttime="20201030 15:52:35.783" endtime="20201030 15:52:35.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.790" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.789" endtime="20201030 15:52:35.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.793" level="INFO">VALUE: [9.294400000000105e-05, 8.44309999999994e-05, 8.050000000000071e-05, 8.336100000000055e-05, 8.256900000000109e-05, 8.145799999999953e-05, 8.623599999999995e-05, 8.638899999999922e-05, 8.144499999999943e-05, 8.155500000000052e-05, 8.52920000000007e-05, 8.147200000000257e-05, 8.241600000000182e-05, 8.620800000000081e-05, 8.541700000000083e-05, 8.148699999999814e-05, 8.434800000000145e-05, 8.53469999999995e-05, 8.530600000000027e-05, 8.430599999999927e-05, 8.054199999999942e-05, 8.248599999999967e-05, 8.337500000000012e-05, 8.340199999999978e-05, 8.248699999999914e-05, 8.05970000000017e-05, 8.53469999999995e-05, 8.624999999999952e-05, 8.433299999999894e-05, 8.718100000000215e-05, 8.437500000000112e-05, 8.63189999999979e-05, 8.343100000000186e-05, 7.962499999999983e-05, 8.540199999999831e-05, 8.622299999999986e-05, 8.627799999999866e-05, 8.244400000000096e-05, 8.351400000000328e-05, 8.14719999999991e-05, 8.725000000000052e-05, 8.440300000000026e-05, 8.52920000000007e-05, 8.441699999999983e-05, 8.144399999999996e-05, 8.537499999999865e-05, 8.049999999999724e-05, 8.240300000000172e-05, 8.156899999999662e-05, 8.149999999999824e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.791" endtime="20201030 15:52:35.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.787" endtime="20201030 15:52:35.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.798" endtime="20201030 15:52:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.797" endtime="20201030 15:52:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.796" endtime="20201030 15:52:35.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.433" endtime="20201030 15:52:35.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.433" endtime="20201030 15:52:35.819"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.828" endtime="20201030 15:52:35.850"></status>
</kw>
<msg timestamp="20201030 15:52:35.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.826" endtime="20201030 15:52:35.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.852" endtime="20201030 15:52:35.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.854" endtime="20201030 15:52:35.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.824" endtime="20201030 15:52:35.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.822" endtime="20201030 15:52:35.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.863" endtime="20201030 15:52:36.148"></status>
</kw>
<msg timestamp="20201030 15:52:36.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.861" endtime="20201030 15:52:36.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023342736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023439569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.152" endtime="20201030 15:52:36.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.160" endtime="20201030 15:52:36.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.859" endtime="20201030 15:52:36.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.857" endtime="20201030 15:52:36.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.167" level="INFO">${RESULT} = [{'diff': 9.683300000000103e-05}, {'diff': 8.24720000000001e-05}, {'diff': 8.241699999999783e-05}, {'diff': 8.719400000000224e-05}, {'diff': 8.350000000000024e-05}, {'diff': 8.630600000000127e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.164" endtime="20201030 15:52:36.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.172" level="INFO">${ACCURACY} = {'diff': [9.683300000000103e-05, 8.24720000000001e-05, 8.241699999999783e-05, 8.719400000000224e-05, 8.350000000000024e-05, 8.630600000000127e-05, 8.534800000000245e-05, 8.251399999999881e-05, 8.24450...</msg>
<status status="PASS" starttime="20201030 15:52:36.168" endtime="20201030 15:52:36.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.176" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.175" endtime="20201030 15:52:36.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.179" level="INFO">VALUE: [9.683300000000103e-05, 8.24720000000001e-05, 8.241699999999783e-05, 8.719400000000224e-05, 8.350000000000024e-05, 8.630600000000127e-05, 8.534800000000245e-05, 8.251399999999881e-05, 8.244500000000043e-05, 8.632000000000084e-05, 8.633400000000041e-05, 8.536099999999908e-05, 8.241599999999835e-05, 8.627800000000213e-05, 8.626299999999962e-05, 8.155599999999999e-05, 8.244400000000096e-05, 8.62920000000017e-05, 8.150000000000171e-05, 8.345800000000153e-05, 8.148599999999867e-05, 8.152800000000085e-05, 8.431899999999937e-05, 8.247199999999663e-05, 8.533299999999994e-05, 8.350000000000024e-05, 8.337500000000012e-05, 8.351399999999981e-05, 8.437500000000112e-05, 8.056999999999856e-05, 8.437500000000112e-05, 8.634799999999998e-05, 8.540299999999779e-05, 8.620800000000081e-05, 8.068099999999911e-05, 8.726400000000009e-05, 8.152800000000085e-05, 8.141600000000082e-05, 8.156900000000009e-05, 8.633300000000094e-05, 8.52920000000007e-05, 8.251399999999881e-05, 8.531900000000037e-05, 8.718100000000215e-05, 8.438899999999722e-05, 8.43049999999998e-05, 8.154100000000095e-05, 8.431900000000284e-05, 8.636100000000008e-05, 8.3459000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.177" endtime="20201030 15:52:36.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.173" endtime="20201030 15:52:36.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.184" endtime="20201030 15:52:36.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.182" endtime="20201030 15:52:36.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.181" endtime="20201030 15:52:36.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.820" endtime="20201030 15:52:36.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.819" endtime="20201030 15:52:36.204"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.213" endtime="20201030 15:52:36.235"></status>
</kw>
<msg timestamp="20201030 15:52:36.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.211" endtime="20201030 15:52:36.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.237" endtime="20201030 15:52:36.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.239" endtime="20201030 15:52:36.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.209" endtime="20201030 15:52:36.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.207" endtime="20201030 15:52:36.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.248" endtime="20201030 15:52:36.535"></status>
</kw>
<msg timestamp="20201030 15:52:36.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.247" endtime="20201030 15:52:36.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.539" endtime="20201030 15:52:36.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.547" endtime="20201030 15:52:36.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.244" endtime="20201030 15:52:36.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.242" endtime="20201030 15:52:36.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.554" level="INFO">${RESULT} = [{'diff': 8.634699999999704e-05}, {'diff': 8.722200000000138e-05}, {'diff': 8.145900000000247e-05}, {'diff': 8.152799999999738e-05}, {'diff': 8.242999999999792e-05}, {'diff': 8.537500000000212e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:36.550" endtime="20201030 15:52:36.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.558" level="INFO">${ACCURACY} = {'diff': [8.634699999999704e-05, 8.722200000000138e-05, 8.145900000000247e-05, 8.152799999999738e-05, 8.242999999999792e-05, 8.537500000000212e-05, 8.341699999999883e-05, 8.716599999999963e-05, 8.5417...</msg>
<status status="PASS" starttime="20201030 15:52:36.555" endtime="20201030 15:52:36.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.562" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.561" endtime="20201030 15:52:36.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.565" level="INFO">VALUE: [8.634699999999704e-05, 8.722200000000138e-05, 8.145900000000247e-05, 8.152799999999738e-05, 8.242999999999792e-05, 8.537500000000212e-05, 8.341699999999883e-05, 8.716599999999963e-05, 8.541700000000083e-05, 8.337500000000012e-05, 8.43049999999998e-05, 8.345899999999754e-05, 8.054200000000289e-05, 8.345800000000153e-05, 8.051299999999734e-05, 8.441699999999983e-05, 8.048600000000114e-05, 8.154200000000042e-05, 8.338900000000316e-05, 8.632000000000084e-05, 8.144499999999943e-05, 8.629199999999823e-05, 8.243100000000086e-05, 8.529199999999723e-05, 8.350000000000024e-05, 8.623699999999943e-05, 8.16109999999988e-05, 8.240300000000172e-05, 8.538900000000169e-05, 8.145799999999953e-05, 8.249999999999924e-05, 8.529199999999723e-05, 8.340200000000325e-05, 8.152800000000085e-05, 8.156900000000009e-05, 8.433399999999841e-05, 8.444499999999897e-05, 8.049999999999724e-05, 8.436100000000155e-05, 8.629199999999823e-05, 8.433299999999894e-05, 8.63050000000018e-05, 8.638899999999922e-05, 8.143000000000039e-05, 8.445899999999854e-05, 8.348600000000067e-05, 8.143099999999986e-05, 8.449999999999777e-05, 8.148600000000214e-05, 8.34170000000023e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.563" endtime="20201030 15:52:36.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.558" endtime="20201030 15:52:36.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.569" endtime="20201030 15:52:36.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.568" endtime="20201030 15:52:36.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.567" endtime="20201030 15:52:36.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.205" endtime="20201030 15:52:36.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.205" endtime="20201030 15:52:36.590"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.599" endtime="20201030 15:52:36.618"></status>
</kw>
<msg timestamp="20201030 15:52:36.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.597" endtime="20201030 15:52:36.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.620" endtime="20201030 15:52:36.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.622" endtime="20201030 15:52:36.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.595" endtime="20201030 15:52:36.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.593" endtime="20201030 15:52:36.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.631" endtime="20201030 15:52:36.917"></status>
</kw>
<msg timestamp="20201030 15:52:36.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020942, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021013069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:36.630" endtime="20201030 15:52:36.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020942, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021013069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:36.921" endtime="20201030 15:52:36.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.929" endtime="20201030 15:52:36.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.627" endtime="20201030 15:52:36.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.625" endtime="20201030 15:52:36.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.935" level="INFO">${RESULT} = [{'diff': 7.1069e-05}, {'diff': 8.155599999999999e-05}, {'diff': 8.443100000000286e-05}, {'diff': 8.448600000000167e-05}, {'diff': 8.533399999999941e-05}, {'diff': 8.727700000000019e-05}, {'diff': 8.2...</msg>
<status status="PASS" starttime="20201030 15:52:36.932" endtime="20201030 15:52:36.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.940" level="INFO">${ACCURACY} = {'diff': [7.1069e-05, 8.155599999999999e-05, 8.443100000000286e-05, 8.448600000000167e-05, 8.533399999999941e-05, 8.727700000000019e-05, 8.254200000000142e-05, 8.437500000000112e-05, 8.637499999999965...</msg>
<status status="PASS" starttime="20201030 15:52:36.936" endtime="20201030 15:52:36.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.944" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.943" endtime="20201030 15:52:36.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.946" level="INFO">VALUE: [7.1069e-05, 8.155599999999999e-05, 8.443100000000286e-05, 8.448600000000167e-05, 8.533399999999941e-05, 8.727700000000019e-05, 8.254200000000142e-05, 8.437500000000112e-05, 8.637499999999965e-05, 8.337500000000012e-05, 8.447199999999863e-05, 8.43330000000024e-05, 8.352799999999938e-05, 8.430599999999927e-05, 8.63470000000005e-05, 8.630600000000127e-05, 8.248599999999967e-05, 8.442999999999992e-05, 8.623599999999995e-05, 8.251399999999881e-05, 8.338899999999969e-05, 8.150000000000171e-05, 8.62920000000017e-05, 8.441699999999983e-05, 8.1458000000003e-05, 8.543099999999693e-05, 8.254099999999848e-05, 8.430600000000274e-05, 8.34720000000011e-05, 8.243000000000139e-05, 8.44720000000021e-05, 8.631999999999737e-05, 8.343100000000186e-05, 8.34720000000011e-05, 8.341599999999935e-05, 8.347199999999763e-05, 8.15979999999987e-05, 8.536199999999855e-05, 8.34309999999984e-05, 7.958300000000113e-05, 8.348600000000067e-05, 8.24170000000013e-05, 8.348700000000014e-05, 8.433399999999841e-05, 8.255499999999805e-05, 8.154200000000042e-05, 8.354199999999895e-05, 8.252800000000185e-05, 8.348600000000067e-05, 8.533399999999941e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.945" endtime="20201030 15:52:36.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.940" endtime="20201030 15:52:36.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.952" endtime="20201030 15:52:36.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.951" endtime="20201030 15:52:36.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.949" endtime="20201030 15:52:36.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.591" endtime="20201030 15:52:36.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.590" endtime="20201030 15:52:36.973"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.981" endtime="20201030 15:52:37.001"></status>
</kw>
<msg timestamp="20201030 15:52:37.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.980" endtime="20201030 15:52:37.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.003" endtime="20201030 15:52:37.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.005" endtime="20201030 15:52:37.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.977" endtime="20201030 15:52:37.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.975" endtime="20201030 15:52:37.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.014" endtime="20201030 15:52:37.300"></status>
</kw>
<msg timestamp="20201030 15:52:37.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.013" endtime="20201030 15:52:37.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.304" endtime="20201030 15:52:37.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.312" endtime="20201030 15:52:37.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.010" endtime="20201030 15:52:37.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.008" endtime="20201030 15:52:37.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.318" level="INFO">${RESULT} = [{'diff': 9.009699999999732e-05}, {'diff': 8.06390000000004e-05}, {'diff': 8.347300000000057e-05}, {'diff': 8.534799999999898e-05}, {'diff': 8.627700000000266e-05}, {'diff': 8.051400000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:37.315" endtime="20201030 15:52:37.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.323" level="INFO">${ACCURACY} = {'diff': [9.009699999999732e-05, 8.06390000000004e-05, 8.347300000000057e-05, 8.534799999999898e-05, 8.627700000000266e-05, 8.051400000000028e-05, 8.256900000000109e-05, 8.345899999999754e-05, 8.34169...</msg>
<status status="PASS" starttime="20201030 15:52:37.319" endtime="20201030 15:52:37.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.328" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.327" endtime="20201030 15:52:37.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.330" level="INFO">VALUE: [9.009699999999732e-05, 8.06390000000004e-05, 8.347300000000057e-05, 8.534799999999898e-05, 8.627700000000266e-05, 8.051400000000028e-05, 8.256900000000109e-05, 8.345899999999754e-05, 8.341699999999883e-05, 8.249999999999924e-05, 8.34720000000011e-05, 8.052799999999985e-05, 8.147300000000204e-05, 8.255499999999805e-05, 8.055499999999952e-05, 8.054199999999942e-05, 8.338800000000021e-05, 8.249999999999924e-05, 8.244500000000043e-05, 8.337500000000012e-05, 8.254200000000142e-05, 8.43469999999985e-05, 8.252799999999838e-05, 8.1458999999999e-05, 8.348600000000067e-05, 8.527799999999766e-05, 8.541599999999788e-05, 8.155599999999999e-05, 8.434700000000198e-05, 8.622299999999986e-05, 8.251400000000228e-05, 8.719499999999825e-05, 8.538899999999822e-05, 8.338899999999969e-05, 8.533299999999994e-05, 8.248599999999967e-05, 8.237499999999912e-05, 8.348600000000067e-05, 8.437499999999765e-05, 8.633400000000041e-05, 8.623599999999995e-05, 8.520799999999981e-05, 8.636100000000008e-05, 8.441699999999983e-05, 8.054200000000289e-05, 8.338900000000316e-05, 8.445800000000253e-05, 8.625000000000299e-05, 8.636100000000008e-05, 8.337500000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.329" endtime="20201030 15:52:37.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.324" endtime="20201030 15:52:37.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.335" endtime="20201030 15:52:37.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.333" endtime="20201030 15:52:37.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.332" endtime="20201030 15:52:37.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.974" endtime="20201030 15:52:37.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.973" endtime="20201030 15:52:37.356"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.364" endtime="20201030 15:52:37.392"></status>
</kw>
<msg timestamp="20201030 15:52:37.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.363" endtime="20201030 15:52:37.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.394" endtime="20201030 15:52:37.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.396" endtime="20201030 15:52:37.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.360" endtime="20201030 15:52:37.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.358" endtime="20201030 15:52:37.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.405" endtime="20201030 15:52:37.692"></status>
</kw>
<msg timestamp="20201030 15:52:37.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024135764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.404" endtime="20201030 15:52:37.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024135764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.696" endtime="20201030 15:52:37.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.704" endtime="20201030 15:52:37.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.401" endtime="20201030 15:52:37.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.399" endtime="20201030 15:52:37.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.710" level="INFO">${RESULT} = [{'diff': 9.683300000000103e-05}, {'diff': 8.251299999999934e-05}, {'diff': 8.340299999999926e-05}, {'diff': 8.531900000000037e-05}, {'diff': 8.155500000000052e-05}, {'diff': 8.444399999999949e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.707" endtime="20201030 15:52:37.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.715" level="INFO">${ACCURACY} = {'diff': [9.683300000000103e-05, 8.251299999999934e-05, 8.340299999999926e-05, 8.531900000000037e-05, 8.155500000000052e-05, 8.444399999999949e-05, 8.340299999999926e-05, 8.148600000000214e-05, 8.1457...</msg>
<status status="PASS" starttime="20201030 15:52:37.711" endtime="20201030 15:52:37.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.719" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.718" endtime="20201030 15:52:37.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.721" level="INFO">VALUE: [9.683300000000103e-05, 8.251299999999934e-05, 8.340299999999926e-05, 8.531900000000037e-05, 8.155500000000052e-05, 8.444399999999949e-05, 8.340299999999926e-05, 8.148600000000214e-05, 8.145799999999953e-05, 8.05970000000017e-05, 8.530600000000027e-05, 8.145799999999953e-05, 8.345800000000153e-05, 8.620800000000081e-05, 8.451400000000081e-05, 8.147299999999857e-05, 8.42919999999997e-05, 8.726400000000009e-05, 8.1458999999999e-05, 8.633300000000094e-05, 8.243000000000139e-05, 8.624999999999952e-05, 8.438900000000069e-05, 8.345800000000153e-05, 8.150000000000171e-05, 8.633400000000041e-05, 8.538899999999822e-05, 8.154200000000042e-05, 8.337500000000012e-05, 8.53050000000008e-05, 8.347300000000057e-05, 8.337500000000012e-05, 8.629099999999876e-05, 8.634799999999998e-05, 8.147299999999857e-05, 8.063899999999694e-05, 8.529100000000123e-05, 8.623599999999995e-05, 8.62920000000017e-05, 8.155500000000052e-05, 8.444500000000243e-05, 8.527800000000113e-05, 8.244500000000043e-05, 8.345800000000153e-05, 8.540299999999779e-05, 8.438900000000069e-05, 8.052799999999985e-05, 8.144499999999943e-05, 8.34859999999972e-05, 8.338899999999969e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.720" endtime="20201030 15:52:37.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.715" endtime="20201030 15:52:37.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.783" endtime="20201030 15:52:37.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.781" endtime="20201030 15:52:37.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.780" endtime="20201030 15:52:37.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.357" endtime="20201030 15:52:37.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.356" endtime="20201030 15:52:37.804"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.812" endtime="20201030 15:52:37.835"></status>
</kw>
<msg timestamp="20201030 15:52:37.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.811" endtime="20201030 15:52:37.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.836" endtime="20201030 15:52:37.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.839" endtime="20201030 15:52:37.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.808" endtime="20201030 15:52:37.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.806" endtime="20201030 15:52:37.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.848" endtime="20201030 15:52:38.134"></status>
</kw>
<msg timestamp="20201030 15:52:38.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023352056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023438347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.846" endtime="20201030 15:52:38.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023352056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023438347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.138" endtime="20201030 15:52:38.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.146" endtime="20201030 15:52:38.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.844" endtime="20201030 15:52:38.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.842" endtime="20201030 15:52:38.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.152" level="INFO">${RESULT} = [{'diff': 8.629099999999876e-05}, {'diff': 8.061100000000126e-05}, {'diff': 8.338899999999969e-05}, {'diff': 8.536100000000255e-05}, {'diff': 8.537499999999865e-05}, {'diff': 8.636100000000008e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:38.149" endtime="20201030 15:52:38.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.156" level="INFO">${ACCURACY} = {'diff': [8.629099999999876e-05, 8.061100000000126e-05, 8.338899999999969e-05, 8.536100000000255e-05, 8.537499999999865e-05, 8.636100000000008e-05, 8.052799999999985e-05, 8.629199999999823e-05, 8.2457...</msg>
<status status="PASS" starttime="20201030 15:52:38.153" endtime="20201030 15:52:38.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.161" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.160" endtime="20201030 15:52:38.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.163" level="INFO">VALUE: [8.629099999999876e-05, 8.061100000000126e-05, 8.338899999999969e-05, 8.536100000000255e-05, 8.537499999999865e-05, 8.636100000000008e-05, 8.052799999999985e-05, 8.629199999999823e-05, 8.245799999999706e-05, 8.2459e-05, 8.348600000000067e-05, 8.720900000000129e-05, 8.523599999999895e-05, 8.531999999999984e-05, 8.730499999999933e-05, 8.336200000000002e-05, 8.155599999999999e-05, 8.719400000000224e-05, 8.062499999999737e-05, 8.238799999999921e-05, 8.255599999999752e-05, 8.334700000000098e-05, 8.43469999999985e-05, 8.536099999999908e-05, 8.254199999999795e-05, 8.336100000000055e-05, 8.156900000000009e-05, 8.34720000000011e-05, 8.340299999999926e-05, 8.534799999999898e-05, 8.151400000000128e-05, 8.627699999999919e-05, 8.540200000000178e-05, 8.719400000000224e-05, 8.441699999999983e-05, 8.541600000000135e-05, 8.151400000000128e-05, 8.4459000000002e-05, 8.343100000000186e-05, 8.24720000000001e-05, 8.623599999999995e-05, 8.16109999999988e-05, 8.434700000000198e-05, 8.71799999999992e-05, 8.347199999999763e-05, 8.720800000000181e-05, 8.733299999999847e-05, 8.538900000000169e-05, 8.15979999999987e-05, 8.148599999999867e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.162" endtime="20201030 15:52:38.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.157" endtime="20201030 15:52:38.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.169" endtime="20201030 15:52:38.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.168" endtime="20201030 15:52:38.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.166" endtime="20201030 15:52:38.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.805" endtime="20201030 15:52:38.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.804" endtime="20201030 15:52:38.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.246" endtime="20201030 15:52:38.190"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:59.144" endtime="20201030 15:52:38.190" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.197" endtime="20201030 15:52:38.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.196" endtime="20201030 15:52:38.217"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.230" endtime="20201030 15:52:38.246"></status>
</kw>
<msg timestamp="20201030 15:52:38.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.228" endtime="20201030 15:52:38.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.249" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.248" endtime="20201030 15:52:38.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.252" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:38.250" endtime="20201030 15:52:38.253"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:38.226" endtime="20201030 15:52:38.253"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:38.223" endtime="20201030 15:52:38.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.222" endtime="20201030 15:52:38.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:38.258" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:38.257" endtime="20201030 15:52:38.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.255" endtime="20201030 15:52:38.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.221" endtime="20201030 15:52:38.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.221" endtime="20201030 15:52:38.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.259" endtime="20201030 15:52:38.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.219" endtime="20201030 15:52:38.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.218" endtime="20201030 15:52:38.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.194" endtime="20201030 15:52:38.262"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.273" endtime="20201030 15:52:38.292"></status>
</kw>
<msg timestamp="20201030 15:52:38.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.271" endtime="20201030 15:52:38.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.293" endtime="20201030 15:52:38.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.296" endtime="20201030 15:52:38.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.267" endtime="20201030 15:52:38.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.265" endtime="20201030 15:52:38.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.305" endtime="20201030 15:52:38.592"></status>
</kw>
<msg timestamp="20201030 15:52:38.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066525778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0665345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:38.304" endtime="20201030 15:52:38.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066525778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0665345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:38.596" endtime="20201030 15:52:38.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.604" endtime="20201030 15:52:38.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.301" endtime="20201030 15:52:38.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.299" endtime="20201030 15:52:38.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.611" level="INFO">${RESULT} = [{'diff': 8.722000000002672e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.639000000004726e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.693999999989654e-06}, {'diff': 8.708999999995637e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:38.608" endtime="20201030 15:52:38.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.615" level="INFO">${ACCURACY} = {'diff': [8.722000000002672e-06, 8.695000000003006e-06, 8.639000000004726e-06, 8.695000000003006e-06, 8.693999999989654e-06, 8.708999999995637e-06, 8.680999999996497e-06, 8.667000000003866e-06, 8.6390...</msg>
<status status="PASS" starttime="20201030 15:52:38.612" endtime="20201030 15:52:38.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.620" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.619" endtime="20201030 15:52:38.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.622" level="INFO">VALUE: [8.722000000002672e-06, 8.695000000003006e-06, 8.639000000004726e-06, 8.695000000003006e-06, 8.693999999989654e-06, 8.708999999995637e-06, 8.680999999996497e-06, 8.667000000003866e-06, 8.639000000004726e-06, 8.709000000009515e-06, 8.708000000010041e-06, 8.694000000003532e-06, 8.722000000002672e-06, 8.666999999989988e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.680999999996497e-06, 8.722000000002672e-06, 8.777000000001478e-06, 8.763999999994443e-06, 8.694000000003532e-06, 8.707999999996163e-06, 8.763999999994443e-06, 8.709000000009515e-06, 8.666000000004392e-06, 8.679999999997023e-06, 8.680999999996497e-06, 8.667000000003866e-06, 8.694000000003532e-06, 8.707999999996163e-06, 8.735999999995303e-06, 8.680999999996497e-06, 8.694000000003532e-06, 8.707999999996163e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.735999999995303e-06, 8.681000000010375e-06, 8.736000000009181e-06, 8.721999999988794e-06, 8.694000000003532e-06, 8.722000000002672e-06, 8.666999999989988e-06, 8.694000000003532e-06, 8.723000000002146e-06, 8.708000000010041e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.707999999996163e-06]</msg>
<status status="PASS" starttime="20201030 15:52:38.621" endtime="20201030 15:52:38.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.616" endtime="20201030 15:52:38.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.627" endtime="20201030 15:52:38.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.625" endtime="20201030 15:52:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.624" endtime="20201030 15:52:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.264" endtime="20201030 15:52:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.263" endtime="20201030 15:52:38.648"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.656" endtime="20201030 15:52:38.675"></status>
</kw>
<msg timestamp="20201030 15:52:38.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.655" endtime="20201030 15:52:38.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.676" endtime="20201030 15:52:38.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.679" endtime="20201030 15:52:38.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.652" endtime="20201030 15:52:38.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.650" endtime="20201030 15:52:38.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.688" endtime="20201030 15:52:38.972"></status>
</kw>
<msg timestamp="20201030 15:52:38.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02347325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023481931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:38.686" endtime="20201030 15:52:38.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02347325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023481931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:38.976" endtime="20201030 15:52:38.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.985" endtime="20201030 15:52:38.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.684" endtime="20201030 15:52:38.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.682" endtime="20201030 15:52:38.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.991" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:38.988" endtime="20201030 15:52:38.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.996" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 15:52:38.992" endtime="20201030 15:52:38.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.001" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.000" endtime="20201030 15:52:39.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.003" level="INFO">VALUE: [8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.624999999998217e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.693999999996593e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 15:52:39.002" endtime="20201030 15:52:39.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.997" endtime="20201030 15:52:39.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.008" endtime="20201030 15:52:39.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.006" endtime="20201030 15:52:39.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.005" endtime="20201030 15:52:39.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.648" endtime="20201030 15:52:39.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.648" endtime="20201030 15:52:39.028"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.037" endtime="20201030 15:52:39.056"></status>
</kw>
<msg timestamp="20201030 15:52:39.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.036" endtime="20201030 15:52:39.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.058" endtime="20201030 15:52:39.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.060" endtime="20201030 15:52:39.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.033" endtime="20201030 15:52:39.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.031" endtime="20201030 15:52:39.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.069" endtime="20201030 15:52:39.356"></status>
</kw>
<msg timestamp="20201030 15:52:39.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.068" endtime="20201030 15:52:39.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024485056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.360" endtime="20201030 15:52:39.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.369" endtime="20201030 15:52:39.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.065" endtime="20201030 15:52:39.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.063" endtime="20201030 15:52:39.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.377" level="INFO">${RESULT} = [{'diff': 8.709000000002576e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.374" endtime="20201030 15:52:39.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.382" level="INFO">${ACCURACY} = {'diff': [8.709000000002576e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 15:52:39.378" endtime="20201030 15:52:39.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.387" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.386" endtime="20201030 15:52:39.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.390" level="INFO">VALUE: [8.709000000002576e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 15:52:39.388" endtime="20201030 15:52:39.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.383" endtime="20201030 15:52:39.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.396" endtime="20201030 15:52:39.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.394" endtime="20201030 15:52:39.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.392" endtime="20201030 15:52:40.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.029" endtime="20201030 15:52:40.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.029" endtime="20201030 15:52:40.230"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.250" endtime="20201030 15:52:40.272"></status>
</kw>
<msg timestamp="20201030 15:52:40.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.245" endtime="20201030 15:52:40.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.275" endtime="20201030 15:52:40.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.280" endtime="20201030 15:52:40.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.240" endtime="20201030 15:52:40.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.236" endtime="20201030 15:52:40.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.298" endtime="20201030 15:52:40.595"></status>
</kw>
<msg timestamp="20201030 15:52:40.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.846763819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.846772486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.295" endtime="20201030 15:52:40.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.846763819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.846772486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.599" endtime="20201030 15:52:40.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.608" endtime="20201030 15:52:40.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.290" endtime="20201030 15:52:40.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.286" endtime="20201030 15:52:40.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.614" level="INFO">${RESULT} = [{'diff': 8.667000000017744e-06}, {'diff': 8.693999999920266e-06}, {'diff': 8.679999999983146e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.666000000046026e-06}, {'diff': 8.693999999920266e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.611" endtime="20201030 15:52:40.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.619" level="INFO">${ACCURACY} = {'diff': [8.667000000017744e-06, 8.693999999920266e-06, 8.679999999983146e-06, 8.695000000003006e-06, 8.666000000046026e-06, 8.693999999920266e-06, 8.72200000001655e-06, 8.667000000017744e-06, 8.70899...</msg>
<status status="PASS" starttime="20201030 15:52:40.615" endtime="20201030 15:52:40.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.624" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.623" endtime="20201030 15:52:40.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.628" level="INFO">VALUE: [8.667000000017744e-06, 8.693999999920266e-06, 8.679999999983146e-06, 8.695000000003006e-06, 8.666000000046026e-06, 8.693999999920266e-06, 8.72200000001655e-06, 8.667000000017744e-06, 8.708999999940126e-06, 8.679999999983146e-06, 8.639000000032482e-06, 8.63899999992146e-06, 8.707999999968408e-06, 8.707999999968408e-06, 8.764000000049954e-06, 8.680999999954864e-06, 8.72200000001655e-06, 8.694000000031288e-06, 8.652999999969602e-06, 8.679999999983146e-06, 8.679999999983146e-06, 8.707999999968408e-06, 8.695000000003006e-06, 8.679999999983146e-06, 8.667000000017744e-06, 8.652999999969602e-06, 8.693999999920266e-06, 8.652999999969602e-06, 8.72200000001655e-06, 8.778000000098096e-06, 8.667000000017744e-06, 8.653000000080624e-06, 8.693999999920266e-06, 8.666000000046026e-06, 8.667000000017744e-06, 8.653000000080624e-06, 8.681000000065886e-06, 8.666000000046026e-06, 8.679999999983146e-06, 8.693999999920266e-06, 8.694000000031288e-06, 8.694000000031288e-06, 8.707999999968408e-06, 8.637999999949741e-06, 8.652999999969602e-06, 8.681000000065886e-06, 8.653000000080624e-06, 8.680999999954864e-06, 8.679999999983146e-06, 8.694000000031288e-06]</msg>
<status status="PASS" starttime="20201030 15:52:40.626" endtime="20201030 15:52:40.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.620" endtime="20201030 15:52:40.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.635" endtime="20201030 15:52:40.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.634" endtime="20201030 15:52:40.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.632" endtime="20201030 15:52:40.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.232" endtime="20201030 15:52:40.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.231" endtime="20201030 15:52:40.657"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.666" endtime="20201030 15:52:40.684"></status>
</kw>
<msg timestamp="20201030 15:52:40.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.665" endtime="20201030 15:52:40.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.686" endtime="20201030 15:52:40.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.688" endtime="20201030 15:52:40.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.662" endtime="20201030 15:52:40.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.660" endtime="20201030 15:52:40.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.697" endtime="20201030 15:52:40.983"></status>
</kw>
<msg timestamp="20201030 15:52:40.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024359958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024368639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.696" endtime="20201030 15:52:40.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024359958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024368639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.987" endtime="20201030 15:52:40.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.995" endtime="20201030 15:52:40.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.693" endtime="20201030 15:52:40.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.692" endtime="20201030 15:52:40.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.002" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.639000000001257e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.764000000001382e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.998" endtime="20201030 15:52:41.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.007" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.6670...</msg>
<status status="PASS" starttime="20201030 15:52:41.003" endtime="20201030 15:52:41.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.011" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.010" endtime="20201030 15:52:41.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.014" level="INFO">VALUE: [8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.749999999998342e-06, 8.651999999997884e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.624999999998217e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201030 15:52:41.012" endtime="20201030 15:52:41.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.007" endtime="20201030 15:52:41.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.020" endtime="20201030 15:52:41.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.019" endtime="20201030 15:52:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.017" endtime="20201030 15:52:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.658" endtime="20201030 15:52:41.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.658" endtime="20201030 15:52:41.041"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.050" endtime="20201030 15:52:41.066"></status>
</kw>
<msg timestamp="20201030 15:52:41.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.048" endtime="20201030 15:52:41.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.067" endtime="20201030 15:52:41.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.070" endtime="20201030 15:52:41.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.046" endtime="20201030 15:52:41.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.044" endtime="20201030 15:52:41.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.079" endtime="20201030 15:52:41.366"></status>
</kw>
<msg timestamp="20201030 15:52:41.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021115486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021124181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.077" endtime="20201030 15:52:41.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021115486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021124181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.370" endtime="20201030 15:52:41.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.379" endtime="20201030 15:52:41.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.075" endtime="20201030 15:52:41.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.073" endtime="20201030 15:52:41.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.385" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.610999999998648e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.679999999997023e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:41.382" endtime="20201030 15:52:41.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.389" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.708999999999106e-06, 8.610999999998648e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 15:52:41.386" endtime="20201030 15:52:41.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.393" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.392" endtime="20201030 15:52:41.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.396" level="INFO">VALUE: [8.694999999999536e-06, 8.708999999999106e-06, 8.610999999998648e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.679999999997023e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201030 15:52:41.395" endtime="20201030 15:52:41.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.390" endtime="20201030 15:52:41.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.401" endtime="20201030 15:52:41.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.399" endtime="20201030 15:52:41.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.398" endtime="20201030 15:52:41.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.042" endtime="20201030 15:52:41.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.042" endtime="20201030 15:52:41.422"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.430" endtime="20201030 15:52:41.449"></status>
</kw>
<msg timestamp="20201030 15:52:41.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.429" endtime="20201030 15:52:41.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.451" endtime="20201030 15:52:41.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.453" endtime="20201030 15:52:41.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.426" endtime="20201030 15:52:41.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.424" endtime="20201030 15:52:41.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.462" endtime="20201030 15:52:41.748"></status>
</kw>
<msg timestamp="20201030 15:52:41.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.461" endtime="20201030 15:52:41.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022752917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.752" endtime="20201030 15:52:41.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.760" endtime="20201030 15:52:41.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.458" endtime="20201030 15:52:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.456" endtime="20201030 15:52:41.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.766" level="INFO">${RESULT} = [{'diff': 8.665999999997454e-06}, {'diff': 8.59800000000202e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.680000000000493e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:41.763" endtime="20201030 15:52:41.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.770" level="INFO">${ACCURACY} = {'diff': [8.665999999997454e-06, 8.59800000000202e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.72199...</msg>
<status status="PASS" starttime="20201030 15:52:41.767" endtime="20201030 15:52:41.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.775" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.774" endtime="20201030 15:52:41.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.777" level="INFO">VALUE: [8.665999999997454e-06, 8.59800000000202e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.708000000003102e-06, 8.639000000001257e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201030 15:52:41.776" endtime="20201030 15:52:41.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.771" endtime="20201030 15:52:41.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.783" endtime="20201030 15:52:41.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.781" endtime="20201030 15:52:41.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.780" endtime="20201030 15:52:41.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.423" endtime="20201030 15:52:41.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.422" endtime="20201030 15:52:41.804"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.812" endtime="20201030 15:52:41.829"></status>
</kw>
<msg timestamp="20201030 15:52:41.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.810" endtime="20201030 15:52:41.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.831" endtime="20201030 15:52:41.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.833" endtime="20201030 15:52:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.808" endtime="20201030 15:52:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.806" endtime="20201030 15:52:41.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.844" endtime="20201030 15:52:42.130"></status>
</kw>
<msg timestamp="20201030 15:52:42.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.842" endtime="20201030 15:52:42.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.134" endtime="20201030 15:52:42.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.142" endtime="20201030 15:52:42.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.838" endtime="20201030 15:52:42.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.836" endtime="20201030 15:52:42.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.148" level="INFO">${RESULT} = [{'diff': 8.625000000001687e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:42.145" endtime="20201030 15:52:42.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.155" level="INFO">${ACCURACY} = {'diff': [8.625000000001687e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.6949...</msg>
<status status="PASS" starttime="20201030 15:52:42.149" endtime="20201030 15:52:42.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.160" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.159" endtime="20201030 15:52:42.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.162" level="INFO">VALUE: [8.625000000001687e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.679999999997023e-06, 8.721999999999203e-06, 8.679999999997023e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.709000000002576e-06, 8.749999999998342e-06, 8.652999999997357e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.666999999996927e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.625000000001687e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201030 15:52:42.161" endtime="20201030 15:52:42.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.156" endtime="20201030 15:52:42.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.167" endtime="20201030 15:52:42.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.166" endtime="20201030 15:52:42.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.165" endtime="20201030 15:52:42.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.804" endtime="20201030 15:52:42.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.804" endtime="20201030 15:52:42.188"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.196" endtime="20201030 15:52:42.214"></status>
</kw>
<msg timestamp="20201030 15:52:42.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.195" endtime="20201030 15:52:42.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.215" endtime="20201030 15:52:42.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.218" endtime="20201030 15:52:42.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.192" endtime="20201030 15:52:42.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.190" endtime="20201030 15:52:42.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.227" endtime="20201030 15:52:42.512"></status>
</kw>
<msg timestamp="20201030 15:52:42.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.225" endtime="20201030 15:52:42.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020047236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020055917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.516" endtime="20201030 15:52:42.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.524" endtime="20201030 15:52:42.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.223" endtime="20201030 15:52:42.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.221" endtime="20201030 15:52:42.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.531" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.680000000000493e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:42.528" endtime="20201030 15:52:42.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.535" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.638000000001783e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 15:52:42.532" endtime="20201030 15:52:42.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.539" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.538" endtime="20201030 15:52:42.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.542" level="INFO">VALUE: [8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.638000000001783e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.762999999998439e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.652999999997357e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.708999999999106e-06]</msg>
<status status="PASS" starttime="20201030 15:52:42.540" endtime="20201030 15:52:42.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.536" endtime="20201030 15:52:42.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.547" endtime="20201030 15:52:42.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.545" endtime="20201030 15:52:42.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.544" endtime="20201030 15:52:42.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.189" endtime="20201030 15:52:42.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.188" endtime="20201030 15:52:42.568"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.577" endtime="20201030 15:52:42.594"></status>
</kw>
<msg timestamp="20201030 15:52:42.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.575" endtime="20201030 15:52:42.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.595" endtime="20201030 15:52:42.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.597" endtime="20201030 15:52:42.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.573" endtime="20201030 15:52:42.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.570" endtime="20201030 15:52:42.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.606" endtime="20201030 15:52:42.901"></status>
</kw>
<msg timestamp="20201030 15:52:42.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.605" endtime="20201030 15:52:42.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.909" endtime="20201030 15:52:42.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.923" endtime="20201030 15:52:42.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.602" endtime="20201030 15:52:42.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.601" endtime="20201030 15:52:42.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.935" level="INFO">${RESULT} = [{'diff': 8.708999999999106e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:42.931" endtime="20201030 15:52:42.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.939" level="INFO">${ACCURACY} = {'diff': [8.708999999999106e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.6669...</msg>
<status status="PASS" starttime="20201030 15:52:42.936" endtime="20201030 15:52:42.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.944" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.943" endtime="20201030 15:52:42.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.947" level="INFO">VALUE: [8.708999999999106e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.610999999998648e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.737000000001716e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.707999999999633e-06, 8.666999999996927e-06, 8.708999999999106e-06, 8.708000000003102e-06, 8.722999999998676e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201030 15:52:42.945" endtime="20201030 15:52:43.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.940" endtime="20201030 15:52:43.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.021" endtime="20201030 15:52:43.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.019" endtime="20201030 15:52:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.018" endtime="20201030 15:52:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.569" endtime="20201030 15:52:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.568" endtime="20201030 15:52:43.042"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.050" endtime="20201030 15:52:43.065"></status>
</kw>
<msg timestamp="20201030 15:52:43.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.049" endtime="20201030 15:52:43.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.067" endtime="20201030 15:52:43.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.069" endtime="20201030 15:52:43.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.046" endtime="20201030 15:52:43.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.044" endtime="20201030 15:52:43.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.078" endtime="20201030 15:52:43.380"></status>
</kw>
<msg timestamp="20201030 15:52:43.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.077" endtime="20201030 15:52:43.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020599903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.384" endtime="20201030 15:52:43.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.393" endtime="20201030 15:52:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.074" endtime="20201030 15:52:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.072" endtime="20201030 15:52:43.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.399" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.666999999996927e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.666999999996927e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:43.396" endtime="20201030 15:52:43.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.404" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 15:52:43.400" endtime="20201030 15:52:43.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.409" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.408" endtime="20201030 15:52:43.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.411" level="INFO">VALUE: [8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.610999999998648e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.679999999997023e-06]</msg>
<status status="PASS" starttime="20201030 15:52:43.410" endtime="20201030 15:52:43.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.405" endtime="20201030 15:52:43.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.416" endtime="20201030 15:52:43.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.414" endtime="20201030 15:52:43.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.413" endtime="20201030 15:52:43.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.043" endtime="20201030 15:52:43.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.042" endtime="20201030 15:52:43.437"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.445" endtime="20201030 15:52:43.467"></status>
</kw>
<msg timestamp="20201030 15:52:43.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.444" endtime="20201030 15:52:43.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.469" endtime="20201030 15:52:43.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.471" endtime="20201030 15:52:43.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.441" endtime="20201030 15:52:43.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.439" endtime="20201030 15:52:43.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.480" endtime="20201030 15:52:43.771"></status>
</kw>
<msg timestamp="20201030 15:52:43.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022288111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.479" endtime="20201030 15:52:43.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022288111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.775" endtime="20201030 15:52:43.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.783" endtime="20201030 15:52:43.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.476" endtime="20201030 15:52:43.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.474" endtime="20201030 15:52:43.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.790" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:43.787" endtime="20201030 15:52:43.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.794" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.653000000000827e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.680000000000493e-06, 8.6949...</msg>
<status status="PASS" starttime="20201030 15:52:43.791" endtime="20201030 15:52:43.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.798" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.797" endtime="20201030 15:52:43.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.801" level="INFO">VALUE: [8.680000000000493e-06, 8.653000000000827e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201030 15:52:43.799" endtime="20201030 15:52:43.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.795" endtime="20201030 15:52:43.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.806" endtime="20201030 15:52:43.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.804" endtime="20201030 15:52:43.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.803" endtime="20201030 15:52:43.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.438" endtime="20201030 15:52:43.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.437" endtime="20201030 15:52:43.827"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.835" endtime="20201030 15:52:43.854"></status>
</kw>
<msg timestamp="20201030 15:52:43.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.834" endtime="20201030 15:52:43.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.856" endtime="20201030 15:52:43.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.858" endtime="20201030 15:52:43.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.831" endtime="20201030 15:52:43.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.829" endtime="20201030 15:52:43.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.867" endtime="20201030 15:52:44.153"></status>
</kw>
<msg timestamp="20201030 15:52:44.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024353097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.866" endtime="20201030 15:52:44.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024353097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.157" endtime="20201030 15:52:44.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.165" endtime="20201030 15:52:44.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.863" endtime="20201030 15:52:44.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.862" endtime="20201030 15:52:44.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.172" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:44.169" endtime="20201030 15:52:44.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.176" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.6530...</msg>
<status status="PASS" starttime="20201030 15:52:44.173" endtime="20201030 15:52:44.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.180" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.179" endtime="20201030 15:52:44.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.183" level="INFO">VALUE: [8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.763999999997912e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.624999999998217e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.651999999997884e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.597000000002547e-06, 8.707999999999633e-06, 8.666999999996927e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 15:52:44.181" endtime="20201030 15:52:44.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.177" endtime="20201030 15:52:44.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.189" endtime="20201030 15:52:44.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.187" endtime="20201030 15:52:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.186" endtime="20201030 15:52:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.827" endtime="20201030 15:52:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.827" endtime="20201030 15:52:44.209"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.218" endtime="20201030 15:52:44.236"></status>
</kw>
<msg timestamp="20201030 15:52:44.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.217" endtime="20201030 15:52:44.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.237" endtime="20201030 15:52:44.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.240" endtime="20201030 15:52:44.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.214" endtime="20201030 15:52:44.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.212" endtime="20201030 15:52:44.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.249" endtime="20201030 15:52:44.534"></status>
</kw>
<msg timestamp="20201030 15:52:44.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023273736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.247" endtime="20201030 15:52:44.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023273736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.538" endtime="20201030 15:52:44.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.546" endtime="20201030 15:52:44.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.245" endtime="20201030 15:52:44.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.243" endtime="20201030 15:52:44.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.553" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:44.550" endtime="20201030 15:52:44.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.558" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.693999999996593e-06, 8.694999999999536e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 15:52:44.554" endtime="20201030 15:52:44.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.562" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.561" endtime="20201030 15:52:44.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.565" level="INFO">VALUE: [8.694999999999536e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.693999999996593e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.597000000002547e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.681000000003436e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201030 15:52:44.564" endtime="20201030 15:52:44.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.559" endtime="20201030 15:52:44.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.570" endtime="20201030 15:52:44.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.568" endtime="20201030 15:52:44.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.567" endtime="20201030 15:52:44.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.210" endtime="20201030 15:52:44.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.210" endtime="20201030 15:52:44.591"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.599" endtime="20201030 15:52:44.618"></status>
</kw>
<msg timestamp="20201030 15:52:44.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.598" endtime="20201030 15:52:44.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.620" endtime="20201030 15:52:44.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.622" endtime="20201030 15:52:44.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.595" endtime="20201030 15:52:44.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.593" endtime="20201030 15:52:44.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.631" endtime="20201030 15:52:44.918"></status>
</kw>
<msg timestamp="20201030 15:52:44.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024052444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024061111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.629" endtime="20201030 15:52:44.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024052444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024061111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.923" endtime="20201030 15:52:44.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.932" endtime="20201030 15:52:44.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.627" endtime="20201030 15:52:44.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.625" endtime="20201030 15:52:44.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.938" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.722000000002672e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:44.935" endtime="20201030 15:52:44.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.942" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 15:52:44.939" endtime="20201030 15:52:44.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.947" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.946" endtime="20201030 15:52:44.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.949" level="INFO">VALUE: [8.667000000000397e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.666000000000923e-06, 8.708999999999106e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 15:52:44.948" endtime="20201030 15:52:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.943" endtime="20201030 15:52:44.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.954" endtime="20201030 15:52:44.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.953" endtime="20201030 15:52:44.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.952" endtime="20201030 15:52:44.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.592" endtime="20201030 15:52:44.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.591" endtime="20201030 15:52:44.975"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.983" endtime="20201030 15:52:45.000"></status>
</kw>
<msg timestamp="20201030 15:52:45.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.982" endtime="20201030 15:52:45.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.002" endtime="20201030 15:52:45.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.004" endtime="20201030 15:52:45.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.979" endtime="20201030 15:52:45.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.977" endtime="20201030 15:52:45.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.013" endtime="20201030 15:52:45.299"></status>
</kw>
<msg timestamp="20201030 15:52:45.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021491306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021499931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.012" endtime="20201030 15:52:45.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021491306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021499931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.304" endtime="20201030 15:52:45.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.312" endtime="20201030 15:52:45.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.009" endtime="20201030 15:52:45.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.007" endtime="20201030 15:52:45.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.318" level="INFO">${RESULT} = [{'diff': 8.624999999998217e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:45.315" endtime="20201030 15:52:45.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.322" level="INFO">${ACCURACY} = {'diff': [8.624999999998217e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.6800...</msg>
<status status="PASS" starttime="20201030 15:52:45.319" endtime="20201030 15:52:45.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.327" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.326" endtime="20201030 15:52:45.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.330" level="INFO">VALUE: [8.624999999998217e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.652000000001353e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.651999999997884e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.806000000000092e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.763999999997912e-06]</msg>
<status status="PASS" starttime="20201030 15:52:45.328" endtime="20201030 15:52:45.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.323" endtime="20201030 15:52:45.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.335" endtime="20201030 15:52:45.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.334" endtime="20201030 15:52:45.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.333" endtime="20201030 15:52:45.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.976" endtime="20201030 15:52:45.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.975" endtime="20201030 15:52:45.356"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.368" endtime="20201030 15:52:45.390"></status>
</kw>
<msg timestamp="20201030 15:52:45.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.365" endtime="20201030 15:52:45.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.393" endtime="20201030 15:52:45.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.398" endtime="20201030 15:52:45.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.361" endtime="20201030 15:52:45.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.359" endtime="20201030 15:52:45.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.417" endtime="20201030 15:52:45.710"></status>
</kw>
<msg timestamp="20201030 15:52:45.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0271745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027183181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:45.414" endtime="20201030 15:52:45.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0271745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027183181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:45.714" endtime="20201030 15:52:45.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.722" endtime="20201030 15:52:45.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.408" endtime="20201030 15:52:45.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.405" endtime="20201030 15:52:45.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.729" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:45.725" endtime="20201030 15:52:45.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.736" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.624999999998217e-06, 8.7219...</msg>
<status status="PASS" starttime="20201030 15:52:45.730" endtime="20201030 15:52:45.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.741" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.740" endtime="20201030 15:52:45.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.743" level="INFO">VALUE: [8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.624999999998217e-06, 8.721999999999203e-06, 8.695000000003006e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.778000000000952e-06, 8.723000000002146e-06, 8.610999999998648e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.709000000002576e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.763999999997912e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 15:52:45.742" endtime="20201030 15:52:45.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.737" endtime="20201030 15:52:45.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.748" endtime="20201030 15:52:45.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.747" endtime="20201030 15:52:45.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.745" endtime="20201030 15:52:45.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.357" endtime="20201030 15:52:45.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.356" endtime="20201030 15:52:45.769"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.777" endtime="20201030 15:52:45.795"></status>
</kw>
<msg timestamp="20201030 15:52:45.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.776" endtime="20201030 15:52:45.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.796" endtime="20201030 15:52:45.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.799" endtime="20201030 15:52:45.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.773" endtime="20201030 15:52:45.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.771" endtime="20201030 15:52:45.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.808" endtime="20201030 15:52:46.097"></status>
</kw>
<msg timestamp="20201030 15:52:46.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021365056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.806" endtime="20201030 15:52:46.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021365056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.102" endtime="20201030 15:52:46.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.110" endtime="20201030 15:52:46.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.804" endtime="20201030 15:52:46.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.802" endtime="20201030 15:52:46.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.117" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:46.114" endtime="20201030 15:52:46.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.121" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.694999999999536e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 15:52:46.118" endtime="20201030 15:52:46.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.126" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.125" endtime="20201030 15:52:46.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.128" level="INFO">VALUE: [8.721999999999203e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.679999999997023e-06, 8.637999999998314e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.722999999998676e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201030 15:52:46.127" endtime="20201030 15:52:46.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.122" endtime="20201030 15:52:46.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.134" endtime="20201030 15:52:46.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.132" endtime="20201030 15:52:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.131" endtime="20201030 15:52:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.770" endtime="20201030 15:52:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.769" endtime="20201030 15:52:46.155"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.164" endtime="20201030 15:52:46.184"></status>
</kw>
<msg timestamp="20201030 15:52:46.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.162" endtime="20201030 15:52:46.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.188" endtime="20201030 15:52:46.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.193" endtime="20201030 15:52:46.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.159" endtime="20201030 15:52:46.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.157" endtime="20201030 15:52:46.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.213" endtime="20201030 15:52:46.515"></status>
</kw>
<msg timestamp="20201030 15:52:46.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.210" endtime="20201030 15:52:46.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022578403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.519" endtime="20201030 15:52:46.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.527" endtime="20201030 15:52:46.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.204" endtime="20201030 15:52:46.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.200" endtime="20201030 15:52:46.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.534" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.597999999998551e-06}, {'diff': 8.722999999998676e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:46.531" endtime="20201030 15:52:46.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.539" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.597999999998551e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 15:52:46.535" endtime="20201030 15:52:46.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.543" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.542" endtime="20201030 15:52:46.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.546" level="INFO">VALUE: [8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.597999999998551e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.652999999997357e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.639000000001257e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201030 15:52:46.544" endtime="20201030 15:52:46.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.540" endtime="20201030 15:52:46.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.552" endtime="20201030 15:52:46.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.550" endtime="20201030 15:52:46.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.549" endtime="20201030 15:52:46.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.156" endtime="20201030 15:52:46.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.155" endtime="20201030 15:52:46.573"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.583" endtime="20201030 15:52:46.606"></status>
</kw>
<msg timestamp="20201030 15:52:46.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.581" endtime="20201030 15:52:46.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.608" endtime="20201030 15:52:46.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.610" endtime="20201030 15:52:46.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.578" endtime="20201030 15:52:46.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.576" endtime="20201030 15:52:46.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.620" endtime="20201030 15:52:46.905"></status>
</kw>
<msg timestamp="20201030 15:52:46.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026020722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026029444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.618" endtime="20201030 15:52:46.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026020722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026029444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.909" endtime="20201030 15:52:46.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.917" endtime="20201030 15:52:46.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.615" endtime="20201030 15:52:46.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.614" endtime="20201030 15:52:46.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.923" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.625000000001687e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.695000000003006e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:46.920" endtime="20201030 15:52:46.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.928" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.709000000002576e-06, 8.625000000001687e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 15:52:46.924" endtime="20201030 15:52:46.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.933" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.932" endtime="20201030 15:52:46.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.935" level="INFO">VALUE: [8.721999999999203e-06, 8.709000000002576e-06, 8.625000000001687e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.651999999997884e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201030 15:52:46.934" endtime="20201030 15:52:46.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.929" endtime="20201030 15:52:46.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.940" endtime="20201030 15:52:46.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.939" endtime="20201030 15:52:46.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.938" endtime="20201030 15:52:46.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.574" endtime="20201030 15:52:46.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.574" endtime="20201030 15:52:46.961"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.970" endtime="20201030 15:52:46.992"></status>
</kw>
<msg timestamp="20201030 15:52:46.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.968" endtime="20201030 15:52:46.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.996" endtime="20201030 15:52:46.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.001" endtime="20201030 15:52:47.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.966" endtime="20201030 15:52:47.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.964" endtime="20201030 15:52:47.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.019" endtime="20201030 15:52:47.316"></status>
</kw>
<msg timestamp="20201030 15:52:47.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.016" endtime="20201030 15:52:47.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024707597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024716319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.320" endtime="20201030 15:52:47.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.328" endtime="20201030 15:52:47.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.011" endtime="20201030 15:52:47.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.007" endtime="20201030 15:52:47.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.334" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:47.331" endtime="20201030 15:52:47.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.338" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 15:52:47.335" endtime="20201030 15:52:47.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.343" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.342" endtime="20201030 15:52:47.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.345" level="INFO">VALUE: [8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.776999999998009e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.693999999996593e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201030 15:52:47.344" endtime="20201030 15:52:47.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.339" endtime="20201030 15:52:47.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.350" endtime="20201030 15:52:47.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.349" endtime="20201030 15:52:47.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.348" endtime="20201030 15:52:47.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.962" endtime="20201030 15:52:47.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.962" endtime="20201030 15:52:47.371"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.380" endtime="20201030 15:52:47.396"></status>
</kw>
<msg timestamp="20201030 15:52:47.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.378" endtime="20201030 15:52:47.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.397" endtime="20201030 15:52:47.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.400" endtime="20201030 15:52:47.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.376" endtime="20201030 15:52:47.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.374" endtime="20201030 15:52:47.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.408" endtime="20201030 15:52:47.694"></status>
</kw>
<msg timestamp="20201030 15:52:47.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.407" endtime="20201030 15:52:47.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.698" endtime="20201030 15:52:47.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.706" endtime="20201030 15:52:47.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.404" endtime="20201030 15:52:47.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.403" endtime="20201030 15:52:47.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.712" level="INFO">${RESULT} = [{'diff': 8.625000000001687e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.679999999997023e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.638999999997787e-06}, {'diff': 8.679999999997023e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:47.709" endtime="20201030 15:52:47.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.716" level="INFO">${ACCURACY} = {'diff': [8.625000000001687e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.638999999997787e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 15:52:47.713" endtime="20201030 15:52:47.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.721" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.720" endtime="20201030 15:52:47.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.723" level="INFO">VALUE: [8.625000000001687e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.638999999997787e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.763000000001908e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.707999999999633e-06, 8.624999999998217e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201030 15:52:47.722" endtime="20201030 15:52:47.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.717" endtime="20201030 15:52:47.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.729" endtime="20201030 15:52:47.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.728" endtime="20201030 15:52:47.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.726" endtime="20201030 15:52:47.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.372" endtime="20201030 15:52:47.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.371" endtime="20201030 15:52:47.750"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.758" endtime="20201030 15:52:47.783"></status>
</kw>
<msg timestamp="20201030 15:52:47.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.757" endtime="20201030 15:52:47.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.785" endtime="20201030 15:52:47.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.787" endtime="20201030 15:52:47.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.754" endtime="20201030 15:52:47.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.752" endtime="20201030 15:52:47.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.796" endtime="20201030 15:52:48.082"></status>
</kw>
<msg timestamp="20201030 15:52:48.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.795" endtime="20201030 15:52:48.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024944639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.086" endtime="20201030 15:52:48.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.094" endtime="20201030 15:52:48.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.792" endtime="20201030 15:52:48.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.790" endtime="20201030 15:52:48.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.101" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.624999999998217e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:48.098" endtime="20201030 15:52:48.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.106" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 15:52:48.102" endtime="20201030 15:52:48.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.110" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.109" endtime="20201030 15:52:48.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.113" level="INFO">VALUE: [8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.666999999996927e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.693999999996593e-06, 8.667000000000397e-06, 8.763999999997912e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201030 15:52:48.111" endtime="20201030 15:52:48.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.107" endtime="20201030 15:52:48.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.455" endtime="20201030 15:52:48.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.453" endtime="20201030 15:52:48.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.452" endtime="20201030 15:52:48.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.751" endtime="20201030 15:52:48.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.750" endtime="20201030 15:52:48.475"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.484" endtime="20201030 15:52:48.503"></status>
</kw>
<msg timestamp="20201030 15:52:48.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.483" endtime="20201030 15:52:48.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.507" endtime="20201030 15:52:48.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.512" endtime="20201030 15:52:48.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.480" endtime="20201030 15:52:48.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.478" endtime="20201030 15:52:48.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.530" endtime="20201030 15:52:48.823"></status>
</kw>
<msg timestamp="20201030 15:52:48.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.527" endtime="20201030 15:52:48.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.827" endtime="20201030 15:52:48.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.835" endtime="20201030 15:52:48.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.522" endtime="20201030 15:52:48.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.518" endtime="20201030 15:52:48.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.841" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:48.838" endtime="20201030 15:52:48.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.846" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.6670...</msg>
<status status="PASS" starttime="20201030 15:52:48.842" endtime="20201030 15:52:48.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.850" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.849" endtime="20201030 15:52:48.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.852" level="INFO">VALUE: [8.680999999999967e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.610999999998648e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.777000000001478e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201030 15:52:48.851" endtime="20201030 15:52:48.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.846" endtime="20201030 15:52:48.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.857" endtime="20201030 15:52:48.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.856" endtime="20201030 15:52:48.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.855" endtime="20201030 15:52:48.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.476" endtime="20201030 15:52:48.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.476" endtime="20201030 15:52:48.878"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.886" endtime="20201030 15:52:48.903"></status>
</kw>
<msg timestamp="20201030 15:52:48.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.885" endtime="20201030 15:52:48.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.904" endtime="20201030 15:52:48.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.907" endtime="20201030 15:52:48.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.882" endtime="20201030 15:52:48.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.880" endtime="20201030 15:52:48.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.916" endtime="20201030 15:52:49.202"></status>
</kw>
<msg timestamp="20201030 15:52:49.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022092972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.914" endtime="20201030 15:52:49.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022092972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.206" endtime="20201030 15:52:49.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.214" endtime="20201030 15:52:49.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.912" endtime="20201030 15:52:49.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.910" endtime="20201030 15:52:49.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.221" level="INFO">${RESULT} = [{'diff': 8.709000000002576e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:49.218" endtime="20201030 15:52:49.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.225" level="INFO">${ACCURACY} = {'diff': [8.709000000002576e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.7089...</msg>
<status status="PASS" starttime="20201030 15:52:49.222" endtime="20201030 15:52:49.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.229" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.228" endtime="20201030 15:52:49.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.232" level="INFO">VALUE: [8.709000000002576e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.709000000002576e-06, 8.750000000001812e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.681000000003436e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201030 15:52:49.230" endtime="20201030 15:52:49.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.226" endtime="20201030 15:52:49.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.237" endtime="20201030 15:52:49.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.236" endtime="20201030 15:52:49.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.235" endtime="20201030 15:52:49.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.879" endtime="20201030 15:52:49.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.878" endtime="20201030 15:52:49.258"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.267" endtime="20201030 15:52:49.286"></status>
</kw>
<msg timestamp="20201030 15:52:49.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.265" endtime="20201030 15:52:49.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.288" endtime="20201030 15:52:49.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.290" endtime="20201030 15:52:49.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.263" endtime="20201030 15:52:49.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.260" endtime="20201030 15:52:49.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.299" endtime="20201030 15:52:49.585"></status>
</kw>
<msg timestamp="20201030 15:52:49.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023753625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.298" endtime="20201030 15:52:49.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023753625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023762264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.589" endtime="20201030 15:52:49.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.597" endtime="20201030 15:52:49.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.295" endtime="20201030 15:52:49.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.294" endtime="20201030 15:52:49.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.604" level="INFO">${RESULT} = [{'diff': 8.639000000001257e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.679999999997023e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.763999999997912e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:49.601" endtime="20201030 15:52:49.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.611" level="INFO">${ACCURACY} = {'diff': [8.639000000001257e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.763999999997912e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.6949...</msg>
<status status="PASS" starttime="20201030 15:52:49.605" endtime="20201030 15:52:49.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.616" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.615" endtime="20201030 15:52:49.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.618" level="INFO">VALUE: [8.639000000001257e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.763999999997912e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.722000000002672e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.666999999996927e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 15:52:49.617" endtime="20201030 15:52:49.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.612" endtime="20201030 15:52:49.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.623" endtime="20201030 15:52:49.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.622" endtime="20201030 15:52:49.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.620" endtime="20201030 15:52:49.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.259" endtime="20201030 15:52:49.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.258" endtime="20201030 15:52:49.644"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.653" endtime="20201030 15:52:49.672"></status>
</kw>
<msg timestamp="20201030 15:52:49.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.651" endtime="20201030 15:52:49.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.674" endtime="20201030 15:52:49.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.677" endtime="20201030 15:52:49.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.648" endtime="20201030 15:52:49.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.646" endtime="20201030 15:52:49.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.687" endtime="20201030 15:52:49.974"></status>
</kw>
<msg timestamp="20201030 15:52:49.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024762597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.685" endtime="20201030 15:52:49.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024762597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024771333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.978" endtime="20201030 15:52:49.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.986" endtime="20201030 15:52:49.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.682" endtime="20201030 15:52:49.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.680" endtime="20201030 15:52:49.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.993" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.625000000001687e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:49.989" endtime="20201030 15:52:49.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.997" level="INFO">${ACCURACY} = {'diff': [8.735999999998773e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 15:52:49.994" endtime="20201030 15:52:49.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.001" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.000" endtime="20201030 15:52:50.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.004" level="INFO">VALUE: [8.735999999998773e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201030 15:52:50.003" endtime="20201030 15:52:50.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.998" endtime="20201030 15:52:50.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.009" endtime="20201030 15:52:50.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.007" endtime="20201030 15:52:50.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.006" endtime="20201030 15:52:50.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.645" endtime="20201030 15:52:50.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.644" endtime="20201030 15:52:50.029"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.039" endtime="20201030 15:52:50.059"></status>
</kw>
<msg timestamp="20201030 15:52:50.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.037" endtime="20201030 15:52:50.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.060" endtime="20201030 15:52:50.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.063" endtime="20201030 15:52:50.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.034" endtime="20201030 15:52:50.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.032" endtime="20201030 15:52:50.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.072" endtime="20201030 15:52:50.356"></status>
</kw>
<msg timestamp="20201030 15:52:50.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026069069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026077764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.070" endtime="20201030 15:52:50.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026069069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026077764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.361" endtime="20201030 15:52:50.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.369" endtime="20201030 15:52:50.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.068" endtime="20201030 15:52:50.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.066" endtime="20201030 15:52:50.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.375" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.652000000001353e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.722000000002672e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:50.372" endtime="20201030 15:52:50.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.379" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.652000000001353e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.7360...</msg>
<status status="PASS" starttime="20201030 15:52:50.376" endtime="20201030 15:52:50.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.384" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.383" endtime="20201030 15:52:50.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.386" level="INFO">VALUE: [8.694999999999536e-06, 8.652000000001353e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.652000000001353e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.722999999998676e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 15:52:50.385" endtime="20201030 15:52:50.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.380" endtime="20201030 15:52:50.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.392" endtime="20201030 15:52:50.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.390" endtime="20201030 15:52:50.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.389" endtime="20201030 15:52:50.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.030" endtime="20201030 15:52:50.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.030" endtime="20201030 15:52:50.413"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.421" endtime="20201030 15:52:50.442"></status>
</kw>
<msg timestamp="20201030 15:52:50.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.420" endtime="20201030 15:52:50.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.444" endtime="20201030 15:52:50.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.446" endtime="20201030 15:52:50.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.417" endtime="20201030 15:52:50.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.415" endtime="20201030 15:52:50.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.455" endtime="20201030 15:52:50.741"></status>
</kw>
<msg timestamp="20201030 15:52:50.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.454" endtime="20201030 15:52:50.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024779014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024787694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.746" endtime="20201030 15:52:50.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.754" endtime="20201030 15:52:50.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.451" endtime="20201030 15:52:50.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.449" endtime="20201030 15:52:50.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.760" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.639000000001257e-06}, {'diff': 8.680000000000493e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:50.757" endtime="20201030 15:52:50.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.765" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 15:52:50.761" endtime="20201030 15:52:50.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.770" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.769" endtime="20201030 15:52:50.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.772" level="INFO">VALUE: [8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.777999999997482e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.708000000003102e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.709000000002576e-06, 8.679999999997023e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201030 15:52:50.771" endtime="20201030 15:52:50.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.766" endtime="20201030 15:52:50.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.777" endtime="20201030 15:52:50.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.776" endtime="20201030 15:52:50.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.775" endtime="20201030 15:52:50.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.414" endtime="20201030 15:52:50.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.413" endtime="20201030 15:52:50.798"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.806" endtime="20201030 15:52:50.823"></status>
</kw>
<msg timestamp="20201030 15:52:50.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.805" endtime="20201030 15:52:50.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.825" endtime="20201030 15:52:50.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.827" endtime="20201030 15:52:50.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.802" endtime="20201030 15:52:50.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.800" endtime="20201030 15:52:50.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.836" endtime="20201030 15:52:51.123"></status>
</kw>
<msg timestamp="20201030 15:52:51.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.834" endtime="20201030 15:52:51.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021384333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.127" endtime="20201030 15:52:51.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.135" endtime="20201030 15:52:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.832" endtime="20201030 15:52:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.830" endtime="20201030 15:52:51.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.141" level="INFO">${RESULT} = [{'diff': 8.679999999997023e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.708999999999106e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:51.138" endtime="20201030 15:52:51.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.146" level="INFO">${ACCURACY} = {'diff': [8.679999999997023e-06, 8.666000000000923e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 15:52:51.142" endtime="20201030 15:52:51.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.150" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.149" endtime="20201030 15:52:51.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.153" level="INFO">VALUE: [8.679999999997023e-06, 8.666000000000923e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.666999999996927e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.666999999996927e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201030 15:52:51.151" endtime="20201030 15:52:51.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.146" endtime="20201030 15:52:51.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.157" endtime="20201030 15:52:51.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.156" endtime="20201030 15:52:51.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.155" endtime="20201030 15:52:51.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.799" endtime="20201030 15:52:51.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.798" endtime="20201030 15:52:51.178"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.187" endtime="20201030 15:52:51.208"></status>
</kw>
<msg timestamp="20201030 15:52:51.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.185" endtime="20201030 15:52:51.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.210" endtime="20201030 15:52:51.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.212" endtime="20201030 15:52:51.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.183" endtime="20201030 15:52:51.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.181" endtime="20201030 15:52:51.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.221" endtime="20201030 15:52:51.506"></status>
</kw>
<msg timestamp="20201030 15:52:51.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.220" endtime="20201030 15:52:51.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022824611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.510" endtime="20201030 15:52:51.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.519" endtime="20201030 15:52:51.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.217" endtime="20201030 15:52:51.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.215" endtime="20201030 15:52:51.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.525" level="INFO">${RESULT} = [{'diff': 3.6416999999996924e-05}, {'diff': 2.306900000000056e-05}, {'diff': 2.3930000000001866e-05}, {'diff': 2.393100000000134e-05}, {'diff': 2.5915999999997358e-05}, {'diff': 2.397300000000005e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:51.522" endtime="20201030 15:52:51.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.529" level="INFO">${ACCURACY} = {'diff': [3.6416999999996924e-05, 2.306900000000056e-05, 2.3930000000001866e-05, 2.393100000000134e-05, 2.5915999999997358e-05, 2.397300000000005e-05, 2.297300000000252e-05, 2.2014000000000755e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:51.526" endtime="20201030 15:52:51.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.534" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.533" endtime="20201030 15:52:51.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.536" level="INFO">VALUE: [3.6416999999996924e-05, 2.306900000000056e-05, 2.3930000000001866e-05, 2.393100000000134e-05, 2.5915999999997358e-05, 2.397300000000005e-05, 2.297300000000252e-05, 2.2014000000000755e-05, 2.4943999999998967e-05, 2.109700000000117e-05, 2.3944000000001436e-05, 2.490299999999973e-05, 2.3972000000000576e-05, 2.6847999999999456e-05, 2.488900000000016e-05, 2.5819999999999316e-05, 2.112500000000031e-05, 2.211099999999827e-05, 2.011099999999974e-05, 2.0111999999999214e-05, 2.3958000000001006e-05, 2.298700000000209e-05, 2.3958000000001006e-05, 2.490299999999973e-05, 2.113899999999988e-05, 2.59170000000003e-05, 2.488900000000016e-05, 2.1098000000000644e-05, 2.109700000000117e-05, 2.1986000000001615e-05, 2.106900000000203e-05, 2.2027999999996856e-05, 2.0165999999998546e-05, 2.397300000000005e-05, 2.587500000000159e-05, 2.5832999999999412e-05, 2.4915999999999827e-05, 2.011099999999974e-05, 2.5887999999998218e-05, 2.3972000000000576e-05, 2.4902000000000257e-05, 2.586100000000202e-05, 2.593099999999987e-05, 2.3999999999999716e-05, 2.3944000000001436e-05, 2.495899999999801e-05, 2.3972000000000576e-05, 2.688900000000216e-05, 2.394500000000091e-05, 2.305500000000099e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.535" endtime="20201030 15:52:51.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.530" endtime="20201030 15:52:51.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.542" endtime="20201030 15:52:51.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.540" endtime="20201030 15:52:51.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.539" endtime="20201030 15:52:51.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.179" endtime="20201030 15:52:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.179" endtime="20201030 15:52:51.563"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.571" endtime="20201030 15:52:51.589"></status>
</kw>
<msg timestamp="20201030 15:52:51.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.570" endtime="20201030 15:52:51.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.591" endtime="20201030 15:52:51.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.593" endtime="20201030 15:52:51.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.567" endtime="20201030 15:52:51.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.565" endtime="20201030 15:52:51.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.602" endtime="20201030 15:52:51.889"></status>
</kw>
<msg timestamp="20201030 15:52:51.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.601" endtime="20201030 15:52:51.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.893" endtime="20201030 15:52:51.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.901" endtime="20201030 15:52:51.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.598" endtime="20201030 15:52:51.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.596" endtime="20201030 15:52:51.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.908" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 2.4068999999998092e-05}, {'diff': 2.115299999999945e-05}, {'diff': 2.4972000000001576e-05}, {'diff': 2.5832999999999412e-05}, {'diff': 2.490299999999973e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:51.904" endtime="20201030 15:52:51.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.913" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 2.4068999999998092e-05, 2.115299999999945e-05, 2.4972000000001576e-05, 2.5832999999999412e-05, 2.490299999999973e-05, 2.293100000000034e-05, 2.112499999999684e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 15:52:51.909" endtime="20201030 15:52:51.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.917" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.916" endtime="20201030 15:52:51.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.919" level="INFO">VALUE: [8.680999999999967e-06, 2.4068999999998092e-05, 2.115299999999945e-05, 2.4972000000001576e-05, 2.5832999999999412e-05, 2.490299999999973e-05, 2.293100000000034e-05, 2.112499999999684e-05, 2.4013999999999286e-05, 2.012499999999931e-05, 2.2971999999999576e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.2028000000000325e-05, 2.490299999999973e-05, 2.013899999999888e-05, 2.113899999999988e-05, 2.4915999999999827e-05, 2.3958000000001006e-05, 2.4014000000002755e-05, 2.111100000000074e-05, 2.2985999999999146e-05, 2.2971999999999576e-05, 2.0180000000001586e-05, 2.111100000000074e-05, 2.490299999999973e-05, 2.5860999999998552e-05, 2.302700000000185e-05, 2.5014000000000286e-05, 2.3000000000002185e-05, 2.5846999999998982e-05, 2.2999999999998716e-05, 2.194499999999891e-05, 2.302700000000185e-05, 2.6820000000000316e-05, 2.3068999999997092e-05, 2.202700000000085e-05, 2.106900000000203e-05, 2.6791999999997707e-05, 2.208299999999913e-05, 2.3042000000000895e-05, 2.2985999999999146e-05, 2.490299999999973e-05, 2.3014000000001755e-05, 2.2028000000000325e-05, 2.0070000000000504e-05, 2.109700000000117e-05, 2.013899999999888e-05, 2.3986000000000146e-05, 2.493099999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.918" endtime="20201030 15:52:51.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.913" endtime="20201030 15:52:51.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.924" endtime="20201030 15:52:51.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.923" endtime="20201030 15:52:51.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.922" endtime="20201030 15:52:51.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.564" endtime="20201030 15:52:51.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.563" endtime="20201030 15:52:51.945"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.954" endtime="20201030 15:52:51.976"></status>
</kw>
<msg timestamp="20201030 15:52:51.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.952" endtime="20201030 15:52:51.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.977" endtime="20201030 15:52:51.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.980" endtime="20201030 15:52:51.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.950" endtime="20201030 15:52:51.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.948" endtime="20201030 15:52:51.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.989" endtime="20201030 15:52:52.275"></status>
</kw>
<msg timestamp="20201030 15:52:52.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024627639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.987" endtime="20201030 15:52:52.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024627639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.279" endtime="20201030 15:52:52.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.287" endtime="20201030 15:52:52.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.985" endtime="20201030 15:52:52.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.983" endtime="20201030 15:52:52.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.294" level="INFO">${RESULT} = [{'diff': 1.9250000000001904e-05}, {'diff': 2.584700000000245e-05}, {'diff': 2.586100000000202e-05}, {'diff': 2.4915999999999827e-05}, {'diff': 2.3915999999998827e-05}, {'diff': 2.5820000000002785e-05...</msg>
<status status="PASS" starttime="20201030 15:52:52.290" endtime="20201030 15:52:52.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.298" level="INFO">${ACCURACY} = {'diff': [1.9250000000001904e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.4915999999999827e-05, 2.3915999999998827e-05, 2.5820000000002785e-05, 2.211100000000174e-05, 2.491700000000277e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:52.295" endtime="20201030 15:52:52.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.302" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.301" endtime="20201030 15:52:52.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.305" level="INFO">VALUE: [1.9250000000001904e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.4915999999999827e-05, 2.3915999999998827e-05, 2.5820000000002785e-05, 2.211100000000174e-05, 2.491700000000277e-05, 2.6860999999999552e-05, 2.297299999999905e-05, 2.2985999999999146e-05, 2.013899999999888e-05, 2.20830000000026e-05, 2.49169999999993e-05, 2.2028000000000325e-05, 2.3999999999999716e-05, 2.20969999999987e-05, 2.584700000000245e-05, 2.2028000000000325e-05, 2.488900000000016e-05, 2.2041999999999895e-05, 2.0151999999998976e-05, 2.493099999999887e-05, 2.488900000000016e-05, 2.208299999999913e-05, 2.588900000000116e-05, 2.490299999999973e-05, 2.20969999999987e-05, 2.3042000000000895e-05, 2.012499999999931e-05, 2.495900000000148e-05, 2.2985999999999146e-05, 2.3930000000001866e-05, 2.112500000000031e-05, 2.112500000000031e-05, 2.2999999999998716e-05, 2.3957999999997537e-05, 2.2055999999999465e-05, 2.2958000000000006e-05, 2.1056000000001934e-05, 2.106899999999856e-05, 2.015299999999845e-05, 2.111100000000074e-05, 2.6846999999999982e-05, 2.587500000000159e-05, 2.2028000000000325e-05, 2.5860999999998552e-05, 2.395900000000048e-05, 2.4957999999998537e-05, 2.6820000000000316e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.303" endtime="20201030 15:52:52.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.298" endtime="20201030 15:52:52.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.310" endtime="20201030 15:52:52.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.308" endtime="20201030 15:52:52.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.307" endtime="20201030 15:52:52.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.946" endtime="20201030 15:52:52.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.945" endtime="20201030 15:52:52.330"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.339" endtime="20201030 15:52:52.359"></status>
</kw>
<msg timestamp="20201030 15:52:52.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.337" endtime="20201030 15:52:52.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.361" endtime="20201030 15:52:52.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.363" endtime="20201030 15:52:52.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.335" endtime="20201030 15:52:52.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.333" endtime="20201030 15:52:52.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.372" endtime="20201030 15:52:52.658"></status>
</kw>
<msg timestamp="20201030 15:52:52.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021266292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.371" endtime="20201030 15:52:52.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021255764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021266292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.662" endtime="20201030 15:52:52.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.670" endtime="20201030 15:52:52.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.368" endtime="20201030 15:52:52.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.366" endtime="20201030 15:52:52.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.677" level="INFO">${RESULT} = [{'diff': 1.0527999999999232e-05}, {'diff': 2.5874999999998122e-05}, {'diff': 2.588900000000116e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.495900000000148e-05}, {'diff': 2.590300000000073e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:52.673" endtime="20201030 15:52:52.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.681" level="INFO">${ACCURACY} = {'diff': [1.0527999999999232e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.3999999999999716e-05, 2.495900000000148e-05, 2.590300000000073e-05, 2.6791000000001702e-05, 2.113899999999988e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:52.678" endtime="20201030 15:52:52.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.685" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.684" endtime="20201030 15:52:52.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.688" level="INFO">VALUE: [1.0527999999999232e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.3999999999999716e-05, 2.495900000000148e-05, 2.590300000000073e-05, 2.6791000000001702e-05, 2.113899999999988e-05, 2.3013999999998286e-05, 2.2040999999996952e-05, 2.3958000000001006e-05, 2.6818999999997373e-05, 2.013899999999888e-05, 2.6834000000003355e-05, 2.2958000000000006e-05, 2.4013999999999286e-05, 2.59170000000003e-05, 2.2041999999999895e-05, 2.10969999999977e-05, 2.5957999999999537e-05, 2.4957999999998537e-05, 2.2056000000002934e-05, 2.5860999999998552e-05, 2.6874999999999122e-05, 2.1070000000001504e-05, 2.105499999999899e-05, 2.4915999999999827e-05, 2.5888000000001687e-05, 2.3042000000000895e-05, 2.012499999999931e-05, 2.3070000000000035e-05, 2.011099999999974e-05, 2.201300000000128e-05, 2.490299999999973e-05, 2.3986000000000146e-05, 2.6833000000000412e-05, 2.111100000000074e-05, 2.108299999999813e-05, 2.490299999999973e-05, 2.5027000000000382e-05, 2.494499999999844e-05, 2.491700000000277e-05, 2.2985999999999146e-05, 2.394499999999744e-05, 2.3958000000001006e-05, 2.3042000000000895e-05, 2.3013999999998286e-05, 2.1138000000000406e-05, 2.2971999999999576e-05, 2.2999999999998716e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.686" endtime="20201030 15:52:52.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.682" endtime="20201030 15:52:52.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.694" endtime="20201030 15:52:52.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.692" endtime="20201030 15:52:52.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.691" endtime="20201030 15:52:52.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.331" endtime="20201030 15:52:52.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.331" endtime="20201030 15:52:52.714"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.723" endtime="20201030 15:52:52.744"></status>
</kw>
<msg timestamp="20201030 15:52:52.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.721" endtime="20201030 15:52:52.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.746" endtime="20201030 15:52:52.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.748" endtime="20201030 15:52:52.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.719" endtime="20201030 15:52:52.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.717" endtime="20201030 15:52:52.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.757" endtime="20201030 15:52:53.044"></status>
</kw>
<msg timestamp="20201030 15:52:53.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024141139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02417375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:52.756" endtime="20201030 15:52:53.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024141139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02417375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:53.049" endtime="20201030 15:52:53.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.057" endtime="20201030 15:52:53.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.753" endtime="20201030 15:52:53.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.751" endtime="20201030 15:52:53.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.064" level="INFO">${RESULT} = [{'diff': 3.261100000000183e-05}, {'diff': 2.494500000000191e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2056000000002934e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.1070000000001504e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.061" endtime="20201030 15:52:53.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.071" level="INFO">${ACCURACY} = {'diff': [3.261100000000183e-05, 2.494500000000191e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.3013999999998286e-05, 2.1070000000001504e-05, 2.498700000000062e-05, 2.2028000000000325e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:53.065" endtime="20201030 15:52:53.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.076" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.075" endtime="20201030 15:52:53.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.078" level="INFO">VALUE: [3.261100000000183e-05, 2.494500000000191e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.3013999999998286e-05, 2.1070000000001504e-05, 2.498700000000062e-05, 2.2028000000000325e-05, 2.2014000000000755e-05, 2.2014000000000755e-05, 2.393099999999787e-05, 2.204100000000042e-05, 2.397300000000005e-05, 2.3056000000000465e-05, 2.394500000000091e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.49169999999993e-05, 2.6818999999997373e-05, 2.3958000000001006e-05, 2.398699999999962e-05, 2.5888000000001687e-05, 2.109700000000117e-05, 2.488900000000016e-05, 2.5943999999999967e-05, 2.016699999999802e-05, 2.3972000000000576e-05, 2.10969999999977e-05, 2.3929999999998397e-05, 2.491700000000277e-05, 2.588900000000116e-05, 2.205499999999999e-05, 2.291700000000077e-05, 2.205499999999999e-05, 2.1069999999998035e-05, 2.59170000000003e-05, 2.1056000000001934e-05, 2.298700000000209e-05, 2.012499999999931e-05, 2.2069999999999035e-05, 2.5930000000000397e-05, 2.490299999999973e-05, 2.5819999999999316e-05, 2.1056000000001934e-05, 2.494499999999844e-05, 2.306900000000056e-05, 2.105500000000246e-05, 2.6846999999999982e-05, 2.3999999999999716e-05, 2.5874999999998122e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.077" endtime="20201030 15:52:53.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.072" endtime="20201030 15:52:53.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.083" endtime="20201030 15:52:53.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.082" endtime="20201030 15:52:53.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.080" endtime="20201030 15:52:53.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.715" endtime="20201030 15:52:53.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.715" endtime="20201030 15:52:53.104"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.113" endtime="20201030 15:52:53.132"></status>
</kw>
<msg timestamp="20201030 15:52:53.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.111" endtime="20201030 15:52:53.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.133" endtime="20201030 15:52:53.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.136" endtime="20201030 15:52:53.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.108" endtime="20201030 15:52:53.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.106" endtime="20201030 15:52:53.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.145" endtime="20201030 15:52:53.476"></status>
</kw>
<msg timestamp="20201030 15:52:53.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021283417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021311194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.143" endtime="20201030 15:52:53.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021283417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021311194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.480" endtime="20201030 15:52:53.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.488" endtime="20201030 15:52:53.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.141" endtime="20201030 15:52:53.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.139" endtime="20201030 15:52:53.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.495" level="INFO">${RESULT} = [{'diff': 2.7776999999999663e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.109700000000117e-05}, {'diff': 2.490299999999973e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:53.491" endtime="20201030 15:52:53.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.499" level="INFO">${ACCURACY} = {'diff': [2.7776999999999663e-05, 2.112500000000031e-05, 2.590300000000073e-05, 2.2014000000000755e-05, 2.109700000000117e-05, 2.490299999999973e-05, 2.013899999999888e-05, 2.3999999999999716e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:52:53.496" endtime="20201030 15:52:53.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.503" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.502" endtime="20201030 15:52:53.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.506" level="INFO">VALUE: [2.7776999999999663e-05, 2.112500000000031e-05, 2.590300000000073e-05, 2.2014000000000755e-05, 2.109700000000117e-05, 2.490299999999973e-05, 2.013899999999888e-05, 2.3999999999999716e-05, 2.206899999999956e-05, 2.013899999999888e-05, 2.5915999999997358e-05, 2.112500000000031e-05, 2.3986000000000146e-05, 2.5861999999998025e-05, 2.016699999999802e-05, 2.3986000000000146e-05, 2.4013999999999286e-05, 2.3986000000000146e-05, 2.016700000000149e-05, 2.20969999999987e-05, 2.6792000000001176e-05, 2.494499999999844e-05, 2.3042000000000895e-05, 2.112500000000031e-05, 2.2083999999998605e-05, 2.2014000000000755e-05, 2.02090000000002e-05, 2.3042000000000895e-05, 2.2055999999999465e-05, 2.012499999999931e-05, 2.2028000000000325e-05, 2.6874999999999122e-05, 2.3972000000000576e-05, 2.4027999999998856e-05, 2.3042000000000895e-05, 2.587500000000159e-05, 2.106899999999856e-05, 2.1055999999998465e-05, 2.395900000000048e-05, 2.116699999999902e-05, 2.588900000000116e-05, 2.3944000000001436e-05, 2.013899999999888e-05, 2.393100000000134e-05, 2.393100000000134e-05, 2.109700000000117e-05, 2.3986000000000146e-05, 2.2985999999999146e-05, 2.294499999999991e-05, 2.494499999999844e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.504" endtime="20201030 15:52:53.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.499" endtime="20201030 15:52:53.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.569" endtime="20201030 15:52:53.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.568" endtime="20201030 15:52:53.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.566" endtime="20201030 15:52:53.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.105" endtime="20201030 15:52:53.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.104" endtime="20201030 15:52:53.590"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.599" endtime="20201030 15:52:53.619"></status>
</kw>
<msg timestamp="20201030 15:52:53.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.597" endtime="20201030 15:52:53.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.620" endtime="20201030 15:52:53.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.623" endtime="20201030 15:52:53.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.595" endtime="20201030 15:52:53.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.593" endtime="20201030 15:52:53.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.631" endtime="20201030 15:52:53.918"></status>
</kw>
<msg timestamp="20201030 15:52:53.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:53.630" endtime="20201030 15:52:53.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:53.923" endtime="20201030 15:52:53.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.931" endtime="20201030 15:52:53.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.627" endtime="20201030 15:52:53.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.626" endtime="20201030 15:52:53.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.937" level="INFO">${RESULT} = [{'diff': 2.2041999999999895e-05}, {'diff': 2.4860999999997552e-05}, {'diff': 2.494500000000191e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.49169999999993e-05}, {'diff': 2.59170000000003e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:53.934" endtime="20201030 15:52:53.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.942" level="INFO">${ACCURACY} = {'diff': [2.2041999999999895e-05, 2.4860999999997552e-05, 2.494500000000191e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.59170000000003e-05, 2.2028000000000325e-05, 2.488900000000016e-05, 2.495...</msg>
<status status="PASS" starttime="20201030 15:52:53.938" endtime="20201030 15:52:53.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.946" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.945" endtime="20201030 15:52:53.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.949" level="INFO">VALUE: [2.2041999999999895e-05, 2.4860999999997552e-05, 2.494500000000191e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.59170000000003e-05, 2.2028000000000325e-05, 2.488900000000016e-05, 2.495900000000148e-05, 2.5902000000001257e-05, 2.109700000000117e-05, 2.112500000000031e-05, 2.108299999999813e-05, 2.3000000000002185e-05, 2.491700000000277e-05, 2.111100000000074e-05, 2.115299999999945e-05, 2.3000000000002185e-05, 2.3056000000000465e-05, 2.113899999999988e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2.6820000000000316e-05, 2.1027999999999325e-05, 2.112500000000031e-05, 2.3972000000000576e-05, 2.494499999999844e-05, 2.112500000000031e-05, 2.4915999999999827e-05, 2.588900000000116e-05, 2.2026999999997382e-05, 2.2028000000000325e-05, 2.0208000000000725e-05, 2.5930000000000397e-05, 2.5832999999999412e-05, 2.49169999999993e-05, 2.20969999999987e-05, 2.3041999999997426e-05, 2.3082999999996662e-05, 2.387499999999959e-05, 2.2041999999999895e-05, 2.205499999999999e-05, 2.0193999999997686e-05, 2.3999999999999716e-05, 2.2971999999999576e-05, 2.2999999999998716e-05, 2.3028000000001325e-05, 2.5943999999999967e-05, 2.6792000000001176e-05, 2.20969999999987e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.947" endtime="20201030 15:52:53.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.943" endtime="20201030 15:52:53.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.954" endtime="20201030 15:52:53.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.952" endtime="20201030 15:52:53.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.951" endtime="20201030 15:52:53.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.591" endtime="20201030 15:52:53.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.591" endtime="20201030 15:52:53.975"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.983" endtime="20201030 15:52:54.005"></status>
</kw>
<msg timestamp="20201030 15:52:54.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.982" endtime="20201030 15:52:54.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.007" endtime="20201030 15:52:54.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.009" endtime="20201030 15:52:54.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.979" endtime="20201030 15:52:54.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.977" endtime="20201030 15:52:54.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.018" endtime="20201030 15:52:54.313"></status>
</kw>
<msg timestamp="20201030 15:52:54.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024758347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.017" endtime="20201030 15:52:54.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024758347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.323" endtime="20201030 15:52:54.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.341" endtime="20201030 15:52:54.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.014" endtime="20201030 15:52:54.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.012" endtime="20201030 15:52:54.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.355" level="INFO">${RESULT} = [{'diff': 3.348599999999924e-05}, {'diff': 2.5834000000002355e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.487500000000059e-05}, {'diff': 2.20969999999987e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:54.348" endtime="20201030 15:52:54.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.363" level="INFO">${ACCURACY} = {'diff': [3.348599999999924e-05, 2.5834000000002355e-05, 2.3042000000000895e-05, 2.3027999999997856e-05, 2.487500000000059e-05, 2.20969999999987e-05, 2.109700000000117e-05, 2.5929999999996928e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 15:52:54.357" endtime="20201030 15:52:54.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.370" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.369" endtime="20201030 15:52:54.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.373" level="INFO">VALUE: [3.348599999999924e-05, 2.5834000000002355e-05, 2.3042000000000895e-05, 2.3027999999997856e-05, 2.487500000000059e-05, 2.20969999999987e-05, 2.109700000000117e-05, 2.5929999999996928e-05, 2.10969999999977e-05, 2.4929999999999397e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.2028000000000325e-05, 2.306900000000056e-05, 2.4915999999999827e-05, 2.2040999999996952e-05, 2.3999999999999716e-05, 2.4012999999999812e-05, 2.294499999999991e-05, 2.5846999999998982e-05, 2.016700000000149e-05, 2.588899999999769e-05, 2.106899999999856e-05, 2.1999999999997716e-05, 2.3040999999997952e-05, 2.016699999999802e-05, 2.587500000000159e-05, 2.3943999999997967e-05, 2.1056000000001934e-05, 2.2999999999998716e-05, 2.10830000000016e-05, 2.6819000000000842e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.10830000000016e-05, 2.393099999999787e-05, 2.3000000000002185e-05, 2.487500000000059e-05, 2.586100000000202e-05, 2.108299999999813e-05, 2.2985999999999146e-05, 2.2014000000000755e-05, 2.304100000000142e-05, 2.49169999999993e-05, 2.395900000000048e-05, 2.295899999999948e-05, 2.3972000000000576e-05, 2.6806000000000746e-05, 2.490299999999973e-05, 2.2943999999996967e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.371" endtime="20201030 15:52:54.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.365" endtime="20201030 15:52:54.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.378" endtime="20201030 15:52:54.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.376" endtime="20201030 15:52:54.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.375" endtime="20201030 15:52:54.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.975" endtime="20201030 15:52:54.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.975" endtime="20201030 15:52:54.398"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.407" endtime="20201030 15:52:54.428"></status>
</kw>
<msg timestamp="20201030 15:52:54.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.406" endtime="20201030 15:52:54.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.430" endtime="20201030 15:52:54.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.432" endtime="20201030 15:52:54.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.403" endtime="20201030 15:52:54.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.401" endtime="20201030 15:52:54.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.441" endtime="20201030 15:52:54.728"></status>
</kw>
<msg timestamp="20201030 15:52:54.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.439" endtime="20201030 15:52:54.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023145681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.732" endtime="20201030 15:52:54.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.740" endtime="20201030 15:52:54.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.437" endtime="20201030 15:52:54.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.435" endtime="20201030 15:52:54.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.746" level="INFO">${RESULT} = [{'diff': 3.6417000000000394e-05}, {'diff': 2.1070000000001504e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.306900000000056e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.687500000000259e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:54.743" endtime="20201030 15:52:54.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.751" level="INFO">${ACCURACY} = {'diff': [3.6417000000000394e-05, 2.1070000000001504e-05, 2.2999999999998716e-05, 2.306900000000056e-05, 2.204100000000042e-05, 2.687500000000259e-05, 2.3027999999997856e-05, 2.208299999999913e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:54.747" endtime="20201030 15:52:54.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.756" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.754" endtime="20201030 15:52:54.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.759" level="INFO">VALUE: [3.6417000000000394e-05, 2.1070000000001504e-05, 2.2999999999998716e-05, 2.306900000000056e-05, 2.204100000000042e-05, 2.687500000000259e-05, 2.3027999999997856e-05, 2.208299999999913e-05, 2.2985999999999146e-05, 2.3929999999998397e-05, 2.115299999999945e-05, 2.590299999999726e-05, 2.016700000000149e-05, 2.6804999999997803e-05, 2.4944000000002436e-05, 2.3999999999999716e-05, 2.2084000000002074e-05, 2.490299999999973e-05, 2.298699999999862e-05, 2.49169999999993e-05, 2.4958000000002006e-05, 2.211099999999827e-05, 2.3040999999997952e-05, 2.10830000000016e-05, 2.3986000000000146e-05, 2.3042000000000895e-05, 2.211099999999827e-05, 2.4957999999998537e-05, 2.116699999999902e-05, 2.10830000000016e-05, 2.5860999999998552e-05, 2.113899999999988e-05, 2.3042000000000895e-05, 2.013899999999888e-05, 2.5860999999998552e-05, 2.588899999999769e-05, 2.588900000000116e-05, 2.013899999999888e-05, 2.6804999999997803e-05, 2.208299999999913e-05, 2.3986000000000146e-05, 2.112500000000031e-05, 2.015299999999845e-05, 2.49169999999993e-05, 2.2986000000002615e-05, 2.595900000000248e-05, 2.493100000000234e-05, 2.4929999999999397e-05, 2.4915999999999827e-05, 2.212500000000131e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.757" endtime="20201030 15:52:54.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.751" endtime="20201030 15:52:54.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.765" endtime="20201030 15:52:54.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.763" endtime="20201030 15:52:54.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.762" endtime="20201030 15:52:54.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.399" endtime="20201030 15:52:54.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.399" endtime="20201030 15:52:54.786"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.794" endtime="20201030 15:52:54.815"></status>
</kw>
<msg timestamp="20201030 15:52:54.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.793" endtime="20201030 15:52:54.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.816" endtime="20201030 15:52:54.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.819" endtime="20201030 15:52:54.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.790" endtime="20201030 15:52:54.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.788" endtime="20201030 15:52:54.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.827" endtime="20201030 15:52:55.112"></status>
</kw>
<msg timestamp="20201030 15:52:55.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.826" endtime="20201030 15:52:55.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022763208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.116" endtime="20201030 15:52:55.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.124" endtime="20201030 15:52:55.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.824" endtime="20201030 15:52:55.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.822" endtime="20201030 15:52:55.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.131" level="INFO">${RESULT} = [{'diff': 2.394500000000091e-05}, {'diff': 2.013900000000235e-05}, {'diff': 2.5832999999999412e-05}, {'diff': 2.4958000000002006e-05}, {'diff': 2.498700000000062e-05}, {'diff': 2.2986000000002615e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:55.127" endtime="20201030 15:52:55.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.136" level="INFO">${ACCURACY} = {'diff': [2.394500000000091e-05, 2.013900000000235e-05, 2.5832999999999412e-05, 2.4958000000002006e-05, 2.498700000000062e-05, 2.2986000000002615e-05, 2.6806000000000746e-05, 2.4027999999998856e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:55.132" endtime="20201030 15:52:55.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.140" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.139" endtime="20201030 15:52:55.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.143" level="INFO">VALUE: [2.394500000000091e-05, 2.013900000000235e-05, 2.5832999999999412e-05, 2.4958000000002006e-05, 2.498700000000062e-05, 2.2986000000002615e-05, 2.6806000000000746e-05, 2.4027999999998856e-05, 2.2084000000002074e-05, 2.6833000000000412e-05, 2.5805999999999746e-05, 2.4915999999999827e-05, 2.586100000000202e-05, 2.593099999999987e-05, 2.4958000000002006e-05, 2.2027999999996856e-05, 2.2985999999999146e-05, 2.3000000000002185e-05, 2.49169999999993e-05, 2.5874999999998122e-05, 2.106899999999856e-05, 2.0111999999999214e-05, 2.3056000000000465e-05, 2.298700000000209e-05, 2.5846999999998982e-05, 2.5832999999999412e-05, 2.3958000000001006e-05, 2.208299999999913e-05, 2.2056000000002934e-05, 2.5874999999998122e-05, 2.49030000000032e-05, 2.491700000000277e-05, 2.2028000000000325e-05, 2.394500000000091e-05, 2.111100000000074e-05, 2.3972000000000576e-05, 2.206899999999956e-05, 2.6832999999996943e-05, 2.2041999999999895e-05, 2.1070000000001504e-05, 2.6820000000000316e-05, 2.490299999999973e-05, 2.2055999999999465e-05, 2.593099999999987e-05, 2.015300000000192e-05, 2.012499999999931e-05, 2.2028000000000325e-05, 2.49169999999993e-05, 2.6820000000000316e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.141" endtime="20201030 15:52:55.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.136" endtime="20201030 15:52:55.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.147" endtime="20201030 15:52:55.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.146" endtime="20201030 15:52:55.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.145" endtime="20201030 15:52:55.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.787" endtime="20201030 15:52:55.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.786" endtime="20201030 15:52:55.168"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.177" endtime="20201030 15:52:55.196"></status>
</kw>
<msg timestamp="20201030 15:52:55.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.175" endtime="20201030 15:52:55.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.198" endtime="20201030 15:52:55.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.200" endtime="20201030 15:52:55.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.173" endtime="20201030 15:52:55.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.171" endtime="20201030 15:52:55.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.209" endtime="20201030 15:52:55.496"></status>
</kw>
<msg timestamp="20201030 15:52:55.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.208" endtime="20201030 15:52:55.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.500" endtime="20201030 15:52:55.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.509" endtime="20201030 15:52:55.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.205" endtime="20201030 15:52:55.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.203" endtime="20201030 15:52:55.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.515" level="INFO">${RESULT} = [{'diff': 1.911099999999874e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.3014000000001755e-05}, {'diff': 2.294499999999991e-05}, {'diff': 2.488900000000016e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:55.512" endtime="20201030 15:52:55.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.519" level="INFO">${ACCURACY} = {'diff': [1.911099999999874e-05, 2.111100000000074e-05, 2.208299999999913e-05, 2.3014000000001755e-05, 2.294499999999991e-05, 2.488900000000016e-05, 2.1098000000000644e-05, 2.586100000000202e-05, 2.29...</msg>
<status status="PASS" starttime="20201030 15:52:55.516" endtime="20201030 15:52:55.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.524" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.523" endtime="20201030 15:52:55.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.526" level="INFO">VALUE: [1.911099999999874e-05, 2.111100000000074e-05, 2.208299999999913e-05, 2.3014000000001755e-05, 2.294499999999991e-05, 2.488900000000016e-05, 2.1098000000000644e-05, 2.586100000000202e-05, 2.2999999999998716e-05, 2.4014000000002755e-05, 2.3999999999999716e-05, 2.293100000000034e-05, 2.10969999999977e-05, 2.5819999999999316e-05, 2.583300000000288e-05, 2.6874999999999122e-05, 2.4971999999998107e-05, 2.2985999999999146e-05, 2.5874999999998122e-05, 2.297299999999905e-05, 2.493099999999887e-05, 2.3028000000001325e-05, 2.4986000000001146e-05, 2.395900000000048e-05, 2.493099999999887e-05, 2.115299999999945e-05, 2.112500000000031e-05, 2.395900000000048e-05, 2.206899999999956e-05, 2.5930000000000397e-05, 2.109700000000117e-05, 2.013900000000235e-05, 2.6805000000001272e-05, 2.015299999999845e-05, 2.1097999999997175e-05, 2.0165999999998546e-05, 2.116699999999902e-05, 2.393100000000134e-05, 2.3943999999997967e-05, 2.012500000000278e-05, 2.49169999999993e-05, 2.018100000000106e-05, 2.4957999999998537e-05, 2.595899999999901e-05, 2.3041999999997426e-05, 2.387499999999959e-05, 2.6833999999999886e-05, 2.5846999999998982e-05, 2.012499999999931e-05, 2.3972000000000576e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.525" endtime="20201030 15:52:55.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.520" endtime="20201030 15:52:55.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.531" endtime="20201030 15:52:55.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.530" endtime="20201030 15:52:55.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.529" endtime="20201030 15:52:55.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.169" endtime="20201030 15:52:55.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.168" endtime="20201030 15:52:55.552"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.561" endtime="20201030 15:52:55.584"></status>
</kw>
<msg timestamp="20201030 15:52:55.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.559" endtime="20201030 15:52:55.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.586" endtime="20201030 15:52:55.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.588" endtime="20201030 15:52:55.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.557" endtime="20201030 15:52:55.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.555" endtime="20201030 15:52:55.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.597" endtime="20201030 15:52:55.884"></status>
</kw>
<msg timestamp="20201030 15:52:55.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024909125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024937847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.595" endtime="20201030 15:52:55.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024909125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024937847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.888" endtime="20201030 15:52:55.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.896" endtime="20201030 15:52:55.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.593" endtime="20201030 15:52:55.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.591" endtime="20201030 15:52:55.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.903" level="INFO">${RESULT} = [{'diff': 2.8721999999998388e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.5915999999997358e-05}, {'diff': 2.013900000000235e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.108299999999813e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:55.899" endtime="20201030 15:52:55.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.907" level="INFO">${ACCURACY} = {'diff': [2.8721999999998388e-05, 2.488900000000016e-05, 2.5915999999997358e-05, 2.013900000000235e-05, 2.3972000000000576e-05, 2.108299999999813e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:52:55.904" endtime="20201030 15:52:55.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.911" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.910" endtime="20201030 15:52:55.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.914" level="INFO">VALUE: [2.8721999999998388e-05, 2.488900000000016e-05, 2.5915999999997358e-05, 2.013900000000235e-05, 2.3972000000000576e-05, 2.108299999999813e-05, 2.584700000000245e-05, 2.586100000000202e-05, 2.3930000000001866e-05, 2.2041999999999895e-05, 2.2028000000000325e-05, 2.5930000000000397e-05, 2.5860999999998552e-05, 2.10830000000016e-05, 2.3999999999999716e-05, 2.2070000000002504e-05, 2.584700000000245e-05, 2.390299999999873e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2999999999998716e-05, 2.5874999999998122e-05, 2.2028000000000325e-05, 2.6805999999997276e-05, 2.202700000000085e-05, 2.3958000000001006e-05, 2.5832999999999412e-05, 2.3028000000001325e-05, 2.6860999999999552e-05, 2.491700000000277e-05, 2.2028000000000325e-05, 2.583300000000288e-05, 2.204100000000042e-05, 2.5832999999999412e-05, 2.2028000000000325e-05, 2.6763999999998567e-05, 2.211099999999827e-05, 2.39169999999983e-05, 2.308300000000013e-05, 2.298700000000209e-05, 2.4943999999998967e-05, 2.1000000000000185e-05, 2.1069999999998035e-05, 2.488900000000016e-05, 2.2999999999998716e-05, 2.013899999999888e-05, 2.3054999999997522e-05, 2.587500000000159e-05, 2.3944000000001436e-05, 2.2985999999999146e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.912" endtime="20201030 15:52:55.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.908" endtime="20201030 15:52:55.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.919" endtime="20201030 15:52:55.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.918" endtime="20201030 15:52:55.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.917" endtime="20201030 15:52:55.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.553" endtime="20201030 15:52:55.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.552" endtime="20201030 15:52:55.940"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.949" endtime="20201030 15:52:55.970"></status>
</kw>
<msg timestamp="20201030 15:52:55.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.947" endtime="20201030 15:52:55.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.971" endtime="20201030 15:52:55.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.974" endtime="20201030 15:52:55.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.945" endtime="20201030 15:52:55.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.943" endtime="20201030 15:52:55.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.982" endtime="20201030 15:52:56.267"></status>
</kw>
<msg timestamp="20201030 15:52:56.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023652153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023663681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.981" endtime="20201030 15:52:56.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023652153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023663681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.271" endtime="20201030 15:52:56.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.279" endtime="20201030 15:52:56.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.978" endtime="20201030 15:52:56.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.977" endtime="20201030 15:52:56.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.286" level="INFO">${RESULT} = [{'diff': 1.1528000000000233e-05}, {'diff': 2.6735999999999427e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.6847999999999456e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.3014000000001755e-0...</msg>
<status status="PASS" starttime="20201030 15:52:56.283" endtime="20201030 15:52:56.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.291" level="INFO">${ACCURACY} = {'diff': [1.1528000000000233e-05, 2.6735999999999427e-05, 2.204100000000042e-05, 2.6847999999999456e-05, 2.3028000000001325e-05, 2.3014000000001755e-05, 2.2999999999998716e-05, 2.2958000000000006e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:56.287" endtime="20201030 15:52:56.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.295" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.294" endtime="20201030 15:52:56.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.298" level="INFO">VALUE: [1.1528000000000233e-05, 2.6735999999999427e-05, 2.204100000000042e-05, 2.6847999999999456e-05, 2.3028000000001325e-05, 2.3014000000001755e-05, 2.2999999999998716e-05, 2.2958000000000006e-05, 2.4042000000001895e-05, 2.3999999999999716e-05, 2.2985999999999146e-05, 2.490299999999973e-05, 2.3041999999997426e-05, 2.0194000000001155e-05, 2.011099999999974e-05, 2.3056000000000465e-05, 2.109700000000117e-05, 2.3930000000001866e-05, 2.49169999999993e-05, 2.015299999999845e-05, 2.106900000000203e-05, 2.491700000000277e-05, 2.4042000000001895e-05, 2.3957999999997537e-05, 2.2041999999999895e-05, 2.108299999999813e-05, 2.015299999999845e-05, 2.4971999999998107e-05, 2.2999999999998716e-05, 2.2986000000002615e-05, 2.3986000000000146e-05, 2.4943999999998967e-05, 2.109700000000117e-05, 2.4915999999999827e-05, 2.2013999999997286e-05, 2.6792000000001176e-05, 2.391700000000177e-05, 2.588899999999769e-05, 2.1070000000001504e-05, 2.2041999999999895e-05, 2.388900000000263e-05, 2.3027999999997856e-05, 2.588899999999769e-05, 2.4957999999998537e-05, 2.5887999999998218e-05, 2.1985999999998146e-05, 2.4834000000001355e-05, 2.493100000000234e-05, 2.205499999999999e-05, 2.1069999999998035e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.296" endtime="20201030 15:52:56.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.292" endtime="20201030 15:52:56.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.303" endtime="20201030 15:52:56.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.301" endtime="20201030 15:52:56.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.300" endtime="20201030 15:52:56.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.941" endtime="20201030 15:52:56.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.941" endtime="20201030 15:52:56.323"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.332" endtime="20201030 15:52:56.351"></status>
</kw>
<msg timestamp="20201030 15:52:56.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.330" endtime="20201030 15:52:56.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.353" endtime="20201030 15:52:56.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.355" endtime="20201030 15:52:56.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.328" endtime="20201030 15:52:56.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.326" endtime="20201030 15:52:56.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.364" endtime="20201030 15:52:56.651"></status>
</kw>
<msg timestamp="20201030 15:52:56.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.363" endtime="20201030 15:52:56.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.655" endtime="20201030 15:52:56.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.664" endtime="20201030 15:52:56.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.360" endtime="20201030 15:52:56.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.358" endtime="20201030 15:52:56.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.670" level="INFO">${RESULT} = [{'diff': 3.258300000000269e-05}, {'diff': 2.497299999999758e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.395900000000048e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:56.667" endtime="20201030 15:52:56.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.674" level="INFO">${ACCURACY} = {'diff': [3.258300000000269e-05, 2.497299999999758e-05, 2.3000000000002185e-05, 2.3000000000002185e-05, 2.016699999999802e-05, 2.395900000000048e-05, 2.4972000000001576e-05, 2.4013999999999286e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:56.671" endtime="20201030 15:52:56.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.679" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.678" endtime="20201030 15:52:56.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.682" level="INFO">VALUE: [3.258300000000269e-05, 2.497299999999758e-05, 2.3000000000002185e-05, 2.3000000000002185e-05, 2.016699999999802e-05, 2.395900000000048e-05, 2.4972000000001576e-05, 2.4013999999999286e-05, 2.2055999999999465e-05, 2.294499999999991e-05, 2.116699999999902e-05, 2.1098000000000644e-05, 2.208299999999913e-05, 2.113900000000335e-05, 2.109700000000117e-05, 2.49169999999993e-05, 2.2958000000000006e-05, 2.2013999999997286e-05, 2.4972000000001576e-05, 2.3042000000000895e-05, 2.39030000000022e-05, 2.4916000000003297e-05, 2.491700000000277e-05, 2.106899999999856e-05, 2.011099999999974e-05, 2.394499999999744e-05, 2.10969999999977e-05, 2.016699999999802e-05, 2.3943999999997967e-05, 2.3958000000001006e-05, 2.393099999999787e-05, 2.3000000000002185e-05, 2.4013999999999286e-05, 2.016700000000149e-05, 2.011099999999974e-05, 2.584700000000245e-05, 2.2971999999999576e-05, 2.2985999999999146e-05, 2.4943999999998967e-05, 2.590300000000073e-05, 2.5833999999998886e-05, 2.015299999999845e-05, 2.2041999999999895e-05, 2.10830000000016e-05, 2.687500000000259e-05, 2.018100000000106e-05, 2.2000000000001185e-05, 2.487499999999712e-05, 2.1098000000000644e-05, 2.0165999999998546e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.680" endtime="20201030 15:52:56.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.675" endtime="20201030 15:52:56.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.686" endtime="20201030 15:52:56.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.685" endtime="20201030 15:52:56.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.684" endtime="20201030 15:52:56.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.324" endtime="20201030 15:52:56.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.324" endtime="20201030 15:52:56.707"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.716" endtime="20201030 15:52:56.741"></status>
</kw>
<msg timestamp="20201030 15:52:56.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.714" endtime="20201030 15:52:56.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.743" endtime="20201030 15:52:56.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.745" endtime="20201030 15:52:56.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.712" endtime="20201030 15:52:56.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.710" endtime="20201030 15:52:56.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.754" endtime="20201030 15:52:57.039"></status>
</kw>
<msg timestamp="20201030 15:52:57.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025260972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.753" endtime="20201030 15:52:57.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025260972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025296444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.043" endtime="20201030 15:52:57.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.051" endtime="20201030 15:52:57.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.750" endtime="20201030 15:52:57.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.748" endtime="20201030 15:52:57.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.057" level="INFO">${RESULT} = [{'diff': 3.547200000000167e-05}, {'diff': 2.111099999999727e-05}, {'diff': 2.4915999999999827e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.495899999999801e-05}, {'diff': 2.3916000000002297e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:57.054" endtime="20201030 15:52:57.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.062" level="INFO">${ACCURACY} = {'diff': [3.547200000000167e-05, 2.111099999999727e-05, 2.4915999999999827e-05, 2.3027999999997856e-05, 2.495899999999801e-05, 2.3916000000002297e-05, 2.012500000000278e-05, 2.3013999999998286e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:57.058" endtime="20201030 15:52:57.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.066" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.065" endtime="20201030 15:52:57.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.069" level="INFO">VALUE: [3.547200000000167e-05, 2.111099999999727e-05, 2.4915999999999827e-05, 2.3027999999997856e-05, 2.495899999999801e-05, 2.3916000000002297e-05, 2.012500000000278e-05, 2.3013999999998286e-05, 2.2026999999997382e-05, 2.3000000000002185e-05, 2.011099999999974e-05, 2.205499999999999e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.1098000000000644e-05, 2.493100000000234e-05, 2.112499999999684e-05, 2.3041999999997426e-05, 2.6846999999999982e-05, 2.108299999999813e-05, 2.393100000000134e-05, 2.4943999999998967e-05, 2.2999999999998716e-05, 2.1084000000001074e-05, 2.1069999999998035e-05, 2.112500000000031e-05, 2.49169999999993e-05, 2.3986000000000146e-05, 2.588899999999769e-05, 2.3986000000000146e-05, 2.4929999999999397e-05, 2.3028000000001325e-05, 2.588899999999769e-05, 2.393100000000134e-05, 2.5846999999998982e-05, 2.584700000000245e-05, 2.587500000000159e-05, 2.591699999999683e-05, 2.212500000000131e-05, 2.2041999999999895e-05, 2.394500000000091e-05, 2.4944000000002436e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.4929999999999397e-05, 2.494500000000191e-05, 2.4972000000001576e-05, 2.297300000000252e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.067" endtime="20201030 15:52:57.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.063" endtime="20201030 15:52:57.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.074" endtime="20201030 15:52:57.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.073" endtime="20201030 15:52:57.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.072" endtime="20201030 15:52:57.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.708" endtime="20201030 15:52:57.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.708" endtime="20201030 15:52:57.095"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.103" endtime="20201030 15:52:57.126"></status>
</kw>
<msg timestamp="20201030 15:52:57.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.102" endtime="20201030 15:52:57.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.127" endtime="20201030 15:52:57.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.130" endtime="20201030 15:52:57.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.099" endtime="20201030 15:52:57.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.097" endtime="20201030 15:52:57.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.139" endtime="20201030 15:52:57.422"></status>
</kw>
<msg timestamp="20201030 15:52:57.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024387583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.137" endtime="20201030 15:52:57.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024368458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024387583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.427" endtime="20201030 15:52:57.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.435" endtime="20201030 15:52:57.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.135" endtime="20201030 15:52:57.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.133" endtime="20201030 15:52:57.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.441" level="INFO">${RESULT} = [{'diff': 1.912500000000178e-05}, {'diff': 2.2098000000001644e-05}, {'diff': 2.487500000000059e-05}, {'diff': 2.588899999999769e-05}, {'diff': 2.6846999999999982e-05}, {'diff': 2.584700000000245e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:57.438" endtime="20201030 15:52:57.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.446" level="INFO">${ACCURACY} = {'diff': [1.912500000000178e-05, 2.2098000000001644e-05, 2.487500000000059e-05, 2.588899999999769e-05, 2.6846999999999982e-05, 2.584700000000245e-05, 2.39169999999983e-05, 2.108299999999813e-05, 2.302...</msg>
<status status="PASS" starttime="20201030 15:52:57.442" endtime="20201030 15:52:57.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.450" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.449" endtime="20201030 15:52:57.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.453" level="INFO">VALUE: [1.912500000000178e-05, 2.2098000000001644e-05, 2.487500000000059e-05, 2.588899999999769e-05, 2.6846999999999982e-05, 2.584700000000245e-05, 2.39169999999983e-05, 2.108299999999813e-05, 2.3027999999997856e-05, 2.206899999999956e-05, 2.2985999999999146e-05, 2.4929999999999397e-05, 2.3929999999998397e-05, 2.111100000000074e-05, 2.3014000000001755e-05, 2.009700000000017e-05, 2.2971999999999576e-05, 2.4943999999998967e-05, 2.491700000000277e-05, 2.388900000000263e-05, 2.201300000000128e-05, 2.4958000000002006e-05, 2.2098000000001644e-05, 2.2028000000000325e-05, 2.3013999999998286e-05, 2.2999999999998716e-05, 2.2028000000000325e-05, 2.397300000000005e-05, 2.0165999999998546e-05, 2.3014000000001755e-05, 2.3041999999997426e-05, 2.5860999999998552e-05, 2.490299999999973e-05, 2.213900000000088e-05, 2.1151999999999976e-05, 2.384700000000045e-05, 2.494500000000191e-05, 2.206899999999956e-05, 2.588899999999769e-05, 2.2985999999999146e-05, 2.3943999999997967e-05, 2.0166000000002016e-05, 2.3986000000000146e-05, 2.6846999999999982e-05, 2.3999999999999716e-05, 2.4902000000000257e-05, 2.10969999999977e-05, 2.019500000000063e-05, 2.6860999999999552e-05, 2.3028000000001325e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.451" endtime="20201030 15:52:57.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.447" endtime="20201030 15:52:57.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.458" endtime="20201030 15:52:57.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.456" endtime="20201030 15:52:57.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.455" endtime="20201030 15:52:57.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.096" endtime="20201030 15:52:57.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.095" endtime="20201030 15:52:57.478"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.487" endtime="20201030 15:52:57.507"></status>
</kw>
<msg timestamp="20201030 15:52:57.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.485" endtime="20201030 15:52:57.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.509" endtime="20201030 15:52:57.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.511" endtime="20201030 15:52:57.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.483" endtime="20201030 15:52:57.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.481" endtime="20201030 15:52:57.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.520" endtime="20201030 15:52:57.805"></status>
</kw>
<msg timestamp="20201030 15:52:57.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.519" endtime="20201030 15:52:57.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022700347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.810" endtime="20201030 15:52:57.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.818" endtime="20201030 15:52:57.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.516" endtime="20201030 15:52:57.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.515" endtime="20201030 15:52:57.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.825" level="INFO">${RESULT} = [{'diff': 1.7249999999999904e-05}, {'diff': 2.015299999999845e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.5874999999998122e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.490299999999973e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:57.822" endtime="20201030 15:52:57.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.829" level="INFO">${ACCURACY} = {'diff': [1.7249999999999904e-05, 2.015299999999845e-05, 2.206899999999956e-05, 2.5874999999998122e-05, 2.2041999999999895e-05, 2.490299999999973e-05, 2.2028000000000325e-05, 2.4915999999999827e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:57.826" endtime="20201030 15:52:57.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.834" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.833" endtime="20201030 15:52:57.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.836" level="INFO">VALUE: [1.7249999999999904e-05, 2.015299999999845e-05, 2.206899999999956e-05, 2.5874999999998122e-05, 2.2041999999999895e-05, 2.490299999999973e-05, 2.2028000000000325e-05, 2.4915999999999827e-05, 2.2041999999999895e-05, 2.6778000000001606e-05, 2.4986000000001146e-05, 2.5874999999998122e-05, 2.3972000000000576e-05, 2.3929999999998397e-05, 2.3887999999999687e-05, 2.0165999999998546e-05, 2.5901999999997788e-05, 2.2985999999999146e-05, 2.587500000000159e-05, 2.2999999999998716e-05, 2.3929999999998397e-05, 2.111100000000074e-05, 2.211099999999827e-05, 2.395899999999701e-05, 2.4915999999999827e-05, 2.2041999999999895e-05, 2.2971999999999576e-05, 2.10969999999977e-05, 2.305500000000099e-05, 2.2971999999999576e-05, 2.590300000000073e-05, 2.586100000000202e-05, 2.2999999999998716e-05, 2.5860999999998552e-05, 2.3999999999999716e-05, 2.111100000000074e-05, 2.104099999999942e-05, 2.3000000000002185e-05, 2.3972000000000576e-05, 2.5860999999998552e-05, 2.6749999999998997e-05, 2.109700000000117e-05, 2.1098000000000644e-05, 2.2999999999998716e-05, 2.593099999999987e-05, 2.10830000000016e-05, 2.3014000000001755e-05, 2.3000000000002185e-05, 2.3027999999997856e-05, 2.2999999999998716e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.835" endtime="20201030 15:52:57.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.830" endtime="20201030 15:52:57.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.841" endtime="20201030 15:52:57.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.839" endtime="20201030 15:52:57.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.838" endtime="20201030 15:52:57.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.479" endtime="20201030 15:52:57.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.479" endtime="20201030 15:52:57.862"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.870" endtime="20201030 15:52:57.889"></status>
</kw>
<msg timestamp="20201030 15:52:57.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.869" endtime="20201030 15:52:57.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.891" endtime="20201030 15:52:57.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.893" endtime="20201030 15:52:57.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.866" endtime="20201030 15:52:57.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.864" endtime="20201030 15:52:57.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.902" endtime="20201030 15:52:58.189"></status>
</kw>
<msg timestamp="20201030 15:52:58.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021295403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.900" endtime="20201030 15:52:58.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021295403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.193" endtime="20201030 15:52:58.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.201" endtime="20201030 15:52:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.898" endtime="20201030 15:52:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.896" endtime="20201030 15:52:58.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.208" level="INFO">${RESULT} = [{'diff': 2.5943999999999967e-05}, {'diff': 2.011099999999974e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.6860999999999552e-05}, {'diff': 2.1083999999997605e-0...</msg>
<status status="PASS" starttime="20201030 15:52:58.204" endtime="20201030 15:52:58.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.212" level="INFO">${ACCURACY} = {'diff': [2.5943999999999967e-05, 2.011099999999974e-05, 2.2055999999999465e-05, 2.3999999999999716e-05, 2.6860999999999552e-05, 2.1083999999997605e-05, 2.108299999999813e-05, 2.2014000000000755e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:58.209" endtime="20201030 15:52:58.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.216" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.215" endtime="20201030 15:52:58.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.219" level="INFO">VALUE: [2.5943999999999967e-05, 2.011099999999974e-05, 2.2055999999999465e-05, 2.3999999999999716e-05, 2.6860999999999552e-05, 2.1083999999997605e-05, 2.108299999999813e-05, 2.2014000000000755e-05, 2.108299999999813e-05, 2.118099999999859e-05, 2.2041999999999895e-05, 2.20969999999987e-05, 2.3957999999997537e-05, 2.5792000000000176e-05, 2.2985999999999146e-05, 2.211099999999827e-05, 2.112500000000031e-05, 2.590300000000073e-05, 2.3972000000000576e-05, 2.1999999999997716e-05, 2.3027999999997856e-05, 2.490299999999973e-05, 2.209700000000217e-05, 2.4915999999999827e-05, 2.4944000000002436e-05, 2.586100000000202e-05, 2.012499999999931e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.20830000000026e-05, 2.3958000000001006e-05, 2.012499999999931e-05, 2.0151999999998976e-05, 2.3040999999997952e-05, 2.5957999999999537e-05, 2.6833000000000412e-05, 2.10969999999977e-05, 2.3943999999997967e-05, 2.111099999999727e-05, 2.4957999999998537e-05, 2.018100000000106e-05, 2.4972000000001576e-05, 2.111100000000074e-05, 2.1056000000001934e-05, 2.494499999999844e-05, 2.4972000000001576e-05, 2.5985999999998677e-05, 2.3028000000001325e-05, 2.1098000000000644e-05, 2.5846999999998982e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.217" endtime="20201030 15:52:58.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.213" endtime="20201030 15:52:58.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.224" endtime="20201030 15:52:58.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.223" endtime="20201030 15:52:58.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.222" endtime="20201030 15:52:58.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.863" endtime="20201030 15:52:58.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.862" endtime="20201030 15:52:58.245"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.254" endtime="20201030 15:52:58.276"></status>
</kw>
<msg timestamp="20201030 15:52:58.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.252" endtime="20201030 15:52:58.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.277" endtime="20201030 15:52:58.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.280" endtime="20201030 15:52:58.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.250" endtime="20201030 15:52:58.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.247" endtime="20201030 15:52:58.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.289" endtime="20201030 15:52:58.574"></status>
</kw>
<msg timestamp="20201030 15:52:58.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024654639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024686208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.287" endtime="20201030 15:52:58.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024654639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024686208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.578" endtime="20201030 15:52:58.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.587" endtime="20201030 15:52:58.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.284" endtime="20201030 15:52:58.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.283" endtime="20201030 15:52:58.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.593" level="INFO">${RESULT} = [{'diff': 3.156900000000212e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.586100000000202e-05}, {'diff': 2.3930000000001866e-05}, {'diff': 2.5874999999998122e-05}, {'diff': 2.493100000000234e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:58.590" endtime="20201030 15:52:58.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.598" level="INFO">${ACCURACY} = {'diff': [3.156900000000212e-05, 2.2028000000000325e-05, 2.586100000000202e-05, 2.3930000000001866e-05, 2.5874999999998122e-05, 2.493100000000234e-05, 2.588900000000116e-05, 2.3012999999998812e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:58.594" endtime="20201030 15:52:58.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.603" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.602" endtime="20201030 15:52:58.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.605" level="INFO">VALUE: [3.156900000000212e-05, 2.2028000000000325e-05, 2.586100000000202e-05, 2.3930000000001866e-05, 2.5874999999998122e-05, 2.493100000000234e-05, 2.588900000000116e-05, 2.3012999999998812e-05, 2.4901999999996788e-05, 2.2971999999999576e-05, 2.393099999999787e-05, 2.6721999999999857e-05, 2.3986000000000146e-05, 2.3026999999998382e-05, 2.3972000000000576e-05, 2.1084000000001074e-05, 2.394500000000091e-05, 2.3000000000002185e-05, 2.490299999999973e-05, 2.1014000000003225e-05, 2.013899999999888e-05, 2.3986000000000146e-05, 2.493100000000234e-05, 2.29030000000012e-05, 2.013899999999888e-05, 2.1041999999998895e-05, 2.2042000000003364e-05, 2.3944000000001436e-05, 2.486100000000102e-05, 2.393099999999787e-05, 2.112500000000031e-05, 2.3972000000000576e-05, 2.3042000000000895e-05, 2.5792000000000176e-05, 2.49030000000032e-05, 2.5832999999999412e-05, 2.593099999999987e-05, 2.4958000000002006e-05, 2.394499999999744e-05, 2.5833999999998886e-05, 2.2028000000000325e-05, 2.2972000000003046e-05, 2.495899999999801e-05, 2.212499999999784e-05, 2.6833000000000412e-05, 2.301300000000228e-05, 2.10969999999977e-05, 2.386100000000002e-05, 2.1055999999998465e-05, 2.3986000000000146e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.604" endtime="20201030 15:52:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.599" endtime="20201030 15:52:58.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.682" endtime="20201030 15:52:58.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.681" endtime="20201030 15:52:58.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.680" endtime="20201030 15:52:58.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.246" endtime="20201030 15:52:58.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.245" endtime="20201030 15:52:58.703"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.711" endtime="20201030 15:52:58.734"></status>
</kw>
<msg timestamp="20201030 15:52:58.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.710" endtime="20201030 15:52:58.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.735" endtime="20201030 15:52:58.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.738" endtime="20201030 15:52:58.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.707" endtime="20201030 15:52:58.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.705" endtime="20201030 15:52:58.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.747" endtime="20201030 15:52:59.035"></status>
</kw>
<msg timestamp="20201030 15:52:59.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0241035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:58.745" endtime="20201030 15:52:59.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024079542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0241035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:59.039" endtime="20201030 15:52:59.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.047" endtime="20201030 15:52:59.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.743" endtime="20201030 15:52:59.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.741" endtime="20201030 15:52:59.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.054" level="INFO">${RESULT} = [{'diff': 2.3958000000001006e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.390299999999873e-05}, {'diff': 2.5847999999998456e-05}, {'diff': 2.494499999999844e-05}, {'diff': 2.015299999999845e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:59.050" endtime="20201030 15:52:59.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.059" level="INFO">${ACCURACY} = {'diff': [2.3958000000001006e-05, 2.111100000000074e-05, 2.390299999999873e-05, 2.5847999999998456e-05, 2.494499999999844e-05, 2.015299999999845e-05, 2.586100000000202e-05, 2.5861999999998025e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:52:59.055" endtime="20201030 15:52:59.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.064" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.063" endtime="20201030 15:52:59.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.066" level="INFO">VALUE: [2.3958000000001006e-05, 2.111100000000074e-05, 2.390299999999873e-05, 2.5847999999998456e-05, 2.494499999999844e-05, 2.015299999999845e-05, 2.586100000000202e-05, 2.5861999999998025e-05, 2.3944000000001436e-05, 2.2040999999996952e-05, 2.5862000000001495e-05, 2.1041999999998895e-05, 2.011099999999974e-05, 2.5874999999998122e-05, 2.10969999999977e-05, 2.293099999999687e-05, 2.2028000000000325e-05, 2.486100000000102e-05, 2.3056000000000465e-05, 2.211099999999827e-05, 2.5832999999999412e-05, 2.387500000000306e-05, 2.112500000000031e-05, 2.3958000000001006e-05, 2.301300000000228e-05, 2.6805999999997276e-05, 2.1070000000001504e-05, 2.2055999999999465e-05, 2.1112000000000214e-05, 2.211099999999827e-05, 2.1070000000001504e-05, 2.3000000000002185e-05, 2.206900000000303e-05, 2.395900000000048e-05, 2.497299999999758e-05, 2.111100000000074e-05, 2.6819000000000842e-05, 2.2985999999999146e-05, 2.106899999999856e-05, 2.012499999999931e-05, 2.1151999999999976e-05, 2.6833999999999886e-05, 2.3000000000002185e-05, 2.488900000000016e-05, 2.2041999999999895e-05, 2.3916000000002297e-05, 2.2083999999998605e-05, 2.2097999999998175e-05, 2.10830000000016e-05, 2.2028000000000325e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.065" endtime="20201030 15:52:59.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.060" endtime="20201030 15:52:59.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.071" endtime="20201030 15:52:59.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.070" endtime="20201030 15:52:59.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.069" endtime="20201030 15:52:59.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.704" endtime="20201030 15:52:59.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.703" endtime="20201030 15:52:59.092"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.101" endtime="20201030 15:52:59.120"></status>
</kw>
<msg timestamp="20201030 15:52:59.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.099" endtime="20201030 15:52:59.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.122" endtime="20201030 15:52:59.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.124" endtime="20201030 15:52:59.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.097" endtime="20201030 15:52:59.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.095" endtime="20201030 15:52:59.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.133" endtime="20201030 15:52:59.432"></status>
</kw>
<msg timestamp="20201030 15:52:59.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.132" endtime="20201030 15:52:59.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.436" endtime="20201030 15:52:59.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.445" endtime="20201030 15:52:59.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.129" endtime="20201030 15:52:59.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.128" endtime="20201030 15:52:59.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.451" level="INFO">${RESULT} = [{'diff': 3.355600000000056e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.4834000000001355e-05}, {'diff': 2.394500000000091e-05}, {'diff': 2.490299999999973e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:59.448" endtime="20201030 15:52:59.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.455" level="INFO">${ACCURACY} = {'diff': [3.355600000000056e-05, 2.2971999999999576e-05, 2.2041999999999895e-05, 2.4834000000001355e-05, 2.394500000000091e-05, 2.490299999999973e-05, 2.201300000000128e-05, 2.488900000000016e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 15:52:59.452" endtime="20201030 15:52:59.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.459" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.458" endtime="20201030 15:52:59.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.462" level="INFO">VALUE: [3.355600000000056e-05, 2.2971999999999576e-05, 2.2041999999999895e-05, 2.4834000000001355e-05, 2.394500000000091e-05, 2.490299999999973e-05, 2.201300000000128e-05, 2.488900000000016e-05, 2.113899999999988e-05, 2.2097999999998175e-05, 2.3999999999999716e-05, 2.3972000000000576e-05, 2.587500000000159e-05, 2.0151999999998976e-05, 2.4957999999998537e-05, 2.011099999999974e-05, 2.6778000000001606e-05, 2.2014000000000755e-05, 2.5860999999998552e-05, 2.5901999999997788e-05, 2.304100000000142e-05, 2.2985999999999146e-05, 2.2070000000002504e-05, 2.5916000000000827e-05, 2.3028000000001325e-05, 2.3944000000001436e-05, 2.2999999999998716e-05, 2.013899999999888e-05, 2.491700000000277e-05, 2.206899999999956e-05, 2.208299999999913e-05, 2.009700000000017e-05, 2.488900000000016e-05, 2.1084000000001074e-05, 2.2014000000000755e-05, 2.397300000000005e-05, 2.588899999999769e-05, 2.3957999999997537e-05, 2.2014000000000755e-05, 2.387499999999959e-05, 2.2012999999997812e-05, 2.015300000000192e-05, 2.4013999999999286e-05, 2.1098000000000644e-05, 2.5846999999998982e-05, 2.3026999999998382e-05, 2.2055999999999465e-05, 2.3028000000001325e-05, 2.013900000000235e-05, 2.398699999999962e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.460" endtime="20201030 15:52:59.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.456" endtime="20201030 15:52:59.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.468" endtime="20201030 15:52:59.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.466" endtime="20201030 15:52:59.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.465" endtime="20201030 15:52:59.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.093" endtime="20201030 15:52:59.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.093" endtime="20201030 15:52:59.488"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.497" endtime="20201030 15:52:59.517"></status>
</kw>
<msg timestamp="20201030 15:52:59.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.496" endtime="20201030 15:52:59.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.518" endtime="20201030 15:52:59.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.521" endtime="20201030 15:52:59.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.493" endtime="20201030 15:52:59.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.491" endtime="20201030 15:52:59.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.530" endtime="20201030 15:52:59.816"></status>
</kw>
<msg timestamp="20201030 15:52:59.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.528" endtime="20201030 15:52:59.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.820" endtime="20201030 15:52:59.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.828" endtime="20201030 15:52:59.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.526" endtime="20201030 15:52:59.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.524" endtime="20201030 15:52:59.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.835" level="INFO">${RESULT} = [{'diff': 3.255600000000303e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.209700000000217e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.3930000000001866e-05...</msg>
<status status="PASS" starttime="20201030 15:52:59.832" endtime="20201030 15:52:59.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.841" level="INFO">${ACCURACY} = {'diff': [3.255600000000303e-05, 2.2014000000000755e-05, 2.3999999999999716e-05, 2.209700000000217e-05, 2.4943999999998967e-05, 2.3930000000001866e-05, 2.1957999999999006e-05, 2.5846999999998982e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:59.836" endtime="20201030 15:52:59.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.846" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.845" endtime="20201030 15:52:59.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.848" level="INFO">VALUE: [3.255600000000303e-05, 2.2014000000000755e-05, 2.3999999999999716e-05, 2.209700000000217e-05, 2.4943999999998967e-05, 2.3930000000001866e-05, 2.1957999999999006e-05, 2.5846999999998982e-05, 2.2985999999999146e-05, 2.4028000000002325e-05, 2.0151999999998976e-05, 2.3013999999998286e-05, 2.205500000000346e-05, 2.687500000000259e-05, 2.3986000000000146e-05, 2.2014000000000755e-05, 2.5832999999999412e-05, 2.0179999999998116e-05, 2.590299999999726e-05, 2.490299999999973e-05, 2.012499999999931e-05, 2.581900000000331e-05, 2.497300000000105e-05, 2.302700000000185e-05, 2.1056000000001934e-05, 2.1069999999998035e-05, 2.0111999999999214e-05, 2.3985999999996677e-05, 2.0137999999999406e-05, 2.6792000000001176e-05, 2.5860999999998552e-05, 2.1179999999999116e-05, 2.4041999999998426e-05, 2.10830000000016e-05, 2.1098000000000644e-05, 2.3042000000000895e-05, 2.2055999999999465e-05, 2.4915999999999827e-05, 2.2985999999999146e-05, 2.6749999999998997e-05, 2.112500000000031e-05, 2.495899999999801e-05, 2.113899999999988e-05, 2.5833999999998886e-05, 2.3027999999997856e-05, 2.3999999999999716e-05, 2.211099999999827e-05, 2.3068999999997092e-05, 2.015299999999845e-05, 2.1056000000001934e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.847" endtime="20201030 15:52:59.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.842" endtime="20201030 15:52:59.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.853" endtime="20201030 15:52:59.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.852" endtime="20201030 15:52:59.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.850" endtime="20201030 15:52:59.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.489" endtime="20201030 15:52:59.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.489" endtime="20201030 15:52:59.874"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.882" endtime="20201030 15:52:59.905"></status>
</kw>
<msg timestamp="20201030 15:52:59.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.881" endtime="20201030 15:52:59.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.906" endtime="20201030 15:52:59.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.909" endtime="20201030 15:52:59.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.878" endtime="20201030 15:52:59.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.876" endtime="20201030 15:52:59.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.918" endtime="20201030 15:53:00.204"></status>
</kw>
<msg timestamp="20201030 15:53:00.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023788097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.916" endtime="20201030 15:53:00.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023752722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023788097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.208" endtime="20201030 15:53:00.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.216" endtime="20201030 15:53:00.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.914" endtime="20201030 15:53:00.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.912" endtime="20201030 15:53:00.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.223" level="INFO">${RESULT} = [{'diff': 3.5375000000000684e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.397300000000005e-05}, {'diff': 2.4915999999999827e-05}, {'diff': 2.4901999999996788e-05}, {'diff': 2.586100000000202e-05...</msg>
<status status="PASS" starttime="20201030 15:53:00.219" endtime="20201030 15:53:00.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.227" level="INFO">${ACCURACY} = {'diff': [3.5375000000000684e-05, 2.3972000000000576e-05, 2.397300000000005e-05, 2.4915999999999827e-05, 2.4901999999996788e-05, 2.586100000000202e-05, 2.5832999999999412e-05, 2.013900000000235e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:53:00.224" endtime="20201030 15:53:00.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.231" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.230" endtime="20201030 15:53:00.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.234" level="INFO">VALUE: [3.5375000000000684e-05, 2.3972000000000576e-05, 2.397300000000005e-05, 2.4915999999999827e-05, 2.4901999999996788e-05, 2.586100000000202e-05, 2.5832999999999412e-05, 2.013900000000235e-05, 2.5832999999999412e-05, 2.393100000000134e-05, 2.3958000000001006e-05, 2.395900000000048e-05, 2.5874999999998122e-05, 2.0151999999998976e-05, 2.3943999999997967e-05, 2.593099999999987e-05, 2.588899999999769e-05, 2.6833000000000412e-05, 2.2041999999999895e-05, 2.5846999999998982e-05, 2.3999999999999716e-05, 2.4860999999997552e-05, 2.011099999999974e-05, 2.0165999999998546e-05, 2.493099999999887e-05, 2.49169999999993e-05, 2.5860999999998552e-05, 2.013899999999888e-05, 2.0070000000000504e-05, 2.10830000000016e-05, 2.393100000000134e-05, 2.588900000000116e-05, 2.111100000000074e-05, 2.488900000000016e-05, 2.488900000000016e-05, 2.5846999999998982e-05, 2.6749999999998997e-05, 2.108299999999813e-05, 2.393100000000134e-05, 2.395899999999701e-05, 2.10969999999977e-05, 2.2999999999998716e-05, 2.0151999999998976e-05, 2.1986000000001615e-05, 2.486100000000102e-05, 2.0097999999999644e-05, 2.495900000000148e-05, 2.2943999999996967e-05, 2.5874999999998122e-05, 2.012499999999931e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.232" endtime="20201030 15:53:00.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.228" endtime="20201030 15:53:00.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.238" endtime="20201030 15:53:00.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.237" endtime="20201030 15:53:00.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.236" endtime="20201030 15:53:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.875" endtime="20201030 15:53:00.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.874" endtime="20201030 15:53:00.259"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.268" endtime="20201030 15:53:00.290"></status>
</kw>
<msg timestamp="20201030 15:53:00.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.266" endtime="20201030 15:53:00.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.292" endtime="20201030 15:53:00.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.294" endtime="20201030 15:53:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.264" endtime="20201030 15:53:00.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.262" endtime="20201030 15:53:00.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.303" endtime="20201030 15:53:00.587"></status>
</kw>
<msg timestamp="20201030 15:53:00.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025351083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.301" endtime="20201030 15:53:00.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025351083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.592" endtime="20201030 15:53:00.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.600" endtime="20201030 15:53:00.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.299" endtime="20201030 15:53:00.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.297" endtime="20201030 15:53:00.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.606" level="INFO">${RESULT} = [{'diff': 3.063899999999897e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.109700000000117e-05}, {'diff': 2.205499999999999e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:00.603" endtime="20201030 15:53:00.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.610" level="INFO">${ACCURACY} = {'diff': [3.063899999999897e-05, 2.2028000000000325e-05, 2.113899999999988e-05, 2.2985999999999146e-05, 2.109700000000117e-05, 2.205499999999999e-05, 2.6805000000001272e-05, 2.490299999999973e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:53:00.607" endtime="20201030 15:53:00.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.615" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.614" endtime="20201030 15:53:00.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.617" level="INFO">VALUE: [3.063899999999897e-05, 2.2028000000000325e-05, 2.113899999999988e-05, 2.2985999999999146e-05, 2.109700000000117e-05, 2.205499999999999e-05, 2.6805000000001272e-05, 2.490299999999973e-05, 2.2999999999998716e-05, 2.016699999999802e-05, 2.3999999999999716e-05, 2.297299999999905e-05, 2.488900000000016e-05, 2.388899999999916e-05, 2.1070000000001504e-05, 2.1070000000001504e-05, 2.490299999999973e-05, 2.297299999999905e-05, 2.106900000000203e-05, 2.208299999999913e-05, 2.015300000000192e-05, 2.009700000000017e-05, 2.3972000000000576e-05, 2.493100000000234e-05, 2.6749999999998997e-05, 2.5805000000000272e-05, 2.484700000000145e-05, 2.59170000000003e-05, 2.10969999999977e-05, 2.3042000000000895e-05, 2.6846999999999982e-05, 2.013899999999888e-05, 2.297299999999905e-05, 2.6820000000000316e-05, 2.1027999999999325e-05, 2.5846999999998982e-05, 2.6778000000001606e-05, 2.4957999999998537e-05, 2.111100000000074e-05, 2.395900000000048e-05, 2.2026999999997382e-05, 2.2013999999997286e-05, 2.4846999999997982e-05, 2.2985999999999146e-05, 2.488900000000016e-05, 2.113899999999988e-05, 2.5957999999999537e-05, 2.3000000000002185e-05, 2.2028000000000325e-05, 2.112500000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.616" endtime="20201030 15:53:00.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.611" endtime="20201030 15:53:00.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.623" endtime="20201030 15:53:00.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.622" endtime="20201030 15:53:00.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.620" endtime="20201030 15:53:00.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.260" endtime="20201030 15:53:00.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.259" endtime="20201030 15:53:00.644"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.652" endtime="20201030 15:53:00.673"></status>
</kw>
<msg timestamp="20201030 15:53:00.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.651" endtime="20201030 15:53:00.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.674" endtime="20201030 15:53:00.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.677" endtime="20201030 15:53:00.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.648" endtime="20201030 15:53:00.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.646" endtime="20201030 15:53:00.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.686" endtime="20201030 15:53:00.972"></status>
</kw>
<msg timestamp="20201030 15:53:00.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.684" endtime="20201030 15:53:00.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022573208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.976" endtime="20201030 15:53:00.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.984" endtime="20201030 15:53:00.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.682" endtime="20201030 15:53:00.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.680" endtime="20201030 15:53:00.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.990" level="INFO">${RESULT} = [{'diff': 8.653000000000827e-06}, {'diff': 2.111100000000074e-05}, {'diff': 2.1041999999998895e-05}, {'diff': 2.394499999999744e-05}, {'diff': 2.4013999999999286e-05}, {'diff': 2.587500000000159e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:00.987" endtime="20201030 15:53:00.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.995" level="INFO">${ACCURACY} = {'diff': [8.653000000000827e-06, 2.111100000000074e-05, 2.1041999999998895e-05, 2.394499999999744e-05, 2.4013999999999286e-05, 2.587500000000159e-05, 2.2012999999997812e-05, 2.2041999999999895e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:53:00.991" endtime="20201030 15:53:00.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.000" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.999" endtime="20201030 15:53:01.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.002" level="INFO">VALUE: [8.653000000000827e-06, 2.111100000000074e-05, 2.1041999999998895e-05, 2.394499999999744e-05, 2.4013999999999286e-05, 2.587500000000159e-05, 2.2012999999997812e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.490299999999973e-05, 2.2069999999999035e-05, 2.3958000000001006e-05, 2.1055999999998465e-05, 2.109700000000117e-05, 2.118100000000206e-05, 2.49169999999993e-05, 2.4929999999999397e-05, 2.6820000000000316e-05, 2.112500000000031e-05, 2.3013999999998286e-05, 2.2041999999999895e-05, 2.3986000000000146e-05, 2.4915999999999827e-05, 2.3042000000000895e-05, 2.2069999999999035e-05, 2.0151999999998976e-05, 2.2985999999999146e-05, 2.2013999999997286e-05, 2.1056000000001934e-05, 2.491700000000277e-05, 2.3028000000001325e-05, 2.5860999999998552e-05, 2.2958000000000006e-05, 2.016699999999802e-05, 2.588900000000116e-05, 2.394500000000091e-05, 2.488900000000016e-05, 2.2069999999999035e-05, 2.20969999999987e-05, 2.5860999999998552e-05, 2.0151999999998976e-05, 2.2971999999999576e-05, 2.2028000000000325e-05, 2.5860999999998552e-05, 2.112500000000031e-05, 2.6819000000000842e-05, 2.2083999999998605e-05, 2.5860999999998552e-05, 2.2028000000000325e-05, 2.493100000000234e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.001" endtime="20201030 15:53:01.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.996" endtime="20201030 15:53:01.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.007" endtime="20201030 15:53:01.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.006" endtime="20201030 15:53:01.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.004" endtime="20201030 15:53:01.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.645" endtime="20201030 15:53:01.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.644" endtime="20201030 15:53:01.028"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.036" endtime="20201030 15:53:01.055"></status>
</kw>
<msg timestamp="20201030 15:53:01.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.035" endtime="20201030 15:53:01.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.056" endtime="20201030 15:53:01.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.058" endtime="20201030 15:53:01.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.032" endtime="20201030 15:53:01.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.030" endtime="20201030 15:53:01.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.067" endtime="20201030 15:53:01.356"></status>
</kw>
<msg timestamp="20201030 15:53:01.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.066" endtime="20201030 15:53:01.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.360" endtime="20201030 15:53:01.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.369" endtime="20201030 15:53:01.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.063" endtime="20201030 15:53:01.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.062" endtime="20201030 15:53:01.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.375" level="INFO">${RESULT} = [{'diff': 3.7304999999997895e-05}, {'diff': 2.013899999999888e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.108299999999813e-05}, {'diff': 2.298699999999862e-05}, {'diff': 2.3026999999998382e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:01.372" endtime="20201030 15:53:01.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.379" level="INFO">${ACCURACY} = {'diff': [3.7304999999997895e-05, 2.013899999999888e-05, 2.208299999999913e-05, 2.108299999999813e-05, 2.298699999999862e-05, 2.3026999999998382e-05, 2.2028000000000325e-05, 2.10830000000016e-05, 2.58...</msg>
<status status="PASS" starttime="20201030 15:53:01.376" endtime="20201030 15:53:01.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.384" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.383" endtime="20201030 15:53:01.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.386" level="INFO">VALUE: [3.7304999999997895e-05, 2.013899999999888e-05, 2.208299999999913e-05, 2.108299999999813e-05, 2.298699999999862e-05, 2.3026999999998382e-05, 2.2028000000000325e-05, 2.10830000000016e-05, 2.5832999999999412e-05, 2.305500000000099e-05, 2.1180000000002586e-05, 2.4929999999999397e-05, 2.012500000000278e-05, 2.10969999999977e-05, 2.3999999999999716e-05, 2.49169999999993e-05, 2.586100000000202e-05, 2.5874999999998122e-05, 2.5846999999998982e-05, 2.588900000000116e-05, 2.208299999999913e-05, 2.5848000000001925e-05, 2.5832999999999412e-05, 2.295899999999948e-05, 2.5805999999999746e-05, 2.395900000000048e-05, 2.4943999999998967e-05, 2.3944000000001436e-05, 2.5818999999999842e-05, 2.4860999999997552e-05, 2.108299999999813e-05, 2.106899999999856e-05, 2.106899999999856e-05, 2.5832999999999412e-05, 2.2041999999999895e-05, 2.3014000000001755e-05, 2.4888000000000687e-05, 2.5848000000001925e-05, 2.2986000000002615e-05, 2.4943999999998967e-05, 2.3999999999999716e-05, 2.011099999999974e-05, 2.5805999999999746e-05, 2.5819999999999316e-05, 2.015299999999845e-05, 2.491700000000277e-05, 2.587500000000159e-05, 2.012499999999931e-05, 2.39169999999983e-05, 2.5832999999999412e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.385" endtime="20201030 15:53:01.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.380" endtime="20201030 15:53:01.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.391" endtime="20201030 15:53:01.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.389" endtime="20201030 15:53:01.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.388" endtime="20201030 15:53:01.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.029" endtime="20201030 15:53:01.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.028" endtime="20201030 15:53:01.412"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.421" endtime="20201030 15:53:01.441"></status>
</kw>
<msg timestamp="20201030 15:53:01.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.419" endtime="20201030 15:53:01.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.443" endtime="20201030 15:53:01.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.445" endtime="20201030 15:53:01.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.416" endtime="20201030 15:53:01.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.414" endtime="20201030 15:53:01.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.454" endtime="20201030 15:53:01.740"></status>
</kw>
<msg timestamp="20201030 15:53:01.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02314675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:01.453" endtime="20201030 15:53:01.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023138042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02314675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:01.745" endtime="20201030 15:53:01.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.753" endtime="20201030 15:53:01.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.450" endtime="20201030 15:53:01.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.448" endtime="20201030 15:53:01.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.759" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 2.2040999999996952e-05}, {'diff': 2.0151999999998976e-05}, {'diff': 2.5929999999996928e-05}, {'diff': 2.6820000000000316e-05}, {'diff': 2.0111999999999214e-0...</msg>
<status status="PASS" starttime="20201030 15:53:01.756" endtime="20201030 15:53:01.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.763" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 2.2040999999996952e-05, 2.0151999999998976e-05, 2.5929999999996928e-05, 2.6820000000000316e-05, 2.0111999999999214e-05, 2.3056000000000465e-05, 2.2999999999998716e-05,...</msg>
<status status="PASS" starttime="20201030 15:53:01.760" endtime="20201030 15:53:01.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.768" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.767" endtime="20201030 15:53:01.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.770" level="INFO">VALUE: [8.707999999999633e-06, 2.2040999999996952e-05, 2.0151999999998976e-05, 2.5929999999996928e-05, 2.6820000000000316e-05, 2.0111999999999214e-05, 2.3056000000000465e-05, 2.2999999999998716e-05, 2.2999999999998716e-05, 2.4957999999998537e-05, 2.488900000000016e-05, 2.2013999999997286e-05, 2.3958000000001006e-05, 2.4902000000000257e-05, 2.3958000000001006e-05, 2.393100000000134e-05, 2.4915999999999827e-05, 2.2000000000001185e-05, 2.588900000000116e-05, 2.3083999999999605e-05, 2.2028000000000325e-05, 2.3041999999997426e-05, 2.393100000000134e-05, 2.011099999999974e-05, 2.6806000000000746e-05, 2.3943999999997967e-05, 2.49169999999993e-05, 2.2055999999999465e-05, 2.588899999999769e-05, 2.6790999999998233e-05, 2.2999999999998716e-05, 2.305500000000099e-05, 2.1070000000001504e-05, 2.1084000000001074e-05, 2.10830000000016e-05, 2.3042000000000895e-05, 2.5860999999998552e-05, 2.011099999999974e-05, 2.3028000000001325e-05, 2.20969999999987e-05, 2.395899999999701e-05, 2.1070000000001504e-05, 2.3014000000001755e-05, 2.5943999999999967e-05, 2.6833000000000412e-05, 2.011100000000321e-05, 2.6846999999999982e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.6833000000000412e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.769" endtime="20201030 15:53:01.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.764" endtime="20201030 15:53:01.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.776" endtime="20201030 15:53:01.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.775" endtime="20201030 15:53:01.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.773" endtime="20201030 15:53:01.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.413" endtime="20201030 15:53:01.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.412" endtime="20201030 15:53:01.797"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.805" endtime="20201030 15:53:01.823"></status>
</kw>
<msg timestamp="20201030 15:53:01.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.804" endtime="20201030 15:53:01.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.825" endtime="20201030 15:53:01.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.827" endtime="20201030 15:53:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.801" endtime="20201030 15:53:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.799" endtime="20201030 15:53:01.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.840" endtime="20201030 15:53:02.126"></status>
</kw>
<msg timestamp="20201030 15:53:02.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019975514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.838" endtime="20201030 15:53:02.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019975514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020010972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.130" endtime="20201030 15:53:02.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.138" endtime="20201030 15:53:02.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.835" endtime="20201030 15:53:02.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.832" endtime="20201030 15:53:02.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.145" level="INFO">${RESULT} = [{'diff': 3.545799999999863e-05}, {'diff': 2.587500000000159e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.586100000000202e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:02.141" endtime="20201030 15:53:02.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.150" level="INFO">${ACCURACY} = {'diff': [3.545799999999863e-05, 2.587500000000159e-05, 2.3027999999997856e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.586100000000202e-05, 2.4013999999999286e-05, 2.5848000000001925e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:53:02.146" endtime="20201030 15:53:02.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.154" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.153" endtime="20201030 15:53:02.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.156" level="INFO">VALUE: [3.545799999999863e-05, 2.587500000000159e-05, 2.3027999999997856e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.586100000000202e-05, 2.4013999999999286e-05, 2.5848000000001925e-05, 2.493100000000234e-05, 2.011099999999974e-05, 2.3930000000001866e-05, 2.016699999999802e-05, 2.015299999999845e-05, 2.5848000000001925e-05, 2.487500000000059e-05, 2.3972000000000576e-05, 2.6846999999999982e-05, 2.3028000000001325e-05, 2.6818999999997373e-05, 2.488900000000016e-05, 2.5832999999999412e-05, 2.111100000000074e-05, 2.4944000000002436e-05, 2.49169999999993e-05, 2.204100000000042e-05, 2.5847999999998456e-05, 2.5860999999998552e-05, 2.3958000000001006e-05, 2.6860999999999552e-05, 2.49169999999993e-05, 2.2971999999999576e-05, 2.394500000000091e-05, 2.4915999999999827e-05, 2.6846999999999982e-05, 2.011099999999974e-05, 2.2041999999999895e-05, 2.013899999999888e-05, 2.018100000000106e-05, 2.5902000000001257e-05, 2.3958000000001006e-05, 2.2000000000001185e-05, 2.4943999999998967e-05, 2.112500000000031e-05, 2.491700000000277e-05, 2.2999999999998716e-05, 2.10830000000016e-05, 2.2028000000000325e-05, 2.4832999999998412e-05, 2.109700000000117e-05, 2.59170000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.155" endtime="20201030 15:53:02.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.150" endtime="20201030 15:53:02.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.161" endtime="20201030 15:53:02.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.160" endtime="20201030 15:53:02.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.159" endtime="20201030 15:53:02.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.798" endtime="20201030 15:53:02.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.797" endtime="20201030 15:53:02.182"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.191" endtime="20201030 15:53:02.210"></status>
</kw>
<msg timestamp="20201030 15:53:02.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.189" endtime="20201030 15:53:02.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.211" endtime="20201030 15:53:02.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.214" endtime="20201030 15:53:02.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.187" endtime="20201030 15:53:02.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.185" endtime="20201030 15:53:02.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.223" endtime="20201030 15:53:02.509"></status>
</kw>
<msg timestamp="20201030 15:53:02.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021574444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.221" endtime="20201030 15:53:02.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021574444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.513" endtime="20201030 15:53:02.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.522" endtime="20201030 15:53:02.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.218" endtime="20201030 15:53:02.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.217" endtime="20201030 15:53:02.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.528" level="INFO">${RESULT} = [{'diff': 2.2930000000000866e-05}, {'diff': 2.491700000000277e-05}, {'diff': 2.588900000000116e-05}, {'diff': 2.3943999999997967e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.10830000000016e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:02.525" endtime="20201030 15:53:02.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.532" level="INFO">${ACCURACY} = {'diff': [2.2930000000000866e-05, 2.491700000000277e-05, 2.588900000000116e-05, 2.3943999999997967e-05, 2.590300000000073e-05, 2.10830000000016e-05, 2.490299999999973e-05, 2.018100000000106e-05, 2.205...</msg>
<status status="PASS" starttime="20201030 15:53:02.529" endtime="20201030 15:53:02.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.537" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.536" endtime="20201030 15:53:02.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.539" level="INFO">VALUE: [2.2930000000000866e-05, 2.491700000000277e-05, 2.588900000000116e-05, 2.3943999999997967e-05, 2.590300000000073e-05, 2.10830000000016e-05, 2.490299999999973e-05, 2.018100000000106e-05, 2.205499999999999e-05, 2.4902000000000257e-05, 2.490299999999973e-05, 2.493099999999887e-05, 2.211100000000174e-05, 2.2040999999996952e-05, 2.3958000000001006e-05, 2.2028000000000325e-05, 2.011099999999974e-05, 2.4971999999998107e-05, 2.3999999999999716e-05, 2.015299999999845e-05, 2.2985999999999146e-05, 2.5832999999999412e-05, 2.6846999999999982e-05, 2.1055999999998465e-05, 2.488900000000016e-05, 2.3000000000002185e-05, 2.6819000000000842e-05, 2.20969999999987e-05, 2.2041999999999895e-05, 2.1083999999997605e-05, 2.49169999999993e-05, 2.59170000000003e-05, 2.1084000000001074e-05, 2.3929999999998397e-05, 2.109700000000117e-05, 2.587500000000159e-05, 2.3958000000001006e-05, 2.0028000000001794e-05, 2.4972000000001576e-05, 2.2041999999999895e-05, 2.113899999999988e-05, 2.5846999999998982e-05, 2.012499999999931e-05, 2.6833000000000412e-05, 2.015299999999845e-05, 2.590300000000073e-05, 2.112500000000031e-05, 2.0151999999998976e-05, 2.111100000000074e-05, 2.2014000000000755e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.538" endtime="20201030 15:53:02.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.533" endtime="20201030 15:53:02.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.544" endtime="20201030 15:53:02.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.543" endtime="20201030 15:53:02.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.542" endtime="20201030 15:53:02.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.183" endtime="20201030 15:53:02.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.182" endtime="20201030 15:53:02.565"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.574" endtime="20201030 15:53:02.596"></status>
</kw>
<msg timestamp="20201030 15:53:02.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.572" endtime="20201030 15:53:02.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.598" endtime="20201030 15:53:02.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.600" endtime="20201030 15:53:02.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.569" endtime="20201030 15:53:02.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.567" endtime="20201030 15:53:02.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.609" endtime="20201030 15:53:02.895"></status>
</kw>
<msg timestamp="20201030 15:53:02.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025623347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.608" endtime="20201030 15:53:02.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025623347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025641528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.899" endtime="20201030 15:53:02.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.908" endtime="20201030 15:53:02.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.605" endtime="20201030 15:53:02.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.603" endtime="20201030 15:53:02.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.914" level="INFO">${RESULT} = [{'diff': 1.818099999999906e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.491700000000277e-05}, {'diff': 2.588900000000116e-05}, {'diff': 2.4944000000002436e-05}, {'diff': 2.016700000000149e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:02.911" endtime="20201030 15:53:02.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.918" level="INFO">${ACCURACY} = {'diff': [1.818099999999906e-05, 2.2014000000000755e-05, 2.491700000000277e-05, 2.588900000000116e-05, 2.4944000000002436e-05, 2.016700000000149e-05, 2.59170000000003e-05, 2.5888000000001687e-05, 2.49...</msg>
<status status="PASS" starttime="20201030 15:53:02.915" endtime="20201030 15:53:02.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.923" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.922" endtime="20201030 15:53:02.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.926" level="INFO">VALUE: [1.818099999999906e-05, 2.2014000000000755e-05, 2.491700000000277e-05, 2.588900000000116e-05, 2.4944000000002436e-05, 2.016700000000149e-05, 2.59170000000003e-05, 2.5888000000001687e-05, 2.491700000000277e-05, 2.1084000000001074e-05, 2.495899999999801e-05, 2.3999999999999716e-05, 2.3958000000001006e-05, 2.2013999999997286e-05, 2.3958000000001006e-05, 2.0235999999999865e-05, 2.2028000000000325e-05, 2.3929999999998397e-05, 2.111100000000074e-05, 2.0165999999998546e-05, 2.6833000000000412e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.2014000000000755e-05, 2.3028000000001325e-05, 2.3013999999998286e-05, 2.2042000000003364e-05, 2.1083999999997605e-05, 2.3986000000000146e-05, 2.1098000000000644e-05, 2.2041999999999895e-05, 2.29030000000012e-05, 2.393099999999787e-05, 2.593099999999987e-05, 2.111100000000074e-05, 2.016700000000149e-05, 2.2985999999999146e-05, 2.009700000000017e-05, 2.4915999999999827e-05, 2.4971999999998107e-05, 2.6846999999999982e-05, 2.386100000000002e-05, 2.208299999999913e-05, 2.3041999999997426e-05, 2.20830000000026e-05, 2.2041999999999895e-05, 2.588900000000116e-05, 2.106899999999856e-05, 2.4041999999998426e-05, 2.4929999999999397e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.924" endtime="20201030 15:53:02.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.919" endtime="20201030 15:53:02.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.931" endtime="20201030 15:53:02.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.930" endtime="20201030 15:53:02.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.929" endtime="20201030 15:53:02.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.566" endtime="20201030 15:53:02.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.565" endtime="20201030 15:53:02.952"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.961" endtime="20201030 15:53:02.980"></status>
</kw>
<msg timestamp="20201030 15:53:02.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.959" endtime="20201030 15:53:02.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.981" endtime="20201030 15:53:02.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.984" endtime="20201030 15:53:02.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.957" endtime="20201030 15:53:02.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.955" endtime="20201030 15:53:02.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.993" endtime="20201030 15:53:03.278"></status>
</kw>
<msg timestamp="20201030 15:53:03.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.991" endtime="20201030 15:53:03.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.282" endtime="20201030 15:53:03.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.290" endtime="20201030 15:53:03.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.988" endtime="20201030 15:53:03.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.987" endtime="20201030 15:53:03.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.297" level="INFO">${RESULT} = [{'diff': 1.0583000000001508e-05}, {'diff': 2.4915999999999827e-05}, {'diff': 2.2958000000000006e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.106900000000203e-05}, {'diff': 2.012500000000278e-05...</msg>
<status status="PASS" starttime="20201030 15:53:03.294" endtime="20201030 15:53:03.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.302" level="INFO">${ACCURACY} = {'diff': [1.0583000000001508e-05, 2.4915999999999827e-05, 2.2958000000000006e-05, 2.2999999999998716e-05, 2.106900000000203e-05, 2.012500000000278e-05, 2.3943999999997967e-05, 2.4943999999998967e-05, ...</msg>
<status status="PASS" starttime="20201030 15:53:03.298" endtime="20201030 15:53:03.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.306" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.305" endtime="20201030 15:53:03.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.309" level="INFO">VALUE: [1.0583000000001508e-05, 2.4915999999999827e-05, 2.2958000000000006e-05, 2.2999999999998716e-05, 2.106900000000203e-05, 2.012500000000278e-05, 2.3943999999997967e-05, 2.4943999999998967e-05, 2.2041999999999895e-05, 2.6805999999997276e-05, 2.2985999999999146e-05, 2.013899999999888e-05, 2.1069999999998035e-05, 2.6777999999998137e-05, 2.016700000000149e-05, 2.3041999999997426e-05, 2.016700000000149e-05, 2.4958000000002006e-05, 2.111100000000074e-05, 2.1999999999997716e-05, 2.2055999999999465e-05, 2.6806000000000746e-05, 2.2999999999998716e-05, 2.5833999999998886e-05, 2.2985999999999146e-05, 2.494500000000191e-05, 2.590299999999726e-05, 2.6790999999998233e-05, 2.5805999999999746e-05, 2.5846999999998982e-05, 2.5819999999999316e-05, 2.394500000000091e-05, 2.5846999999998982e-05, 2.3944000000001436e-05, 2.2985999999999146e-05, 2.2028000000000325e-05, 2.0137999999999406e-05, 2.106900000000203e-05, 2.588900000000116e-05, 2.493099999999887e-05, 2.2083999999998605e-05, 2.5832999999999412e-05, 2.4916000000003297e-05, 2.6777999999998137e-05, 2.202700000000085e-05, 2.495900000000148e-05, 2.2041999999999895e-05, 2.3943999999997967e-05, 2.2083999999998605e-05, 2.018100000000106e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.307" endtime="20201030 15:53:03.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.303" endtime="20201030 15:53:03.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.314" endtime="20201030 15:53:03.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.312" endtime="20201030 15:53:03.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.311" endtime="20201030 15:53:03.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.953" endtime="20201030 15:53:03.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.953" endtime="20201030 15:53:03.334"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.343" endtime="20201030 15:53:03.366"></status>
</kw>
<msg timestamp="20201030 15:53:03.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.341" endtime="20201030 15:53:03.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.368" endtime="20201030 15:53:03.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.370" endtime="20201030 15:53:03.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.339" endtime="20201030 15:53:03.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.337" endtime="20201030 15:53:03.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.379" endtime="20201030 15:53:03.671"></status>
</kw>
<msg timestamp="20201030 15:53:03.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024743583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024802, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:03.378" endtime="20201030 15:53:03.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024743583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024802, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:03.680" endtime="20201030 15:53:03.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.699" endtime="20201030 15:53:03.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.375" endtime="20201030 15:53:03.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.374" endtime="20201030 15:53:03.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.713" level="INFO">${RESULT} = [{'diff': 5.841700000000158e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.256900000000231e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.1708000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:03.706" endtime="20201030 15:53:03.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.722" level="INFO">${ACCURACY} = {'diff': [5.841700000000158e-05, 5.637500000000087e-05, 5.2693999999998964e-05, 5.256900000000231e-05, 5.26669999999993e-05, 5.1708000000001e-05, 5.265299999999973e-05, 5.554099999999923e-05, 5.640300...</msg>
<status status="PASS" starttime="20201030 15:53:03.715" endtime="20201030 15:53:03.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.731" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.729" endtime="20201030 15:53:03.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.737" level="INFO">VALUE: [5.841700000000158e-05, 5.637500000000087e-05, 5.2693999999998964e-05, 5.256900000000231e-05, 5.26669999999993e-05, 5.1708000000001e-05, 5.265299999999973e-05, 5.554099999999923e-05, 5.640300000000001e-05, 5.074999999999871e-05, 5.25279999999996e-05, 5.1721999999997104e-05, 5.06530000000012e-05, 5.555500000000227e-05, 5.355599999999974e-05, 5.6514000000000564e-05, 5.55549999999988e-05, 5.6471999999998385e-05, 5.4471999999999854e-05, 5.263900000000016e-05, 5.7333999999999163e-05, 5.55549999999988e-05, 5.462499999999912e-05, 5.445899999999976e-05, 5.6500000000000994e-05, 5.255599999999874e-05, 5.55280000000026e-05, 5.5443999999998245e-05, 5.457000000000031e-05, 5.4485999999999424e-05, 5.738899999999797e-05, 5.643099999999915e-05, 5.169400000000143e-05, 5.7278000000000884e-05, 5.258400000000135e-05, 5.554200000000217e-05, 5.637500000000087e-05, 5.6458000000002284e-05, 5.162499999999959e-05, 5.55280000000026e-05, 5.5499999999999994e-05, 5.263900000000016e-05, 5.3527999999997133e-05, 5.5499999999999994e-05, 5.641700000000305e-05, 5.555500000000227e-05, 5.544500000000119e-05, 5.455599999999727e-05, 5.743100000000015e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.734" endtime="20201030 15:53:03.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.723" endtime="20201030 15:53:03.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.821" endtime="20201030 15:53:03.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.819" endtime="20201030 15:53:03.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.818" endtime="20201030 15:53:03.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.335" endtime="20201030 15:53:03.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.335" endtime="20201030 15:53:03.842"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.850" endtime="20201030 15:53:03.873"></status>
</kw>
<msg timestamp="20201030 15:53:03.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.849" endtime="20201030 15:53:03.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.875" endtime="20201030 15:53:03.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.877" endtime="20201030 15:53:03.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.846" endtime="20201030 15:53:03.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.844" endtime="20201030 15:53:03.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.886" endtime="20201030 15:53:04.172"></status>
</kw>
<msg timestamp="20201030 15:53:04.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02475625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:03.885" endtime="20201030 15:53:04.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02475625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024822264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:04.177" endtime="20201030 15:53:04.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.185" endtime="20201030 15:53:04.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.882" endtime="20201030 15:53:04.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.880" endtime="20201030 15:53:04.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.191" level="INFO">${RESULT} = [{'diff': 6.601399999999966e-05}, {'diff': 5.638899999999697e-05}, {'diff': 5.6485999999997955e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.361100000000202e-05}, {'diff': 5.068100000000034e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:04.188" endtime="20201030 15:53:04.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.195" level="INFO">${ACCURACY} = {'diff': [6.601399999999966e-05, 5.638899999999697e-05, 5.6485999999997955e-05, 5.5499999999999994e-05, 5.361100000000202e-05, 5.068100000000034e-05, 5.738900000000144e-05, 5.5527999999999134e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 15:53:04.192" endtime="20201030 15:53:04.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.200" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.199" endtime="20201030 15:53:04.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.202" level="INFO">VALUE: [6.601399999999966e-05, 5.638899999999697e-05, 5.6485999999997955e-05, 5.5499999999999994e-05, 5.361100000000202e-05, 5.068100000000034e-05, 5.738900000000144e-05, 5.5527999999999134e-05, 5.4471999999999854e-05, 5.462499999999912e-05, 5.5499999999999994e-05, 5.447299999999933e-05, 5.45280000000016e-05, 5.645899999999829e-05, 5.552699999999966e-05, 5.265299999999973e-05, 5.358299999999941e-05, 5.5513999999999564e-05, 5.162500000000306e-05, 5.16530000000022e-05, 5.7415999999997636e-05, 5.072199999999957e-05, 5.262500000000059e-05, 5.262500000000059e-05, 5.074999999999871e-05, 5.356999999999931e-05, 5.5486000000000424e-05, 5.651300000000109e-05, 5.644500000000219e-05, 5.068100000000034e-05, 5.1666000000002293e-05, 5.5486000000000424e-05, 5.1679999999998394e-05, 5.455600000000074e-05, 5.351400000000103e-05, 5.358299999999941e-05, 5.5472000000000854e-05, 5.647299999999786e-05, 5.5499999999999994e-05, 5.45549999999978e-05, 5.365299999999726e-05, 5.451400000000203e-05, 5.3680000000000394e-05, 5.358399999999888e-05, 5.170900000000048e-05, 5.358299999999941e-05, 5.265299999999973e-05, 5.554200000000217e-05, 5.354200000000017e-05, 5.5499999999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.201" endtime="20201030 15:53:04.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.196" endtime="20201030 15:53:04.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.208" endtime="20201030 15:53:04.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.207" endtime="20201030 15:53:04.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.205" endtime="20201030 15:53:04.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.843" endtime="20201030 15:53:04.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.842" endtime="20201030 15:53:04.229"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.237" endtime="20201030 15:53:04.262"></status>
</kw>
<msg timestamp="20201030 15:53:04.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.236" endtime="20201030 15:53:04.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.263" endtime="20201030 15:53:04.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.266" endtime="20201030 15:53:04.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.233" endtime="20201030 15:53:04.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.231" endtime="20201030 15:53:04.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.275" endtime="20201030 15:53:04.576"></status>
</kw>
<msg timestamp="20201030 15:53:04.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024607764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.273" endtime="20201030 15:53:04.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024607764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024646958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.581" endtime="20201030 15:53:04.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.589" endtime="20201030 15:53:04.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.271" endtime="20201030 15:53:04.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.269" endtime="20201030 15:53:04.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.595" level="INFO">${RESULT} = [{'diff': 3.919399999999934e-05}, {'diff': 5.451400000000203e-05}, {'diff': 5.465299999999826e-05}, {'diff': 5.159799999999992e-05}, {'diff': 5.5444000000001714e-05}, {'diff': 5.6443999999999245e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:04.592" endtime="20201030 15:53:04.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.600" level="INFO">${ACCURACY} = {'diff': [3.919399999999934e-05, 5.451400000000203e-05, 5.465299999999826e-05, 5.159799999999992e-05, 5.5444000000001714e-05, 5.6443999999999245e-05, 5.3485999999998424e-05, 5.173600000000014e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 15:53:04.596" endtime="20201030 15:53:04.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.605" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.604" endtime="20201030 15:53:04.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.607" level="INFO">VALUE: [3.919399999999934e-05, 5.451400000000203e-05, 5.465299999999826e-05, 5.159799999999992e-05, 5.5444000000001714e-05, 5.6443999999999245e-05, 5.3485999999998424e-05, 5.173600000000014e-05, 5.6457999999998815e-05, 5.075000000000218e-05, 5.738899999999797e-05, 5.447299999999933e-05, 5.169500000000091e-05, 5.451400000000203e-05, 5.640300000000001e-05, 5.6528000000000134e-05, 5.5486000000000424e-05, 5.162500000000306e-05, 5.36670000000003e-05, 5.1679999999998394e-05, 5.638900000000044e-05, 5.1737000000003086e-05, 5.5486000000000424e-05, 5.261100000000102e-05, 5.4499999999998994e-05, 5.1708000000001e-05, 5.6402000000000535e-05, 5.4513999999998564e-05, 5.076299999999881e-05, 5.63610000000013e-05, 5.737500000000187e-05, 5.5541999999998704e-05, 5.451299999999909e-05, 5.7306000000000024e-05, 5.5499999999999994e-05, 5.0708e-05, 5.25279999999996e-05, 5.35410000000007e-05, 5.2693999999998964e-05, 5.454099999999823e-05, 5.6401999999997066e-05, 5.269499999999844e-05, 5.45280000000016e-05, 5.262499999999712e-05, 5.16530000000022e-05, 5.4485999999999424e-05, 5.082000000000003e-05, 5.7402000000001535e-05, 5.172200000000057e-05, 5.162499999999959e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.606" endtime="20201030 15:53:04.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.601" endtime="20201030 15:53:04.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.612" endtime="20201030 15:53:04.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.611" endtime="20201030 15:53:04.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.609" endtime="20201030 15:53:04.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.230" endtime="20201030 15:53:04.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.229" endtime="20201030 15:53:04.633"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.642" endtime="20201030 15:53:04.663"></status>
</kw>
<msg timestamp="20201030 15:53:04.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.640" endtime="20201030 15:53:04.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.664" endtime="20201030 15:53:04.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.667" endtime="20201030 15:53:04.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.637" endtime="20201030 15:53:04.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.635" endtime="20201030 15:53:04.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.676" endtime="20201030 15:53:04.963"></status>
</kw>
<msg timestamp="20201030 15:53:04.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.674" endtime="20201030 15:53:04.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.967" endtime="20201030 15:53:04.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.976" endtime="20201030 15:53:04.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.671" endtime="20201030 15:53:04.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.670" endtime="20201030 15:53:04.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.982" level="INFO">${RESULT} = [{'diff': 6.406899999999993e-05}, {'diff': 5.3666000000000824e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.076399999999828e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:04.979" endtime="20201030 15:53:04.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.987" level="INFO">${ACCURACY} = {'diff': [6.406899999999993e-05, 5.3666000000000824e-05, 5.740300000000101e-05, 5.5486000000000424e-05, 5.6500000000000994e-05, 5.076399999999828e-05, 5.6443999999999245e-05, 5.165299999999873e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:53:04.983" endtime="20201030 15:53:04.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.991" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.990" endtime="20201030 15:53:04.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.994" level="INFO">VALUE: [6.406899999999993e-05, 5.3666000000000824e-05, 5.740300000000101e-05, 5.5486000000000424e-05, 5.6500000000000994e-05, 5.076399999999828e-05, 5.6443999999999245e-05, 5.165299999999873e-05, 5.5527999999999134e-05, 5.361099999999855e-05, 5.644499999999872e-05, 5.169499999999744e-05, 4.979199999999989e-05, 5.454200000000117e-05, 5.358299999999941e-05, 5.076400000000175e-05, 5.6443999999999245e-05, 5.5486000000000424e-05, 5.363900000000116e-05, 5.556900000000184e-05, 5.070899999999948e-05, 5.4527999999998134e-05, 5.2665999999999824e-05, 5.076399999999828e-05, 5.7416000000001105e-05, 5.070899999999948e-05, 5.6443999999999245e-05, 5.6472000000001854e-05, 5.363900000000116e-05, 5.163899999999916e-05, 5.454200000000117e-05, 5.265299999999973e-05, 5.26669999999993e-05, 5.457000000000031e-05, 5.265299999999973e-05, 5.45280000000016e-05, 5.16669999999983e-05, 5.552699999999966e-05, 5.362500000000159e-05, 5.5499999999999994e-05, 5.073599999999914e-05, 5.174999999999971e-05, 5.654100000000023e-05, 5.076400000000175e-05, 5.266700000000277e-05, 5.265299999999973e-05, 5.16530000000022e-05, 5.2652000000000254e-05, 5.261099999999755e-05, 5.168100000000134e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.992" endtime="20201030 15:53:04.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.987" endtime="20201030 15:53:04.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.998" endtime="20201030 15:53:05.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.997" endtime="20201030 15:53:05.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.996" endtime="20201030 15:53:05.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.634" endtime="20201030 15:53:05.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.633" endtime="20201030 15:53:05.019"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.028" endtime="20201030 15:53:05.049"></status>
</kw>
<msg timestamp="20201030 15:53:05.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.027" endtime="20201030 15:53:05.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.051" endtime="20201030 15:53:05.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.053" endtime="20201030 15:53:05.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.024" endtime="20201030 15:53:05.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.022" endtime="20201030 15:53:05.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.062" endtime="20201030 15:53:05.349"></status>
</kw>
<msg timestamp="20201030 15:53:05.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.061" endtime="20201030 15:53:05.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.353" endtime="20201030 15:53:05.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.361" endtime="20201030 15:53:05.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.058" endtime="20201030 15:53:05.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.056" endtime="20201030 15:53:05.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.367" level="INFO">${RESULT} = [{'diff': 5.9291999999998984e-05}, {'diff': 5.077800000000132e-05}, {'diff': 5.0708e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.266700000000277e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5...</msg>
<status status="PASS" starttime="20201030 15:53:05.364" endtime="20201030 15:53:05.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.372" level="INFO">${ACCURACY} = {'diff': [5.9291999999998984e-05, 5.077800000000132e-05, 5.0708e-05, 5.740300000000101e-05, 5.266700000000277e-05, 5.2679999999999394e-05, 5.362499999999812e-05, 5.452700000000213e-05, 5.3596999999998...</msg>
<status status="PASS" starttime="20201030 15:53:05.368" endtime="20201030 15:53:05.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.376" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.375" endtime="20201030 15:53:05.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.379" level="INFO">VALUE: [5.9291999999998984e-05, 5.077800000000132e-05, 5.0708e-05, 5.740300000000101e-05, 5.266700000000277e-05, 5.2679999999999394e-05, 5.362499999999812e-05, 5.452700000000213e-05, 5.359699999999898e-05, 5.5555999999998273e-05, 5.258299999999841e-05, 5.36670000000003e-05, 5.169400000000143e-05, 5.6500000000000994e-05, 5.641699999999958e-05, 5.261099999999755e-05, 5.655500000000327e-05, 5.356999999999931e-05, 5.351400000000103e-05, 5.1708000000001e-05, 5.45410000000017e-05, 5.262500000000059e-05, 5.173600000000014e-05, 5.457000000000031e-05, 5.5444000000001714e-05, 5.359800000000192e-05, 5.6500000000000994e-05, 5.458300000000041e-05, 5.6500000000000994e-05, 5.1708000000001e-05, 5.162499999999959e-05, 5.5486000000000424e-05, 5.638900000000044e-05, 5.265299999999973e-05, 5.076400000000175e-05, 5.273600000000114e-05, 5.173600000000014e-05, 5.640300000000001e-05, 5.6416000000000105e-05, 5.1708000000001e-05, 5.457000000000031e-05, 5.074999999999871e-05, 5.554099999999923e-05, 5.168000000000186e-05, 5.6513999999997094e-05, 5.362499999999812e-05, 5.362499999999812e-05, 5.7457999999999815e-05, 5.544500000000119e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.377" endtime="20201030 15:53:05.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.372" endtime="20201030 15:53:05.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.384" endtime="20201030 15:53:05.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.383" endtime="20201030 15:53:05.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.382" endtime="20201030 15:53:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.020" endtime="20201030 15:53:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.020" endtime="20201030 15:53:05.405"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.414" endtime="20201030 15:53:05.436"></status>
</kw>
<msg timestamp="20201030 15:53:05.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.412" endtime="20201030 15:53:05.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.437" endtime="20201030 15:53:05.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.440" endtime="20201030 15:53:05.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.410" endtime="20201030 15:53:05.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.408" endtime="20201030 15:53:05.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.449" endtime="20201030 15:53:05.734"></status>
</kw>
<msg timestamp="20201030 15:53:05.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023933333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.447" endtime="20201030 15:53:05.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023933333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023994528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.738" endtime="20201030 15:53:05.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.747" endtime="20201030 15:53:05.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.445" endtime="20201030 15:53:05.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.443" endtime="20201030 15:53:05.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.753" level="INFO">${RESULT} = [{'diff': 6.1195e-05}, {'diff': 5.363900000000116e-05}, {'diff': 4.981899999999956e-05}, {'diff': 5.73610000000023e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.458300000000041e-05}, {'diff': 5.45...</msg>
<status status="PASS" starttime="20201030 15:53:05.750" endtime="20201030 15:53:05.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.758" level="INFO">${ACCURACY} = {'diff': [6.1195e-05, 5.363900000000116e-05, 4.981899999999956e-05, 5.73610000000023e-05, 5.362500000000159e-05, 5.458300000000041e-05, 5.459699999999998e-05, 5.177799999999885e-05, 5.458300000000041e...</msg>
<status status="PASS" starttime="20201030 15:53:05.754" endtime="20201030 15:53:05.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.763" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.762" endtime="20201030 15:53:05.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.765" level="INFO">VALUE: [6.1195e-05, 5.363900000000116e-05, 4.981899999999956e-05, 5.73610000000023e-05, 5.362500000000159e-05, 5.458300000000041e-05, 5.459699999999998e-05, 5.177799999999885e-05, 5.458300000000041e-05, 5.158300000000088e-05, 5.747300000000233e-05, 5.176400000000275e-05, 5.174999999999971e-05, 5.461099999999955e-05, 5.181900000000156e-05, 5.4541999999997703e-05, 5.55549999999988e-05, 5.559700000000098e-05, 5.076299999999881e-05, 5.444500000000019e-05, 5.5555999999998273e-05, 5.173600000000014e-05, 5.073599999999914e-05, 5.259800000000092e-05, 5.458399999999988e-05, 5.35280000000006e-05, 5.558299999999794e-05, 5.254200000000264e-05, 5.073599999999914e-05, 5.162499999999959e-05, 5.558300000000141e-05, 5.462499999999912e-05, 5.258299999999841e-05, 5.170900000000048e-05, 5.5513999999999564e-05, 5.068100000000034e-05, 5.6514000000000564e-05, 5.16530000000022e-05, 5.5555999999998273e-05, 5.554099999999923e-05, 5.459699999999998e-05, 5.162500000000306e-05, 5.6486000000001424e-05, 5.451400000000203e-05, 5.26669999999993e-05, 5.354099999999723e-05, 5.076400000000175e-05, 5.363900000000116e-05, 5.641699999999958e-05, 5.2693999999998964e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.764" endtime="20201030 15:53:05.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.759" endtime="20201030 15:53:05.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.770" endtime="20201030 15:53:05.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.768" endtime="20201030 15:53:05.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.767" endtime="20201030 15:53:05.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.406" endtime="20201030 15:53:05.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.405" endtime="20201030 15:53:05.791"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.799" endtime="20201030 15:53:05.817"></status>
</kw>
<msg timestamp="20201030 15:53:05.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.798" endtime="20201030 15:53:05.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.819" endtime="20201030 15:53:05.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.821" endtime="20201030 15:53:05.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.795" endtime="20201030 15:53:05.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.793" endtime="20201030 15:53:05.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.830" endtime="20201030 15:53:06.118"></status>
</kw>
<msg timestamp="20201030 15:53:06.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.829" endtime="20201030 15:53:06.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.122" endtime="20201030 15:53:06.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.131" endtime="20201030 15:53:06.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.826" endtime="20201030 15:53:06.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.825" endtime="20201030 15:53:06.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.137" level="INFO">${RESULT} = [{'diff': 4.2069000000002216e-05}, {'diff': 5.256999999999831e-05}, {'diff': 5.1708000000001e-05}, {'diff': 5.4471999999999854e-05}, {'diff': 5.35549999999968e-05}, {'diff': 5.552699999999966e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:06.134" endtime="20201030 15:53:06.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.142" level="INFO">${ACCURACY} = {'diff': [4.2069000000002216e-05, 5.256999999999831e-05, 5.1708000000001e-05, 5.4471999999999854e-05, 5.35549999999968e-05, 5.552699999999966e-05, 5.169500000000091e-05, 5.355599999999974e-05, 5.55700...</msg>
<status status="PASS" starttime="20201030 15:53:06.138" endtime="20201030 15:53:06.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.146" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.145" endtime="20201030 15:53:06.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.149" level="INFO">VALUE: [4.2069000000002216e-05, 5.256999999999831e-05, 5.1708000000001e-05, 5.4471999999999854e-05, 5.35549999999968e-05, 5.552699999999966e-05, 5.169500000000091e-05, 5.355599999999974e-05, 5.557000000000131e-05, 4.970899999999848e-05, 5.644499999999872e-05, 5.362499999999812e-05, 5.068000000000086e-05, 5.4527999999998134e-05, 5.4651999999998785e-05, 5.163899999999916e-05, 5.544500000000119e-05, 5.1666000000002293e-05, 5.265299999999973e-05, 5.5527999999999134e-05, 5.1708000000001e-05, 5.638900000000044e-05, 5.35280000000006e-05, 5.365300000000073e-05, 5.5444000000001714e-05, 5.455600000000074e-05, 5.165299999999873e-05, 5.640300000000001e-05, 5.645900000000176e-05, 5.638900000000044e-05, 5.640300000000001e-05, 5.552699999999966e-05, 5.354200000000017e-05, 5.638899999999697e-05, 5.358299999999941e-05, 5.26669999999993e-05, 5.356999999999931e-05, 5.261100000000102e-05, 5.072200000000304e-05, 5.4513999999998564e-05, 5.074999999999871e-05, 5.734699999999926e-05, 5.4499999999998994e-05, 5.5499999999999994e-05, 5.2665999999999824e-05, 5.259800000000092e-05, 5.2679999999999394e-05, 5.5499999999999994e-05, 5.072199999999957e-05, 5.45280000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.148" endtime="20201030 15:53:06.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.143" endtime="20201030 15:53:06.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.154" endtime="20201030 15:53:06.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.153" endtime="20201030 15:53:06.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.152" endtime="20201030 15:53:06.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.792" endtime="20201030 15:53:06.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.791" endtime="20201030 15:53:06.175"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.184" endtime="20201030 15:53:06.204"></status>
</kw>
<msg timestamp="20201030 15:53:06.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.183" endtime="20201030 15:53:06.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.206" endtime="20201030 15:53:06.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.208" endtime="20201030 15:53:06.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.180" endtime="20201030 15:53:06.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.178" endtime="20201030 15:53:06.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.218" endtime="20201030 15:53:06.504"></status>
</kw>
<msg timestamp="20201030 15:53:06.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.216" endtime="20201030 15:53:06.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.508" endtime="20201030 15:53:06.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.517" endtime="20201030 15:53:06.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.214" endtime="20201030 15:53:06.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.212" endtime="20201030 15:53:06.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.525" level="INFO">${RESULT} = [{'diff': 5.7472000000002854e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.35280000000006e-05}, {'diff': 5.655600000000274e-05}, {'diff': 5.362499999999812e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:06.520" endtime="20201030 15:53:06.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.530" level="INFO">${ACCURACY} = {'diff': [5.7472000000002854e-05, 5.162499999999959e-05, 5.2707999999998534e-05, 5.35280000000006e-05, 5.655600000000274e-05, 5.362499999999812e-05, 5.554200000000217e-05, 5.652700000000066e-05, 5.170...</msg>
<status status="PASS" starttime="20201030 15:53:06.526" endtime="20201030 15:53:06.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.538" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.536" endtime="20201030 15:53:06.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.541" level="INFO">VALUE: [5.7472000000002854e-05, 5.162499999999959e-05, 5.2707999999998534e-05, 5.35280000000006e-05, 5.655600000000274e-05, 5.362499999999812e-05, 5.554200000000217e-05, 5.652700000000066e-05, 5.1708000000001e-05, 5.45280000000016e-05, 5.556899999999837e-05, 5.2679999999999394e-05, 5.6429999999999675e-05, 5.556999999999784e-05, 5.457000000000031e-05, 5.163899999999916e-05, 5.363899999999769e-05, 5.36670000000003e-05, 5.6401999999997066e-05, 5.075000000000218e-05, 5.162499999999959e-05, 5.261099999999755e-05, 5.451400000000203e-05, 5.079200000000089e-05, 5.6499999999997524e-05, 5.083300000000013e-05, 5.450000000000246e-05, 5.5499999999999994e-05, 5.6485999999997955e-05, 5.073599999999914e-05, 5.356899999999984e-05, 5.551300000000009e-05, 5.643100000000262e-05, 5.077799999999785e-05, 5.7457999999999815e-05, 5.2666000000003294e-05, 5.5499999999999994e-05, 5.356899999999984e-05, 5.361100000000202e-05, 5.456899999999737e-05, 5.458399999999988e-05, 5.163900000000263e-05, 5.076400000000175e-05, 5.163899999999916e-05, 5.262500000000059e-05, 5.075000000000218e-05, 5.6485999999997955e-05, 5.165299999999873e-05, 5.163899999999916e-05, 5.555600000000174e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.539" endtime="20201030 15:53:06.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.532" endtime="20201030 15:53:06.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.550" endtime="20201030 15:53:06.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.547" endtime="20201030 15:53:06.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.546" endtime="20201030 15:53:06.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.176" endtime="20201030 15:53:06.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.175" endtime="20201030 15:53:06.572"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.581" endtime="20201030 15:53:06.602"></status>
</kw>
<msg timestamp="20201030 15:53:06.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.579" endtime="20201030 15:53:06.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.604" endtime="20201030 15:53:06.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.606" endtime="20201030 15:53:06.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.576" endtime="20201030 15:53:06.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.574" endtime="20201030 15:53:06.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.616" endtime="20201030 15:53:06.920"></status>
</kw>
<msg timestamp="20201030 15:53:06.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.614" endtime="20201030 15:53:06.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023217569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.925" endtime="20201030 15:53:06.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.933" endtime="20201030 15:53:06.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.611" endtime="20201030 15:53:06.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.610" endtime="20201030 15:53:06.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.944" level="INFO">${RESULT} = [{'diff': 6.609800000000055e-05}, {'diff': 5.06530000000012e-05}, {'diff': 5.457000000000031e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.158399999999688e-05}, {'diff': 5.074999999999871e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:06.940" endtime="20201030 15:53:06.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.949" level="INFO">${ACCURACY} = {'diff': [6.609800000000055e-05, 5.06530000000012e-05, 5.457000000000031e-05, 5.354200000000017e-05, 5.158399999999688e-05, 5.074999999999871e-05, 5.165299999999873e-05, 5.361099999999855e-05, 5.54310...</msg>
<status status="PASS" starttime="20201030 15:53:06.945" endtime="20201030 15:53:06.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.954" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.953" endtime="20201030 15:53:06.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.956" level="INFO">VALUE: [6.609800000000055e-05, 5.06530000000012e-05, 5.457000000000031e-05, 5.354200000000017e-05, 5.158399999999688e-05, 5.074999999999871e-05, 5.165299999999873e-05, 5.361099999999855e-05, 5.543100000000162e-05, 5.637500000000087e-05, 5.268099999999887e-05, 5.544499999999772e-05, 5.5486000000000424e-05, 5.162499999999959e-05, 5.172200000000057e-05, 5.172300000000005e-05, 5.452700000000213e-05, 5.55549999999988e-05, 5.162499999999959e-05, 5.255599999999874e-05, 5.363899999999769e-05, 5.255500000000274e-05, 5.736200000000177e-05, 5.268099999999887e-05, 5.450000000000246e-05, 5.456900000000084e-05, 5.351400000000103e-05, 5.462499999999912e-05, 5.168100000000134e-05, 5.543099999999815e-05, 5.362499999999812e-05, 5.256900000000231e-05, 5.4527999999998134e-05, 5.359699999999898e-05, 5.255599999999874e-05, 5.162499999999959e-05, 5.358299999999941e-05, 5.44869999999989e-05, 5.265299999999973e-05, 5.256999999999831e-05, 5.45549999999978e-05, 5.162499999999959e-05, 5.6486000000001424e-05, 5.4499999999998994e-05, 5.268099999999887e-05, 5.5527999999999134e-05, 5.256900000000231e-05, 5.458300000000041e-05, 5.354200000000017e-05, 5.358299999999941e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.955" endtime="20201030 15:53:06.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.950" endtime="20201030 15:53:06.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.961" endtime="20201030 15:53:06.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.960" endtime="20201030 15:53:06.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.959" endtime="20201030 15:53:06.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.573" endtime="20201030 15:53:06.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.572" endtime="20201030 15:53:06.982"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.991" endtime="20201030 15:53:07.014"></status>
</kw>
<msg timestamp="20201030 15:53:07.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.989" endtime="20201030 15:53:07.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.015" endtime="20201030 15:53:07.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.018" endtime="20201030 15:53:07.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.987" endtime="20201030 15:53:07.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.985" endtime="20201030 15:53:07.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.027" endtime="20201030 15:53:07.313"></status>
</kw>
<msg timestamp="20201030 15:53:07.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.025" endtime="20201030 15:53:07.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024476542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024538653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.317" endtime="20201030 15:53:07.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.325" endtime="20201030 15:53:07.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.023" endtime="20201030 15:53:07.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.021" endtime="20201030 15:53:07.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.332" level="INFO">${RESULT} = [{'diff': 6.211100000000011e-05}, {'diff': 5.45280000000016e-05}, {'diff': 5.459799999999945e-05}, {'diff': 5.258300000000188e-05}, {'diff': 5.182000000000103e-05}, {'diff': 5.0693999999996964e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:07.328" endtime="20201030 15:53:07.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.337" level="INFO">${ACCURACY} = {'diff': [6.211100000000011e-05, 5.45280000000016e-05, 5.459799999999945e-05, 5.258300000000188e-05, 5.182000000000103e-05, 5.0693999999996964e-05, 5.4485999999999424e-05, 5.258400000000135e-05, 5.258...</msg>
<status status="PASS" starttime="20201030 15:53:07.333" endtime="20201030 15:53:07.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.341" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.340" endtime="20201030 15:53:07.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.344" level="INFO">VALUE: [6.211100000000011e-05, 5.45280000000016e-05, 5.459799999999945e-05, 5.258300000000188e-05, 5.182000000000103e-05, 5.0693999999996964e-05, 5.4485999999999424e-05, 5.258400000000135e-05, 5.258300000000188e-05, 5.168100000000134e-05, 5.350000000000146e-05, 5.544499999999772e-05, 5.4665999999998355e-05, 5.068100000000034e-05, 5.354200000000017e-05, 5.1707999999997534e-05, 5.450000000000246e-05, 5.456900000000084e-05, 5.354200000000017e-05, 5.641699999999958e-05, 5.268099999999887e-05, 5.351400000000103e-05, 5.736099999999883e-05, 5.5513999999999564e-05, 5.259800000000092e-05, 5.5458000000001284e-05, 5.6514000000000564e-05, 5.5457999999997815e-05, 5.4485999999999424e-05, 5.555600000000174e-05, 5.640300000000001e-05, 5.076399999999828e-05, 5.4458000000000284e-05, 5.35419999999967e-05, 5.5472000000000854e-05, 5.363900000000116e-05, 5.35280000000006e-05, 5.159799999999992e-05, 5.072199999999957e-05, 5.362499999999812e-05, 5.163899999999916e-05, 5.162499999999959e-05, 5.35280000000006e-05, 5.259700000000145e-05, 5.1708000000001e-05, 5.172200000000057e-05, 5.450000000000246e-05, 5.174999999999971e-05, 5.4513999999998564e-05, 5.076399999999828e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.342" endtime="20201030 15:53:07.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.337" endtime="20201030 15:53:07.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.349" endtime="20201030 15:53:07.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.347" endtime="20201030 15:53:07.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.346" endtime="20201030 15:53:07.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.983" endtime="20201030 15:53:07.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.983" endtime="20201030 15:53:07.369"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.378" endtime="20201030 15:53:07.400"></status>
</kw>
<msg timestamp="20201030 15:53:07.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.376" endtime="20201030 15:53:07.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.402" endtime="20201030 15:53:07.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.404" endtime="20201030 15:53:07.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.374" endtime="20201030 15:53:07.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.372" endtime="20201030 15:53:07.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.413" endtime="20201030 15:53:07.709"></status>
</kw>
<msg timestamp="20201030 15:53:07.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024145722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024210694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.412" endtime="20201030 15:53:07.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024145722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024210694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.713" endtime="20201030 15:53:07.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.722" endtime="20201030 15:53:07.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.409" endtime="20201030 15:53:07.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.408" endtime="20201030 15:53:07.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.728" level="INFO">${RESULT} = [{'diff': 6.497199999999995e-05}, {'diff': 4.970899999999848e-05}, {'diff': 5.1665999999998824e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.358299999999941e-05}, {'diff': 5.5499999999999994e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:07.725" endtime="20201030 15:53:07.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.732" level="INFO">${ACCURACY} = {'diff': [6.497199999999995e-05, 4.970899999999848e-05, 5.1665999999998824e-05, 5.265299999999973e-05, 5.358299999999941e-05, 5.5499999999999994e-05, 5.16530000000022e-05, 5.262500000000059e-05, 5.359...</msg>
<status status="PASS" starttime="20201030 15:53:07.729" endtime="20201030 15:53:07.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.737" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.736" endtime="20201030 15:53:07.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.739" level="INFO">VALUE: [6.497199999999995e-05, 4.970899999999848e-05, 5.1665999999998824e-05, 5.265299999999973e-05, 5.358299999999941e-05, 5.5499999999999994e-05, 5.16530000000022e-05, 5.262500000000059e-05, 5.359699999999898e-05, 5.5513999999999564e-05, 5.261100000000102e-05, 5.5527999999999134e-05, 5.5486000000000424e-05, 5.258299999999841e-05, 5.361099999999855e-05, 5.076399999999828e-05, 5.356999999999931e-05, 5.169400000000143e-05, 5.261200000000049e-05, 5.0708e-05, 5.452700000000213e-05, 5.16669999999983e-05, 5.455500000000127e-05, 5.544500000000119e-05, 5.168100000000134e-05, 5.5513999999999564e-05, 5.0708e-05, 5.2652000000000254e-05, 5.5513999999999564e-05, 5.263900000000016e-05, 5.640300000000001e-05, 5.6443999999999245e-05, 5.5499999999999994e-05, 5.454099999999823e-05, 5.45280000000016e-05, 5.6443999999999245e-05, 5.262500000000059e-05, 5.4499999999998994e-05, 5.173600000000014e-05, 5.066700000000077e-05, 5.362500000000159e-05, 5.0679999999997394e-05, 5.457000000000031e-05, 5.072299999999905e-05, 5.256899999999884e-05, 5.359700000000245e-05, 5.1665999999998824e-05, 5.454200000000117e-05, 5.55549999999988e-05, 5.5499999999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.738" endtime="20201030 15:53:07.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.733" endtime="20201030 15:53:07.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.745" endtime="20201030 15:53:07.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.743" endtime="20201030 15:53:07.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.742" endtime="20201030 15:53:07.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.370" endtime="20201030 15:53:07.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.370" endtime="20201030 15:53:07.765"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.774" endtime="20201030 15:53:07.792"></status>
</kw>
<msg timestamp="20201030 15:53:07.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.772" endtime="20201030 15:53:07.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.793" endtime="20201030 15:53:07.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.796" endtime="20201030 15:53:07.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.770" endtime="20201030 15:53:07.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.768" endtime="20201030 15:53:07.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.805" endtime="20201030 15:53:08.091"></status>
</kw>
<msg timestamp="20201030 15:53:08.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019881681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.803" endtime="20201030 15:53:08.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019881681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.095" endtime="20201030 15:53:08.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.103" endtime="20201030 15:53:08.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.801" endtime="20201030 15:53:08.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.799" endtime="20201030 15:53:08.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.110" level="INFO">${RESULT} = [{'diff': 6.218000000000196e-05}, {'diff': 5.358400000000235e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.2638000000000684e-05}, {'diff': 5.177799999999885e-05}, {'diff': 5.165299999999873e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:08.106" endtime="20201030 15:53:08.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.115" level="INFO">${ACCURACY} = {'diff': [6.218000000000196e-05, 5.358400000000235e-05, 5.6472000000001854e-05, 5.2638000000000684e-05, 5.177799999999885e-05, 5.165299999999873e-05, 5.073600000000261e-05, 5.273600000000114e-05, 5.06...</msg>
<status status="PASS" starttime="20201030 15:53:08.110" endtime="20201030 15:53:08.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.119" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.118" endtime="20201030 15:53:08.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.121" level="INFO">VALUE: [6.218000000000196e-05, 5.358400000000235e-05, 5.6472000000001854e-05, 5.2638000000000684e-05, 5.177799999999885e-05, 5.165299999999873e-05, 5.073600000000261e-05, 5.273600000000114e-05, 5.069499999999991e-05, 5.6472000000001854e-05, 5.080600000000046e-05, 5.5499999999999994e-05, 5.355500000000027e-05, 5.2707999999998534e-05, 5.5472000000000854e-05, 5.169499999999744e-05, 5.265299999999973e-05, 5.165299999999873e-05, 5.073600000000261e-05, 5.077699999999838e-05, 5.163899999999916e-05, 5.1693999999997964e-05, 5.6555999999999274e-05, 5.061099999999902e-05, 5.5527999999999134e-05, 5.458399999999988e-05, 5.737500000000187e-05, 5.6486000000001424e-05, 5.459699999999998e-05, 5.068100000000034e-05, 5.6457999999998815e-05, 5.559700000000098e-05, 5.2707999999998534e-05, 5.738899999999797e-05, 5.5527999999999134e-05, 5.263900000000016e-05, 5.1721999999997104e-05, 5.359800000000192e-05, 5.6458000000002284e-05, 5.6472000000001854e-05, 5.556999999999784e-05, 5.6528000000000134e-05, 5.4430000000001144e-05, 5.362499999999812e-05, 5.738900000000144e-05, 5.6514000000000564e-05, 5.540299999999901e-05, 5.169500000000091e-05, 5.08339999999996e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.120" endtime="20201030 15:53:08.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.115" endtime="20201030 15:53:08.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.126" endtime="20201030 15:53:08.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.125" endtime="20201030 15:53:08.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.124" endtime="20201030 15:53:08.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.766" endtime="20201030 15:53:08.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.766" endtime="20201030 15:53:08.147"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.156" endtime="20201030 15:53:08.174"></status>
</kw>
<msg timestamp="20201030 15:53:08.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.154" endtime="20201030 15:53:08.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.175" endtime="20201030 15:53:08.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.177" endtime="20201030 15:53:08.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.152" endtime="20201030 15:53:08.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.149" endtime="20201030 15:53:08.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.187" endtime="20201030 15:53:08.473"></status>
</kw>
<msg timestamp="20201030 15:53:08.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.185" endtime="20201030 15:53:08.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.477" endtime="20201030 15:53:08.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.486" endtime="20201030 15:53:08.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.183" endtime="20201030 15:53:08.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.181" endtime="20201030 15:53:08.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.492" level="INFO">${RESULT} = [{'diff': 6.016699999999986e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.5458000000001284e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:08.489" endtime="20201030 15:53:08.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.496" level="INFO">${ACCURACY} = {'diff': [6.016699999999986e-05, 5.459699999999998e-05, 5.643099999999915e-05, 5.6472000000001854e-05, 5.6486000000001424e-05, 5.5458000000001284e-05, 5.5527999999999134e-05, 5.269499999999844e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:53:08.493" endtime="20201030 15:53:08.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.501" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.499" endtime="20201030 15:53:08.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.503" level="INFO">VALUE: [6.016699999999986e-05, 5.459699999999998e-05, 5.643099999999915e-05, 5.6472000000001854e-05, 5.6486000000001424e-05, 5.5458000000001284e-05, 5.5527999999999134e-05, 5.269499999999844e-05, 5.3485999999998424e-05, 5.551400000000303e-05, 5.461100000000302e-05, 5.45280000000016e-05, 5.08469999999997e-05, 5.159700000000045e-05, 5.268099999999887e-05, 5.544500000000119e-05, 5.457000000000031e-05, 5.255499999999927e-05, 5.5541999999998704e-05, 5.450000000000246e-05, 5.074999999999871e-05, 5.451400000000203e-05, 5.0708e-05, 5.6457999999998815e-05, 5.258300000000188e-05, 5.5457999999997815e-05, 5.6472000000001854e-05, 5.368100000000334e-05, 5.068100000000034e-05, 5.361099999999855e-05, 5.362500000000159e-05, 5.256900000000231e-05, 5.263900000000016e-05, 5.169500000000091e-05, 5.450000000000246e-05, 5.652700000000066e-05, 5.55549999999988e-05, 5.35280000000006e-05, 5.2680000000002863e-05, 5.258300000000188e-05, 5.5513999999999564e-05, 5.7486000000002424e-05, 5.173600000000014e-05, 5.163899999999916e-05, 5.6514000000000564e-05, 5.168000000000186e-05, 5.2680000000002863e-05, 5.6402000000000535e-05, 5.2680000000002863e-05, 5.259699999999798e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.502" endtime="20201030 15:53:08.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.497" endtime="20201030 15:53:08.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.508" endtime="20201030 15:53:08.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.506" endtime="20201030 15:53:08.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.505" endtime="20201030 15:53:08.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.148" endtime="20201030 15:53:08.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.147" endtime="20201030 15:53:08.529"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.537" endtime="20201030 15:53:08.563"></status>
</kw>
<msg timestamp="20201030 15:53:08.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.536" endtime="20201030 15:53:08.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.564" endtime="20201030 15:53:08.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.567" endtime="20201030 15:53:08.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.533" endtime="20201030 15:53:08.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.531" endtime="20201030 15:53:08.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.575" endtime="20201030 15:53:08.859"></status>
</kw>
<msg timestamp="20201030 15:53:08.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025443139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.574" endtime="20201030 15:53:08.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025443139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.864" endtime="20201030 15:53:08.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.872" endtime="20201030 15:53:08.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.571" endtime="20201030 15:53:08.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.570" endtime="20201030 15:53:08.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.879" level="INFO">${RESULT} = [{'diff': 4.023599999999905e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.543099999999815e-05}, {'diff': 5.7444000000000245e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:08.876" endtime="20201030 15:53:08.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.883" level="INFO">${ACCURACY} = {'diff': [4.023599999999905e-05, 5.6514000000000564e-05, 5.643099999999915e-05, 5.361099999999855e-05, 5.543099999999815e-05, 5.7444000000000245e-05, 5.350000000000146e-05, 5.5471999999997385e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 15:53:08.880" endtime="20201030 15:53:08.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.887" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.886" endtime="20201030 15:53:08.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.890" level="INFO">VALUE: [4.023599999999905e-05, 5.6514000000000564e-05, 5.643099999999915e-05, 5.361099999999855e-05, 5.543099999999815e-05, 5.7444000000000245e-05, 5.350000000000146e-05, 5.5471999999997385e-05, 5.069499999999991e-05, 5.555600000000174e-05, 5.4471999999999854e-05, 5.6514000000000564e-05, 5.44730000000028e-05, 5.458399999999988e-05, 5.068100000000034e-05, 5.256899999999884e-05, 5.1707999999997534e-05, 5.734699999999926e-05, 4.975000000000118e-05, 5.4485999999999424e-05, 5.066700000000077e-05, 5.6443999999999245e-05, 5.254199999999917e-05, 5.6514000000000564e-05, 5.162499999999959e-05, 5.455600000000074e-05, 5.4471999999999854e-05, 5.654100000000023e-05, 5.258300000000188e-05, 5.640300000000001e-05, 5.55280000000026e-05, 5.162499999999959e-05, 5.457000000000031e-05, 5.73610000000023e-05, 5.456900000000084e-05, 5.4499999999998994e-05, 5.355599999999974e-05, 5.6458000000002284e-05, 5.5444000000001714e-05, 5.7457999999999815e-05, 5.16530000000022e-05, 5.172300000000005e-05, 5.4527999999998134e-05, 5.6514000000000564e-05, 5.5444000000001714e-05, 5.359699999999898e-05, 5.6457999999998815e-05, 5.640300000000001e-05, 5.351400000000103e-05, 5.647300000000133e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.888" endtime="20201030 15:53:08.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.884" endtime="20201030 15:53:08.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.896" endtime="20201030 15:53:08.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.894" endtime="20201030 15:53:08.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.893" endtime="20201030 15:53:08.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.529" endtime="20201030 15:53:08.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.529" endtime="20201030 15:53:08.916"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.925" endtime="20201030 15:53:08.948"></status>
</kw>
<msg timestamp="20201030 15:53:08.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.923" endtime="20201030 15:53:08.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.950" endtime="20201030 15:53:08.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.952" endtime="20201030 15:53:08.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.921" endtime="20201030 15:53:08.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.919" endtime="20201030 15:53:08.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.961" endtime="20201030 15:53:09.247"></status>
</kw>
<msg timestamp="20201030 15:53:09.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024483444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.959" endtime="20201030 15:53:09.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024429889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024483444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.252" endtime="20201030 15:53:09.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.260" endtime="20201030 15:53:09.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.957" endtime="20201030 15:53:09.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.955" endtime="20201030 15:53:09.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.266" level="INFO">${RESULT} = [{'diff': 5.355500000000027e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.1679999999998394e-05}, {'diff': 5.4527999999998134e-05}, {'diff': 5.651300000000109e-05}, {'diff': 5.1708000000001e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:09.263" endtime="20201030 15:53:09.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.271" level="INFO">${ACCURACY} = {'diff': [5.355500000000027e-05, 5.5499999999999994e-05, 5.1679999999998394e-05, 5.4527999999998134e-05, 5.651300000000109e-05, 5.1708000000001e-05, 5.361100000000202e-05, 5.4513999999998564e-05, 5.26...</msg>
<status status="PASS" starttime="20201030 15:53:09.267" endtime="20201030 15:53:09.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.276" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.275" endtime="20201030 15:53:09.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.278" level="INFO">VALUE: [5.355500000000027e-05, 5.5499999999999994e-05, 5.1679999999998394e-05, 5.4527999999998134e-05, 5.651300000000109e-05, 5.1708000000001e-05, 5.361100000000202e-05, 5.4513999999998564e-05, 5.262499999999712e-05, 5.172200000000057e-05, 5.070899999999948e-05, 5.262500000000059e-05, 5.170900000000048e-05, 5.462500000000259e-05, 5.4541999999997703e-05, 5.072199999999957e-05, 5.361100000000202e-05, 5.355599999999974e-05, 5.358299999999941e-05, 5.1708000000001e-05, 5.458300000000041e-05, 5.068100000000034e-05, 5.358299999999941e-05, 5.261100000000102e-05, 5.263900000000016e-05, 5.2708000000002e-05, 5.361099999999855e-05, 5.358299999999941e-05, 5.6514000000000564e-05, 5.261100000000102e-05, 5.454099999999823e-05, 5.645900000000176e-05, 5.740300000000101e-05, 5.172200000000057e-05, 5.356999999999931e-05, 5.6458000000002284e-05, 5.258299999999841e-05, 5.083300000000013e-05, 5.355500000000027e-05, 5.6457999999998815e-05, 5.5541999999998704e-05, 5.074999999999871e-05, 5.644499999999872e-05, 5.2652000000000254e-05, 5.552699999999966e-05, 5.355500000000027e-05, 5.64870000000009e-05, 5.554200000000217e-05, 5.163899999999916e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.277" endtime="20201030 15:53:09.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.272" endtime="20201030 15:53:09.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.283" endtime="20201030 15:53:09.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.281" endtime="20201030 15:53:09.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.280" endtime="20201030 15:53:09.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.917" endtime="20201030 15:53:09.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.917" endtime="20201030 15:53:09.304"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.312" endtime="20201030 15:53:09.335"></status>
</kw>
<msg timestamp="20201030 15:53:09.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.311" endtime="20201030 15:53:09.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.336" endtime="20201030 15:53:09.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.339" endtime="20201030 15:53:09.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.308" endtime="20201030 15:53:09.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.306" endtime="20201030 15:53:09.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.347" endtime="20201030 15:53:09.633"></status>
</kw>
<msg timestamp="20201030 15:53:09.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.346" endtime="20201030 15:53:09.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023865583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.637" endtime="20201030 15:53:09.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.646" endtime="20201030 15:53:09.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.343" endtime="20201030 15:53:09.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.342" endtime="20201030 15:53:09.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.652" level="INFO">${RESULT} = [{'diff': 4.4945000000001095e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.5485999999996954e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.5472000000000854e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:09.649" endtime="20201030 15:53:09.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.656" level="INFO">${ACCURACY} = {'diff': [4.4945000000001095e-05, 5.362500000000159e-05, 5.5486000000000424e-05, 5.5485999999996954e-05, 5.26669999999993e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.641700000000305e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:53:09.653" endtime="20201030 15:53:09.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.661" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.660" endtime="20201030 15:53:09.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.663" level="INFO">VALUE: [4.4945000000001095e-05, 5.362500000000159e-05, 5.5486000000000424e-05, 5.5485999999996954e-05, 5.26669999999993e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.641700000000305e-05, 5.5499999999999994e-05, 5.640300000000001e-05, 5.5527999999999134e-05, 5.165299999999873e-05, 5.363900000000116e-05, 5.162499999999959e-05, 5.2708000000002e-05, 5.355599999999974e-05, 5.077700000000185e-05, 5.736099999999883e-05, 5.077699999999838e-05, 5.558300000000141e-05, 5.261100000000102e-05, 5.361199999999802e-05, 5.068000000000086e-05, 5.455600000000074e-05, 5.358299999999941e-05, 5.555600000000174e-05, 5.355599999999974e-05, 5.55280000000026e-05, 5.456899999999737e-05, 5.65549999999998e-05, 5.6429999999999675e-05, 5.2693999999998964e-05, 5.35410000000007e-05, 5.455599999999727e-05, 5.4499999999998994e-05, 5.26669999999993e-05, 5.163899999999916e-05, 5.356899999999984e-05, 5.26669999999993e-05, 5.458399999999988e-05, 5.163899999999916e-05, 5.6416000000000105e-05, 5.165299999999873e-05, 5.5458000000001284e-05, 5.455600000000074e-05, 5.545899999999729e-05, 5.455599999999727e-05, 5.261099999999755e-05, 5.158300000000088e-05, 5.6499999999997524e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.662" endtime="20201030 15:53:09.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.657" endtime="20201030 15:53:09.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.668" endtime="20201030 15:53:09.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.666" endtime="20201030 15:53:09.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.665" endtime="20201030 15:53:09.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.305" endtime="20201030 15:53:09.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.304" endtime="20201030 15:53:09.689"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.697" endtime="20201030 15:53:09.721"></status>
</kw>
<msg timestamp="20201030 15:53:09.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.696" endtime="20201030 15:53:09.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.723" endtime="20201030 15:53:09.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.725" endtime="20201030 15:53:09.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.693" endtime="20201030 15:53:09.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.691" endtime="20201030 15:53:09.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.734" endtime="20201030 15:53:10.020"></status>
</kw>
<msg timestamp="20201030 15:53:10.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025859319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025902375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.733" endtime="20201030 15:53:10.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025859319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025902375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.024" endtime="20201030 15:53:10.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.032" endtime="20201030 15:53:10.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.730" endtime="20201030 15:53:10.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.728" endtime="20201030 15:53:10.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.039" level="INFO">${RESULT} = [{'diff': 4.305599999999965e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.256899999999884e-05}, {'diff': 5.4527999999998134e-05}, {'diff': 5.080600000000046e-05}, {'diff': 5.255600000000221e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:10.036" endtime="20201030 15:53:10.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.043" level="INFO">${ACCURACY} = {'diff': [4.305599999999965e-05, 5.5458000000001284e-05, 5.256899999999884e-05, 5.4527999999998134e-05, 5.080600000000046e-05, 5.255600000000221e-05, 5.4499999999998994e-05, 5.075000000000218e-05, 5.2...</msg>
<status status="PASS" starttime="20201030 15:53:10.040" endtime="20201030 15:53:10.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.048" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.047" endtime="20201030 15:53:10.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.050" level="INFO">VALUE: [4.305599999999965e-05, 5.5458000000001284e-05, 5.256899999999884e-05, 5.4527999999998134e-05, 5.080600000000046e-05, 5.255600000000221e-05, 5.4499999999998994e-05, 5.075000000000218e-05, 5.270899999999801e-05, 5.45410000000017e-05, 5.2652000000000254e-05, 5.169400000000143e-05, 5.355599999999974e-05, 5.356900000000331e-05, 5.6472000000001854e-05, 5.6472000000001854e-05, 5.258299999999841e-05, 5.5471999999997385e-05, 5.1693999999997964e-05, 5.259699999999798e-05, 5.4499999999998994e-05, 5.358299999999941e-05, 5.5513999999999564e-05, 5.259700000000145e-05, 5.45549999999978e-05, 5.644499999999872e-05, 5.068100000000034e-05, 5.461099999999955e-05, 5.1693999999997964e-05, 5.068000000000086e-05, 5.740299999999754e-05, 5.170900000000048e-05, 5.5486000000000424e-05, 5.162499999999959e-05, 5.644500000000219e-05, 5.45549999999978e-05, 5.654100000000023e-05, 5.074999999999871e-05, 5.359700000000245e-05, 5.747300000000233e-05, 5.5458000000001284e-05, 5.640300000000001e-05, 5.265299999999973e-05, 5.457000000000031e-05, 5.5486000000000424e-05, 5.361099999999855e-05, 5.163900000000263e-05, 5.5541999999998704e-05, 5.4485999999999424e-05, 5.634700000000173e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.049" endtime="20201030 15:53:10.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.044" endtime="20201030 15:53:10.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.056" endtime="20201030 15:53:10.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.054" endtime="20201030 15:53:10.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.053" endtime="20201030 15:53:10.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.690" endtime="20201030 15:53:10.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.689" endtime="20201030 15:53:10.077"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.085" endtime="20201030 15:53:10.108"></status>
</kw>
<msg timestamp="20201030 15:53:10.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.084" endtime="20201030 15:53:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.109" endtime="20201030 15:53:10.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.112" endtime="20201030 15:53:10.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.081" endtime="20201030 15:53:10.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.079" endtime="20201030 15:53:10.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.121" endtime="20201030 15:53:10.407"></status>
</kw>
<msg timestamp="20201030 15:53:10.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024833319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.119" endtime="20201030 15:53:10.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024833319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.411" endtime="20201030 15:53:10.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.419" endtime="20201030 15:53:10.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.117" endtime="20201030 15:53:10.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.115" endtime="20201030 15:53:10.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.425" level="INFO">${RESULT} = [{'diff': 6.89030000000021e-05}, {'diff': 5.066700000000077e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.455500000000127e-05}, {'diff': 5.2735999999997674e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:10.422" endtime="20201030 15:53:10.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.430" level="INFO">${ACCURACY} = {'diff': [6.89030000000021e-05, 5.066700000000077e-05, 5.6472000000001854e-05, 5.4499999999998994e-05, 5.455500000000127e-05, 5.2735999999997674e-05, 5.459799999999945e-05, 5.076400000000175e-05, 5.08...</msg>
<status status="PASS" starttime="20201030 15:53:10.426" endtime="20201030 15:53:10.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.435" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.434" endtime="20201030 15:53:10.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.438" level="INFO">VALUE: [6.89030000000021e-05, 5.066700000000077e-05, 5.6472000000001854e-05, 5.4499999999998994e-05, 5.455500000000127e-05, 5.2735999999997674e-05, 5.459799999999945e-05, 5.076400000000175e-05, 5.080500000000099e-05, 5.168000000000186e-05, 5.359799999999845e-05, 5.557000000000131e-05, 5.358399999999888e-05, 5.359699999999898e-05, 5.2679999999999394e-05, 5.262499999999712e-05, 5.168099999999787e-05, 5.355599999999974e-05, 5.358299999999941e-05, 5.4637999999999215e-05, 5.5499999999999994e-05, 5.4485999999999424e-05, 5.461099999999955e-05, 5.16669999999983e-05, 5.644500000000219e-05, 5.6513999999997094e-05, 5.075000000000218e-05, 5.083300000000013e-05, 5.259700000000145e-05, 5.457000000000031e-05, 5.3651999999997785e-05, 5.163900000000263e-05, 5.452700000000213e-05, 5.6514000000000564e-05, 5.451400000000203e-05, 5.362500000000159e-05, 5.362499999999812e-05, 5.5486000000000424e-05, 5.075000000000218e-05, 5.459699999999998e-05, 5.451400000000203e-05, 5.361100000000202e-05, 5.45280000000016e-05, 5.558400000000088e-05, 5.6429999999999675e-05, 5.1708000000001e-05, 5.6402000000000535e-05, 5.169400000000143e-05, 5.459699999999998e-05, 5.5485999999996954e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.436" endtime="20201030 15:53:10.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.431" endtime="20201030 15:53:10.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.442" endtime="20201030 15:53:10.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.441" endtime="20201030 15:53:10.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.440" endtime="20201030 15:53:10.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.077" endtime="20201030 15:53:10.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.077" endtime="20201030 15:53:10.463"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.472" endtime="20201030 15:53:10.499"></status>
</kw>
<msg timestamp="20201030 15:53:10.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.470" endtime="20201030 15:53:10.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.500" endtime="20201030 15:53:10.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.503" endtime="20201030 15:53:10.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.468" endtime="20201030 15:53:10.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.466" endtime="20201030 15:53:10.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.512" endtime="20201030 15:53:10.799"></status>
</kw>
<msg timestamp="20201030 15:53:10.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02512325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:10.510" endtime="20201030 15:53:10.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025072486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02512325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:10.803" endtime="20201030 15:53:10.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.811" endtime="20201030 15:53:10.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.508" endtime="20201030 15:53:10.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.506" endtime="20201030 15:53:10.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.818" level="INFO">${RESULT} = [{'diff': 5.076399999999828e-05}, {'diff': 5.079200000000089e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.16530000000022e-05}, {'diff': 5.651300000000109e-05}, {'diff': 5.6472000000001854e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:10.814" endtime="20201030 15:53:10.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.822" level="INFO">${ACCURACY} = {'diff': [5.076399999999828e-05, 5.079200000000089e-05, 5.5499999999999994e-05, 5.16530000000022e-05, 5.651300000000109e-05, 5.6472000000001854e-05, 5.6416000000000105e-05, 5.362499999999812e-05, 5.54...</msg>
<status status="PASS" starttime="20201030 15:53:10.819" endtime="20201030 15:53:10.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.826" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.825" endtime="20201030 15:53:10.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.829" level="INFO">VALUE: [5.076399999999828e-05, 5.079200000000089e-05, 5.5499999999999994e-05, 5.16530000000022e-05, 5.651300000000109e-05, 5.6472000000001854e-05, 5.6416000000000105e-05, 5.362499999999812e-05, 5.5499999999999994e-05, 5.45549999999978e-05, 5.2665999999999824e-05, 5.5513999999999564e-05, 5.5457999999997815e-05, 5.454200000000117e-05, 5.262500000000059e-05, 5.459799999999945e-05, 5.552699999999966e-05, 5.458399999999988e-05, 5.161100000000002e-05, 5.1665999999998824e-05, 5.265299999999973e-05, 5.554200000000217e-05, 5.6499999999997524e-05, 5.5486000000000424e-05, 5.356899999999984e-05, 5.272200000000157e-05, 5.6528000000000134e-05, 5.180599999999799e-05, 5.462499999999912e-05, 5.262500000000059e-05, 5.1666000000002293e-05, 5.177699999999938e-05, 5.262500000000059e-05, 5.263900000000016e-05, 5.651299999999762e-05, 5.168099999999787e-05, 5.5499999999999994e-05, 5.6513999999997094e-05, 5.358399999999888e-05, 5.0708e-05, 5.261200000000049e-05, 5.644499999999872e-05, 5.5527999999999134e-05, 5.077699999999838e-05, 5.2652000000000254e-05, 5.265299999999973e-05, 5.5541999999998704e-05, 5.6471999999998385e-05, 5.2679999999999394e-05, 5.26669999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.827" endtime="20201030 15:53:10.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.823" endtime="20201030 15:53:10.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.834" endtime="20201030 15:53:10.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.832" endtime="20201030 15:53:10.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.831" endtime="20201030 15:53:10.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.464" endtime="20201030 15:53:10.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.464" endtime="20201030 15:53:10.854"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.863" endtime="20201030 15:53:10.888"></status>
</kw>
<msg timestamp="20201030 15:53:10.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.861" endtime="20201030 15:53:10.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.889" endtime="20201030 15:53:10.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.892" endtime="20201030 15:53:10.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.859" endtime="20201030 15:53:10.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.857" endtime="20201030 15:53:10.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.900" endtime="20201030 15:53:11.187"></status>
</kw>
<msg timestamp="20201030 15:53:11.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025838806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025892514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.899" endtime="20201030 15:53:11.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025838806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025892514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.191" endtime="20201030 15:53:11.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.199" endtime="20201030 15:53:11.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.896" endtime="20201030 15:53:11.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.895" endtime="20201030 15:53:11.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.206" level="INFO">${RESULT} = [{'diff': 5.3707999999999534e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.461099999999955e-05}, {'diff': 5.463900000000216e-05}, {'diff': 5.066700000000077e-05}, {'diff': 5.173600000000014e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:11.203" endtime="20201030 15:53:11.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.210" level="INFO">${ACCURACY} = {'diff': [5.3707999999999534e-05, 5.4499999999998994e-05, 5.461099999999955e-05, 5.463900000000216e-05, 5.066700000000077e-05, 5.173600000000014e-05, 5.163899999999916e-05, 5.462499999999912e-05, 5.45...</msg>
<status status="PASS" starttime="20201030 15:53:11.207" endtime="20201030 15:53:11.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.214" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.213" endtime="20201030 15:53:11.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.217" level="INFO">VALUE: [5.3707999999999534e-05, 5.4499999999998994e-05, 5.461099999999955e-05, 5.463900000000216e-05, 5.066700000000077e-05, 5.173600000000014e-05, 5.163899999999916e-05, 5.462499999999912e-05, 5.451400000000203e-05, 5.459699999999998e-05, 5.165299999999873e-05, 5.176399999999928e-05, 5.079100000000142e-05, 5.641699999999958e-05, 5.5555999999998273e-05, 5.077699999999838e-05, 5.5443999999998245e-05, 5.459799999999945e-05, 5.259800000000092e-05, 5.461100000000302e-05, 5.640300000000001e-05, 5.558299999999794e-05, 5.359699999999898e-05, 5.265299999999973e-05, 5.5541999999998704e-05, 5.270900000000148e-05, 5.4499999999998994e-05, 5.5472000000000854e-05, 5.6500000000000994e-05, 5.6416000000000105e-05, 5.7500000000001994e-05, 5.458300000000041e-05, 5.7402000000001535e-05, 5.269499999999844e-05, 5.163900000000263e-05, 5.459699999999998e-05, 5.5527999999999134e-05, 5.168099999999787e-05, 5.354099999999723e-05, 5.174999999999971e-05, 5.074999999999871e-05, 5.463899999999869e-05, 5.259699999999798e-05, 5.559700000000098e-05, 5.458300000000041e-05, 5.652700000000066e-05, 5.5471999999997385e-05, 5.177799999999885e-05, 5.259699999999798e-05, 5.362500000000159e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.215" endtime="20201030 15:53:11.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.211" endtime="20201030 15:53:11.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.223" endtime="20201030 15:53:11.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.221" endtime="20201030 15:53:11.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.220" endtime="20201030 15:53:11.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.855" endtime="20201030 15:53:11.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.855" endtime="20201030 15:53:11.243"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.252" endtime="20201030 15:53:11.274"></status>
</kw>
<msg timestamp="20201030 15:53:11.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.250" endtime="20201030 15:53:11.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.276" endtime="20201030 15:53:11.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.278" endtime="20201030 15:53:11.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.248" endtime="20201030 15:53:11.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.246" endtime="20201030 15:53:11.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.287" endtime="20201030 15:53:11.573"></status>
</kw>
<msg timestamp="20201030 15:53:11.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023755917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.285" endtime="20201030 15:53:11.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023755917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023824861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.577" endtime="20201030 15:53:11.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.585" endtime="20201030 15:53:11.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.283" endtime="20201030 15:53:11.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.281" endtime="20201030 15:53:11.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.592" level="INFO">${RESULT} = [{'diff': 6.894399999999787e-05}, {'diff': 5.256999999999831e-05}, {'diff': 5.457000000000031e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.077700000000185e-05}, {'diff': 5.262500000000059e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:11.589" endtime="20201030 15:53:11.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.597" level="INFO">${ACCURACY} = {'diff': [6.894399999999787e-05, 5.256999999999831e-05, 5.457000000000031e-05, 5.4499999999998994e-05, 5.077700000000185e-05, 5.262500000000059e-05, 5.074999999999871e-05, 5.444500000000019e-05, 5.547...</msg>
<status status="PASS" starttime="20201030 15:53:11.593" endtime="20201030 15:53:11.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.601" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.600" endtime="20201030 15:53:11.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.604" level="INFO">VALUE: [6.894399999999787e-05, 5.256999999999831e-05, 5.457000000000031e-05, 5.4499999999998994e-05, 5.077700000000185e-05, 5.262500000000059e-05, 5.074999999999871e-05, 5.444500000000019e-05, 5.5471999999997385e-05, 5.256999999999831e-05, 5.161100000000002e-05, 5.6486000000001424e-05, 5.068100000000034e-05, 5.354200000000017e-05, 5.459800000000292e-05, 5.35280000000006e-05, 5.262499999999712e-05, 5.363899999999769e-05, 5.358399999999888e-05, 5.066600000000129e-05, 5.6500000000000994e-05, 5.5499999999999994e-05, 5.6485999999997955e-05, 5.172200000000057e-05, 5.161100000000002e-05, 5.638899999999697e-05, 5.457000000000031e-05, 5.259699999999798e-05, 5.6500000000000994e-05, 5.255599999999874e-05, 5.074999999999871e-05, 5.261100000000102e-05, 5.1735999999996674e-05, 5.545900000000076e-05, 5.557000000000131e-05, 5.35280000000006e-05, 5.169499999999744e-05, 5.262500000000059e-05, 5.361099999999855e-05, 5.162499999999959e-05, 5.5541999999998704e-05, 5.066700000000077e-05, 5.173600000000014e-05, 5.362500000000159e-05, 5.355599999999974e-05, 5.073599999999914e-05, 5.068000000000086e-05, 5.26669999999993e-05, 5.5499999999999994e-05, 5.543099999999815e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.603" endtime="20201030 15:53:11.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.598" endtime="20201030 15:53:11.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.609" endtime="20201030 15:53:11.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.607" endtime="20201030 15:53:11.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.606" endtime="20201030 15:53:11.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.244" endtime="20201030 15:53:11.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.244" endtime="20201030 15:53:11.629"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.638" endtime="20201030 15:53:11.661"></status>
</kw>
<msg timestamp="20201030 15:53:11.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.637" endtime="20201030 15:53:11.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.663" endtime="20201030 15:53:11.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.665" endtime="20201030 15:53:11.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.634" endtime="20201030 15:53:11.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.632" endtime="20201030 15:53:11.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.674" endtime="20201030 15:53:11.961"></status>
</kw>
<msg timestamp="20201030 15:53:11.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024332583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024381458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.672" endtime="20201030 15:53:11.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024332583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024381458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.966" endtime="20201030 15:53:11.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.974" endtime="20201030 15:53:11.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.670" endtime="20201030 15:53:11.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.668" endtime="20201030 15:53:11.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.980" level="INFO">${RESULT} = [{'diff': 4.887500000000031e-05}, {'diff': 5.556899999999837e-05}, {'diff': 5.351400000000103e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.169500000000091e-05}, {'diff': 5.5472000000000854e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:11.977" endtime="20201030 15:53:11.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.984" level="INFO">${ACCURACY} = {'diff': [4.887500000000031e-05, 5.556899999999837e-05, 5.351400000000103e-05, 5.6528000000000134e-05, 5.169500000000091e-05, 5.5472000000000854e-05, 5.4637999999999215e-05, 5.162499999999959e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 15:53:11.981" endtime="20201030 15:53:11.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.989" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.988" endtime="20201030 15:53:11.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.991" level="INFO">VALUE: [4.887500000000031e-05, 5.556899999999837e-05, 5.351400000000103e-05, 5.6528000000000134e-05, 5.169500000000091e-05, 5.5472000000000854e-05, 5.4637999999999215e-05, 5.162499999999959e-05, 5.079200000000089e-05, 5.5444000000001714e-05, 5.461099999999955e-05, 5.355500000000027e-05, 5.3666000000000824e-05, 5.163899999999916e-05, 5.651299999999762e-05, 5.174999999999971e-05, 5.4485999999999424e-05, 5.5555999999998273e-05, 5.4499999999998994e-05, 5.269499999999844e-05, 5.259800000000092e-05, 5.365300000000073e-05, 5.462500000000259e-05, 5.257000000000178e-05, 5.172300000000005e-05, 5.3638000000001684e-05, 5.547300000000033e-05, 5.269499999999844e-05, 5.261100000000102e-05, 5.077800000000132e-05, 5.7472000000002854e-05, 5.638900000000044e-05, 5.556900000000184e-05, 5.172200000000057e-05, 5.638900000000044e-05, 5.462499999999912e-05, 5.1707999999997534e-05, 5.448600000000289e-05, 5.2693999999998964e-05, 5.063900000000163e-05, 5.458399999999988e-05, 5.363900000000116e-05, 5.077700000000185e-05, 5.455599999999727e-05, 5.172200000000057e-05, 5.733299999999969e-05, 5.077800000000132e-05, 5.6528000000000134e-05, 5.6443999999999245e-05, 5.7513999999998094e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.990" endtime="20201030 15:53:11.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.985" endtime="20201030 15:53:11.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.996" endtime="20201030 15:53:12.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.995" endtime="20201030 15:53:12.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.994" endtime="20201030 15:53:12.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.630" endtime="20201030 15:53:12.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.630" endtime="20201030 15:53:12.017"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.027" endtime="20201030 15:53:12.047"></status>
</kw>
<msg timestamp="20201030 15:53:12.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.025" endtime="20201030 15:53:12.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.049" endtime="20201030 15:53:12.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.051" endtime="20201030 15:53:12.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.022" endtime="20201030 15:53:12.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.020" endtime="20201030 15:53:12.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.060" endtime="20201030 15:53:12.347"></status>
</kw>
<msg timestamp="20201030 15:53:12.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023838861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.059" endtime="20201030 15:53:12.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023770014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023838861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.351" endtime="20201030 15:53:12.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.359" endtime="20201030 15:53:12.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.056" endtime="20201030 15:53:12.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.055" endtime="20201030 15:53:12.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.366" level="INFO">${RESULT} = [{'diff': 6.884700000000035e-05}, {'diff': 5.458300000000041e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.079199999999742e-05}, {'diff': 5.6471999999998385e-05}, {'diff': 5.2679999999999394e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:12.363" endtime="20201030 15:53:12.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.370" level="INFO">${ACCURACY} = {'diff': [6.884700000000035e-05, 5.458300000000041e-05, 5.638900000000044e-05, 5.079199999999742e-05, 5.6471999999998385e-05, 5.2679999999999394e-05, 5.4485999999999424e-05, 5.173600000000014e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 15:53:12.367" endtime="20201030 15:53:12.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.374" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.373" endtime="20201030 15:53:12.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.377" level="INFO">VALUE: [6.884700000000035e-05, 5.458300000000041e-05, 5.638900000000044e-05, 5.079199999999742e-05, 5.6471999999998385e-05, 5.2679999999999394e-05, 5.4485999999999424e-05, 5.173600000000014e-05, 5.161100000000002e-05, 5.173600000000014e-05, 5.355599999999974e-05, 5.355599999999974e-05, 5.2707999999998534e-05, 5.165299999999873e-05, 5.359700000000245e-05, 5.163899999999916e-05, 5.2652000000000254e-05, 5.4471999999999854e-05, 5.258299999999841e-05, 5.076400000000175e-05, 5.358400000000235e-05, 5.1651999999999254e-05, 5.176399999999928e-05, 5.354200000000017e-05, 5.362499999999812e-05, 5.4485999999999424e-05, 5.738899999999797e-05, 5.176399999999928e-05, 5.163900000000263e-05, 5.1665999999998824e-05, 5.266700000000277e-05, 5.740300000000101e-05, 5.075000000000218e-05, 5.4485999999999424e-05, 5.454200000000117e-05, 5.55549999999988e-05, 5.5486000000000424e-05, 5.636099999999783e-05, 5.5486000000000424e-05, 5.362499999999812e-05, 5.4513999999998564e-05, 5.559700000000098e-05, 5.545900000000076e-05, 5.172200000000057e-05, 5.640300000000001e-05, 5.263900000000016e-05, 5.173600000000014e-05, 5.5443999999998245e-05, 5.6430000000003144e-05, 5.363899999999769e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.376" endtime="20201030 15:53:12.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.371" endtime="20201030 15:53:12.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.383" endtime="20201030 15:53:12.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.381" endtime="20201030 15:53:12.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.380" endtime="20201030 15:53:12.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.018" endtime="20201030 15:53:12.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.018" endtime="20201030 15:53:12.403"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.412" endtime="20201030 15:53:12.434"></status>
</kw>
<msg timestamp="20201030 15:53:12.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.410" endtime="20201030 15:53:12.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.436" endtime="20201030 15:53:12.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.438" endtime="20201030 15:53:12.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.408" endtime="20201030 15:53:12.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.406" endtime="20201030 15:53:12.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.447" endtime="20201030 15:53:12.733"></status>
</kw>
<msg timestamp="20201030 15:53:12.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.445" endtime="20201030 15:53:12.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024108583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024151681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.737" endtime="20201030 15:53:12.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.745" endtime="20201030 15:53:12.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.443" endtime="20201030 15:53:12.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.441" endtime="20201030 15:53:12.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.751" level="INFO">${RESULT} = [{'diff': 4.309800000000183e-05}, {'diff': 5.452699999999866e-05}, {'diff': 5.355599999999974e-05}, {'diff': 5.2665999999999824e-05}, {'diff': 5.4485999999999424e-05}, {'diff': 5.068000000000086e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:12.748" endtime="20201030 15:53:12.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.756" level="INFO">${ACCURACY} = {'diff': [4.309800000000183e-05, 5.452699999999866e-05, 5.355599999999974e-05, 5.2665999999999824e-05, 5.4485999999999424e-05, 5.068000000000086e-05, 5.644499999999872e-05, 5.5513999999999564e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 15:53:12.752" endtime="20201030 15:53:12.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.761" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.760" endtime="20201030 15:53:12.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.763" level="INFO">VALUE: [4.309800000000183e-05, 5.452699999999866e-05, 5.355599999999974e-05, 5.2665999999999824e-05, 5.4485999999999424e-05, 5.068000000000086e-05, 5.644499999999872e-05, 5.5513999999999564e-05, 5.740300000000101e-05, 5.545900000000076e-05, 5.362500000000159e-05, 5.352699999999766e-05, 5.258300000000188e-05, 5.169500000000091e-05, 5.06530000000012e-05, 5.162499999999959e-05, 5.5513999999999564e-05, 5.5499999999999994e-05, 5.0693999999996964e-05, 5.4485999999999424e-05, 5.16530000000022e-05, 5.5513999999999564e-05, 5.258300000000188e-05, 5.1665999999998824e-05, 5.26669999999993e-05, 5.259700000000145e-05, 5.454099999999823e-05, 5.458399999999988e-05, 5.354200000000017e-05, 5.261100000000102e-05, 5.5443999999998245e-05, 5.5527999999999134e-05, 5.1708000000001e-05, 5.073599999999914e-05, 5.451300000000256e-05, 5.737500000000187e-05, 5.543099999999815e-05, 5.5527999999999134e-05, 5.368099999999987e-05, 5.640300000000001e-05, 5.647300000000133e-05, 5.168099999999787e-05, 5.161199999999949e-05, 5.5499999999999994e-05, 5.169500000000091e-05, 5.543100000000162e-05, 5.2638000000000684e-05, 5.6486000000001424e-05, 5.537499999999987e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.762" endtime="20201030 15:53:12.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.757" endtime="20201030 15:53:12.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.768" endtime="20201030 15:53:12.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.767" endtime="20201030 15:53:12.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.766" endtime="20201030 15:53:12.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.404" endtime="20201030 15:53:12.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.404" endtime="20201030 15:53:12.789"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.798" endtime="20201030 15:53:12.817"></status>
</kw>
<msg timestamp="20201030 15:53:12.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.796" endtime="20201030 15:53:12.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.819" endtime="20201030 15:53:12.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.821" endtime="20201030 15:53:12.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.794" endtime="20201030 15:53:12.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.792" endtime="20201030 15:53:12.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.830" endtime="20201030 15:53:13.117"></status>
</kw>
<msg timestamp="20201030 15:53:13.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.828" endtime="20201030 15:53:13.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020407125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.121" endtime="20201030 15:53:13.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.129" endtime="20201030 15:53:13.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.826" endtime="20201030 15:53:13.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.824" endtime="20201030 15:53:13.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.136" level="INFO">${RESULT} = [{'diff': 5.938899999999997e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.083400000000307e-05}, {'diff': 5.355599999999974e-05}, {'diff': 5.7471999999999385e-05}, {'diff': 5.362500000000159e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:13.132" endtime="20201030 15:53:13.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.140" level="INFO">${ACCURACY} = {'diff': [5.938899999999997e-05, 5.162499999999959e-05, 5.083400000000307e-05, 5.355599999999974e-05, 5.7471999999999385e-05, 5.362500000000159e-05, 5.355500000000027e-05, 5.4680000000001394e-05, 5.16...</msg>
<status status="PASS" starttime="20201030 15:53:13.137" endtime="20201030 15:53:13.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.144" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.143" endtime="20201030 15:53:13.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.147" level="INFO">VALUE: [5.938899999999997e-05, 5.162499999999959e-05, 5.083400000000307e-05, 5.355599999999974e-05, 5.7471999999999385e-05, 5.362500000000159e-05, 5.355500000000027e-05, 5.4680000000001394e-05, 5.161100000000002e-05, 5.459799999999945e-05, 5.638900000000044e-05, 5.3637999999998215e-05, 5.172200000000057e-05, 5.2693999999998964e-05, 5.354200000000017e-05, 5.172200000000057e-05, 5.074999999999871e-05, 5.654100000000023e-05, 5.256900000000231e-05, 5.463899999999869e-05, 5.2679999999999394e-05, 5.4499999999998994e-05, 5.557000000000131e-05, 5.25279999999996e-05, 5.459699999999998e-05, 5.1693999999997964e-05, 5.062499999999859e-05, 5.365300000000073e-05, 5.261100000000102e-05, 5.172299999999658e-05, 5.35280000000006e-05, 5.555600000000174e-05, 5.062499999999859e-05, 5.555500000000227e-05, 5.543099999999815e-05, 5.365300000000073e-05, 5.265299999999973e-05, 5.5486000000000424e-05, 5.5499999999999994e-05, 5.654100000000023e-05, 5.73610000000023e-05, 5.174999999999971e-05, 5.261200000000049e-05, 5.2707999999998534e-05, 5.55549999999988e-05, 5.3513999999997564e-05, 5.3666000000000824e-05, 5.463899999999869e-05, 5.261099999999755e-05, 5.461099999999955e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.145" endtime="20201030 15:53:13.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.141" endtime="20201030 15:53:13.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.152" endtime="20201030 15:53:13.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.150" endtime="20201030 15:53:13.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.149" endtime="20201030 15:53:13.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.790" endtime="20201030 15:53:13.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.789" endtime="20201030 15:53:13.172"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.181" endtime="20201030 15:53:13.204"></status>
</kw>
<msg timestamp="20201030 15:53:13.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.179" endtime="20201030 15:53:13.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.205" endtime="20201030 15:53:13.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.207" endtime="20201030 15:53:13.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.177" endtime="20201030 15:53:13.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.175" endtime="20201030 15:53:13.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.216" endtime="20201030 15:53:13.502"></status>
</kw>
<msg timestamp="20201030 15:53:13.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.215" endtime="20201030 15:53:13.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023837111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023891611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.506" endtime="20201030 15:53:13.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.514" endtime="20201030 15:53:13.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.212" endtime="20201030 15:53:13.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.211" endtime="20201030 15:53:13.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.521" level="INFO">${RESULT} = [{'diff': 5.4499999999998994e-05}, {'diff': 5.45549999999978e-05}, {'diff': 5.7401999999998066e-05}, {'diff': 5.4541999999997703e-05}, {'diff': 5.544500000000119e-05}, {'diff': 5.265299999999973e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:13.518" endtime="20201030 15:53:13.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.525" level="INFO">${ACCURACY} = {'diff': [5.4499999999998994e-05, 5.45549999999978e-05, 5.7401999999998066e-05, 5.4541999999997703e-05, 5.544500000000119e-05, 5.265299999999973e-05, 5.1693999999997964e-05, 5.641699999999958e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 15:53:13.522" endtime="20201030 15:53:13.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.529" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.528" endtime="20201030 15:53:13.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.532" level="INFO">VALUE: [5.4499999999998994e-05, 5.45549999999978e-05, 5.7401999999998066e-05, 5.4541999999997703e-05, 5.544500000000119e-05, 5.265299999999973e-05, 5.1693999999997964e-05, 5.641699999999958e-05, 5.355599999999974e-05, 5.5458000000001284e-05, 5.263900000000016e-05, 5.456900000000084e-05, 5.5471999999997385e-05, 5.454200000000117e-05, 5.354200000000017e-05, 5.162499999999959e-05, 5.6388000000000965e-05, 5.169400000000143e-05, 5.7430000000000675e-05, 5.162499999999959e-05, 5.5527999999999134e-05, 5.162499999999959e-05, 5.645899999999829e-05, 5.1666000000002293e-05, 5.5444000000001714e-05, 5.16669999999983e-05, 5.166700000000177e-05, 5.647299999999786e-05, 5.168100000000134e-05, 5.6458000000002284e-05, 5.073599999999914e-05, 5.075000000000218e-05, 5.5513999999999564e-05, 5.062499999999859e-05, 5.45410000000017e-05, 5.268099999999887e-05, 5.645899999999829e-05, 5.5513999999999564e-05, 5.5499999999999994e-05, 5.554200000000217e-05, 5.077799999999785e-05, 5.6458000000002284e-05, 5.5499999999999994e-05, 5.4499999999998994e-05, 5.451400000000203e-05, 5.6486000000001424e-05, 5.4471999999999854e-05, 5.169400000000143e-05, 5.0708e-05, 5.5527999999999134e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.530" endtime="20201030 15:53:13.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.526" endtime="20201030 15:53:13.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.538" endtime="20201030 15:53:13.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.536" endtime="20201030 15:53:13.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.535" endtime="20201030 15:53:13.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.173" endtime="20201030 15:53:13.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.173" endtime="20201030 15:53:13.558"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.567" endtime="20201030 15:53:13.590"></status>
</kw>
<msg timestamp="20201030 15:53:13.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.565" endtime="20201030 15:53:13.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.592" endtime="20201030 15:53:13.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.594" endtime="20201030 15:53:13.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.563" endtime="20201030 15:53:13.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.561" endtime="20201030 15:53:13.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.603" endtime="20201030 15:53:13.888"></status>
</kw>
<msg timestamp="20201030 15:53:13.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024697167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.602" endtime="20201030 15:53:13.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024697167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024753569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.892" endtime="20201030 15:53:13.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.900" endtime="20201030 15:53:13.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.599" endtime="20201030 15:53:13.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.597" endtime="20201030 15:53:13.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.907" level="INFO">${RESULT} = [{'diff': 5.6402000000000535e-05}, {'diff': 5.640300000000001e-05}, {'diff': 5.556900000000184e-05}, {'diff': 5.356999999999931e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.266700000000277e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:13.904" endtime="20201030 15:53:13.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.912" level="INFO">${ACCURACY} = {'diff': [5.6402000000000535e-05, 5.640300000000001e-05, 5.556900000000184e-05, 5.356999999999931e-05, 5.265299999999973e-05, 5.266700000000277e-05, 5.6528000000000134e-05, 5.16530000000022e-05, 5.641...</msg>
<status status="PASS" starttime="20201030 15:53:13.908" endtime="20201030 15:53:13.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.916" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.915" endtime="20201030 15:53:13.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.919" level="INFO">VALUE: [5.6402000000000535e-05, 5.640300000000001e-05, 5.556900000000184e-05, 5.356999999999931e-05, 5.265299999999973e-05, 5.266700000000277e-05, 5.6528000000000134e-05, 5.16530000000022e-05, 5.641699999999958e-05, 5.066700000000077e-05, 5.462499999999912e-05, 5.161099999999655e-05, 5.4485999999999424e-05, 5.448600000000289e-05, 5.165299999999873e-05, 5.266700000000277e-05, 5.738900000000144e-05, 5.362500000000159e-05, 5.640300000000001e-05, 5.6429999999999675e-05, 5.1679999999998394e-05, 5.077800000000132e-05, 5.162499999999959e-05, 5.4471999999999854e-05, 5.554200000000217e-05, 5.163900000000263e-05, 5.4485999999999424e-05, 5.641699999999958e-05, 5.5486000000000424e-05, 5.365300000000073e-05, 5.351400000000103e-05, 5.163899999999916e-05, 5.356899999999984e-05, 5.170899999999701e-05, 5.063900000000163e-05, 5.163899999999916e-05, 5.074999999999871e-05, 5.173600000000014e-05, 5.066600000000129e-05, 5.356999999999931e-05, 5.0679999999997394e-05, 5.6443999999999245e-05, 5.166700000000177e-05, 5.363899999999769e-05, 5.4471999999999854e-05, 5.737500000000187e-05, 5.162499999999959e-05, 5.1708000000001e-05, 5.069400000000043e-05, 5.638900000000044e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.917" endtime="20201030 15:53:13.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.913" endtime="20201030 15:53:13.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.987" endtime="20201030 15:53:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.984" endtime="20201030 15:53:14.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.982" endtime="20201030 15:53:14.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.559" endtime="20201030 15:53:14.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.559" endtime="20201030 15:53:14.012"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.029" endtime="20201030 15:53:14.054"></status>
</kw>
<msg timestamp="20201030 15:53:14.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.026" endtime="20201030 15:53:14.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.058" endtime="20201030 15:53:14.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.063" endtime="20201030 15:53:14.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.021" endtime="20201030 15:53:14.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.017" endtime="20201030 15:53:14.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.078" endtime="20201030 15:53:14.365"></status>
</kw>
<msg timestamp="20201030 15:53:14.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036715389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036775611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.076" endtime="20201030 15:53:14.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036715389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036775611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.369" endtime="20201030 15:53:14.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.377" endtime="20201030 15:53:14.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.073" endtime="20201030 15:53:14.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.070" endtime="20201030 15:53:14.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.383" level="INFO">${RESULT} = [{'diff': 6.0221999999998665e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.547300000000033e-05}, {'diff': 5.176400000000275e-05}, {'diff': 5.35419999999967e-05}, {'diff': 5.6500000000000994e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:14.380" endtime="20201030 15:53:14.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.388" level="INFO">${ACCURACY} = {'diff': [6.0221999999998665e-05, 5.363900000000116e-05, 5.547300000000033e-05, 5.176400000000275e-05, 5.35419999999967e-05, 5.6500000000000994e-05, 5.065299999999773e-05, 5.4513999999998564e-05, 5.26...</msg>
<status status="PASS" starttime="20201030 15:53:14.384" endtime="20201030 15:53:14.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.392" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.391" endtime="20201030 15:53:14.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.395" level="INFO">VALUE: [6.0221999999998665e-05, 5.363900000000116e-05, 5.547300000000033e-05, 5.176400000000275e-05, 5.35419999999967e-05, 5.6500000000000994e-05, 5.065299999999773e-05, 5.4513999999998564e-05, 5.2665999999999824e-05, 5.450000000000593e-05, 5.259700000000145e-05, 5.6528000000000134e-05, 5.356999999999584e-05, 5.1651999999999254e-05, 5.275000000000418e-05, 5.640300000000348e-05, 5.4471999999999854e-05, 5.55549999999988e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.461100000000302e-05, 5.255599999999527e-05, 5.4499999999998994e-05, 5.1749999999996243e-05, 5.547300000000033e-05, 5.261100000000102e-05, 5.554099999999923e-05, 5.5458000000001284e-05, 5.163899999999916e-05, 5.2693999999998964e-05, 5.543100000000162e-05, 5.4485999999999424e-05, 5.163899999999916e-05, 5.365300000000073e-05, 5.35419999999967e-05, 5.0667000000004236e-05, 5.35140000000045e-05, 5.2693999999998964e-05, 5.73749999999984e-05, 5.4513999999998564e-05, 5.3527999999997133e-05, 5.06669999999973e-05, 5.075000000000218e-05, 5.7319999999999593e-05, 5.450000000000593e-05, 5.162499999999959e-05, 5.6528000000000134e-05, 5.4513999999998564e-05, 5.450000000000593e-05, 5.4458000000000284e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.393" endtime="20201030 15:53:14.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.388" endtime="20201030 15:53:14.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.399" endtime="20201030 15:53:14.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.398" endtime="20201030 15:53:14.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.397" endtime="20201030 15:53:14.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.014" endtime="20201030 15:53:14.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.012" endtime="20201030 15:53:14.420"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.429" endtime="20201030 15:53:14.455"></status>
</kw>
<msg timestamp="20201030 15:53:14.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.427" endtime="20201030 15:53:14.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.456" endtime="20201030 15:53:14.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.459" endtime="20201030 15:53:14.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.425" endtime="20201030 15:53:14.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.423" endtime="20201030 15:53:14.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.468" endtime="20201030 15:53:14.754"></status>
</kw>
<msg timestamp="20201030 15:53:14.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027014889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027075153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.466" endtime="20201030 15:53:14.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027014889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027075153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.758" endtime="20201030 15:53:14.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.766" endtime="20201030 15:53:14.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.464" endtime="20201030 15:53:14.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.462" endtime="20201030 15:53:14.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.773" level="INFO">${RESULT} = [{'diff': 6.0264000000000845e-05}, {'diff': 5.455600000000074e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.268099999999887e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.740299999999754e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:14.770" endtime="20201030 15:53:14.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.777" level="INFO">${ACCURACY} = {'diff': [6.0264000000000845e-05, 5.455600000000074e-05, 5.5499999999999994e-05, 5.268099999999887e-05, 5.5472000000000854e-05, 5.740299999999754e-05, 5.361099999999855e-05, 5.5486000000000424e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:53:14.774" endtime="20201030 15:53:14.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.781" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.780" endtime="20201030 15:53:14.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.784" level="INFO">VALUE: [6.0264000000000845e-05, 5.455600000000074e-05, 5.5499999999999994e-05, 5.268099999999887e-05, 5.5472000000000854e-05, 5.740299999999754e-05, 5.361099999999855e-05, 5.5486000000000424e-05, 5.069400000000043e-05, 5.6443999999999245e-05, 5.640300000000001e-05, 5.452699999999866e-05, 5.172200000000057e-05, 5.356900000000331e-05, 5.644499999999872e-05, 5.6457999999998815e-05, 5.361100000000202e-05, 5.077799999999785e-05, 5.641699999999958e-05, 5.4485999999999424e-05, 5.5499999999999994e-05, 5.6457999999998815e-05, 5.358299999999941e-05, 5.165299999999873e-05, 5.358299999999941e-05, 5.166700000000177e-05, 5.069400000000043e-05, 5.173600000000014e-05, 5.737500000000187e-05, 5.6443999999999245e-05, 5.070899999999948e-05, 5.262499999999712e-05, 5.5499999999999994e-05, 5.063900000000163e-05, 5.0737000000002086e-05, 5.547300000000033e-05, 5.262500000000059e-05, 5.5472000000000854e-05, 5.544500000000119e-05, 5.076400000000175e-05, 5.5499999999999994e-05, 5.358299999999941e-05, 5.261100000000102e-05, 5.3485999999998424e-05, 5.1665999999998824e-05, 5.45410000000017e-05, 5.262500000000059e-05, 5.362499999999812e-05, 5.066700000000077e-05, 5.6457999999998815e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.782" endtime="20201030 15:53:14.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.778" endtime="20201030 15:53:14.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.789" endtime="20201030 15:53:14.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.788" endtime="20201030 15:53:14.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.787" endtime="20201030 15:53:14.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.421" endtime="20201030 15:53:14.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.421" endtime="20201030 15:53:14.810"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.819" endtime="20201030 15:53:14.846"></status>
</kw>
<msg timestamp="20201030 15:53:14.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.817" endtime="20201030 15:53:14.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.847" endtime="20201030 15:53:14.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.850" endtime="20201030 15:53:14.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.815" endtime="20201030 15:53:14.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.813" endtime="20201030 15:53:14.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.859" endtime="20201030 15:53:15.145"></status>
</kw>
<msg timestamp="20201030 15:53:15.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.857" endtime="20201030 15:53:15.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023861014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023907833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.149" endtime="20201030 15:53:15.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.157" endtime="20201030 15:53:15.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.855" endtime="20201030 15:53:15.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.853" endtime="20201030 15:53:15.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.163" level="INFO">${RESULT} = [{'diff': 4.681900000000003e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.6443999999999245e-05}, {'diff': 5.2721999999998104e-05}, {'diff': 5.075000000000218e-05}, {'diff': 5.159700000000045e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:15.160" endtime="20201030 15:53:15.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.168" level="INFO">${ACCURACY} = {'diff': [4.681900000000003e-05, 5.6500000000000994e-05, 5.6443999999999245e-05, 5.2721999999998104e-05, 5.075000000000218e-05, 5.159700000000045e-05, 5.163899999999916e-05, 5.1707999999997534e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:53:15.164" endtime="20201030 15:53:15.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.173" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.172" endtime="20201030 15:53:15.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.175" level="INFO">VALUE: [4.681900000000003e-05, 5.6500000000000994e-05, 5.6443999999999245e-05, 5.2721999999998104e-05, 5.075000000000218e-05, 5.159700000000045e-05, 5.163899999999916e-05, 5.1707999999997534e-05, 5.16669999999983e-05, 5.076400000000175e-05, 5.163899999999916e-05, 5.079200000000089e-05, 5.069400000000043e-05, 5.6500000000000994e-05, 5.163899999999916e-05, 5.454200000000117e-05, 5.170900000000048e-05, 5.35280000000006e-05, 5.641699999999958e-05, 5.361099999999855e-05, 5.454200000000117e-05, 5.26669999999993e-05, 5.356899999999984e-05, 5.26669999999993e-05, 5.5541999999998704e-05, 5.5472000000000854e-05, 5.5513999999999564e-05, 5.445899999999976e-05, 5.457000000000031e-05, 5.5486000000000424e-05, 5.073599999999914e-05, 5.358299999999941e-05, 5.2665999999999824e-05, 5.166700000000177e-05, 5.359699999999898e-05, 5.069499999999991e-05, 5.456900000000084e-05, 5.068100000000034e-05, 5.737500000000187e-05, 5.258399999999788e-05, 5.6486000000001424e-05, 5.45410000000017e-05, 5.6485999999997955e-05, 5.355500000000027e-05, 5.6555999999999274e-05, 5.358299999999941e-05, 5.163899999999916e-05, 5.641699999999958e-05, 5.455600000000074e-05, 5.265299999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.174" endtime="20201030 15:53:15.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.169" endtime="20201030 15:53:15.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.180" endtime="20201030 15:53:15.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.178" endtime="20201030 15:53:15.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.177" endtime="20201030 15:53:15.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.811" endtime="20201030 15:53:15.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.811" endtime="20201030 15:53:15.201"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.209" endtime="20201030 15:53:15.229"></status>
</kw>
<msg timestamp="20201030 15:53:15.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.208" endtime="20201030 15:53:15.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.230" endtime="20201030 15:53:15.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.233" endtime="20201030 15:53:15.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.205" endtime="20201030 15:53:15.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.203" endtime="20201030 15:53:15.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.242" endtime="20201030 15:53:15.536"></status>
</kw>
<msg timestamp="20201030 15:53:15.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.240" endtime="20201030 15:53:15.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.546" endtime="20201030 15:53:15.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.564" endtime="20201030 15:53:15.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.238" endtime="20201030 15:53:15.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.236" endtime="20201030 15:53:15.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.578" level="INFO">${RESULT} = [{'diff': 7.845899999999947e-05}, {'diff': 8.613799999999949e-05}, {'diff': 8.511099999999883e-05}, {'diff': 8.704200000000245e-05}, {'diff': 8.424999999999752e-05}, {'diff': 8.134699999999898e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:15.571" endtime="20201030 15:53:15.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.587" level="INFO">${ACCURACY} = {'diff': [7.845899999999947e-05, 8.613799999999949e-05, 8.511099999999883e-05, 8.704200000000245e-05, 8.424999999999752e-05, 8.134699999999898e-05, 8.4153e-05, 8.413900000000044e-05, 8.131899999999984...</msg>
<status status="PASS" starttime="20201030 15:53:15.580" endtime="20201030 15:53:15.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.594" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.593" endtime="20201030 15:53:15.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.597" level="INFO">VALUE: [7.845899999999947e-05, 8.613799999999949e-05, 8.511099999999883e-05, 8.704200000000245e-05, 8.424999999999752e-05, 8.134699999999898e-05, 8.4153e-05, 8.413900000000044e-05, 8.131899999999984e-05, 8.705500000000255e-05, 8.516700000000058e-05, 8.695799999999809e-05, 8.61249999999994e-05, 8.601399999999884e-05, 8.524999999999852e-05, 8.508299999999969e-05, 8.422300000000132e-05, 8.61249999999994e-05, 8.12780000000006e-05, 8.700000000000027e-05, 8.234699999999998e-05, 8.508299999999969e-05, 8.133399999999888e-05, 8.518100000000015e-05, 8.413899999999697e-05, 8.61669999999981e-05, 8.422199999999838e-05, 8.709799999999726e-05, 8.605599999999755e-05, 8.616700000000158e-05, 8.127699999999766e-05, 8.411099999999783e-05, 8.709699999999779e-05, 8.232000000000031e-05, 8.523599999999895e-05, 8.506900000000012e-05, 8.713899999999997e-05, 8.620799999999734e-05, 8.697200000000113e-05, 8.044399999999896e-05, 8.234799999999945e-05, 8.51110000000023e-05, 8.427699999999719e-05, 8.519399999999677e-05, 8.702800000000288e-05, 8.138899999999769e-05, 8.608400000000016e-05, 8.324999999999999e-05, 8.426400000000056e-05, 8.129200000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.596" endtime="20201030 15:53:15.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.588" endtime="20201030 15:53:15.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.602" endtime="20201030 15:53:15.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.600" endtime="20201030 15:53:15.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.599" endtime="20201030 15:53:15.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.202" endtime="20201030 15:53:15.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.201" endtime="20201030 15:53:15.623"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.631" endtime="20201030 15:53:15.655"></status>
</kw>
<msg timestamp="20201030 15:53:15.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.630" endtime="20201030 15:53:15.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.657" endtime="20201030 15:53:15.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.659" endtime="20201030 15:53:15.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.627" endtime="20201030 15:53:15.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.625" endtime="20201030 15:53:15.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.668" endtime="20201030 15:53:15.954"></status>
</kw>
<msg timestamp="20201030 15:53:15.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.667" endtime="20201030 15:53:15.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025252903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.958" endtime="20201030 15:53:15.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.967" endtime="20201030 15:53:15.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.664" endtime="20201030 15:53:15.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.663" endtime="20201030 15:53:15.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.973" level="INFO">${RESULT} = [{'diff': 9.847199999999875e-05}, {'diff': 8.426399999999709e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.698700000000018e-05}, {'diff': 8.512500000000187e-05}, {'diff': 8.519500000000318e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:15.970" endtime="20201030 15:53:15.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.977" level="INFO">${ACCURACY} = {'diff': [9.847199999999875e-05, 8.426399999999709e-05, 8.413900000000044e-05, 8.698700000000018e-05, 8.512500000000187e-05, 8.519500000000318e-05, 8.419499999999872e-05, 8.701399999999984e-05, 8.4181...</msg>
<status status="PASS" starttime="20201030 15:53:15.974" endtime="20201030 15:53:15.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.982" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.981" endtime="20201030 15:53:15.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.984" level="INFO">VALUE: [9.847199999999875e-05, 8.426399999999709e-05, 8.413900000000044e-05, 8.698700000000018e-05, 8.512500000000187e-05, 8.519500000000318e-05, 8.419499999999872e-05, 8.701399999999984e-05, 8.418100000000261e-05, 8.326399999999956e-05, 8.123599999999842e-05, 8.412500000000087e-05, 8.5153000000001e-05, 8.599999999999927e-05, 8.51249999999984e-05, 8.41249999999974e-05, 8.32919999999987e-05, 8.794500000000247e-05, 8.419399999999924e-05, 8.216700000000104e-05, 8.41110000000013e-05, 8.134699999999898e-05, 8.787500000000115e-05, 8.706899999999865e-05, 8.695900000000104e-05, 8.316699999999858e-05, 8.124999999999799e-05, 8.419499999999872e-05, 8.409700000000173e-05, 8.222199999999985e-05, 8.417999999999967e-05, 8.608400000000016e-05, 8.709800000000073e-05, 8.420799999999881e-05, 8.513899999999797e-05, 8.234699999999998e-05, 8.595800000000056e-05, 8.322300000000032e-05, 8.408400000000163e-05, 8.329200000000217e-05, 8.226399999999856e-05, 8.222200000000332e-05, 8.23330000000004e-05, 8.423599999999795e-05, 8.506900000000012e-05, 8.130500000000027e-05, 8.22780000000016e-05, 8.605500000000155e-05, 8.702799999999941e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.983" endtime="20201030 15:53:15.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.978" endtime="20201030 15:53:15.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.990" endtime="20201030 15:53:16.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.988" endtime="20201030 15:53:16.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.987" endtime="20201030 15:53:16.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.624" endtime="20201030 15:53:16.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.623" endtime="20201030 15:53:16.011"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.019" endtime="20201030 15:53:16.047"></status>
</kw>
<msg timestamp="20201030 15:53:16.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.018" endtime="20201030 15:53:16.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.049" endtime="20201030 15:53:16.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.051" endtime="20201030 15:53:16.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.015" endtime="20201030 15:53:16.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.013" endtime="20201030 15:53:16.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.060" endtime="20201030 15:53:16.356"></status>
</kw>
<msg timestamp="20201030 15:53:16.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024189278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024260181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.058" endtime="20201030 15:53:16.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024189278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024260181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.365" endtime="20201030 15:53:16.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.383" endtime="20201030 15:53:16.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.056" endtime="20201030 15:53:16.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.054" endtime="20201030 15:53:16.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.397" level="INFO">${RESULT} = [{'diff': 7.090299999999716e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.604199999999798e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.615199999999906e-05}, {'diff': 8.505600000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:16.390" endtime="20201030 15:53:16.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.403" level="INFO">${ACCURACY} = {'diff': [7.090299999999716e-05, 8.413900000000044e-05, 8.604199999999798e-05, 8.216700000000104e-05, 8.615199999999906e-05, 8.505600000000002e-05, 8.420799999999881e-05, 8.12780000000006e-05, 8.31940...</msg>
<status status="PASS" starttime="20201030 15:53:16.399" endtime="20201030 15:53:16.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.407" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.406" endtime="20201030 15:53:16.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.410" level="INFO">VALUE: [7.090299999999716e-05, 8.413900000000044e-05, 8.604199999999798e-05, 8.216700000000104e-05, 8.615199999999906e-05, 8.505600000000002e-05, 8.420799999999881e-05, 8.12780000000006e-05, 8.319400000000171e-05, 8.611099999999983e-05, 8.30980000000002e-05, 8.611099999999983e-05, 8.323600000000042e-05, 8.312499999999987e-05, 8.326399999999956e-05, 8.606900000000112e-05, 8.222199999999985e-05, 8.32369999999999e-05, 8.61249999999994e-05, 8.318100000000161e-05, 8.604200000000145e-05, 8.133399999999888e-05, 8.218100000000061e-05, 8.706900000000212e-05, 8.411099999999783e-05, 8.229200000000117e-05, 8.419499999999872e-05, 8.320800000000128e-05, 8.222199999999985e-05, 8.608400000000016e-05, 8.126400000000103e-05, 8.5153000000001e-05, 8.5153000000001e-05, 8.695799999999809e-05, 8.13329999999994e-05, 8.59859999999997e-05, 8.22780000000016e-05, 8.69310000000019e-05, 8.708300000000169e-05, 8.123600000000189e-05, 8.516700000000058e-05, 8.125000000000146e-05, 8.223599999999942e-05, 8.693099999999843e-05, 8.612500000000287e-05, 8.512500000000187e-05, 8.219400000000071e-05, 8.512500000000187e-05, 8.409699999999826e-05, 8.227699999999866e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.409" endtime="20201030 15:53:16.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.404" endtime="20201030 15:53:16.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.415" endtime="20201030 15:53:16.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.413" endtime="20201030 15:53:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.412" endtime="20201030 15:53:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.012" endtime="20201030 15:53:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.011" endtime="20201030 15:53:16.436"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.444" endtime="20201030 15:53:16.465"></status>
</kw>
<msg timestamp="20201030 15:53:16.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.443" endtime="20201030 15:53:16.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.467" endtime="20201030 15:53:16.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.469" endtime="20201030 15:53:16.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.440" endtime="20201030 15:53:16.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.438" endtime="20201030 15:53:16.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.478" endtime="20201030 15:53:16.763"></status>
</kw>
<msg timestamp="20201030 15:53:16.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021301847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.476" endtime="20201030 15:53:16.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021301847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.767" endtime="20201030 15:53:16.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.776" endtime="20201030 15:53:16.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.474" endtime="20201030 15:53:16.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.472" endtime="20201030 15:53:16.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.782" level="INFO">${RESULT} = [{'diff': 8.980499999999836e-05}, {'diff': 8.605499999999808e-05}, {'diff': 8.220800000000028e-05}, {'diff': 8.701399999999984e-05}, {'diff': 8.51249999999984e-05}, {'diff': 8.227799999999813e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:16.779" endtime="20201030 15:53:16.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.786" level="INFO">${ACCURACY} = {'diff': [8.980499999999836e-05, 8.605499999999808e-05, 8.220800000000028e-05, 8.701399999999984e-05, 8.51249999999984e-05, 8.227799999999813e-05, 8.322200000000085e-05, 8.316699999999858e-05, 8.49859...</msg>
<status status="PASS" starttime="20201030 15:53:16.783" endtime="20201030 15:53:16.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.791" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.790" endtime="20201030 15:53:16.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.793" level="INFO">VALUE: [8.980499999999836e-05, 8.605499999999808e-05, 8.220800000000028e-05, 8.701399999999984e-05, 8.51249999999984e-05, 8.227799999999813e-05, 8.322200000000085e-05, 8.316699999999858e-05, 8.49859999999987e-05, 8.316699999999858e-05, 8.506900000000012e-05, 8.702800000000288e-05, 8.608299999999722e-05, 8.505600000000002e-05, 8.318100000000161e-05, 8.420800000000228e-05, 8.230600000000074e-05, 8.505600000000002e-05, 8.323600000000042e-05, 8.127799999999713e-05, 8.12780000000006e-05, 8.522299999999886e-05, 8.312500000000334e-05, 8.225000000000246e-05, 8.120799999999928e-05, 8.608300000000069e-05, 8.504200000000045e-05, 8.609799999999973e-05, 8.218000000000114e-05, 8.322300000000032e-05, 8.406999999999859e-05, 8.133399999999888e-05, 8.418100000000261e-05, 8.213899999999844e-05, 8.322200000000085e-05, 8.606999999999712e-05, 8.220899999999975e-05, 8.4153e-05, 8.501400000000131e-05, 8.319399999999824e-05, 8.316699999999858e-05, 8.416700000000304e-05, 8.220800000000028e-05, 8.51110000000023e-05, 8.798599999999823e-05, 8.797200000000213e-05, 8.516599999999763e-05, 8.322200000000085e-05, 8.5153000000001e-05, 8.213799999999896e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.792" endtime="20201030 15:53:16.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.787" endtime="20201030 15:53:16.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.798" endtime="20201030 15:53:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.797" endtime="20201030 15:53:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.795" endtime="20201030 15:53:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.436" endtime="20201030 15:53:16.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.436" endtime="20201030 15:53:16.819"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.827" endtime="20201030 15:53:16.852"></status>
</kw>
<msg timestamp="20201030 15:53:16.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.826" endtime="20201030 15:53:16.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.853" endtime="20201030 15:53:16.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.856" endtime="20201030 15:53:16.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.823" endtime="20201030 15:53:16.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.821" endtime="20201030 15:53:16.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.865" endtime="20201030 15:53:17.150"></status>
</kw>
<msg timestamp="20201030 15:53:17.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024849694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.863" endtime="20201030 15:53:17.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024777069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024849694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.154" endtime="20201030 15:53:17.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.162" endtime="20201030 15:53:17.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.860" endtime="20201030 15:53:17.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.859" endtime="20201030 15:53:17.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.169" level="INFO">${RESULT} = [{'diff': 7.262499999999977e-05}, {'diff': 8.695799999999809e-05}, {'diff': 8.418099999999915e-05}, {'diff': 8.22780000000016e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.222299999999932e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:17.165" endtime="20201030 15:53:17.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.173" level="INFO">${ACCURACY} = {'diff': [7.262499999999977e-05, 8.695799999999809e-05, 8.418099999999915e-05, 8.22780000000016e-05, 8.125000000000146e-05, 8.222299999999932e-05, 8.411099999999783e-05, 8.506999999999959e-05, 8.60830...</msg>
<status status="PASS" starttime="20201030 15:53:17.170" endtime="20201030 15:53:17.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.177" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.176" endtime="20201030 15:53:17.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.179" level="INFO">VALUE: [7.262499999999977e-05, 8.695799999999809e-05, 8.418099999999915e-05, 8.22780000000016e-05, 8.125000000000146e-05, 8.222299999999932e-05, 8.411099999999783e-05, 8.506999999999959e-05, 8.608300000000069e-05, 8.412500000000087e-05, 8.59859999999997e-05, 8.423599999999795e-05, 8.318100000000161e-05, 8.3152999999999e-05, 8.504200000000045e-05, 8.324999999999999e-05, 8.4153e-05, 8.506999999999959e-05, 8.418000000000314e-05, 8.51669999999971e-05, 8.511099999999883e-05, 8.411099999999783e-05, 8.229200000000117e-05, 8.21109999999993e-05, 8.130500000000027e-05, 8.13329999999994e-05, 8.308300000000116e-05, 8.6153000000002e-05, 8.322200000000085e-05, 8.411200000000077e-05, 8.323600000000042e-05, 8.618100000000115e-05, 8.322200000000085e-05, 8.508299999999969e-05, 8.705499999999908e-05, 8.79730000000016e-05, 8.226399999999856e-05, 8.700000000000027e-05, 8.224999999999899e-05, 8.506900000000012e-05, 8.12780000000006e-05, 8.313799999999996e-05, 8.605600000000102e-05, 8.409700000000173e-05, 8.607000000000059e-05, 8.2152999999998e-05, 8.409700000000173e-05, 8.23330000000004e-05, 8.708400000000116e-05, 8.313799999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:53:17.178" endtime="20201030 15:53:17.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.174" endtime="20201030 15:53:17.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.185" endtime="20201030 15:53:17.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.184" endtime="20201030 15:53:17.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.183" endtime="20201030 15:53:17.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.820" endtime="20201030 15:53:17.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.819" endtime="20201030 15:53:17.206"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.215" endtime="20201030 15:53:17.239"></status>
</kw>
<msg timestamp="20201030 15:53:17.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.213" endtime="20201030 15:53:17.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.241" endtime="20201030 15:53:17.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.243" endtime="20201030 15:53:17.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.211" endtime="20201030 15:53:17.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.209" endtime="20201030 15:53:17.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.252" endtime="20201030 15:53:17.538"></status>
</kw>
<msg timestamp="20201030 15:53:17.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024286542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024368833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.251" endtime="20201030 15:53:17.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024286542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024368833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.542" endtime="20201030 15:53:17.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.550" endtime="20201030 15:53:17.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.248" endtime="20201030 15:53:17.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.246" endtime="20201030 15:53:17.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.557" level="INFO">${RESULT} = [{'diff': 8.229099999999823e-05}, {'diff': 8.606999999999712e-05}, {'diff': 8.615299999999854e-05}, {'diff': 8.51110000000023e-05}, {'diff': 8.226399999999856e-05}, {'diff': 8.607000000000059e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:17.554" endtime="20201030 15:53:17.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.562" level="INFO">${ACCURACY} = {'diff': [8.229099999999823e-05, 8.606999999999712e-05, 8.615299999999854e-05, 8.51110000000023e-05, 8.226399999999856e-05, 8.607000000000059e-05, 8.69999999999968e-05, 8.802800000000041e-05, 8.601400...</msg>
<status status="PASS" starttime="20201030 15:53:17.558" endtime="20201030 15:53:17.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.566" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.565" endtime="20201030 15:53:17.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.569" level="INFO">VALUE: [8.229099999999823e-05, 8.606999999999712e-05, 8.615299999999854e-05, 8.51110000000023e-05, 8.226399999999856e-05, 8.607000000000059e-05, 8.69999999999968e-05, 8.802800000000041e-05, 8.601400000000231e-05, 8.223600000000289e-05, 8.240199999999878e-05, 8.702699999999994e-05, 8.61660000000021e-05, 8.223599999999942e-05, 8.513900000000144e-05, 8.324999999999999e-05, 8.32780000000026e-05, 8.419499999999872e-05, 8.419499999999872e-05, 8.13329999999994e-05, 8.700000000000027e-05, 8.511099999999883e-05, 8.708300000000169e-05, 8.709700000000126e-05, 8.327799999999913e-05, 8.226400000000203e-05, 8.506999999999959e-05, 8.605599999999755e-05, 8.611099999999983e-05, 8.13329999999994e-05, 8.126400000000103e-05, 8.129099999999723e-05, 8.513899999999797e-05, 8.318099999999815e-05, 8.506900000000012e-05, 8.318099999999815e-05, 8.324999999999999e-05, 8.324999999999999e-05, 8.126400000000103e-05, 8.509699999999926e-05, 8.519499999999972e-05, 8.511099999999883e-05, 8.230500000000127e-05, 8.520899999999929e-05, 8.320799999999781e-05, 8.317999999999867e-05, 8.244400000000096e-05, 8.79860000000017e-05, 8.613899999999897e-05, 8.706899999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:53:17.567" endtime="20201030 15:53:17.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.563" endtime="20201030 15:53:17.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.574" endtime="20201030 15:53:17.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.572" endtime="20201030 15:53:17.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.571" endtime="20201030 15:53:17.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.207" endtime="20201030 15:53:17.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.207" endtime="20201030 15:53:17.594"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.603" endtime="20201030 15:53:17.625"></status>
</kw>
<msg timestamp="20201030 15:53:17.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.602" endtime="20201030 15:53:17.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.626" endtime="20201030 15:53:17.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.629" endtime="20201030 15:53:17.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.599" endtime="20201030 15:53:17.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.597" endtime="20201030 15:53:17.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.638" endtime="20201030 15:53:17.924"></status>
</kw>
<msg timestamp="20201030 15:53:17.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.636" endtime="20201030 15:53:17.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022958417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.928" endtime="20201030 15:53:17.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.936" endtime="20201030 15:53:17.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.634" endtime="20201030 15:53:17.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.632" endtime="20201030 15:53:17.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.942" level="INFO">${RESULT} = [{'diff': 7.459700000000263e-05}, {'diff': 8.522200000000285e-05}, {'diff': 8.416699999999958e-05}, {'diff': 8.131899999999984e-05}, {'diff': 8.327799999999913e-05}, {'diff': 8.608299999999722e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:17.939" endtime="20201030 15:53:17.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.947" level="INFO">${ACCURACY} = {'diff': [7.459700000000263e-05, 8.522200000000285e-05, 8.416699999999958e-05, 8.131899999999984e-05, 8.327799999999913e-05, 8.608299999999722e-05, 8.316699999999858e-05, 8.131899999999984e-05, 8.3222...</msg>
<status status="PASS" starttime="20201030 15:53:17.943" endtime="20201030 15:53:17.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.951" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.950" endtime="20201030 15:53:17.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.954" level="INFO">VALUE: [7.459700000000263e-05, 8.522200000000285e-05, 8.416699999999958e-05, 8.131899999999984e-05, 8.327799999999913e-05, 8.608299999999722e-05, 8.316699999999858e-05, 8.131899999999984e-05, 8.322200000000085e-05, 8.5153000000001e-05, 8.12910000000007e-05, 8.709700000000126e-05, 8.423599999999795e-05, 8.322199999999738e-05, 8.604200000000145e-05, 8.705500000000255e-05, 8.41660000000001e-05, 8.127700000000113e-05, 8.422199999999838e-05, 8.219500000000018e-05, 8.426400000000056e-05, 8.602699999999894e-05, 8.425000000000099e-05, 8.219400000000071e-05, 8.130500000000027e-05, 8.513900000000144e-05, 8.69860000000007e-05, 8.134699999999898e-05, 8.792999999999995e-05, 8.223599999999942e-05, 8.318099999999815e-05, 8.512500000000187e-05, 8.798599999999823e-05, 8.232000000000031e-05, 8.233399999999988e-05, 8.324999999999999e-05, 8.126400000000103e-05, 8.718099999999868e-05, 8.22369999999989e-05, 8.701399999999984e-05, 8.234699999999998e-05, 8.613899999999897e-05, 8.705600000000202e-05, 8.608400000000016e-05, 8.419399999999924e-05, 8.805599999999955e-05, 8.409700000000173e-05, 8.519499999999972e-05, 8.408299999999869e-05, 8.127700000000113e-05]</msg>
<status status="PASS" starttime="20201030 15:53:17.952" endtime="20201030 15:53:17.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.947" endtime="20201030 15:53:17.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.958" endtime="20201030 15:53:17.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.957" endtime="20201030 15:53:17.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.956" endtime="20201030 15:53:17.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.595" endtime="20201030 15:53:17.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.595" endtime="20201030 15:53:17.979"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.988" endtime="20201030 15:53:18.012"></status>
</kw>
<msg timestamp="20201030 15:53:18.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.986" endtime="20201030 15:53:18.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.013" endtime="20201030 15:53:18.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.016" endtime="20201030 15:53:18.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.984" endtime="20201030 15:53:18.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.982" endtime="20201030 15:53:18.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.025" endtime="20201030 15:53:18.314"></status>
</kw>
<msg timestamp="20201030 15:53:18.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025145514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.023" endtime="20201030 15:53:18.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025145514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.318" endtime="20201030 15:53:18.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.326" endtime="20201030 15:53:18.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.021" endtime="20201030 15:53:18.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.019" endtime="20201030 15:53:18.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.333" level="INFO">${RESULT} = [{'diff': 7.84030000000012e-05}, {'diff': 8.131999999999931e-05}, {'diff': 8.222199999999985e-05}, {'diff': 8.609700000000026e-05}, {'diff': 8.23330000000004e-05}, {'diff': 8.413800000000096e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:18.330" endtime="20201030 15:53:18.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.337" level="INFO">${ACCURACY} = {'diff': [7.84030000000012e-05, 8.131999999999931e-05, 8.222199999999985e-05, 8.609700000000026e-05, 8.23330000000004e-05, 8.413800000000096e-05, 8.236099999999955e-05, 8.420800000000228e-05, 8.409700...</msg>
<status status="PASS" starttime="20201030 15:53:18.334" endtime="20201030 15:53:18.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.341" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.340" endtime="20201030 15:53:18.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.344" level="INFO">VALUE: [7.84030000000012e-05, 8.131999999999931e-05, 8.222199999999985e-05, 8.609700000000026e-05, 8.23330000000004e-05, 8.413800000000096e-05, 8.236099999999955e-05, 8.420800000000228e-05, 8.409700000000173e-05, 8.4153e-05, 8.423600000000142e-05, 8.327799999999913e-05, 8.695800000000156e-05, 8.134799999999845e-05, 8.702799999999941e-05, 8.319399999999824e-05, 8.704200000000245e-05, 8.127699999999766e-05, 8.317999999999867e-05, 8.420900000000175e-05, 8.318099999999815e-05, 8.613900000000244e-05, 8.222199999999985e-05, 8.322200000000085e-05, 8.326399999999956e-05, 8.232000000000031e-05, 8.123700000000136e-05, 8.13329999999994e-05, 8.21659999999981e-05, 8.130500000000027e-05, 8.711199999999683e-05, 8.611099999999983e-05, 8.125000000000146e-05, 8.218100000000061e-05, 8.608300000000069e-05, 8.427800000000013e-05, 8.413899999999697e-05, 8.223599999999942e-05, 8.330599999999827e-05, 8.225000000000246e-05, 8.508399999999916e-05, 8.608400000000016e-05, 8.226399999999856e-05, 8.704100000000298e-05, 8.330600000000174e-05, 8.708300000000169e-05, 8.708299999999822e-05, 8.51660000000011e-05, 8.124999999999799e-05, 8.808299999999922e-05]</msg>
<status status="PASS" starttime="20201030 15:53:18.342" endtime="20201030 15:53:18.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.338" endtime="20201030 15:53:18.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.349" endtime="20201030 15:53:18.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.348" endtime="20201030 15:53:18.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.347" endtime="20201030 15:53:18.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.980" endtime="20201030 15:53:18.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.979" endtime="20201030 15:53:18.370"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.379" endtime="20201030 15:53:18.398"></status>
</kw>
<msg timestamp="20201030 15:53:18.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.377" endtime="20201030 15:53:18.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.400" endtime="20201030 15:53:18.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.402" endtime="20201030 15:53:18.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.375" endtime="20201030 15:53:18.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.373" endtime="20201030 15:53:18.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.411" endtime="20201030 15:53:18.696"></status>
</kw>
<msg timestamp="20201030 15:53:18.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021123972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.410" endtime="20201030 15:53:18.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021123972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021215778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.700" endtime="20201030 15:53:18.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.709" endtime="20201030 15:53:18.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.407" endtime="20201030 15:53:18.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.406" endtime="20201030 15:53:18.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.715" level="INFO">${RESULT} = [{'diff': 9.180599999999983e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.213899999999844e-05}, {'diff': 8.222299999999932e-05}, {'diff': 8.495899999999904e-05}, {'diff': 8.40980000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:18.712" endtime="20201030 15:53:18.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.720" level="INFO">${ACCURACY} = {'diff': [9.180599999999983e-05, 8.413900000000044e-05, 8.213899999999844e-05, 8.222299999999932e-05, 8.495899999999904e-05, 8.40980000000012e-05, 8.61249999999994e-05, 8.694500000000147e-05, 8.234699...</msg>
<status status="PASS" starttime="20201030 15:53:18.716" endtime="20201030 15:53:18.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.725" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.724" endtime="20201030 15:53:18.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.727" level="INFO">VALUE: [9.180599999999983e-05, 8.413900000000044e-05, 8.213899999999844e-05, 8.222299999999932e-05, 8.495899999999904e-05, 8.40980000000012e-05, 8.61249999999994e-05, 8.694500000000147e-05, 8.234699999999998e-05, 8.3152999999999e-05, 8.134699999999898e-05, 8.416699999999958e-05, 8.120799999999928e-05, 8.216700000000104e-05, 8.326399999999956e-05, 8.51110000000023e-05, 8.509699999999926e-05, 8.129200000000017e-05, 8.700000000000027e-05, 8.320899999999729e-05, 8.404199999999945e-05, 8.802800000000041e-05, 8.122199999999885e-05, 8.616599999999863e-05, 8.505500000000055e-05, 8.226400000000203e-05, 8.59859999999997e-05, 8.31110000000003e-05, 8.419500000000218e-05, 8.697200000000113e-05, 8.223599999999942e-05, 8.598600000000317e-05, 8.613799999999949e-05, 8.409699999999826e-05, 8.79860000000017e-05, 8.129200000000017e-05, 8.316600000000257e-05, 8.59859999999997e-05, 8.413900000000044e-05, 8.605500000000155e-05, 8.320799999999781e-05, 8.502800000000088e-05, 8.51249999999984e-05, 8.409699999999826e-05, 8.13329999999994e-05, 8.401400000000031e-05, 8.513900000000144e-05, 8.502800000000088e-05, 8.418100000000261e-05, 8.695799999999809e-05]</msg>
<status status="PASS" starttime="20201030 15:53:18.726" endtime="20201030 15:53:18.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.721" endtime="20201030 15:53:18.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.732" endtime="20201030 15:53:18.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.730" endtime="20201030 15:53:18.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.729" endtime="20201030 15:53:18.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.371" endtime="20201030 15:53:18.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.370" endtime="20201030 15:53:18.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.262" endtime="20201030 15:53:18.753"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:38.192" endtime="20201030 15:53:18.753" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:57.614" endtime="20201030 15:53:18.757"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.810" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:18.818" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:22.224" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:18.808" endtime="20201030 15:53:22.225"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.230" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:53:22.227" endtime="20201030 15:53:22.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.807" endtime="20201030 15:53:22.232"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.237" endtime="20201030 15:53:22.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.234" endtime="20201030 15:53:22.422"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.435" endtime="20201030 15:53:22.454"></status>
</kw>
<msg timestamp="20201030 15:53:22.454" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.433" endtime="20201030 15:53:22.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.457" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.455" endtime="20201030 15:53:22.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.460" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:22.458" endtime="20201030 15:53:22.460"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:22.431" endtime="20201030 15:53:22.461"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:22.428" endtime="20201030 15:53:22.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.427" endtime="20201030 15:53:22.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:22.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:22.465" endtime="20201030 15:53:22.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.463" endtime="20201030 15:53:22.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.426" endtime="20201030 15:53:22.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.426" endtime="20201030 15:53:22.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.467" endtime="20201030 15:53:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.425" endtime="20201030 15:53:22.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.470" endtime="20201030 15:53:22.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.423" endtime="20201030 15:53:22.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.806" endtime="20201030 15:53:22.476"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.485" endtime="20201030 15:53:22.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.483" endtime="20201030 15:53:22.505"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.518" endtime="20201030 15:53:22.536"></status>
</kw>
<msg timestamp="20201030 15:53:22.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.516" endtime="20201030 15:53:22.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.537" endtime="20201030 15:53:22.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.543" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:22.540" endtime="20201030 15:53:22.543"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:22.514" endtime="20201030 15:53:22.544"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:22.511" endtime="20201030 15:53:22.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.510" endtime="20201030 15:53:22.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:22.548" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:22.547" endtime="20201030 15:53:22.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.545" endtime="20201030 15:53:22.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.509" endtime="20201030 15:53:22.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.509" endtime="20201030 15:53:22.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.550" endtime="20201030 15:53:22.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.507" endtime="20201030 15:53:22.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.506" endtime="20201030 15:53:22.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.480" endtime="20201030 15:53:22.553"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.561" endtime="20201030 15:53:28.687"></status>
</kw>
<msg timestamp="20201030 15:53:28.688" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.559" endtime="20201030 15:53:28.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.693" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.690" endtime="20201030 15:53:28.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.695" endtime="20201030 15:53:28.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.557" endtime="20201030 15:53:28.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.555" endtime="20201030 15:53:28.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.705" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:28.702" endtime="20201030 15:53:28.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.714" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:28.712" endtime="20201030 15:53:28.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.719" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:28.717" endtime="20201030 15:53:28.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.707" endtime="20201030 15:53:28.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.730" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:28.727" endtime="20201030 15:53:28.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.734" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:28.732" endtime="20201030 15:53:28.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.722" endtime="20201030 15:53:28.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.743" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:28.741" endtime="20201030 15:53:28.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.748" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:53:28.746" endtime="20201030 15:53:28.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.737" endtime="20201030 15:53:28.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.763" endtime="20201030 15:53:29.067"></status>
</kw>
<msg timestamp="20201030 15:53:29.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069382153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169396389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.760" endtime="20201030 15:53:29.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069382153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169396389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.071" endtime="20201030 15:53:29.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.079" endtime="20201030 15:53:29.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.754" endtime="20201030 15:53:29.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.751" endtime="20201030 15:53:29.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:29.086" level="INFO">${FILTERED} = [{'diff': 0.100014236}, {'diff': 0.09997206900000002}, {'diff': 0.09997190300000003}, {'diff': 0.09997197199999996}, {'diff': 0.09997192999999999}, {'diff': 0.09997197200000008}, {'diff': 0.0999719019...</msg>
<status status="PASS" starttime="20201030 15:53:29.082" endtime="20201030 15:53:29.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:29.089" level="INFO">${RESULT} = {'diff': [0.100014236, 0.09997206900000002, 0.09997190300000003, 0.09997197199999996, 0.09997192999999999, 0.09997197200000008, 0.09997190199999995, 0.09997193100000001, 0.09997193100000001, 0.0999719...</msg>
<status status="PASS" starttime="20201030 15:53:29.086" endtime="20201030 15:53:29.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.093" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:29.092" endtime="20201030 15:53:29.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.096" level="INFO">VALUE: [0.100014236, 0.09997206900000002, 0.09997190300000003, 0.09997197199999996, 0.09997192999999999, 0.09997197200000008, 0.09997190199999995, 0.09997193100000001, 0.09997193100000001, 0.09997195799999992, 0.0999719160000001, 0.09997194399999998, 0.09997198600000012, 0.09997188899999987, 0.099972014, 0.09997192999999993, 0.09997188900000009, 0.09997188899999987, 0.0999719859999999, 0.09997188899999987, 0.09997197200000008, 0.09997197300000016, 0.09997195899999989, 0.09997193099999979, 0.09997193000000015, 0.09997192999999971, 0.0999718749999996, 0.09997193000000015, 0.0999720420000001, 0.09997190300000014, 0.09997186099999977, 0.09997198699999998, 0.09997194500000006, 0.09997194500000006, 0.09997194500000006, 0.0999719579999998, 0.09997188800000023, 0.0999719579999998, 0.09997197200000008, 0.09997197200000008, 0.09997195899999944, 0.09997190300000014, 0.09997191600000033, 0.09997197200000052, 0.09997195800000025, 0.0999720420000001, 0.09997190299999925, 0.0999719859999999, 0.09997190200000006, 0.09997195800000025, 0.09997193100000068]</msg>
<status status="PASS" starttime="20201030 15:53:29.095" endtime="20201030 15:53:29.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.090" endtime="20201030 15:53:29.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.101" endtime="20201030 15:53:29.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.099" endtime="20201030 15:53:29.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.098" endtime="20201030 15:53:29.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.553" endtime="20201030 15:53:29.121"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:22.477" endtime="20201030 15:53:29.122" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.129" endtime="20201030 15:53:29.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.128" endtime="20201030 15:53:29.149"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.163" endtime="20201030 15:53:29.181"></status>
</kw>
<msg timestamp="20201030 15:53:29.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.162" endtime="20201030 15:53:29.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.184" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.183" endtime="20201030 15:53:29.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.187" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:29.185" endtime="20201030 15:53:29.188"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:29.159" endtime="20201030 15:53:29.188"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:29.157" endtime="20201030 15:53:29.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.155" endtime="20201030 15:53:29.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:29.193" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:29.192" endtime="20201030 15:53:29.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.190" endtime="20201030 15:53:29.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.155" endtime="20201030 15:53:29.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.154" endtime="20201030 15:53:29.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.194" endtime="20201030 15:53:29.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.152" endtime="20201030 15:53:29.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.150" endtime="20201030 15:53:29.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.127" endtime="20201030 15:53:29.197"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.205" endtime="20201030 15:53:35.329"></status>
</kw>
<msg timestamp="20201030 15:53:35.330" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.204" endtime="20201030 15:53:35.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.335" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.332" endtime="20201030 15:53:35.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.337" endtime="20201030 15:53:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.201" endtime="20201030 15:53:35.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.199" endtime="20201030 15:53:35.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:35.348" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:35.345" endtime="20201030 15:53:35.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.357" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:35.355" endtime="20201030 15:53:35.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.363" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:35.359" endtime="20201030 15:53:35.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.350" endtime="20201030 15:53:35.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.373" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:35.371" endtime="20201030 15:53:35.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.377" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:35.375" endtime="20201030 15:53:35.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.366" endtime="20201030 15:53:35.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.387" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:35.385" endtime="20201030 15:53:35.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.391" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:53:35.389" endtime="20201030 15:53:35.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.380" endtime="20201030 15:53:35.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.406" endtime="20201030 15:53:35.707"></status>
</kw>
<msg timestamp="20201030 15:53:35.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066620847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166743389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.403" endtime="20201030 15:53:35.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066620847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166743389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.711" endtime="20201030 15:53:35.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.719" endtime="20201030 15:53:35.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.397" endtime="20201030 15:53:35.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.394" endtime="20201030 15:53:35.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:35.726" level="INFO">${FILTERED} = [{'diff': 0.100122542}, {'diff': 0.10006362499999999}, {'diff': 0.09978256999999996}, {'diff': 0.10000245899999999}, {'diff': 0.09997187499999999}, {'diff': 0.09997194399999998}, {'diff': 0.0999719310...</msg>
<status status="PASS" starttime="20201030 15:53:35.723" endtime="20201030 15:53:35.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:35.730" level="INFO">${RESULT} = {'diff': [0.100122542, 0.10006362499999999, 0.09978256999999996, 0.10000245899999999, 0.09997187499999999, 0.09997194399999998, 0.09997193100000001, 0.09997199999999995, 0.09997194399999998, 0.0999718...</msg>
<status status="PASS" starttime="20201030 15:53:35.727" endtime="20201030 15:53:35.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.734" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:35.733" endtime="20201030 15:53:35.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.737" level="INFO">VALUE: [0.100122542, 0.10006362499999999, 0.09978256999999996, 0.10000245899999999, 0.09997187499999999, 0.09997194399999998, 0.09997193100000001, 0.09997199999999995, 0.09997194399999998, 0.09997187499999993, 0.09997202800000005, 0.09997194399999998, 0.09997197200000008, 0.0999719160000001, 0.099971861, 0.0999719859999999, 0.09997195800000003, 0.09997188900000009, 0.0999719859999999, 0.09997193100000001, 0.09997197200000008, 0.09997198600000035, 0.09997193099999979, 0.09997188800000023, 0.09997191699999997, 0.09997200000000017, 0.09997197200000008, 0.09997184699999995, 0.09997206900000011, 0.09997188899999987, 0.09997194399999998, 0.09997194500000006, 0.09997199999999973, 0.09997197299999971, 0.09997190300000014, 0.09997188899999987, 0.09997206999999975, 0.09997191699999997, 0.09997195900000033, 0.0999719029999997, 0.09997194399999998, 0.09997195800000025, 0.09997188899999987, 0.09997205600000036, 0.09997187500000049, 0.09997197200000052, 0.09997191700000041, 0.09997190299999925, 0.09997197199999963, 0.09997193099999979, 0.09997193099999979]</msg>
<status status="PASS" starttime="20201030 15:53:35.736" endtime="20201030 15:53:35.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.731" endtime="20201030 15:53:35.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:35.742" endtime="20201030 15:53:35.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.740" endtime="20201030 15:53:35.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.739" endtime="20201030 15:53:35.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.198" endtime="20201030 15:53:35.762"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:29.123" endtime="20201030 15:53:35.763" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:35.769" endtime="20201030 15:53:35.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.768" endtime="20201030 15:53:35.789"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.802" endtime="20201030 15:53:35.823"></status>
</kw>
<msg timestamp="20201030 15:53:35.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.800" endtime="20201030 15:53:35.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.826" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.825" endtime="20201030 15:53:35.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:35.827" endtime="20201030 15:53:35.830"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:35.798" endtime="20201030 15:53:35.831"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:35.796" endtime="20201030 15:53:35.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.795" endtime="20201030 15:53:35.832"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:35.835" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:35.835" endtime="20201030 15:53:35.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.833" endtime="20201030 15:53:35.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.794" endtime="20201030 15:53:35.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.793" endtime="20201030 15:53:35.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.837" endtime="20201030 15:53:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.792" endtime="20201030 15:53:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.790" endtime="20201030 15:53:35.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.767" endtime="20201030 15:53:35.840"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.849" endtime="20201030 15:53:41.978"></status>
</kw>
<msg timestamp="20201030 15:53:41.979" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.848" endtime="20201030 15:53:41.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.988" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.983" endtime="20201030 15:53:41.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.994" endtime="20201030 15:53:41.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.845" endtime="20201030 15:53:42.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.842" endtime="20201030 15:53:42.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:42.011" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:42.005" endtime="20201030 15:53:42.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.019" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:42.017" endtime="20201030 15:53:42.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.024" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:42.022" endtime="20201030 15:53:42.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.013" endtime="20201030 15:53:42.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.034" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:42.032" endtime="20201030 15:53:42.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.039" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:42.037" endtime="20201030 15:53:42.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.027" endtime="20201030 15:53:42.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.048" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:42.046" endtime="20201030 15:53:42.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.053" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:53:42.050" endtime="20201030 15:53:42.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.042" endtime="20201030 15:53:42.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.068" endtime="20201030 15:53:42.371"></status>
</kw>
<msg timestamp="20201030 15:53:42.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073621056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173842806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.065" endtime="20201030 15:53:42.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073621056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173842806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.375" endtime="20201030 15:53:42.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.383" endtime="20201030 15:53:42.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.059" endtime="20201030 15:53:42.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.056" endtime="20201030 15:53:42.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:42.392" level="INFO">${FILTERED} = [{'diff': 0.10022174999999998}, {'diff': 0.10007356999999997}, {'diff': 0.099656986}, {'diff': 0.09997195800000003}, {'diff': 0.09997186099999994}, {'diff': 0.09997205500000006}, {'diff': 0.099971806}...</msg>
<status status="PASS" starttime="20201030 15:53:42.386" endtime="20201030 15:53:42.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:42.396" level="INFO">${RESULT} = {'diff': [0.10022174999999998, 0.10007356999999997, 0.099656986, 0.09997195800000003, 0.09997186099999994, 0.09997205500000006, 0.099971806, 0.09997193100000001, 0.09997204100000001, 0.099971916999999...</msg>
<status status="PASS" starttime="20201030 15:53:42.393" endtime="20201030 15:53:42.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.400" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:42.399" endtime="20201030 15:53:42.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.402" level="INFO">VALUE: [0.10022174999999998, 0.10007356999999997, 0.099656986, 0.09997195800000003, 0.09997186099999994, 0.09997205500000006, 0.099971806, 0.09997193100000001, 0.09997204100000001, 0.09997191699999997, 0.09997191700000019, 0.09997194399999998, 0.09997191599999988, 0.09997193100000001, 0.09997191699999997, 0.09997192999999993, 0.0999719160000001, 0.09997197199999985, 0.0999719440000002, 0.09997190299999992, 0.09997193000000015, 0.09997202799999982, 0.09997190199999961, 0.09997194500000006, 0.09997194500000006, 0.0999719859999999, 0.09997191699999997, 0.09997194500000006, 0.09997191599999988, 0.0999719859999999, 0.09997183300000012, 0.09997195800000025, 0.09997191599999988, 0.09997197200000008, 0.0999719029999997, 0.09997195899999989, 0.0999719859999999, 0.09997194500000006, 0.09997193100000024, 0.0999719029999997, 0.09997192999999971, 0.09997195799999936, 0.09997186100000022, 0.09997188899999987, 0.09997206999999975, 0.0999718749999996, 0.09997197199999963, 0.09997188899999987, 0.0999719300000006, 0.09997191700000041, 0.09997188900000076]</msg>
<status status="PASS" starttime="20201030 15:53:42.401" endtime="20201030 15:53:42.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.397" endtime="20201030 15:53:42.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:42.407" endtime="20201030 15:53:42.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.406" endtime="20201030 15:53:42.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.405" endtime="20201030 15:53:42.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.840" endtime="20201030 15:53:42.429"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:35.764" endtime="20201030 15:53:42.429" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:42.436" endtime="20201030 15:53:42.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.434" endtime="20201030 15:53:42.456"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.470" endtime="20201030 15:53:42.490"></status>
</kw>
<msg timestamp="20201030 15:53:42.490" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.468" endtime="20201030 15:53:42.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.491" endtime="20201030 15:53:42.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.496" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:42.494" endtime="20201030 15:53:42.496"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:42.465" endtime="20201030 15:53:42.497"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:42.462" endtime="20201030 15:53:42.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.461" endtime="20201030 15:53:42.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:42.501" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:42.501" endtime="20201030 15:53:42.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.498" endtime="20201030 15:53:42.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.460" endtime="20201030 15:53:42.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.459" endtime="20201030 15:53:42.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.503" endtime="20201030 15:53:42.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.458" endtime="20201030 15:53:42.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.456" endtime="20201030 15:53:42.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.433" endtime="20201030 15:53:42.506"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.514" endtime="20201030 15:53:48.637"></status>
</kw>
<msg timestamp="20201030 15:53:48.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.512" endtime="20201030 15:53:48.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:48.640" endtime="20201030 15:53:48.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.646" endtime="20201030 15:53:48.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.510" endtime="20201030 15:53:48.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.508" endtime="20201030 15:53:48.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:48.656" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:48.653" endtime="20201030 15:53:48.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.664" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:48.662" endtime="20201030 15:53:48.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.669" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:48.667" endtime="20201030 15:53:48.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.658" endtime="20201030 15:53:48.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.678" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:48.676" endtime="20201030 15:53:48.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.683" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:48.680" endtime="20201030 15:53:48.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.672" endtime="20201030 15:53:48.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.692" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:48.690" endtime="20201030 15:53:48.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.696" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:53:48.694" endtime="20201030 15:53:48.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.686" endtime="20201030 15:53:48.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.714" endtime="20201030 15:53:49.014"></status>
</kw>
<msg timestamp="20201030 15:53:49.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068841319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169201083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:48.711" endtime="20201030 15:53:49.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068841319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169201083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:49.018" endtime="20201030 15:53:49.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.026" endtime="20201030 15:53:49.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.705" endtime="20201030 15:53:49.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.699" endtime="20201030 15:53:49.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:49.033" level="INFO">${FILTERED} = [{'diff': 0.100359764}, {'diff': 0.10007380600000002}, {'diff': 0.09953019500000004}, {'diff': 0.099971945}, {'diff': 0.09997198699999998}, {'diff': 0.09997181999999993}, {'diff': 0.09997194500000006}...</msg>
<status status="PASS" starttime="20201030 15:53:49.029" endtime="20201030 15:53:49.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:49.036" level="INFO">${RESULT} = {'diff': [0.100359764, 0.10007380600000002, 0.09953019500000004, 0.099971945, 0.09997198699999998, 0.09997181999999993, 0.09997194500000006, 0.09997202799999994, 0.09997183300000001, 0.099972028000000...</msg>
<status status="PASS" starttime="20201030 15:53:49.033" endtime="20201030 15:53:49.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.040" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:49.039" endtime="20201030 15:53:49.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.043" level="INFO">VALUE: [0.100359764, 0.10007380600000002, 0.09953019500000004, 0.099971945, 0.09997198699999998, 0.09997181999999993, 0.09997194500000006, 0.09997202799999994, 0.09997183300000001, 0.09997202800000005, 0.09997191599999988, 0.09997190300000014, 0.09997197199999985, 0.09997198699999998, 0.09997194500000006, 0.09997195900000011, 0.09997192999999993, 0.09997195800000003, 0.09997197299999994, 0.09997190300000014, 0.09997194399999998, 0.0999719859999999, 0.09997192999999971, 0.09997192999999971, 0.09997194500000006, 0.09997200000000017, 0.09997191699999997, 0.0999718340000002, 0.09997197200000008, 0.09997191699999997, 0.09997190300000014, 0.09997205499999984, 0.09997188899999987, 0.09997187500000004, 0.09997197299999971, 0.09997198600000035, 0.09997193100000024, 0.09997191599999988, 0.09997199999999973, 0.09997197200000008, 0.09997188799999979, 0.09997191700000041, 0.09997195899999944, 0.09997195899999944, 0.09997184800000003, 0.0999719859999999, 0.09997195800000025, 0.09997197200000052, 0.09997188899999987, 0.0999718749999996, 0.09997195900000033]</msg>
<status status="PASS" starttime="20201030 15:53:49.042" endtime="20201030 15:53:49.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.037" endtime="20201030 15:53:49.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.048" endtime="20201030 15:53:49.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.046" endtime="20201030 15:53:49.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.045" endtime="20201030 15:53:49.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.506" endtime="20201030 15:53:49.069"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:42.431" endtime="20201030 15:53:49.070" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.076" endtime="20201030 15:53:49.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.075" endtime="20201030 15:53:49.096"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.109" endtime="20201030 15:53:49.127"></status>
</kw>
<msg timestamp="20201030 15:53:49.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.108" endtime="20201030 15:53:49.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.129" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.128" endtime="20201030 15:53:49.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.133" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:49.131" endtime="20201030 15:53:49.133"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:49.105" endtime="20201030 15:53:49.133"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:49.103" endtime="20201030 15:53:49.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.101" endtime="20201030 15:53:49.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:49.138" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:49.137" endtime="20201030 15:53:49.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.135" endtime="20201030 15:53:49.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.101" endtime="20201030 15:53:49.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.100" endtime="20201030 15:53:49.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.140" endtime="20201030 15:53:49.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.099" endtime="20201030 15:53:49.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.097" endtime="20201030 15:53:49.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.074" endtime="20201030 15:53:49.142"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.151" endtime="20201030 15:53:55.274"></status>
</kw>
<msg timestamp="20201030 15:53:55.275" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.149" endtime="20201030 15:53:55.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.280" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.277" endtime="20201030 15:53:55.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.283" endtime="20201030 15:53:55.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.146" endtime="20201030 15:53:55.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.144" endtime="20201030 15:53:55.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:55.293" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:55.290" endtime="20201030 15:53:55.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.302" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:55.299" endtime="20201030 15:53:55.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.306" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:55.304" endtime="20201030 15:53:55.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.295" endtime="20201030 15:53:55.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.315" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:55.313" endtime="20201030 15:53:55.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.319" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:55.318" endtime="20201030 15:53:55.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.309" endtime="20201030 15:53:55.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.328" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:55.327" endtime="20201030 15:53:55.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.330" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:53:55.329" endtime="20201030 15:53:55.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.322" endtime="20201030 15:53:55.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.337" endtime="20201030 15:53:55.634"></status>
</kw>
<msg timestamp="20201030 15:53:55.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065109361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165645097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.336" endtime="20201030 15:53:55.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065109361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165645097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.638" endtime="20201030 15:53:55.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.646" endtime="20201030 15:53:55.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.333" endtime="20201030 15:53:55.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.332" endtime="20201030 15:53:55.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:55.652" level="INFO">${FILTERED} = [{'diff': 0.10053573599999999}, {'diff': 0.10007919399999998}, {'diff': 0.099353056}, {'diff': 0.099971861}, {'diff': 0.09997197200000002}, {'diff': 0.09997188899999998}, {'diff': 0.09997199999999995}...</msg>
<status status="PASS" starttime="20201030 15:53:55.649" endtime="20201030 15:53:55.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:55.657" level="INFO">${RESULT} = {'diff': [0.10053573599999999, 0.10007919399999998, 0.099353056, 0.099971861, 0.09997197200000002, 0.09997188899999998, 0.09997199999999995, 0.09997187499999993, 0.09997194399999998, 0.099971986000000...</msg>
<status status="PASS" starttime="20201030 15:53:55.653" endtime="20201030 15:53:55.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.661" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:55.660" endtime="20201030 15:53:55.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.663" level="INFO">VALUE: [0.10053573599999999, 0.10007919399999998, 0.099353056, 0.099971861, 0.09997197200000002, 0.09997188899999998, 0.09997199999999995, 0.09997187499999993, 0.09997194399999998, 0.09997198600000001, 0.09997193000000015, 0.09997187499999982, 0.09997198600000012, 0.09997193100000001, 0.09997195800000003, 0.09997194399999998, 0.09997184699999995, 0.09997205499999984, 0.09997183399999998, 0.09997201399999978, 0.09997184699999995, 0.09997200000000017, 0.099972014, 0.09997179200000028, 0.0999720420000001, 0.09997191599999988, 0.09997188899999987, 0.09997191700000041, 0.09997191599999988, 0.09997190300000014, 0.09997202699999974, 0.09997191699999997, 0.09997187500000004, 0.09997198600000035, 0.09997192999999971, 0.09997188900000031, 0.09997199999999973, 0.09997195900000033, 0.09997191699999997, 0.0999719579999998, 0.09997190200000006, 0.09997194399999998, 0.0999718749999996, 0.09997199999999928, 0.09997193099999979, 0.09997192999999971, 0.09997191699999952, 0.09997191699999952, 0.09997195800000025, 0.09997195800000025, 0.09997180500000002]</msg>
<status status="PASS" starttime="20201030 15:53:55.662" endtime="20201030 15:53:55.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.658" endtime="20201030 15:53:55.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:55.673" endtime="20201030 15:53:55.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.672" endtime="20201030 15:53:55.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.670" endtime="20201030 15:53:55.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.143" endtime="20201030 15:53:55.694"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:49.071" endtime="20201030 15:53:55.694" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:55.701" endtime="20201030 15:53:55.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.699" endtime="20201030 15:53:55.721"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.734" endtime="20201030 15:53:55.753"></status>
</kw>
<msg timestamp="20201030 15:53:55.754" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.732" endtime="20201030 15:53:55.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.755" endtime="20201030 15:53:55.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.759" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:55.757" endtime="20201030 15:53:55.760"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:55.729" endtime="20201030 15:53:55.760"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:55.727" endtime="20201030 15:53:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.726" endtime="20201030 15:53:55.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:55.765" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:55.764" endtime="20201030 15:53:55.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.762" endtime="20201030 15:53:55.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.725" endtime="20201030 15:53:55.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.725" endtime="20201030 15:53:55.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.766" endtime="20201030 15:53:55.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.723" endtime="20201030 15:53:55.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.722" endtime="20201030 15:53:55.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.698" endtime="20201030 15:53:55.769"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.777" endtime="20201030 15:54:01.901"></status>
</kw>
<msg timestamp="20201030 15:54:01.902" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.775" endtime="20201030 15:54:01.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.907" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:01.904" endtime="20201030 15:54:01.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.910" endtime="20201030 15:54:01.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.773" endtime="20201030 15:54:01.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.771" endtime="20201030 15:54:01.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:01.920" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:54:01.917" endtime="20201030 15:54:01.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.929" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:01.927" endtime="20201030 15:54:01.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.933" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:01.931" endtime="20201030 15:54:01.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.922" endtime="20201030 15:54:01.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.942" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:01.940" endtime="20201030 15:54:01.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.944" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:01.943" endtime="20201030 15:54:01.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.936" endtime="20201030 15:54:01.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.948" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:01.947" endtime="20201030 15:54:01.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:01.950" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:54:01.949" endtime="20201030 15:54:01.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.945" endtime="20201030 15:54:01.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:01.957" endtime="20201030 15:54:02.256"></status>
</kw>
<msg timestamp="20201030 15:54:02.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168054597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:01.956" endtime="20201030 15:54:02.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168054597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.260" endtime="20201030 15:54:02.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.268" endtime="20201030 15:54:02.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.953" endtime="20201030 15:54:02.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:01.952" endtime="20201030 15:54:02.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:02.275" level="INFO">${FILTERED} = [{'diff': 0.100739014}, {'diff': 0.100075208}, {'diff': 0.10006370800000003}, {'diff': 0.09905055499999998}, {'diff': 0.09997191700000002}, {'diff': 0.099972014}, {'diff': 0.09997195800000003}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:54:02.272" endtime="20201030 15:54:02.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:02.278" level="INFO">${RESULT} = {'diff': [0.100739014, 0.100075208, 0.10006370800000003, 0.09905055499999998, 0.09997191700000002, 0.099972014, 0.09997195800000003, 0.099971861, 0.09997187499999993, 0.09997202799999994, 0.0999718470...</msg>
<status status="PASS" starttime="20201030 15:54:02.276" endtime="20201030 15:54:02.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.283" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:02.282" endtime="20201030 15:54:02.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.285" level="INFO">VALUE: [0.100739014, 0.100075208, 0.10006370800000003, 0.09905055499999998, 0.09997191700000002, 0.099972014, 0.09997195800000003, 0.099971861, 0.09997187499999993, 0.09997202799999994, 0.09997184700000017, 0.09997206899999989, 0.09997187500000004, 0.0999719859999999, 0.09997195800000003, 0.09997188900000009, 0.09997191700000019, 0.09997191599999988, 0.09997202800000005, 0.09997186200000008, 0.09997193100000024, 0.09997193099999979, 0.09997202700000019, 0.09997190300000014, 0.09997190200000006, 0.0999719029999997, 0.09997194500000006, 0.09997200000000017, 0.09997194500000006, 0.09997188899999987, 0.09997191700000041, 0.09997199999999973, 0.09997188900000031, 0.09997193099999979, 0.09997197200000008, 0.09997194399999998, 0.09997197200000008, 0.09997193000000015, 0.09997188900000031, 0.0999719579999998, 0.09997202799999982, 0.09997186100000022, 0.09997199999999928, 0.09997183299999968, 0.09997202699999974, 0.09997188899999987, 0.09997188899999987, 0.09997190300000014, 0.09997200000000017, 0.09997193099999979, 0.09997201300000036]</msg>
<status status="PASS" starttime="20201030 15:54:02.284" endtime="20201030 15:54:02.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.279" endtime="20201030 15:54:02.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:02.290" endtime="20201030 15:54:02.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.288" endtime="20201030 15:54:02.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.287" endtime="20201030 15:54:02.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.770" endtime="20201030 15:54:02.310"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:55.696" endtime="20201030 15:54:02.311" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:18.766" endtime="20201030 15:54:02.317"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:51:11.999" endtime="20201030 15:54:02.349"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
