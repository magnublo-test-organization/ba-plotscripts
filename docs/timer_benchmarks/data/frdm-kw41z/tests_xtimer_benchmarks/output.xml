<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:42:39.738" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.319" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:40.328" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:41.526" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:40.318" endtime="20201029 12:42:41.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.533" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:41.530" endtime="20201029 12:42:41.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.316" endtime="20201029 12:42:41.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:41.542" endtime="20201029 12:42:41.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.538" endtime="20201029 12:42:41.733"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.751" endtime="20201029 12:42:41.772"></status>
</kw>
<msg timestamp="20201029 12:42:41.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.748" endtime="20201029 12:42:41.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.774" endtime="20201029 12:42:41.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.781" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:41.778" endtime="20201029 12:42:41.782"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:41.745" endtime="20201029 12:42:41.783"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:41.741" endtime="20201029 12:42:41.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.739" endtime="20201029 12:42:41.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:41.790" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:41.789" endtime="20201029 12:42:41.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.786" endtime="20201029 12:42:41.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.738" endtime="20201029 12:42:41.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.737" endtime="20201029 12:42:41.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.793" endtime="20201029 12:42:41.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.736" endtime="20201029 12:42:41.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.797" endtime="20201029 12:42:41.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.734" endtime="20201029 12:42:41.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.315" endtime="20201029 12:42:41.801"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:41.810" endtime="20201029 12:42:41.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.808" endtime="20201029 12:42:41.832"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.853" endtime="20201029 12:42:41.874"></status>
</kw>
<msg timestamp="20201029 12:42:41.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.851" endtime="20201029 12:42:41.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.879" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.877" endtime="20201029 12:42:41.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.883" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:41.880" endtime="20201029 12:42:41.884"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:41.847" endtime="20201029 12:42:41.884"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:41.844" endtime="20201029 12:42:41.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.841" endtime="20201029 12:42:41.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:41.889" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:41.889" endtime="20201029 12:42:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.886" endtime="20201029 12:42:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.840" endtime="20201029 12:42:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.839" endtime="20201029 12:42:41.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.891" endtime="20201029 12:42:41.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.837" endtime="20201029 12:42:41.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.833" endtime="20201029 12:42:41.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.806" endtime="20201029 12:42:41.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.901" endtime="20201029 12:42:41.916"></status>
</kw>
<msg timestamp="20201029 12:42:41.916" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.900" endtime="20201029 12:42:41.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.918" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.917" endtime="20201029 12:42:41.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.919" endtime="20201029 12:42:41.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.897" endtime="20201029 12:42:41.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.895" endtime="20201029 12:42:41.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.926" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:42:41.925" endtime="20201029 12:42:41.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.928" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:42:41.927" endtime="20201029 12:42:41.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.923" endtime="20201029 12:42:41.929"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:41.802" endtime="20201029 12:42:41.929" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:39.859" endtime="20201029 12:42:41.932"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.984" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:41.993" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:43.117" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:41.982" endtime="20201029 12:42:43.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.120" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:43.119" endtime="20201029 12:42:43.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.981" endtime="20201029 12:42:43.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:43.124" endtime="20201029 12:42:43.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.122" endtime="20201029 12:42:43.345"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.357" endtime="20201029 12:42:43.379"></status>
</kw>
<msg timestamp="20201029 12:42:43.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.356" endtime="20201029 12:42:43.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.380" endtime="20201029 12:42:43.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:43.383" endtime="20201029 12:42:43.386"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:43.353" endtime="20201029 12:42:43.387"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:43.351" endtime="20201029 12:42:43.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.350" endtime="20201029 12:42:43.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:43.391" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:43.390" endtime="20201029 12:42:43.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.388" endtime="20201029 12:42:43.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.349" endtime="20201029 12:42:43.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.348" endtime="20201029 12:42:43.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.393" endtime="20201029 12:42:43.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.347" endtime="20201029 12:42:43.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.396" endtime="20201029 12:42:43.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.346" endtime="20201029 12:42:43.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.980" endtime="20201029 12:42:43.398"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:43.404" endtime="20201029 12:42:43.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.402" endtime="20201029 12:42:43.424"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.437" endtime="20201029 12:42:43.454"></status>
</kw>
<msg timestamp="20201029 12:42:43.455" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.435" endtime="20201029 12:42:43.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.458" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.456" endtime="20201029 12:42:43.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.461" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:43.459" endtime="20201029 12:42:43.461"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:43.433" endtime="20201029 12:42:43.462"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:43.430" endtime="20201029 12:42:43.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.429" endtime="20201029 12:42:43.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:43.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:43.465" endtime="20201029 12:42:43.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.463" endtime="20201029 12:42:43.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.428" endtime="20201029 12:42:43.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.427" endtime="20201029 12:42:43.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.468" endtime="20201029 12:42:43.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.426" endtime="20201029 12:42:43.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.424" endtime="20201029 12:42:43.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.401" endtime="20201029 12:42:43.471"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.479" endtime="20201029 12:42:43.493"></status>
</kw>
<msg timestamp="20201029 12:42:43.494" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.478" endtime="20201029 12:42:43.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.497" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.495" endtime="20201029 12:42:43.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.499" endtime="20201029 12:42:43.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.475" endtime="20201029 12:42:43.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.474" endtime="20201029 12:42:43.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.510" endtime="20201029 12:42:43.802"></status>
</kw>
<msg timestamp="20201029 12:42:43.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065681111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065681583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.508" endtime="20201029 12:42:43.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065681111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065681583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.807" endtime="20201029 12:42:43.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.816" endtime="20201029 12:42:43.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.505" endtime="20201029 12:42:43.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.503" endtime="20201029 12:42:43.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:43.822" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201029 12:42:43.819" endtime="20201029 12:42:43.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:43.828" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201029 12:42:43.824" endtime="20201029 12:42:43.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.832" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:43.831" endtime="20201029 12:42:43.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.835" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201029 12:42:43.833" endtime="20201029 12:42:43.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.829" endtime="20201029 12:42:43.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.472" endtime="20201029 12:42:43.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.472" endtime="20201029 12:42:43.836"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.844" endtime="20201029 12:42:43.860"></status>
</kw>
<msg timestamp="20201029 12:42:43.860" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.842" endtime="20201029 12:42:43.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.861" endtime="20201029 12:42:43.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.864" endtime="20201029 12:42:43.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.840" endtime="20201029 12:42:43.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.838" endtime="20201029 12:42:43.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.873" endtime="20201029 12:42:44.182"></status>
</kw>
<msg timestamp="20201029 12:42:44.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066207653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066208125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:43.871" endtime="20201029 12:42:44.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066207653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066208125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.187" endtime="20201029 12:42:44.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.197" endtime="20201029 12:42:44.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.869" endtime="20201029 12:42:44.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.867" endtime="20201029 12:42:44.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:44.204" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201029 12:42:44.200" endtime="20201029 12:42:44.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:44.209" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:42:44.205" endtime="20201029 12:42:44.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.213" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:44.212" endtime="20201029 12:42:44.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.216" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.859999999662357e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201029 12:42:44.214" endtime="20201029 12:42:44.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.210" endtime="20201029 12:42:44.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.837" endtime="20201029 12:42:44.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.837" endtime="20201029 12:42:44.217"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.227" endtime="20201029 12:42:44.244"></status>
</kw>
<msg timestamp="20201029 12:42:44.245" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.225" endtime="20201029 12:42:44.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.246" endtime="20201029 12:42:44.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.248" endtime="20201029 12:42:44.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.222" endtime="20201029 12:42:44.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.220" endtime="20201029 12:42:44.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.259" endtime="20201029 12:42:44.568"></status>
</kw>
<msg timestamp="20201029 12:42:44.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.422090542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.422091014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.258" endtime="20201029 12:42:44.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.422090542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.422091014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.574" endtime="20201029 12:42:44.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.584" endtime="20201029 12:42:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.255" endtime="20201029 12:42:44.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.253" endtime="20201029 12:42:44.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:44.591" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07...</msg>
<status status="PASS" starttime="20201029 12:42:44.587" endtime="20201029 12:42:44.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:44.597" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:42:44.592" endtime="20201029 12:42:44.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.601" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:44.600" endtime="20201029 12:42:44.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.604" level="INFO">VALUE: [4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:42:44.602" endtime="20201029 12:42:44.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.598" endtime="20201029 12:42:44.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.218" endtime="20201029 12:42:44.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.218" endtime="20201029 12:42:44.605"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.613" endtime="20201029 12:42:44.629"></status>
</kw>
<msg timestamp="20201029 12:42:44.629" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.612" endtime="20201029 12:42:44.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.630" endtime="20201029 12:42:44.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.633" endtime="20201029 12:42:44.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.609" endtime="20201029 12:42:44.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.608" endtime="20201029 12:42:44.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.642" endtime="20201029 12:42:44.931"></status>
</kw>
<msg timestamp="20201029 12:42:44.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.791172194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.791172681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.640" endtime="20201029 12:42:44.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.791172194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.791172681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:44.936" endtime="20201029 12:42:44.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.945" endtime="20201029 12:42:44.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.638" endtime="20201029 12:42:44.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.636" endtime="20201029 12:42:44.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:44.952" level="INFO">${RESULT} = [{'diff': 4.869999999934649e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 12:42:44.949" endtime="20201029 12:42:44.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:44.958" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:42:44.953" endtime="20201029 12:42:44.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.962" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:44.961" endtime="20201029 12:42:44.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.965" level="INFO">VALUE: [4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:42:44.963" endtime="20201029 12:42:44.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.959" endtime="20201029 12:42:44.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.606" endtime="20201029 12:42:44.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.606" endtime="20201029 12:42:44.966"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.975" endtime="20201029 12:42:44.991"></status>
</kw>
<msg timestamp="20201029 12:42:44.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.973" endtime="20201029 12:42:44.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.994" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.993" endtime="20201029 12:42:44.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.996" endtime="20201029 12:42:44.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.970" endtime="20201029 12:42:44.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.968" endtime="20201029 12:42:45.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.009" endtime="20201029 12:42:45.313"></status>
</kw>
<msg timestamp="20201029 12:42:45.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.166237153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166237625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.007" endtime="20201029 12:42:45.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.166237153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166237625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.317" endtime="20201029 12:42:45.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.327" endtime="20201029 12:42:45.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.003" endtime="20201029 12:42:45.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.001" endtime="20201029 12:42:45.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:45.335" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:42:45.331" endtime="20201029 12:42:45.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:45.339" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:42:45.336" endtime="20201029 12:42:45.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.343" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:45.342" endtime="20201029 12:42:45.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.347" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 12:42:45.345" endtime="20201029 12:42:45.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.340" endtime="20201029 12:42:45.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.967" endtime="20201029 12:42:45.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.967" endtime="20201029 12:42:45.348"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.356" endtime="20201029 12:42:45.372"></status>
</kw>
<msg timestamp="20201029 12:42:45.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.355" endtime="20201029 12:42:45.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.373" endtime="20201029 12:42:45.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.376" endtime="20201029 12:42:45.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.352" endtime="20201029 12:42:45.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.350" endtime="20201029 12:42:45.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.385" endtime="20201029 12:42:45.684"></status>
</kw>
<msg timestamp="20201029 12:42:45.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.517056236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.517056708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.383" endtime="20201029 12:42:45.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.517056236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.517056708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.689" endtime="20201029 12:42:45.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.699" endtime="20201029 12:42:45.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.381" endtime="20201029 12:42:45.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.379" endtime="20201029 12:42:45.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:45.708" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 12:42:45.703" endtime="20201029 12:42:45.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:45.715" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:42:45.709" endtime="20201029 12:42:45.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.719" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:45.718" endtime="20201029 12:42:45.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.722" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 12:42:45.720" endtime="20201029 12:42:45.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.716" endtime="20201029 12:42:45.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.349" endtime="20201029 12:42:45.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.349" endtime="20201029 12:42:45.724"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.731" endtime="20201029 12:42:45.751"></status>
</kw>
<msg timestamp="20201029 12:42:45.751" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.730" endtime="20201029 12:42:45.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.754" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.752" endtime="20201029 12:42:45.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.755" endtime="20201029 12:42:45.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.727" endtime="20201029 12:42:45.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.726" endtime="20201029 12:42:45.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.764" endtime="20201029 12:42:46.068"></status>
</kw>
<msg timestamp="20201029 12:42:46.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.887114972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.887115444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:45.762" endtime="20201029 12:42:46.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.887114972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.887115444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:46.073" endtime="20201029 12:42:46.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.083" endtime="20201029 12:42:46.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.760" endtime="20201029 12:42:46.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.758" endtime="20201029 12:42:46.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:46.090" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000000217468e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:42:46.087" endtime="20201029 12:42:46.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:46.095" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.86...</msg>
<status status="PASS" starttime="20201029 12:42:46.091" endtime="20201029 12:42:46.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.099" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:46.098" endtime="20201029 12:42:46.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.102" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.869999998824426e-07]</msg>
<status status="PASS" starttime="20201029 12:42:46.100" endtime="20201029 12:42:46.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.096" endtime="20201029 12:42:46.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.724" endtime="20201029 12:42:46.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.724" endtime="20201029 12:42:46.103"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.112" endtime="20201029 12:42:46.126"></status>
</kw>
<msg timestamp="20201029 12:42:46.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.110" endtime="20201029 12:42:46.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.129" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.128" endtime="20201029 12:42:46.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.130" endtime="20201029 12:42:46.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.107" endtime="20201029 12:42:46.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.105" endtime="20201029 12:42:46.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.139" endtime="20201029 12:42:46.445"></status>
</kw>
<msg timestamp="20201029 12:42:46.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.253055042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.253055514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:46.138" endtime="20201029 12:42:46.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.253055042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.253055514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:46.450" endtime="20201029 12:42:46.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.460" endtime="20201029 12:42:46.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.135" endtime="20201029 12:42:46.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.133" endtime="20201029 12:42:46.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:46.467" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07},...</msg>
<status status="PASS" starttime="20201029 12:42:46.464" endtime="20201029 12:42:46.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:46.473" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:42:46.468" endtime="20201029 12:42:46.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.477" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:46.476" endtime="20201029 12:42:46.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.479" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.869999998824426e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.869999998824426e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:42:46.478" endtime="20201029 12:42:46.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.474" endtime="20201029 12:42:46.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.104" endtime="20201029 12:42:46.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.104" endtime="20201029 12:42:46.481"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.489" endtime="20201029 12:42:46.503"></status>
</kw>
<msg timestamp="20201029 12:42:46.503" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.487" endtime="20201029 12:42:46.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.505" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.504" endtime="20201029 12:42:46.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.507" endtime="20201029 12:42:46.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.485" endtime="20201029 12:42:46.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.483" endtime="20201029 12:42:46.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.515" endtime="20201029 12:42:46.830"></status>
</kw>
<msg timestamp="20201029 12:42:46.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.61894525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.618945722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:46.514" endtime="20201029 12:42:46.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.61894525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.618945722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:46.835" endtime="20201029 12:42:46.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.845" endtime="20201029 12:42:46.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.511" endtime="20201029 12:42:46.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.510" endtime="20201029 12:42:46.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:46.852" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 12:42:46.849" endtime="20201029 12:42:46.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:46.858" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:42:46.853" endtime="20201029 12:42:46.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.862" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:46.861" endtime="20201029 12:42:46.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.865" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:42:46.863" endtime="20201029 12:42:46.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.859" endtime="20201029 12:42:46.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.482" endtime="20201029 12:42:46.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.481" endtime="20201029 12:42:46.866"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.874" endtime="20201029 12:42:46.889"></status>
</kw>
<msg timestamp="20201029 12:42:46.890" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.872" endtime="20201029 12:42:46.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.892" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.891" endtime="20201029 12:42:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.893" endtime="20201029 12:42:46.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.870" endtime="20201029 12:42:46.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.868" endtime="20201029 12:42:46.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.902" endtime="20201029 12:42:47.222"></status>
</kw>
<msg timestamp="20201029 12:42:47.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.986683778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.98668425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:46.901" endtime="20201029 12:42:47.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.986683778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.98668425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:47.227" endtime="20201029 12:42:47.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.237" endtime="20201029 12:42:47.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.898" endtime="20201029 12:42:47.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.896" endtime="20201029 12:42:47.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:47.244" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:42:47.241" endtime="20201029 12:42:47.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:47.249" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:42:47.245" endtime="20201029 12:42:47.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.253" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:47.252" endtime="20201029 12:42:47.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.256" level="INFO">VALUE: [4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:42:47.254" endtime="20201029 12:42:47.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.250" endtime="20201029 12:42:47.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.867" endtime="20201029 12:42:47.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.866" endtime="20201029 12:42:47.257"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.266" endtime="20201029 12:42:47.282"></status>
</kw>
<msg timestamp="20201029 12:42:47.283" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.264" endtime="20201029 12:42:47.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.285" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.284" endtime="20201029 12:42:47.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.286" endtime="20201029 12:42:47.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.261" endtime="20201029 12:42:47.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.259" endtime="20201029 12:42:47.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.295" endtime="20201029 12:42:47.606"></status>
</kw>
<msg timestamp="20201029 12:42:47.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.363574056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.363574528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.294" endtime="20201029 12:42:47.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.363574056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.363574528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.611" endtime="20201029 12:42:47.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.621" endtime="20201029 12:42:47.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.291" endtime="20201029 12:42:47.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.289" endtime="20201029 12:42:47.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:47.628" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07},...</msg>
<status status="PASS" starttime="20201029 12:42:47.624" endtime="20201029 12:42:47.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:47.634" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:42:47.629" endtime="20201029 12:42:47.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.639" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:47.637" endtime="20201029 12:42:47.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.641" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:42:47.640" endtime="20201029 12:42:47.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.635" endtime="20201029 12:42:47.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.258" endtime="20201029 12:42:47.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.258" endtime="20201029 12:42:47.643"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.650" endtime="20201029 12:42:47.668"></status>
</kw>
<msg timestamp="20201029 12:42:47.669" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.649" endtime="20201029 12:42:47.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.671" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.670" endtime="20201029 12:42:47.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.673" endtime="20201029 12:42:47.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.646" endtime="20201029 12:42:47.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.645" endtime="20201029 12:42:47.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.684" endtime="20201029 12:42:48.001"></status>
</kw>
<msg timestamp="20201029 12:42:48.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.743624611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.743625083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:47.682" endtime="20201029 12:42:48.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.743624611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.743625083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.006" endtime="20201029 12:42:48.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.016" endtime="20201029 12:42:48.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.679" endtime="20201029 12:42:48.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.678" endtime="20201029 12:42:48.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:48.023" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}...</msg>
<status status="PASS" starttime="20201029 12:42:48.019" endtime="20201029 12:42:48.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:48.029" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:42:48.024" endtime="20201029 12:42:48.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.033" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:48.032" endtime="20201029 12:42:48.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.036" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07]</msg>
<status status="PASS" starttime="20201029 12:42:48.034" endtime="20201029 12:42:48.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.030" endtime="20201029 12:42:48.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.644" endtime="20201029 12:42:48.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.643" endtime="20201029 12:42:48.037"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.045" endtime="20201029 12:42:48.060"></status>
</kw>
<msg timestamp="20201029 12:42:48.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.043" endtime="20201029 12:42:48.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.063" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.061" endtime="20201029 12:42:48.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.064" endtime="20201029 12:42:48.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.041" endtime="20201029 12:42:48.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.039" endtime="20201029 12:42:48.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.074" endtime="20201029 12:42:48.382"></status>
</kw>
<msg timestamp="20201029 12:42:48.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.121430097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.121430569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.071" endtime="20201029 12:42:48.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.121430097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.121430569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.387" endtime="20201029 12:42:48.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.397" endtime="20201029 12:42:48.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.069" endtime="20201029 12:42:48.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.067" endtime="20201029 12:42:48.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:48.404" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:42:48.400" endtime="20201029 12:42:48.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:48.408" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 12:42:48.405" endtime="20201029 12:42:48.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.413" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:48.412" endtime="20201029 12:42:48.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.415" level="INFO">VALUE: [4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:42:48.414" endtime="20201029 12:42:48.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.409" endtime="20201029 12:42:48.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.038" endtime="20201029 12:42:48.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.037" endtime="20201029 12:42:48.417"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.426" endtime="20201029 12:42:48.441"></status>
</kw>
<msg timestamp="20201029 12:42:48.442" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.424" endtime="20201029 12:42:48.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.444" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.443" endtime="20201029 12:42:48.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.445" endtime="20201029 12:42:48.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.421" endtime="20201029 12:42:48.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.419" endtime="20201029 12:42:48.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.454" endtime="20201029 12:42:48.779"></status>
</kw>
<msg timestamp="20201029 12:42:48.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.504266722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.504267208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.453" endtime="20201029 12:42:48.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.504266722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.504267208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.784" endtime="20201029 12:42:48.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.793" endtime="20201029 12:42:48.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.450" endtime="20201029 12:42:48.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.449" endtime="20201029 12:42:48.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:48.800" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:42:48.797" endtime="20201029 12:42:48.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:48.806" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.8...</msg>
<status status="PASS" starttime="20201029 12:42:48.801" endtime="20201029 12:42:48.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.810" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:48.809" endtime="20201029 12:42:48.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.813" level="INFO">VALUE: [4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:42:48.811" endtime="20201029 12:42:48.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.807" endtime="20201029 12:42:48.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.418" endtime="20201029 12:42:48.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.417" endtime="20201029 12:42:48.814"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.822" endtime="20201029 12:42:48.844"></status>
</kw>
<msg timestamp="20201029 12:42:48.844" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.820" endtime="20201029 12:42:48.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.845" endtime="20201029 12:42:48.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.848" endtime="20201029 12:42:48.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.818" endtime="20201029 12:42:48.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.816" endtime="20201029 12:42:48.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.857" endtime="20201029 12:42:49.176"></status>
</kw>
<msg timestamp="20201029 12:42:49.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.877000847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.877001333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:48.855" endtime="20201029 12:42:49.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.877000847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.877001333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.181" endtime="20201029 12:42:49.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.191" endtime="20201029 12:42:49.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.853" endtime="20201029 12:42:49.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.851" endtime="20201029 12:42:49.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.200" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 12:42:49.194" endtime="20201029 12:42:49.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.205" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 12:42:49.201" endtime="20201029 12:42:49.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.209" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:49.208" endtime="20201029 12:42:49.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.212" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:42:49.210" endtime="20201029 12:42:49.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.206" endtime="20201029 12:42:49.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.815" endtime="20201029 12:42:49.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.815" endtime="20201029 12:42:49.213"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.221" endtime="20201029 12:42:49.236"></status>
</kw>
<msg timestamp="20201029 12:42:49.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.219" endtime="20201029 12:42:49.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.237" endtime="20201029 12:42:49.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.240" endtime="20201029 12:42:49.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.217" endtime="20201029 12:42:49.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.215" endtime="20201029 12:42:49.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.250" endtime="20201029 12:42:49.557"></status>
</kw>
<msg timestamp="20201029 12:42:49.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.263897694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.263898167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.248" endtime="20201029 12:42:49.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.263897694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.263898167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.562" endtime="20201029 12:42:49.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.572" endtime="20201029 12:42:49.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.245" endtime="20201029 12:42:49.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.243" endtime="20201029 12:42:49.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.579" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 12:42:49.576" endtime="20201029 12:42:49.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.584" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.719999...</msg>
<status status="PASS" starttime="20201029 12:42:49.580" endtime="20201029 12:42:49.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.589" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:49.587" endtime="20201029 12:42:49.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.591" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:42:49.590" endtime="20201029 12:42:49.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.585" endtime="20201029 12:42:49.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.214" endtime="20201029 12:42:49.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.214" endtime="20201029 12:42:49.593"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.601" endtime="20201029 12:42:49.617"></status>
</kw>
<msg timestamp="20201029 12:42:49.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.599" endtime="20201029 12:42:49.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.619" endtime="20201029 12:42:49.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.621" endtime="20201029 12:42:49.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.597" endtime="20201029 12:42:49.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.595" endtime="20201029 12:42:49.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.631" endtime="20201029 12:42:49.953"></status>
</kw>
<msg timestamp="20201029 12:42:49.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.650870486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.650870958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.629" endtime="20201029 12:42:49.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.650870486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.650870958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:49.958" endtime="20201029 12:42:49.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.968" endtime="20201029 12:42:49.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.627" endtime="20201029 12:42:49.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.624" endtime="20201029 12:42:49.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.975" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999991681666e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07...</msg>
<status status="PASS" starttime="20201029 12:42:49.971" endtime="20201029 12:42:49.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.980" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 12:42:49.976" endtime="20201029 12:42:49.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.984" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:49.983" endtime="20201029 12:42:49.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.987" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:42:49.986" endtime="20201029 12:42:49.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.981" endtime="20201029 12:42:49.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.594" endtime="20201029 12:42:49.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.593" endtime="20201029 12:42:49.989"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.996" endtime="20201029 12:42:50.015"></status>
</kw>
<msg timestamp="20201029 12:42:50.016" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.995" endtime="20201029 12:42:50.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.018" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.017" endtime="20201029 12:42:50.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.019" endtime="20201029 12:42:50.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.992" endtime="20201029 12:42:50.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.990" endtime="20201029 12:42:50.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.028" endtime="20201029 12:42:50.351"></status>
</kw>
<msg timestamp="20201029 12:42:50.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.022697556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.022698028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.027" endtime="20201029 12:42:50.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.022697556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.022698028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.357" endtime="20201029 12:42:50.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.368" endtime="20201029 12:42:50.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.024" endtime="20201029 12:42:50.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.023" endtime="20201029 12:42:50.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:50.377" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201029 12:42:50.372" endtime="20201029 12:42:50.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:50.382" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 12:42:50.378" endtime="20201029 12:42:50.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.387" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:50.385" endtime="20201029 12:42:50.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.389" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 12:42:50.388" endtime="20201029 12:42:50.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.383" endtime="20201029 12:42:50.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.989" endtime="20201029 12:42:50.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.989" endtime="20201029 12:42:50.391"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.399" endtime="20201029 12:42:50.416"></status>
</kw>
<msg timestamp="20201029 12:42:50.417" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.397" endtime="20201029 12:42:50.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.418" endtime="20201029 12:42:50.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.420" endtime="20201029 12:42:50.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.394" endtime="20201029 12:42:50.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.393" endtime="20201029 12:42:50.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.430" endtime="20201029 12:42:50.740"></status>
</kw>
<msg timestamp="20201029 12:42:50.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.409615042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.409615514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.428" endtime="20201029 12:42:50.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.409615042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.409615514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.745" endtime="20201029 12:42:50.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.755" endtime="20201029 12:42:50.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.426" endtime="20201029 12:42:50.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.424" endtime="20201029 12:42:50.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:50.761" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:42:50.758" endtime="20201029 12:42:50.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:50.767" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.71...</msg>
<status status="PASS" starttime="20201029 12:42:50.762" endtime="20201029 12:42:50.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.771" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:50.770" endtime="20201029 12:42:50.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.774" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 12:42:50.772" endtime="20201029 12:42:50.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.768" endtime="20201029 12:42:50.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.391" endtime="20201029 12:42:50.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.391" endtime="20201029 12:42:50.775"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.783" endtime="20201029 12:42:50.800"></status>
</kw>
<msg timestamp="20201029 12:42:50.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.782" endtime="20201029 12:42:50.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.801" endtime="20201029 12:42:50.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.804" endtime="20201029 12:42:50.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.779" endtime="20201029 12:42:50.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.777" endtime="20201029 12:42:50.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.813" endtime="20201029 12:42:51.131"></status>
</kw>
<msg timestamp="20201029 12:42:51.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.801578917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.801579389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:50.812" endtime="20201029 12:42:51.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.801578917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.801579389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.136" endtime="20201029 12:42:51.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.146" endtime="20201029 12:42:51.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.809" endtime="20201029 12:42:51.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.807" endtime="20201029 12:42:51.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:51.153" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201029 12:42:51.150" endtime="20201029 12:42:51.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:51.159" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 12:42:51.154" endtime="20201029 12:42:51.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.163" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:51.162" endtime="20201029 12:42:51.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.166" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999994383534e-07]</msg>
<status status="PASS" starttime="20201029 12:42:51.164" endtime="20201029 12:42:51.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.160" endtime="20201029 12:42:51.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.776" endtime="20201029 12:42:51.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.776" endtime="20201029 12:42:51.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.471" endtime="20201029 12:42:51.167"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:43.398" endtime="20201029 12:42:51.168" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:51.174" endtime="20201029 12:42:51.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.173" endtime="20201029 12:42:51.195"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.208" endtime="20201029 12:42:51.227"></status>
</kw>
<msg timestamp="20201029 12:42:51.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.207" endtime="20201029 12:42:51.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.229" endtime="20201029 12:42:51.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:51.231" endtime="20201029 12:42:51.233"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.204" endtime="20201029 12:42:51.234"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.202" endtime="20201029 12:42:51.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.200" endtime="20201029 12:42:51.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:51.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:51.238" endtime="20201029 12:42:51.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.236" endtime="20201029 12:42:51.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.199" endtime="20201029 12:42:51.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.198" endtime="20201029 12:42:51.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.240" endtime="20201029 12:42:51.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.197" endtime="20201029 12:42:51.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.195" endtime="20201029 12:42:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.172" endtime="20201029 12:42:51.243"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.252" endtime="20201029 12:42:51.266"></status>
</kw>
<msg timestamp="20201029 12:42:51.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.250" endtime="20201029 12:42:51.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.268" endtime="20201029 12:42:51.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.270" endtime="20201029 12:42:51.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.247" endtime="20201029 12:42:51.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.246" endtime="20201029 12:42:51.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.279" endtime="20201029 12:42:51.566"></status>
</kw>
<msg timestamp="20201029 12:42:51.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067520681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067524889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.278" endtime="20201029 12:42:51.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067520681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067524889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.570" endtime="20201029 12:42:51.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.579" endtime="20201029 12:42:51.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.275" endtime="20201029 12:42:51.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.274" endtime="20201029 12:42:51.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:51.585" level="INFO">${RESULT} = [{'diff': 4.208000000005541e-06}, {'diff': 4.166999999999366e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.222999999997645e-06}, {'diff': 4.263000000004347e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:51.582" endtime="20201029 12:42:51.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:51.591" level="INFO">${OVERHEAD} = {'diff': [4.208000000005541e-06, 4.166999999999366e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.263000000004347e-06, 4.208000000005541e-06, 4.2360000000046805e-06, 4.237...</msg>
<status status="PASS" starttime="20201029 12:42:51.586" endtime="20201029 12:42:51.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.595" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:51.594" endtime="20201029 12:42:51.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.597" level="INFO">VALUE: [4.208000000005541e-06, 4.166999999999366e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.263000000004347e-06, 4.208000000005541e-06, 4.2360000000046805e-06, 4.237000000004154e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.2499999999973115e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.1949999999985055e-06, 4.2499999999973115e-06, 4.207999999991663e-06, 4.207999999991663e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.208000000005541e-06, 4.250000000011189e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2360000000046805e-06, 4.208000000005541e-06, 4.222999999997645e-06, 4.223000000011523e-06, 4.221999999998172e-06, 4.193999999999032e-06, 4.180000000006401e-06, 4.179999999992523e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.237000000004154e-06, 4.277999999996451e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2089999999911365e-06, 4.262999999990469e-06, 4.221999999998172e-06, 4.2639999999899425e-06, 4.2360000000046805e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.2360000000046805e-06]</msg>
<status status="PASS" starttime="20201029 12:42:51.596" endtime="20201029 12:42:51.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.591" endtime="20201029 12:42:51.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.245" endtime="20201029 12:42:51.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.244" endtime="20201029 12:42:51.599"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.607" endtime="20201029 12:42:51.623"></status>
</kw>
<msg timestamp="20201029 12:42:51.623" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.605" endtime="20201029 12:42:51.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.626" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.625" endtime="20201029 12:42:51.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.627" endtime="20201029 12:42:51.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.603" endtime="20201029 12:42:51.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.601" endtime="20201029 12:42:51.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.636" endtime="20201029 12:42:51.943"></status>
</kw>
<msg timestamp="20201029 12:42:51.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067927903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067932153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.635" endtime="20201029 12:42:51.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067927903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067932153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.950" endtime="20201029 12:42:51.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.961" endtime="20201029 12:42:51.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.632" endtime="20201029 12:42:51.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.630" endtime="20201029 12:42:51.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:51.969" level="INFO">${RESULT} = [{'diff': 4.2499999999973115e-06}, {'diff': 4.237000000004154e-06}, {'diff': 4.277999999996451e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.2360000000046805e-06}, {'diff': 4.2089999999911365e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:51.965" endtime="20201029 12:42:51.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:51.975" level="INFO">${OVERHEAD} = {'diff': [4.2499999999973115e-06, 4.237000000004154e-06, 4.277999999996451e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2089999999911365e-06, 4.262999999990469e-06, 4.221999999998172e-06, 4.2...</msg>
<status status="PASS" starttime="20201029 12:42:51.971" endtime="20201029 12:42:51.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.980" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:51.979" endtime="20201029 12:42:51.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.983" level="INFO">VALUE: [4.2499999999973115e-06, 4.237000000004154e-06, 4.277999999996451e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2089999999911365e-06, 4.262999999990469e-06, 4.221999999998172e-06, 4.2639999999899425e-06, 4.2360000000046805e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.2360000000046805e-06, 4.22299999996989e-06, 4.235999999990803e-06, 4.19400000001291e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.166999999999366e-06, 4.208000000005541e-06, 4.235999999990803e-06, 4.277999999968696e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.180999999991997e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.223000000025401e-06, 4.235999999990803e-06, 4.249999999983434e-06, 4.208999999977259e-06, 4.221999999998172e-06, 4.237000000018032e-06, 4.208999999977259e-06, 4.235999999990803e-06, 4.19400000001291e-06, 4.237000000018032e-06, 4.221999999998172e-06, 4.250000000038945e-06, 4.236000000046314e-06, 4.249999999983434e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.3200000000021e-06, 4.249999999983434e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.166999999999366e-06, 4.208999999977259e-06, 4.235999999990803e-06, 4.208999999977259e-06, 4.20900000003277e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.263999999976065e-06, 4.236000000046314e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.19400000001291e-06, 4.223000000025401e-06, 4.249999999983434e-06]</msg>
<status status="PASS" starttime="20201029 12:42:51.981" endtime="20201029 12:42:51.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.977" endtime="20201029 12:42:51.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.600" endtime="20201029 12:42:51.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.599" endtime="20201029 12:42:51.985"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.993" endtime="20201029 12:42:52.009"></status>
</kw>
<msg timestamp="20201029 12:42:52.010" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.992" endtime="20201029 12:42:52.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.011" endtime="20201029 12:42:52.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.014" endtime="20201029 12:42:52.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.988" endtime="20201029 12:42:52.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.987" endtime="20201029 12:42:52.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.023" endtime="20201029 12:42:52.332"></status>
</kw>
<msg timestamp="20201029 12:42:52.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.414664611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414668847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.021" endtime="20201029 12:42:52.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.414664611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414668847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.337" endtime="20201029 12:42:52.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.347" endtime="20201029 12:42:52.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.018" endtime="20201029 12:42:52.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.017" endtime="20201029 12:42:52.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:52.354" level="INFO">${RESULT} = [{'diff': 4.235999999990803e-06}, {'diff': 4.208999999977259e-06}, {'diff': 4.20900000003277e-06}, {'diff': 4.235999999990803e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.235999999990803e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:42:52.351" endtime="20201029 12:42:52.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:52.362" level="INFO">${OVERHEAD} = {'diff': [4.235999999990803e-06, 4.208999999977259e-06, 4.20900000003277e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.263999999976065e-06, 4.236000000046314e-06, 4.22199...</msg>
<status status="PASS" starttime="20201029 12:42:52.355" endtime="20201029 12:42:52.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.366" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:52.365" endtime="20201029 12:42:52.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.369" level="INFO">VALUE: [4.235999999990803e-06, 4.208999999977259e-06, 4.20900000003277e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.263999999976065e-06, 4.236000000046314e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.235999999990803e-06, 4.19400000001291e-06, 4.223000000025401e-06, 4.249999999983434e-06, 4.222000000053683e-06, 4.2219999999426605e-06, 4.250000000038945e-06, 4.2499999999279225e-06, 4.235999999990803e-06, 4.222000000053683e-06, 4.209000000088281e-06, 4.2219999999426605e-06, 4.208000000005541e-06, 4.2219999999426605e-06, 4.250000000038945e-06, 4.208999999977259e-06, 4.235999999990803e-06, 4.208999999977259e-06, 4.2499999999279225e-06, 4.250000000038945e-06, 4.223000000025401e-06, 4.2219999999426605e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.207999999894518e-06, 4.2219999999426605e-06, 4.2219999999426605e-06, 4.236999999962521e-06, 4.235999999990803e-06, 4.250000000038945e-06, 4.236000000101825e-06, 4.235999999990803e-06, 4.222999999914379e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.263999999976065e-06, 4.236000000101825e-06, 4.180999999991997e-06, 4.2499999999279225e-06, 4.291999999961327e-06, 4.235999999990803e-06, 4.208000000005541e-06, 4.250000000038945e-06, 4.223000000025401e-06, 4.250000000038945e-06, 4.180999999991997e-06, 4.2219999999426605e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.208999999977259e-06, 4.278000000024207e-06, 4.153000000006735e-06]</msg>
<status status="PASS" starttime="20201029 12:42:52.367" endtime="20201029 12:42:52.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.363" endtime="20201029 12:42:52.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.985" endtime="20201029 12:42:52.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.985" endtime="20201029 12:42:52.370"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.378" endtime="20201029 12:42:52.396"></status>
</kw>
<msg timestamp="20201029 12:42:52.396" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.376" endtime="20201029 12:42:52.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.397" endtime="20201029 12:42:52.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.400" endtime="20201029 12:42:52.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.374" endtime="20201029 12:42:52.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.372" endtime="20201029 12:42:52.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.409" endtime="20201029 12:42:52.702"></status>
</kw>
<msg timestamp="20201029 12:42:52.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.790603333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790607569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.407" endtime="20201029 12:42:52.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.790603333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790607569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.707" endtime="20201029 12:42:52.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.717" endtime="20201029 12:42:52.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.405" endtime="20201029 12:42:52.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.403" endtime="20201029 12:42:52.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:52.724" level="INFO">${RESULT} = [{'diff': 4.235999999990803e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.250000000038945e-06}, {'diff': 4.223000000025401e-06}, {'diff': 4.250000000038945e-06}, {'diff': 4.180999999991997e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:52.721" endtime="20201029 12:42:52.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:52.730" level="INFO">${OVERHEAD} = {'diff': [4.235999999990803e-06, 4.208000000005541e-06, 4.250000000038945e-06, 4.223000000025401e-06, 4.250000000038945e-06, 4.180999999991997e-06, 4.2219999999426605e-06, 4.222000000053683e-06, 4.263...</msg>
<status status="PASS" starttime="20201029 12:42:52.725" endtime="20201029 12:42:52.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.734" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:52.733" endtime="20201029 12:42:52.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.737" level="INFO">VALUE: [4.235999999990803e-06, 4.208000000005541e-06, 4.250000000038945e-06, 4.223000000025401e-06, 4.250000000038945e-06, 4.180999999991997e-06, 4.2219999999426605e-06, 4.222000000053683e-06, 4.263999999976065e-06, 4.222000000053683e-06, 4.235999999990803e-06, 4.208999999977259e-06, 4.278000000024207e-06, 4.153000000006735e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.305999999898447e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.23599999987978e-06, 4.263999999976065e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.236999999962521e-06, 4.222000000053683e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.221999999831638e-06, 4.180000000131301e-06, 4.222000000053683e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.223000000136423e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.278000000024207e-06, 4.2499999999279225e-06, 4.23599999987978e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.180999999991997e-06, 4.263999999976065e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.292000000072349e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.165999999861114e-06, 4.209000000088281e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.250000000149967e-06, 4.2499999999279225e-06, 4.222999999914379e-06]</msg>
<status status="PASS" starttime="20201029 12:42:52.735" endtime="20201029 12:42:52.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.731" endtime="20201029 12:42:52.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.371" endtime="20201029 12:42:52.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.370" endtime="20201029 12:42:52.738"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.746" endtime="20201029 12:42:52.762"></status>
</kw>
<msg timestamp="20201029 12:42:52.763" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.745" endtime="20201029 12:42:52.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.765" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.764" endtime="20201029 12:42:52.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.766" endtime="20201029 12:42:52.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.742" endtime="20201029 12:42:52.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.740" endtime="20201029 12:42:52.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.775" endtime="20201029 12:42:53.084"></status>
</kw>
<msg timestamp="20201029 12:42:53.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.167507069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.16751125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:52.774" endtime="20201029 12:42:53.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.167507069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.16751125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:53.090" endtime="20201029 12:42:53.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.099" endtime="20201029 12:42:53.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.771" endtime="20201029 12:42:53.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.769" endtime="20201029 12:42:53.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.106" level="INFO">${RESULT} = [{'diff': 4.180999999991997e-06}, {'diff': 4.263999999976065e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.292000000072349e-06}, {'diff': 4.2499999999279225e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:53.103" endtime="20201029 12:42:53.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:53.111" level="INFO">${OVERHEAD} = {'diff': [4.180999999991997e-06, 4.263999999976065e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.292000000072349e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.165999999861114e-06, 4.209...</msg>
<status status="PASS" starttime="20201029 12:42:53.107" endtime="20201029 12:42:53.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.115" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:53.114" endtime="20201029 12:42:53.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.117" level="INFO">VALUE: [4.180999999991997e-06, 4.263999999976065e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.292000000072349e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.165999999861114e-06, 4.209000000088281e-06, 4.222999999914379e-06, 4.222000000053683e-06, 4.250000000149967e-06, 4.2499999999279225e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.194999999818094e-06, 4.139000000069615e-06, 4.263999999976065e-06, 4.236999999962521e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.221999999831638e-06, 4.250000000149967e-06, 4.290999999989609e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.236999999962521e-06, 4.263999999976065e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.278000000024207e-06, 4.250000000149967e-06, 4.222000000053683e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.208999999866236e-06, 4.305000000037751e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.195000000040139e-06, 4.278000000024207e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.23599999987978e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.116" endtime="20201029 12:42:53.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.112" endtime="20201029 12:42:53.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.739" endtime="20201029 12:42:53.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.739" endtime="20201029 12:42:53.119"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.127" endtime="20201029 12:42:53.146"></status>
</kw>
<msg timestamp="20201029 12:42:53.147" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.126" endtime="20201029 12:42:53.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.148" endtime="20201029 12:42:53.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.150" endtime="20201029 12:42:53.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.123" endtime="20201029 12:42:53.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.121" endtime="20201029 12:42:53.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.159" endtime="20201029 12:42:53.456"></status>
</kw>
<msg timestamp="20201029 12:42:53.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.524295292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.524299597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.158" endtime="20201029 12:42:53.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.524295292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.524299597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.468" endtime="20201029 12:42:53.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.480" endtime="20201029 12:42:53.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.155" endtime="20201029 12:42:53.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.153" endtime="20201029 12:42:53.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.489" level="INFO">${RESULT} = [{'diff': 4.305000000037751e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.222000000053683e-06}, {'diff': 4.23599999987978e-06}, {'diff': 4.2499999999279225e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:53.485" endtime="20201029 12:42:53.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:53.495" level="INFO">${OVERHEAD} = {'diff': [4.305000000037751e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.2080...</msg>
<status status="PASS" starttime="20201029 12:42:53.491" endtime="20201029 12:42:53.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.499" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:53.498" endtime="20201029 12:42:53.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.502" level="INFO">VALUE: [4.305000000037751e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.195000000040139e-06, 4.278000000024207e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.222000000053683e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.223000000136423e-06, 4.23599999987978e-06, 4.208999999866236e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.1669999999438545e-06, 4.222000000053683e-06, 4.23599999987978e-06, 4.194999999818094e-06, 4.236000000101825e-06, 4.250000000149967e-06, 4.139000000069615e-06, 4.194000000179443e-06, 4.1939999999573985e-06, 4.236000000101825e-06, 4.23599999987978e-06, 4.222000000053683e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222000000053683e-06, 4.194000000179443e-06, 4.222000000053683e-06, 4.2499999999279225e-06, 4.23599999987978e-06, 4.236000000101825e-06, 4.153000000117757e-06, 4.23599999987978e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.250000000149967e-06, 4.263999999976065e-06, 4.333999999994731e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.152999999895712e-06, 4.236999999962521e-06, 4.23599999987978e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.500" endtime="20201029 12:42:53.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.496" endtime="20201029 12:42:53.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.120" endtime="20201029 12:42:53.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.119" endtime="20201029 12:42:53.503"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.511" endtime="20201029 12:42:53.527"></status>
</kw>
<msg timestamp="20201029 12:42:53.527" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.509" endtime="20201029 12:42:53.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.529" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.528" endtime="20201029 12:42:53.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.530" endtime="20201029 12:42:53.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.507" endtime="20201029 12:42:53.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.505" endtime="20201029 12:42:53.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.540" endtime="20201029 12:42:53.864"></status>
</kw>
<msg timestamp="20201029 12:42:53.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.894312875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.894317125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.538" endtime="20201029 12:42:53.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.894312875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.894317125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.869" endtime="20201029 12:42:53.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.878" endtime="20201029 12:42:53.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.535" endtime="20201029 12:42:53.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.534" endtime="20201029 12:42:53.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.885" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.250000000149967e-06}, {'diff': 4.263999999976065e-06}, {'diff': 4.333999999994731e-06}, {'diff': 4.209000000088281e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:53.882" endtime="20201029 12:42:53.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:53.891" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.236000000101825e-06, 4.250000000149967e-06, 4.263999999976065e-06, 4.333999999994731e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.23...</msg>
<status status="PASS" starttime="20201029 12:42:53.886" endtime="20201029 12:42:53.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.895" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:53.894" endtime="20201029 12:42:53.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.898" level="INFO">VALUE: [4.2499999999279225e-06, 4.236000000101825e-06, 4.250000000149967e-06, 4.263999999976065e-06, 4.333999999994731e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.152999999895712e-06, 4.236999999962521e-06, 4.23599999987978e-06, 4.194000000179443e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.236000000101825e-06, 4.264000000198109e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.179999999909256e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.194000000179443e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.237000000184565e-06, 4.2919999998503044e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.2769999999414665e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.278000000024207e-06, 4.223000000358468e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.180999999991997e-06, 4.222000000275727e-06, 4.208999999644192e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.896" endtime="20201029 12:42:53.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.892" endtime="20201029 12:42:53.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.504" endtime="20201029 12:42:53.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.504" endtime="20201029 12:42:53.899"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.907" endtime="20201029 12:42:53.923"></status>
</kw>
<msg timestamp="20201029 12:42:53.924" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.905" endtime="20201029 12:42:53.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.926" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.925" endtime="20201029 12:42:53.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.927" endtime="20201029 12:42:53.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.903" endtime="20201029 12:42:53.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.901" endtime="20201029 12:42:53.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.937" endtime="20201029 12:42:54.249"></status>
</kw>
<msg timestamp="20201029 12:42:54.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.267073542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.267077819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.935" endtime="20201029 12:42:54.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.267073542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.267077819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.254" endtime="20201029 12:42:54.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.263" endtime="20201029 12:42:54.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.932" endtime="20201029 12:42:54.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.930" endtime="20201029 12:42:54.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.270" level="INFO">${RESULT} = [{'diff': 4.2769999999414665e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.193999999735354e-06}, {'diff': 4.222000000275727e-06...</msg>
<status status="PASS" starttime="20201029 12:42:54.267" endtime="20201029 12:42:54.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:54.275" level="INFO">${OVERHEAD} = {'diff': [4.2769999999414665e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.278000000024207e-06, 4....</msg>
<status status="PASS" starttime="20201029 12:42:54.271" endtime="20201029 12:42:54.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.279" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:54.278" endtime="20201029 12:42:54.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.281" level="INFO">VALUE: [4.2769999999414665e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.278000000024207e-06, 4.223000000358468e-06, 4.180999999991997e-06, 4.236000000101825e-06, 4.180999999991997e-06, 4.222000000275727e-06, 4.208999999644192e-06, 4.208999999644192e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.264000000198109e-06, 4.179999999909256e-06, 4.264000000198109e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.264000000198109e-06, 4.209000000088281e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.236999999740476e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.236999999740476e-06, 4.290999999767564e-06, 4.2769999999414665e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.208999999644192e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.2769999999414665e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.194000000179443e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999831638e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.280" endtime="20201029 12:42:54.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.276" endtime="20201029 12:42:54.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.900" endtime="20201029 12:42:54.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.899" endtime="20201029 12:42:54.283"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.291" endtime="20201029 12:42:54.306"></status>
</kw>
<msg timestamp="20201029 12:42:54.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.290" endtime="20201029 12:42:54.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.309" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.307" endtime="20201029 12:42:54.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.310" endtime="20201029 12:42:54.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.287" endtime="20201029 12:42:54.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.286" endtime="20201029 12:42:54.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.319" endtime="20201029 12:42:54.635"></status>
</kw>
<msg timestamp="20201029 12:42:54.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.653989917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.653994194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.317" endtime="20201029 12:42:54.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.653989917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.653994194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.640" endtime="20201029 12:42:54.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.650" endtime="20201029 12:42:54.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.315" endtime="20201029 12:42:54.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.313" endtime="20201029 12:42:54.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.657" level="INFO">${RESULT} = [{'diff': 4.2769999999414665e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.222999999914379e-06}, {'diff': 4.194000000179443e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:54.653" endtime="20201029 12:42:54.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:54.662" level="INFO">${OVERHEAD} = {'diff': [4.2769999999414665e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.194000000179443e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.236...</msg>
<status status="PASS" starttime="20201029 12:42:54.657" endtime="20201029 12:42:54.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.667" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:54.665" endtime="20201029 12:42:54.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.670" level="INFO">VALUE: [4.2769999999414665e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.194000000179443e-06, 4.235999999657736e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.194999999818094e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.1950000002621834e-06, 4.208999999644192e-06, 4.209000000088281e-06, 4.194999999818094e-06, 4.208000000005541e-06, 4.209000000088281e-06, 4.193999999735354e-06, 4.26399999975402e-06, 4.208000000005541e-06, 4.264000000198109e-06, 4.208000000005541e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.237000000184565e-06, 4.222000000275727e-06, 4.221999999831638e-06, 4.208999999644192e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.209000000088281e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.194999999818094e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.209000000088281e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.668" endtime="20201029 12:42:54.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.663" endtime="20201029 12:42:54.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.284" endtime="20201029 12:42:54.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.283" endtime="20201029 12:42:54.672"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.682" endtime="20201029 12:42:54.698"></status>
</kw>
<msg timestamp="20201029 12:42:54.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.680" endtime="20201029 12:42:54.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.699" endtime="20201029 12:42:54.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.702" endtime="20201029 12:42:54.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.676" endtime="20201029 12:42:54.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.674" endtime="20201029 12:42:54.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.714" endtime="20201029 12:42:55.040"></status>
</kw>
<msg timestamp="20201029 12:42:55.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.027670125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.027674347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.712" endtime="20201029 12:42:55.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.027670125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.027674347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.045" endtime="20201029 12:42:55.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.055" endtime="20201029 12:42:55.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.709" endtime="20201029 12:42:55.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.707" endtime="20201029 12:42:55.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.062" level="INFO">${RESULT} = [{'diff': 4.221999999831638e-06}, {'diff': 4.209000000088281e-06}, {'diff': 4.209000000088281e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.208000000005541e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:55.059" endtime="20201029 12:42:55.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.067" level="INFO">${OVERHEAD} = {'diff': [4.221999999831638e-06, 4.209000000088281e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.194999999818094e-06, 4.221...</msg>
<status status="PASS" starttime="20201029 12:42:55.063" endtime="20201029 12:42:55.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.071" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:55.070" endtime="20201029 12:42:55.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.074" level="INFO">VALUE: [4.221999999831638e-06, 4.209000000088281e-06, 4.209000000088281e-06, 4.236000000101825e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.194999999818094e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.2499999999279225e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.237000000184565e-06, 4.2769999999414665e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.209000000088281e-06, 4.264000000198109e-06, 4.235999999657736e-06, 4.2079999995614514e-06, 4.221999999831638e-06, 4.250000000372012e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.221999999831638e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.152999999895712e-06, 4.194999999818094e-06, 4.236000000101825e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.26399999975402e-06, 4.221999999831638e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.222999999914379e-06, 4.2499999999279225e-06, 4.236999999740476e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.250000000372012e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.221999999831638e-06, 4.180999999991997e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.222000000275727e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.072" endtime="20201029 12:42:55.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.068" endtime="20201029 12:42:55.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.673" endtime="20201029 12:42:55.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.673" endtime="20201029 12:42:55.075"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.083" endtime="20201029 12:42:55.099"></status>
</kw>
<msg timestamp="20201029 12:42:55.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.081" endtime="20201029 12:42:55.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.102" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.101" endtime="20201029 12:42:55.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.103" endtime="20201029 12:42:55.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.079" endtime="20201029 12:42:55.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.077" endtime="20201029 12:42:55.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.112" endtime="20201029 12:42:55.439"></status>
</kw>
<msg timestamp="20201029 12:42:55.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.408657944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.408662181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.111" endtime="20201029 12:42:55.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.408657944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.408662181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.444" endtime="20201029 12:42:55.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.453" endtime="20201029 12:42:55.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.108" endtime="20201029 12:42:55.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.106" endtime="20201029 12:42:55.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.460" level="INFO">${RESULT} = [{'diff': 4.236999999740476e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.250000000372012e-06}, {'diff': 4.236000000101825e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:55.457" endtime="20201029 12:42:55.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.465" level="INFO">${OVERHEAD} = {'diff': [4.236999999740476e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.250000000372012e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.221999999831638e-06, 4.18099...</msg>
<status status="PASS" starttime="20201029 12:42:55.461" endtime="20201029 12:42:55.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.469" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:55.468" endtime="20201029 12:42:55.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.472" level="INFO">VALUE: [4.236999999740476e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.236000000101825e-06, 4.250000000372012e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.221999999831638e-06, 4.180999999991997e-06, 4.222999999914379e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.193999999735354e-06, 4.208000000005541e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.26399999975402e-06, 4.2499999999279225e-06, 4.179999999909256e-06, 4.209000000088281e-06, 4.179999999909256e-06, 4.250000000372012e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.235999999657736e-06, 4.221999999831638e-06, 4.222000000275727e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.222999999914379e-06, 4.236999999740476e-06, 4.2499999999279225e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.264000000198109e-06, 4.236000000101825e-06, 4.222999999914379e-06, 4.208000000005541e-06, 4.237000000184565e-06, 4.236000000101825e-06, 4.26399999975402e-06, 4.180999999991997e-06, 4.208000000005541e-06, 4.264000000198109e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.179999999909256e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.139000000069615e-06, 4.208999999644192e-06, 4.193999999735354e-06, 4.236000000101825e-06, 4.235999999657736e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.471" endtime="20201029 12:42:55.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.466" endtime="20201029 12:42:55.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.076" endtime="20201029 12:42:55.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.075" endtime="20201029 12:42:55.474"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.481" endtime="20201029 12:42:55.496"></status>
</kw>
<msg timestamp="20201029 12:42:55.497" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.480" endtime="20201029 12:42:55.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.498" endtime="20201029 12:42:55.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.502" endtime="20201029 12:42:55.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.477" endtime="20201029 12:42:55.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.476" endtime="20201029 12:42:55.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.515" endtime="20201029 12:42:55.833"></status>
</kw>
<msg timestamp="20201029 12:42:55.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.798787653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.798791861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.513" endtime="20201029 12:42:55.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.798787653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.798791861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.838" endtime="20201029 12:42:55.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.847" endtime="20201029 12:42:55.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.509" endtime="20201029 12:42:55.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.507" endtime="20201029 12:42:55.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.854" level="INFO">${RESULT} = [{'diff': 4.208000000005541e-06}, {'diff': 4.264000000198109e-06}, {'diff': 4.278000000024207e-06}, {'diff': 4.236000000101825e-06}, {'diff': 4.221999999831638e-06}, {'diff': 4.236000000101825e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:55.851" endtime="20201029 12:42:55.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.861" level="INFO">${OVERHEAD} = {'diff': [4.208000000005541e-06, 4.264000000198109e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.179999999909256e-06, 4.223000000358468e-06, 4.2220...</msg>
<status status="PASS" starttime="20201029 12:42:55.855" endtime="20201029 12:42:55.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.866" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:55.865" endtime="20201029 12:42:55.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.868" level="INFO">VALUE: [4.208000000005541e-06, 4.264000000198109e-06, 4.278000000024207e-06, 4.236000000101825e-06, 4.221999999831638e-06, 4.236000000101825e-06, 4.179999999909256e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.139000000069615e-06, 4.208999999644192e-06, 4.193999999735354e-06, 4.236000000101825e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.209000000088281e-06, 4.208000000005541e-06, 4.167000000165899e-06, 4.222999999470289e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.277999999580118e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.181000000436086e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.277000000385556e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.194999999818094e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.194999999818094e-06, 4.222000000275727e-06, 4.222999999470289e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.222000000275727e-06, 4.209000000088281e-06, 4.277000000385556e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.193999999735354e-06, 4.264000000198109e-06, 4.181000000436086e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.152999999895712e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.867" endtime="20201029 12:42:55.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.862" endtime="20201029 12:42:55.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.474" endtime="20201029 12:42:55.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.474" endtime="20201029 12:42:55.870"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.877" endtime="20201029 12:42:55.893"></status>
</kw>
<msg timestamp="20201029 12:42:55.894" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.876" endtime="20201029 12:42:55.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.895" endtime="20201029 12:42:55.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.897" endtime="20201029 12:42:55.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.873" endtime="20201029 12:42:55.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.872" endtime="20201029 12:42:55.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.907" endtime="20201029 12:42:56.229"></status>
</kw>
<msg timestamp="20201029 12:42:56.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.185722736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.185726972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.905" endtime="20201029 12:42:56.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.185722736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.185726972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.234" endtime="20201029 12:42:56.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.243" endtime="20201029 12:42:56.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.903" endtime="20201029 12:42:56.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.901" endtime="20201029 12:42:56.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.250" level="INFO">${RESULT} = [{'diff': 4.236000000545914e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.223000000358468e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.222000000275727e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:56.247" endtime="20201029 12:42:56.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:56.255" level="INFO">${OVERHEAD} = {'diff': [4.236000000545914e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.193...</msg>
<status status="PASS" starttime="20201029 12:42:56.251" endtime="20201029 12:42:56.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.259" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:56.258" endtime="20201029 12:42:56.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.261" level="INFO">VALUE: [4.236000000545914e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.193999999735354e-06, 4.264000000198109e-06, 4.181000000436086e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.152999999895712e-06, 4.124999999355339e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.2370000006286546e-06, 4.223000000358468e-06, 4.209000000088281e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.290999999767564e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.208999999200103e-06, 4.223000000358468e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.277999999580118e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 12:42:56.260" endtime="20201029 12:42:56.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.255" endtime="20201029 12:42:56.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.870" endtime="20201029 12:42:56.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.870" endtime="20201029 12:42:56.263"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.271" endtime="20201029 12:42:56.290"></status>
</kw>
<msg timestamp="20201029 12:42:56.290" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.270" endtime="20201029 12:42:56.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.291" endtime="20201029 12:42:56.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.294" endtime="20201029 12:42:56.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.266" endtime="20201029 12:42:56.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.265" endtime="20201029 12:42:56.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.303" endtime="20201029 12:42:56.622"></status>
</kw>
<msg timestamp="20201029 12:42:56.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.570787736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.570791972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.301" endtime="20201029 12:42:56.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.570787736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.570791972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.631" endtime="20201029 12:42:56.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.656" endtime="20201029 12:42:56.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.299" endtime="20201029 12:42:56.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.297" endtime="20201029 12:42:56.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.675" level="INFO">${RESULT} = [{'diff': 4.236000000545914e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.236000000545914e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:56.666" endtime="20201029 12:42:56.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:56.689" level="INFO">${OVERHEAD} = {'diff': [4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.23...</msg>
<status status="PASS" starttime="20201029 12:42:56.678" endtime="20201029 12:42:56.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.700" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:56.697" endtime="20201029 12:42:56.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.707" level="INFO">VALUE: [4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.2910000006557425e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.181000000436086e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.208000000005541e-06, 4.1809999995479075e-06, 4.278000000468296e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.306000000120491e-06, 4.179999999465167e-06, 4.221999999387549e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.236000000545914e-06, 4.125000000243517e-06, 4.194000000623532e-06, 4.193999999735354e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.223000000358468e-06, 4.222999999470289e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.193999999735354e-06, 4.193999999735354e-06, 4.194000000623532e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.277000000385556e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 12:42:56.703" endtime="20201029 12:42:56.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.691" endtime="20201029 12:42:56.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.264" endtime="20201029 12:42:56.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.263" endtime="20201029 12:42:56.711"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.728" endtime="20201029 12:42:56.748"></status>
</kw>
<msg timestamp="20201029 12:42:56.748" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.724" endtime="20201029 12:42:56.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.751" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.749" endtime="20201029 12:42:56.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.752" endtime="20201029 12:42:56.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.719" endtime="20201029 12:42:56.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.715" endtime="20201029 12:42:56.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.762" endtime="20201029 12:42:57.072"></status>
</kw>
<msg timestamp="20201029 12:42:57.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.955925806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.955930056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.760" endtime="20201029 12:42:57.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.955925806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.955930056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.077" endtime="20201029 12:42:57.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.087" endtime="20201029 12:42:57.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.758" endtime="20201029 12:42:57.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.756" endtime="20201029 12:42:57.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.093" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.193999999735354e-06}, {'diff': 4.193999999735354e-06}, {'diff': 4.194000000623532e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.236000000545914e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:57.090" endtime="20201029 12:42:57.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:57.099" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.193999999735354e-06, 4.193999999735354e-06, 4.194000000623532e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.2...</msg>
<status status="PASS" starttime="20201029 12:42:57.095" endtime="20201029 12:42:57.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.103" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:57.102" endtime="20201029 12:42:57.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.106" level="INFO">VALUE: [4.2499999999279225e-06, 4.193999999735354e-06, 4.193999999735354e-06, 4.194000000623532e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.277000000385556e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.209000000088281e-06, 4.151999999812972e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.320000000390678e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.151999999812972e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.2919999998503044e-06, 4.221999999387549e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.276999999497377e-06, 4.193999999735354e-06, 4.236999999740476e-06, 4.236999999740476e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.2910000006557425e-06, 4.152999999895712e-06, 4.222999999470289e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.305000000037751e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.222000000275727e-06, 4.222999999470289e-06, 4.263999999309931e-06, 4.208000000005541e-06]</msg>
<status status="PASS" starttime="20201029 12:42:57.105" endtime="20201029 12:42:57.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.100" endtime="20201029 12:42:57.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.712" endtime="20201029 12:42:57.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.711" endtime="20201029 12:42:57.108"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.115" endtime="20201029 12:42:57.129"></status>
</kw>
<msg timestamp="20201029 12:42:57.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.114" endtime="20201029 12:42:57.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.132" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.131" endtime="20201029 12:42:57.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.133" endtime="20201029 12:42:57.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.111" endtime="20201029 12:42:57.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.109" endtime="20201029 12:42:57.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.143" endtime="20201029 12:42:57.458"></status>
</kw>
<msg timestamp="20201029 12:42:57.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.4031215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.40312575, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:42:57.141" endtime="20201029 12:42:57.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.4031215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.40312575, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:42:57.463" endtime="20201029 12:42:57.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.473" endtime="20201029 12:42:57.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.138" endtime="20201029 12:42:57.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.137" endtime="20201029 12:42:57.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.480" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.305000000037751e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.236999999740476e-06}, {'diff': 4.235999999657736e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:57.476" endtime="20201029 12:42:57.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:57.485" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.221999999387549e-06, 4.305000000037751e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.249...</msg>
<status status="PASS" starttime="20201029 12:42:57.481" endtime="20201029 12:42:57.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.489" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:57.488" endtime="20201029 12:42:57.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.491" level="INFO">VALUE: [4.2499999999279225e-06, 4.221999999387549e-06, 4.305000000037751e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.222000000275727e-06, 4.222999999470289e-06, 4.263999999309931e-06, 4.208000000005541e-06, 4.223000000358468e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.1809999995479075e-06, 4.235999999657736e-06, 4.179999999465167e-06, 4.194999999818094e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.151999999812972e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.195000000706273e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.222999999470289e-06, 4.194000000623532e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.277000000385556e-06, 4.236000000545914e-06]</msg>
<status status="PASS" starttime="20201029 12:42:57.490" endtime="20201029 12:42:57.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.485" endtime="20201029 12:42:57.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.108" endtime="20201029 12:42:57.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.108" endtime="20201029 12:42:57.493"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.502" endtime="20201029 12:42:57.517"></status>
</kw>
<msg timestamp="20201029 12:42:57.517" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.500" endtime="20201029 12:42:57.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.520" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.518" endtime="20201029 12:42:57.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.521" endtime="20201029 12:42:57.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.498" endtime="20201029 12:42:57.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.495" endtime="20201029 12:42:57.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.530" endtime="20201029 12:42:57.853"></status>
</kw>
<msg timestamp="20201029 12:42:57.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.775894542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.775898736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.528" endtime="20201029 12:42:57.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.775894542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.775898736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.858" endtime="20201029 12:42:57.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.867" endtime="20201029 12:42:57.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.526" endtime="20201029 12:42:57.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.524" endtime="20201029 12:42:57.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.875" level="INFO">${RESULT} = [{'diff': 4.194000000623532e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.236000000545914e-06}, {'diff': 4.223000000358468e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.2499999999279225e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:57.871" endtime="20201029 12:42:57.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:57.880" level="INFO">${OVERHEAD} = {'diff': [4.194000000623532e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.22...</msg>
<status status="PASS" starttime="20201029 12:42:57.876" endtime="20201029 12:42:57.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.885" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:57.884" endtime="20201029 12:42:57.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.888" level="INFO">VALUE: [4.194000000623532e-06, 4.222000000275727e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.167000000165899e-06, 4.208000000005541e-06, 4.277000000385556e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.195000000706273e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.1809999995479075e-06, 4.138000000430964e-06, 4.235999999657736e-06, 4.194000000623532e-06, 4.223000000358468e-06, 4.235999999657736e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.276999999497377e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.2370000006286546e-06, 4.209000000088281e-06, 4.223000000358468e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.221999999387549e-06, 4.208000000005541e-06, 4.193999999735354e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.264000000198109e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.236000000545914e-06, 4.263999999309931e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.2919999998503044e-06]</msg>
<status status="PASS" starttime="20201029 12:42:57.886" endtime="20201029 12:42:57.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.881" endtime="20201029 12:42:57.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.494" endtime="20201029 12:42:57.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.493" endtime="20201029 12:42:57.889"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.897" endtime="20201029 12:42:57.912"></status>
</kw>
<msg timestamp="20201029 12:42:57.913" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.896" endtime="20201029 12:42:57.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.914" endtime="20201029 12:42:57.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.916" endtime="20201029 12:42:57.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.893" endtime="20201029 12:42:57.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.891" endtime="20201029 12:42:57.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.925" endtime="20201029 12:42:58.261"></status>
</kw>
<msg timestamp="20201029 12:42:58.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.152797417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.152801639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.924" endtime="20201029 12:42:58.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.152797417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.152801639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.266" endtime="20201029 12:42:58.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.276" endtime="20201029 12:42:58.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.921" endtime="20201029 12:42:58.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.919" endtime="20201029 12:42:58.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.284" level="INFO">${RESULT} = [{'diff': 4.221999999387549e-06}, {'diff': 4.221999999387549e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.223000000358468e-06}, {'diff': 4.264000000198109e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:58.280" endtime="20201029 12:42:58.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:58.289" level="INFO">${OVERHEAD} = {'diff': [4.221999999387549e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.264000000198109e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.223...</msg>
<status status="PASS" starttime="20201029 12:42:58.285" endtime="20201029 12:42:58.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.294" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:58.292" endtime="20201029 12:42:58.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.296" level="INFO">VALUE: [4.221999999387549e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.264000000198109e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.223000000358468e-06, 4.236000000545914e-06, 4.263999999309931e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.2919999998503044e-06, 4.236000000545914e-06, 4.332999999689946e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.278000000468296e-06, 4.236999999740476e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.194999999818094e-06, 4.208000000005541e-06, 4.264000000198109e-06, 4.221999999387549e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.236999999740476e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.276999999497377e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2370000006286546e-06, 4.264000000198109e-06, 4.2919999998503044e-06, 4.222999999470289e-06, 4.208999999200103e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 12:42:58.295" endtime="20201029 12:42:58.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.290" endtime="20201029 12:42:58.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.890" endtime="20201029 12:42:58.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.889" endtime="20201029 12:42:58.298"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.307" endtime="20201029 12:42:58.325"></status>
</kw>
<msg timestamp="20201029 12:42:58.325" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.305" endtime="20201029 12:42:58.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.328" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.326" endtime="20201029 12:42:58.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.329" endtime="20201029 12:42:58.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.302" endtime="20201029 12:42:58.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.300" endtime="20201029 12:42:58.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.339" endtime="20201029 12:42:58.654"></status>
</kw>
<msg timestamp="20201029 12:42:58.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.539692264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.539696514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.338" endtime="20201029 12:42:58.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.539692264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.539696514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.659" endtime="20201029 12:42:58.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.669" endtime="20201029 12:42:58.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.334" endtime="20201029 12:42:58.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.332" endtime="20201029 12:42:58.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.676" level="INFO">${RESULT} = [{'diff': 4.2499999999279225e-06}, {'diff': 4.222000000275727e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.2370000006286546e-06}, {'diff': 4.264000000198109e-06}, {'diff': 4.2919999998503044e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:58.673" endtime="20201029 12:42:58.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:58.681" level="INFO">${OVERHEAD} = {'diff': [4.2499999999279225e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2370000006286546e-06, 4.264000000198109e-06, 4.2919999998503044e-06, 4.222999999470289e-06, 4.208999999200103e-06, 4.2...</msg>
<status status="PASS" starttime="20201029 12:42:58.677" endtime="20201029 12:42:58.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:58.684" endtime="20201029 12:42:58.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.689" level="INFO">VALUE: [4.2499999999279225e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2370000006286546e-06, 4.264000000198109e-06, 4.2919999998503044e-06, 4.222999999470289e-06, 4.208999999200103e-06, 4.264000000198109e-06, 4.222000000275727e-06, 4.193999999735354e-06, 4.236000000545914e-06, 4.222000000275727e-06, 4.2499999999279225e-06, 4.194999999818094e-06, 4.236000000545914e-06, 4.236000000545914e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.277000000385556e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.2370000006286546e-06, 4.264000000198109e-06, 4.235999999657736e-06, 4.208000000005541e-06, 4.166000000083159e-06, 4.194999999818094e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.263999999309931e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.223000000358468e-06, 4.2499999999279225e-06, 4.195000000706273e-06, 4.2499999999279225e-06, 4.222000000275727e-06, 4.179999999465167e-06, 4.2499999999279225e-06, 4.2499999999279225e-06, 4.208000000005541e-06, 4.221999999387549e-06, 4.235999999657736e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.264000000198109e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.223000000358468e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.1809999995479075e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.306000000120491e-06, 4.222000000275727e-06, 4.1800000003533455e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.2499999999279225e-06]</msg>
<status status="PASS" starttime="20201029 12:42:58.687" endtime="20201029 12:42:58.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.682" endtime="20201029 12:42:58.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.299" endtime="20201029 12:42:58.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.298" endtime="20201029 12:42:58.690"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.705" endtime="20201029 12:42:58.721"></status>
</kw>
<msg timestamp="20201029 12:42:58.722" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.703" endtime="20201029 12:42:58.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.723" endtime="20201029 12:42:58.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.725" endtime="20201029 12:42:58.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.694" endtime="20201029 12:42:58.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.692" endtime="20201029 12:42:58.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.735" endtime="20201029 12:42:59.055"></status>
</kw>
<msg timestamp="20201029 12:42:59.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.941691069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.941695292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.733" endtime="20201029 12:42:59.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.941691069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.941695292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.061" endtime="20201029 12:42:59.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.071" endtime="20201029 12:42:59.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.731" endtime="20201029 12:42:59.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.729" endtime="20201029 12:42:59.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.078" level="INFO">${RESULT} = [{'diff': 4.223000000358468e-06}, {'diff': 4.208000000005541e-06}, {'diff': 4.2499999999279225e-06}, {'diff': 4.1809999995479075e-06}, {'diff': 4.235999999657736e-06}, {'diff': 4.235999999657736e-06},...</msg>
<status status="PASS" starttime="20201029 12:42:59.075" endtime="20201029 12:42:59.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:59.084" level="INFO">${OVERHEAD} = {'diff': [4.223000000358468e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.1809999995479075e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.306000000120491e-06, 4.22...</msg>
<status status="PASS" starttime="20201029 12:42:59.080" endtime="20201029 12:42:59.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.088" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:59.087" endtime="20201029 12:42:59.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.091" level="INFO">VALUE: [4.223000000358468e-06, 4.208000000005541e-06, 4.2499999999279225e-06, 4.1809999995479075e-06, 4.235999999657736e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.306000000120491e-06, 4.222000000275727e-06, 4.1800000003533455e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.264000000198109e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.235999999657736e-06, 4.181000000436086e-06, 4.1809999995479075e-06, 4.235999999657736e-06, 4.222000000275727e-06, 4.264000000198109e-06, 4.277999999580118e-06, 4.3199999995025e-06, 4.2499999999279225e-06, 4.236000000545914e-06, 4.221999999387549e-06, 4.222999999470289e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.179999999465167e-06, 4.208000000005541e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.2499999999279225e-06, 4.223000000358468e-06, 4.264000000198109e-06, 4.223000000358468e-06, 4.236000000545914e-06, 4.208000000005541e-06, 4.2919999998503044e-06, 4.208000000005541e-06, 4.235999999657736e-06, 4.250000000816101e-06, 4.222000000275727e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.235999999657736e-06, 4.194000000623532e-06, 4.236000000545914e-06, 4.2499999999279225e-06, 4.236999999740476e-06, 4.222000000275727e-06, 4.221999999387549e-06, 4.2499999999279225e-06, 4.235999999657736e-06, 4.179999999465167e-06, 4.264000000198109e-06, 4.209000000088281e-06, 4.235999999657736e-06, 4.221999999387549e-06, 4.277999999580118e-06]</msg>
<status status="PASS" starttime="20201029 12:42:59.090" endtime="20201029 12:42:59.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.085" endtime="20201029 12:42:59.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.691" endtime="20201029 12:42:59.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.691" endtime="20201029 12:42:59.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.244" endtime="20201029 12:42:59.093"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:51.169" endtime="20201029 12:42:59.094" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:59.101" endtime="20201029 12:42:59.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.099" endtime="20201029 12:42:59.121"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.135" endtime="20201029 12:42:59.154"></status>
</kw>
<msg timestamp="20201029 12:42:59.154" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.133" endtime="20201029 12:42:59.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.157" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.155" endtime="20201029 12:42:59.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.160" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:59.158" endtime="20201029 12:42:59.160"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.131" endtime="20201029 12:42:59.161"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.128" endtime="20201029 12:42:59.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.127" endtime="20201029 12:42:59.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:59.166" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:59.165" endtime="20201029 12:42:59.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.163" endtime="20201029 12:42:59.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.126" endtime="20201029 12:42:59.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.125" endtime="20201029 12:42:59.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.168" endtime="20201029 12:42:59.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.124" endtime="20201029 12:42:59.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.122" endtime="20201029 12:42:59.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.098" endtime="20201029 12:42:59.171"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.179" endtime="20201029 12:42:59.199"></status>
</kw>
<msg timestamp="20201029 12:42:59.200" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.178" endtime="20201029 12:42:59.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.203" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.201" endtime="20201029 12:42:59.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.204" endtime="20201029 12:42:59.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.175" endtime="20201029 12:42:59.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.173" endtime="20201029 12:42:59.207"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.209" endtime="20201029 12:42:59.211"></status>
</kw>
<msg timestamp="20201029 12:42:59.212" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:42:59.208" endtime="20201029 12:42:59.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.216" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:59.215" endtime="20201029 12:42:59.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.218" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:59.217" endtime="20201029 12:42:59.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.213" endtime="20201029 12:42:59.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.223" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:59.222" endtime="20201029 12:42:59.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.225" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:59.224" endtime="20201029 12:42:59.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.220" endtime="20201029 12:42:59.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.233" endtime="20201029 12:42:59.519"></status>
</kw>
<msg timestamp="20201029 12:42:59.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069779042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069787597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.231" endtime="20201029 12:42:59.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069779042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069787597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.523" endtime="20201029 12:42:59.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.532" endtime="20201029 12:42:59.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.229" endtime="20201029 12:42:59.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.227" endtime="20201029 12:42:59.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.539" level="INFO">${RESULT} = [{'diff': 8.555000000007307e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.735999999995303e-06}, {'diff': 8.708999999995637e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.652000000011761e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:42:59.535" endtime="20201029 12:42:59.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:59.543" level="INFO">${OVERHEAD} = {'diff': [8.555000000007307e-06, 8.723000000002146e-06, 8.735999999995303e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.652000000011761e-06, 8.708999999995637e-06, 8.708999999995637e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 12:42:59.540" endtime="20201029 12:42:59.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.548" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:42:59.546" endtime="20201029 12:42:59.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.550" level="INFO">VALUE: [8.555000000007307e-06, 8.723000000002146e-06, 8.735999999995303e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.652000000011761e-06, 8.708999999995637e-06, 8.708999999995637e-06, 8.680999999996497e-06, 8.763999999994443e-06, 8.694000000003532e-06, 8.693999999989654e-06, 8.707999999996163e-06, 8.666999999989988e-06, 8.735999999995303e-06, 8.708999999995637e-06, 8.693999999989654e-06, 8.695000000003006e-06, 8.666999999989988e-06, 8.707999999996163e-06, 8.624999999998217e-06, 8.736999999994777e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.680999999996497e-06, 8.680999999996497e-06, 8.694999999989128e-06, 8.707999999996163e-06, 8.666999999989988e-06, 8.694000000003532e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.695000000003006e-06, 8.735999999995303e-06, 8.651999999997884e-06, 8.722000000002672e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.610999999991709e-06, 8.667000000003866e-06, 8.666999999989988e-06, 8.707999999996163e-06, 8.680999999996497e-06, 8.638000000005253e-06, 8.708999999995637e-06]</msg>
<status status="PASS" starttime="20201029 12:42:59.549" endtime="20201029 12:42:59.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.544" endtime="20201029 12:42:59.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.171" endtime="20201029 12:42:59.552"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:59.095" endtime="20201029 12:42:59.552" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:59.560" endtime="20201029 12:42:59.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.558" endtime="20201029 12:42:59.580"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.594" endtime="20201029 12:42:59.614"></status>
</kw>
<msg timestamp="20201029 12:42:59.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.592" endtime="20201029 12:42:59.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.615" endtime="20201029 12:42:59.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.620" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:59.618" endtime="20201029 12:42:59.620"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.590" endtime="20201029 12:42:59.621"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.587" endtime="20201029 12:42:59.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.585" endtime="20201029 12:42:59.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:59.625" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:59.625" endtime="20201029 12:42:59.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.623" endtime="20201029 12:42:59.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.584" endtime="20201029 12:42:59.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.584" endtime="20201029 12:42:59.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.627" endtime="20201029 12:42:59.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.582" endtime="20201029 12:42:59.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.580" endtime="20201029 12:42:59.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.557" endtime="20201029 12:42:59.630"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.639" endtime="20201029 12:42:59.737"></status>
</kw>
<msg timestamp="20201029 12:42:59.738" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.637" endtime="20201029 12:42:59.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.740" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.739" endtime="20201029 12:42:59.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.741" endtime="20201029 12:42:59.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.634" endtime="20201029 12:42:59.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.632" endtime="20201029 12:42:59.744"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.746" endtime="20201029 12:42:59.748"></status>
</kw>
<msg timestamp="20201029 12:42:59.748" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:42:59.745" endtime="20201029 12:42:59.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.753" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:42:59.752" endtime="20201029 12:42:59.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.755" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:42:59.754" endtime="20201029 12:42:59.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.750" endtime="20201029 12:42:59.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.761" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:42:59.759" endtime="20201029 12:42:59.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.764" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:42:59.763" endtime="20201029 12:42:59.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.757" endtime="20201029 12:42:59.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.771" endtime="20201029 12:43:00.064"></status>
</kw>
<msg timestamp="20201029 12:43:00.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074854708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074905083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.770" endtime="20201029 12:43:00.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074854708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074905083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.068" endtime="20201029 12:43:00.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.076" endtime="20201029 12:43:00.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.767" endtime="20201029 12:43:00.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.765" endtime="20201029 12:43:00.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.083" level="INFO">${RESULT} = [{'diff': 5.03749999999914e-05}, {'diff': 5.034699999999226e-05}, {'diff': 5.033299999999963e-05}, {'diff': 5.034800000000561e-05}, {'diff': 5.034799999999173e-05}, {'diff': 5.031899999999312e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:00.080" endtime="20201029 12:43:00.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:00.087" level="INFO">${OVERHEAD} = {'diff': [5.03749999999914e-05, 5.034699999999226e-05, 5.033299999999963e-05, 5.034800000000561e-05, 5.034799999999173e-05, 5.031899999999312e-05, 5.03339999999991e-05, 5.033299999999963e-05, 5.026400...</msg>
<status status="PASS" starttime="20201029 12:43:00.084" endtime="20201029 12:43:00.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.092" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:00.091" endtime="20201029 12:43:00.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.095" level="INFO">VALUE: [5.03749999999914e-05, 5.034699999999226e-05, 5.033299999999963e-05, 5.034800000000561e-05, 5.034799999999173e-05, 5.031899999999312e-05, 5.03339999999991e-05, 5.033299999999963e-05, 5.026400000000819e-05, 5.027700000000135e-05, 5.029100000000786e-05, 5.03339999999991e-05, 5.027800000000082e-05, 5.031899999999312e-05, 5.0333000000013506e-05, 5.027700000000135e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.027700000000135e-05, 5.034700000000614e-05, 5.030500000000049e-05, 5.033299999999963e-05, 5.030599999999996e-05, 5.034699999999226e-05, 5.036099999999877e-05, 5.025000000000168e-05, 5.034699999999226e-05, 5.033299999999963e-05, 5.025000000000168e-05, 5.034699999999226e-05, 5.029200000000733e-05, 5.026399999999431e-05, 5.0319000000007e-05, 5.036099999999877e-05, 5.020900000002326e-05, 5.029200000000733e-05, 5.025000000000168e-05, 5.034700000000614e-05, 5.038899999998403e-05, 5.030599999999996e-05, 5.033299999998575e-05, 5.030500000000049e-05, 5.025000000000168e-05, 5.034700000000614e-05, 5.026399999999431e-05, 5.030500000000049e-05, 5.026400000002207e-05, 5.025000000000168e-05, 5.025000000000168e-05, 5.034700000000614e-05]</msg>
<status status="PASS" starttime="20201029 12:43:00.093" endtime="20201029 12:43:00.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.088" endtime="20201029 12:43:00.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.631" endtime="20201029 12:43:00.097"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:59.554" endtime="20201029 12:43:00.097" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:00.105" endtime="20201029 12:43:00.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.103" endtime="20201029 12:43:00.125"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.138" endtime="20201029 12:43:00.155"></status>
</kw>
<msg timestamp="20201029 12:43:00.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.137" endtime="20201029 12:43:00.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.156" endtime="20201029 12:43:00.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.161" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:00.159" endtime="20201029 12:43:00.161"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:00.134" endtime="20201029 12:43:00.162"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:00.132" endtime="20201029 12:43:00.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.130" endtime="20201029 12:43:00.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:00.167" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:00.166" endtime="20201029 12:43:00.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.164" endtime="20201029 12:43:00.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.130" endtime="20201029 12:43:00.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.129" endtime="20201029 12:43:00.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.168" endtime="20201029 12:43:00.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.127" endtime="20201029 12:43:00.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.126" endtime="20201029 12:43:00.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.102" endtime="20201029 12:43:00.171"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.181" endtime="20201029 12:43:00.474"></status>
</kw>
<msg timestamp="20201029 12:43:00.475" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.178" endtime="20201029 12:43:00.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.481" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.478" endtime="20201029 12:43:00.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.483" endtime="20201029 12:43:00.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.176" endtime="20201029 12:43:00.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.173" endtime="20201029 12:43:00.489"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.494" endtime="20201029 12:43:00.497"></status>
</kw>
<msg timestamp="20201029 12:43:00.498" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:00.491" endtime="20201029 12:43:00.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.508" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:00.506" endtime="20201029 12:43:00.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.513" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:00.510" endtime="20201029 12:43:00.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.500" endtime="20201029 12:43:00.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.523" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:00.521" endtime="20201029 12:43:00.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.528" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:00.525" endtime="20201029 12:43:00.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.516" endtime="20201029 12:43:00.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.551" endtime="20201029 12:43:00.858"></status>
</kw>
<msg timestamp="20201029 12:43:00.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075294083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075388139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.543" endtime="20201029 12:43:00.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075294083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075388139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.863" endtime="20201029 12:43:00.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.872" endtime="20201029 12:43:00.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.535" endtime="20201029 12:43:00.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.531" endtime="20201029 12:43:00.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.878" level="INFO">${RESULT} = [{'diff': 9.405600000000902e-05}, {'diff': 9.337500000000665e-05}, {'diff': 9.3333000000001e-05}, {'diff': 9.329099999999535e-05}, {'diff': 9.325000000000305e-05}, {'diff': 9.327800000000219e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:00.875" endtime="20201029 12:43:00.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:00.884" level="INFO">${OVERHEAD} = {'diff': [9.405600000000902e-05, 9.337500000000665e-05, 9.3333000000001e-05, 9.329099999999535e-05, 9.325000000000305e-05, 9.327800000000219e-05, 9.329199999999482e-05, 9.337500000000665e-05, 9.327800...</msg>
<status status="PASS" starttime="20201029 12:43:00.879" endtime="20201029 12:43:00.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.888" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:00.887" endtime="20201029 12:43:00.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.891" level="INFO">VALUE: [9.405600000000902e-05, 9.337500000000665e-05, 9.3333000000001e-05, 9.329099999999535e-05, 9.325000000000305e-05, 9.327800000000219e-05, 9.329199999999482e-05, 9.337500000000665e-05, 9.327800000000219e-05, 9.330600000000133e-05, 9.334699999999363e-05, 9.327800000000219e-05, 9.331900000000837e-05, 9.327800000000219e-05, 9.340300000001966e-05, 9.322200000000391e-05, 9.3333000000001e-05, 9.338899999999928e-05, 9.3333000000001e-05, 9.3333000000001e-05, 9.331999999998009e-05, 9.334699999999363e-05, 9.329199999999482e-05, 9.330599999998745e-05, 9.336099999998626e-05, 9.323599999999654e-05, 9.336100000001402e-05, 9.327800000000219e-05, 9.322200000000391e-05, 9.340300000001966e-05, 9.333400000000047e-05, 9.336099999998626e-05, 9.322200000000391e-05, 9.331900000003612e-05, 9.322200000000391e-05, 9.334700000002139e-05, 9.327800000002995e-05, 9.329200000002258e-05, 9.325000000004469e-05, 9.333400000000047e-05, 9.330499999998798e-05, 9.324999999998917e-05, 9.332000000000784e-05, 9.338899999999928e-05, 9.332000000000784e-05, 9.322200000000391e-05, 9.334700000002139e-05, 9.327800000002995e-05, 9.324999999998917e-05, 9.331899999998061e-05]</msg>
<status status="PASS" starttime="20201029 12:43:00.889" endtime="20201029 12:43:00.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.884" endtime="20201029 12:43:00.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.172" endtime="20201029 12:43:00.892"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:00.099" endtime="20201029 12:43:00.893" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:00.900" endtime="20201029 12:43:00.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.898" endtime="20201029 12:43:00.920"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.934" endtime="20201029 12:43:00.957"></status>
</kw>
<msg timestamp="20201029 12:43:00.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.932" endtime="20201029 12:43:00.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.960" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.959" endtime="20201029 12:43:00.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.963" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:00.961" endtime="20201029 12:43:00.964"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:00.930" endtime="20201029 12:43:00.964"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:00.927" endtime="20201029 12:43:00.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.926" endtime="20201029 12:43:00.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:00.969" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:00.968" endtime="20201029 12:43:00.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.966" endtime="20201029 12:43:00.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.925" endtime="20201029 12:43:00.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.924" endtime="20201029 12:43:00.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.972" endtime="20201029 12:43:00.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.923" endtime="20201029 12:43:00.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.921" endtime="20201029 12:43:00.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.897" endtime="20201029 12:43:00.975"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.984" endtime="20201029 12:43:01.003"></status>
</kw>
<msg timestamp="20201029 12:43:01.004" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.982" endtime="20201029 12:43:01.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.006" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.005" endtime="20201029 12:43:01.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.008" endtime="20201029 12:43:01.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.979" endtime="20201029 12:43:01.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.977" endtime="20201029 12:43:01.010"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.012" endtime="20201029 12:43:01.014"></status>
</kw>
<msg timestamp="20201029 12:43:01.015" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:01.011" endtime="20201029 12:43:01.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.019" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:01.018" endtime="20201029 12:43:01.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.021" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:01.020" endtime="20201029 12:43:01.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.015" endtime="20201029 12:43:01.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.026" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:01.025" endtime="20201029 12:43:01.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.028" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:01.028" endtime="20201029 12:43:01.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.023" endtime="20201029 12:43:01.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.036" endtime="20201029 12:43:01.324"></status>
</kw>
<msg timestamp="20201029 12:43:01.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074123569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074125556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.035" endtime="20201029 12:43:01.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074123569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074125556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.328" endtime="20201029 12:43:01.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.336" endtime="20201029 12:43:01.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.032" endtime="20201029 12:43:01.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.030" endtime="20201029 12:43:01.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.344" level="INFO">${RESULT} = [{'diff': 1.986999999994965e-06}, {'diff': 1.9859999999954914e-06}, {'diff': 2.000000000002e-06}, {'diff': 2.000000000002e-06}, {'diff': 2.000000000002e-06}, {'diff': 1.9859999999954914e-06}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:43:01.340" endtime="20201029 12:43:01.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:01.348" level="INFO">${OVERHEAD} = {'diff': [1.986999999994965e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 2.000000000002e-06, 2.0550000000008...</msg>
<status status="PASS" starttime="20201029 12:43:01.345" endtime="20201029 12:43:01.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.353" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:01.352" endtime="20201029 12:43:01.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.356" level="INFO">VALUE: [1.986999999994965e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 2.000000000002e-06, 2.055000000000806e-06, 1.9859999999954914e-06, 2.013999999994631e-06, 1.9999999999881224e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.013999999994631e-06, 2.000000000002e-06, 2.000000000002e-06, 2.02800000000114e-06, 2.000000000002e-06, 1.9719999999889826e-06, 1.9719999999889826e-06, 2.013999999994631e-06, 2.02800000000114e-06, 1.9719999999889826e-06, 2.000000000002e-06, 2.0409999999942974e-06, 1.986000000009369e-06, 2.000000000002e-06, 2.000000000002e-06, 2.014000000008509e-06, 2.013999999994631e-06, 2.05600000000028e-06, 1.958999999995825e-06, 1.986000000009369e-06, 1.931000000010563e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.013999999994631e-06, 2.013999999994631e-06, 2.000000000002e-06, 2.041999999993771e-06, 1.9859999999954914e-06, 1.9720000000028604e-06, 1.9859999999954914e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.9579999999963515e-06]</msg>
<status status="PASS" starttime="20201029 12:43:01.354" endtime="20201029 12:43:01.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.349" endtime="20201029 12:43:01.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.976" endtime="20201029 12:43:01.357"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:00.894" endtime="20201029 12:43:01.358" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:01.365" endtime="20201029 12:43:01.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.363" endtime="20201029 12:43:01.385"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.400" endtime="20201029 12:43:01.420"></status>
</kw>
<msg timestamp="20201029 12:43:01.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.398" endtime="20201029 12:43:01.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.421" endtime="20201029 12:43:01.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.426" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:01.424" endtime="20201029 12:43:01.426"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:01.394" endtime="20201029 12:43:01.427"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:01.392" endtime="20201029 12:43:01.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.391" endtime="20201029 12:43:01.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:01.432" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:01.431" endtime="20201029 12:43:01.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.429" endtime="20201029 12:43:01.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.390" endtime="20201029 12:43:01.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.389" endtime="20201029 12:43:01.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.433" endtime="20201029 12:43:01.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.388" endtime="20201029 12:43:01.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.386" endtime="20201029 12:43:01.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.362" endtime="20201029 12:43:01.436"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.445" endtime="20201029 12:43:01.541"></status>
</kw>
<msg timestamp="20201029 12:43:01.542" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.444" endtime="20201029 12:43:01.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.545" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.543" endtime="20201029 12:43:01.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.546" endtime="20201029 12:43:01.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.441" endtime="20201029 12:43:01.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.439" endtime="20201029 12:43:01.548"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.550" endtime="20201029 12:43:01.552"></status>
</kw>
<msg timestamp="20201029 12:43:01.553" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:01.549" endtime="20201029 12:43:01.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.557" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:01.556" endtime="20201029 12:43:01.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.560" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:01.559" endtime="20201029 12:43:01.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.554" endtime="20201029 12:43:01.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.565" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:01.563" endtime="20201029 12:43:01.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.567" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:01.566" endtime="20201029 12:43:01.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.561" endtime="20201029 12:43:01.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.575" endtime="20201029 12:43:01.868"></status>
</kw>
<msg timestamp="20201029 12:43:01.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073531042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073543278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.574" endtime="20201029 12:43:01.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073531042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073543278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.872" endtime="20201029 12:43:01.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.880" endtime="20201029 12:43:01.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.570" endtime="20201029 12:43:01.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.568" endtime="20201029 12:43:01.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.887" level="INFO">${RESULT} = [{'diff': 1.2235999999998803e-05}, {'diff': 1.2194000000007033e-05}, {'diff': 1.2194000000007033e-05}, {'diff': 1.2167000000007366e-05}, {'diff': 1.2180000000000524e-05}, {'diff': 1.2180999999999997e-...</msg>
<status status="PASS" starttime="20201029 12:43:01.884" endtime="20201029 12:43:01.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:01.891" level="INFO">${OVERHEAD} = {'diff': [1.2235999999998803e-05, 1.2194000000007033e-05, 1.2194000000007033e-05, 1.2167000000007366e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2208999999999137e-05, 1.2125000000001718e-05...</msg>
<status status="PASS" starttime="20201029 12:43:01.888" endtime="20201029 12:43:01.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.896" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:01.895" endtime="20201029 12:43:01.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.899" level="INFO">VALUE: [1.2235999999998803e-05, 1.2194000000007033e-05, 1.2194000000007033e-05, 1.2167000000007366e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2208999999999137e-05, 1.2125000000001718e-05, 1.2193999999993155e-05, 1.2207999999999664e-05, 1.2153000000000858e-05, 1.2222000000006172e-05, 1.2221999999992295e-05, 1.2180000000000524e-05, 1.2195000000006506e-05, 1.2195000000006506e-05, 1.2195000000006506e-05, 1.2153000000000858e-05, 1.2180000000000524e-05, 1.2166999999993489e-05, 1.22769999999911e-05, 1.2166999999993489e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2195000000006506e-05, 1.2153000000000858e-05, 1.2167000000007366e-05, 1.2166999999993489e-05, 1.2153000000000858e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2138999999994349e-05, 1.2110999999995209e-05, 1.2193999999993155e-05, 1.2166999999993489e-05, 1.2193999999993155e-05, 1.2193999999993155e-05, 1.2153000000014735e-05, 1.2180999999999997e-05, 1.2193999999993155e-05, 1.215299999998698e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2152000000015262e-05, 1.2151999999987506e-05, 1.2180999999999997e-05, 1.2153000000014735e-05, 1.2166000000007893e-05, 1.220899999998526e-05, 1.2180000000000524e-05]</msg>
<status status="PASS" starttime="20201029 12:43:01.897" endtime="20201029 12:43:01.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.892" endtime="20201029 12:43:01.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.437" endtime="20201029 12:43:01.900"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:01.359" endtime="20201029 12:43:01.901" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:01.908" endtime="20201029 12:43:01.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.906" endtime="20201029 12:43:01.928"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.943" endtime="20201029 12:43:01.966"></status>
</kw>
<msg timestamp="20201029 12:43:01.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.941" endtime="20201029 12:43:01.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.968" endtime="20201029 12:43:01.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.973" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:01.970" endtime="20201029 12:43:01.973"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:01.938" endtime="20201029 12:43:01.974"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:01.936" endtime="20201029 12:43:01.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.935" endtime="20201029 12:43:01.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:01.978" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:01.977" endtime="20201029 12:43:01.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.975" endtime="20201029 12:43:01.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.934" endtime="20201029 12:43:01.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.933" endtime="20201029 12:43:01.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.980" endtime="20201029 12:43:01.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.932" endtime="20201029 12:43:01.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.929" endtime="20201029 12:43:01.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.905" endtime="20201029 12:43:01.983"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.992" endtime="20201029 12:43:02.283"></status>
</kw>
<msg timestamp="20201029 12:43:02.284" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.990" endtime="20201029 12:43:02.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.286" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.285" endtime="20201029 12:43:02.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.287" endtime="20201029 12:43:02.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.987" endtime="20201029 12:43:02.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.985" endtime="20201029 12:43:02.290"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.292" endtime="20201029 12:43:02.297"></status>
</kw>
<msg timestamp="20201029 12:43:02.298" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:02.291" endtime="20201029 12:43:02.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.302" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:02.301" endtime="20201029 12:43:02.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.305" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:02.303" endtime="20201029 12:43:02.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.299" endtime="20201029 12:43:02.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.310" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:02.309" endtime="20201029 12:43:02.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.312" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:02.311" endtime="20201029 12:43:02.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.306" endtime="20201029 12:43:02.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.319" endtime="20201029 12:43:02.611"></status>
</kw>
<msg timestamp="20201029 12:43:02.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081457292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081479917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.318" endtime="20201029 12:43:02.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081457292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081479917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.615" endtime="20201029 12:43:02.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.623" endtime="20201029 12:43:02.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.315" endtime="20201029 12:43:02.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.313" endtime="20201029 12:43:02.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:02.630" level="INFO">${RESULT} = [{'diff': 2.262499999999834e-05}, {'diff': 2.2569999999999535e-05}, {'diff': 2.256900000000006e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.255500000000743e-05}, {'diff': 2.25969999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:02.626" endtime="20201029 12:43:02.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:02.635" level="INFO">${OVERHEAD} = {'diff': [2.262499999999834e-05, 2.2569999999999535e-05, 2.256900000000006e-05, 2.25969999999992e-05, 2.255500000000743e-05, 2.25969999999992e-05, 2.254100000000092e-05, 2.256900000000006e-05, 2.25420...</msg>
<status status="PASS" starttime="20201029 12:43:02.631" endtime="20201029 12:43:02.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.639" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:02.638" endtime="20201029 12:43:02.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.642" level="INFO">VALUE: [2.262499999999834e-05, 2.2569999999999535e-05, 2.256900000000006e-05, 2.25969999999992e-05, 2.255500000000743e-05, 2.25969999999992e-05, 2.254100000000092e-05, 2.256900000000006e-05, 2.2542000000000395e-05, 2.2612000000005184e-05, 2.2583999999992166e-05, 2.2582999999992692e-05, 2.2569999999999535e-05, 2.2556000000006904e-05, 2.2556000000006904e-05, 2.2638999999990972e-05, 2.261100000000571e-05, 2.261100000000571e-05, 2.2598000000012552e-05, 2.25410000000148e-05, 2.2542000000014273e-05, 2.2639000000018727e-05, 2.2582999999992692e-05, 2.2583999999992166e-05, 2.262499999999834e-05, 2.25410000000148e-05, 2.261100000000571e-05, 2.2582999999992692e-05, 2.2597999999984797e-05, 2.255500000000743e-05, 2.2554999999979675e-05, 2.2582999999992692e-05, 2.2541000000042555e-05, 2.2568999999972306e-05, 2.2597999999984797e-05, 2.2542000000014273e-05, 2.249999999998087e-05, 2.2597999999984797e-05, 2.2569000000027817e-05, 2.2569000000027817e-05, 2.249999999998087e-05, 2.259700000001308e-05, 2.261100000000571e-05, 2.2528000000021642e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.2569999999999535e-05, 2.262499999999834e-05, 2.2666999999976234e-05]</msg>
<status status="PASS" starttime="20201029 12:43:02.640" endtime="20201029 12:43:02.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.636" endtime="20201029 12:43:02.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.983" endtime="20201029 12:43:02.643"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:01.902" endtime="20201029 12:43:02.644" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:02.651" endtime="20201029 12:43:02.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.649" endtime="20201029 12:43:02.671"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.685" endtime="20201029 12:43:02.705"></status>
</kw>
<msg timestamp="20201029 12:43:02.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.683" endtime="20201029 12:43:02.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.715" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.710" endtime="20201029 12:43:02.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.725" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:02.718" endtime="20201029 12:43:02.727"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:02.680" endtime="20201029 12:43:02.731"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:02.678" endtime="20201029 12:43:02.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.677" endtime="20201029 12:43:02.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:02.748" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:02.745" endtime="20201029 12:43:02.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.738" endtime="20201029 12:43:02.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.676" endtime="20201029 12:43:02.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.675" endtime="20201029 12:43:02.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.752" endtime="20201029 12:43:02.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.673" endtime="20201029 12:43:02.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.671" endtime="20201029 12:43:02.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.648" endtime="20201029 12:43:02.758"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.766" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:02.782" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:03.953" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:02.764" endtime="20201029 12:43:03.954"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.958" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:03.955" endtime="20201029 12:43:03.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.760" endtime="20201029 12:43:03.959"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:03.962" endtime="20201029 12:43:03.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.961" endtime="20201029 12:43:03.983"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.991" endtime="20201029 12:43:04.003"></status>
</kw>
<msg timestamp="20201029 12:43:04.003" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.989" endtime="20201029 12:43:04.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.006" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.004" endtime="20201029 12:43:04.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.007" endtime="20201029 12:43:04.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.987" endtime="20201029 12:43:04.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.985" endtime="20201029 12:43:04.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.028" endtime="20201029 12:43:04.346"></status>
</kw>
<msg timestamp="20201029 12:43:04.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019530306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.027" endtime="20201029 12:43:04.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019521403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019530306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.350" endtime="20201029 12:43:04.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.359" endtime="20201029 12:43:04.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.024" endtime="20201029 12:43:04.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.010" endtime="20201029 12:43:04.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:04.366" level="INFO">${PHILIP_RES} = [{'diff': 8.903000000001077e-06}, {'diff': 8.930000000000743e-06}, {'diff': 8.971999999999453e-06}, {'diff': 8.929999999997273e-06}, {'diff': 8.971999999999453e-06}, {'diff': 8.999999999998592e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:04.362" endtime="20201029 12:43:04.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.371" level="INFO">${RESULT} = {'diff': [8.903000000001077e-06, 8.930000000000743e-06, 8.971999999999453e-06, 8.929999999997273e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.972999999998926e-06, 8.986999999998496e-06, 8.9859...</msg>
<status status="PASS" starttime="20201029 12:43:04.367" endtime="20201029 12:43:04.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.376" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:04.375" endtime="20201029 12:43:04.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.379" level="INFO">VALUE: [8.903000000001077e-06, 8.930000000000743e-06, 8.971999999999453e-06, 8.929999999997273e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.972999999998926e-06, 8.986999999998496e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.999999999998592e-06, 8.971999999999453e-06, 8.972999999998926e-06, 8.986000000002492e-06, 8.971999999999453e-06, 8.957999999999883e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.999999999998592e-06, 8.986999999998496e-06, 8.985999999999023e-06, 8.957999999999883e-06, 8.971999999999453e-06, 8.944000000000313e-06, 8.944000000000313e-06, 8.985999999999023e-06, 8.958000000003352e-06, 8.915999999997704e-06, 8.971999999999453e-06, 8.985999999999023e-06, 8.985999999999023e-06, 8.971999999999453e-06, 8.985999999999023e-06, 9.000000000002062e-06, 8.957999999999883e-06, 9.000000000002062e-06, 8.929999999997273e-06, 9.028000000001202e-06, 8.985999999999023e-06, 8.958999999999356e-06, 8.944999999999786e-06, 8.916000000001173e-06]</msg>
<status status="PASS" starttime="20201029 12:43:04.377" endtime="20201029 12:43:04.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.372" endtime="20201029 12:43:04.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.983" endtime="20201029 12:43:04.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.960" endtime="20201029 12:43:04.380"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.383" endtime="20201029 12:43:04.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.381" endtime="20201029 12:43:04.403"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.411" endtime="20201029 12:43:04.424"></status>
</kw>
<msg timestamp="20201029 12:43:04.424" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.410" endtime="20201029 12:43:04.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.427" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.425" endtime="20201029 12:43:04.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.428" endtime="20201029 12:43:04.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.407" endtime="20201029 12:43:04.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.405" endtime="20201029 12:43:04.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.438" endtime="20201029 12:43:04.724"></status>
</kw>
<msg timestamp="20201029 12:43:04.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021060722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021077972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.436" endtime="20201029 12:43:04.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021060722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021077972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.728" endtime="20201029 12:43:04.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.737" endtime="20201029 12:43:04.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.434" endtime="20201029 12:43:04.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.432" endtime="20201029 12:43:04.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:04.745" level="INFO">${PHILIP_RES} = [{'diff': 1.7249999999999904e-05}, {'diff': 1.729100000000261e-05}, {'diff': 1.730500000000218e-05}, {'diff': 1.731900000000175e-05}, {'diff': 1.7277999999999044e-05}, {'diff': 1.7264000000002944e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:04.741" endtime="20201029 12:43:04.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.750" level="INFO">${RESULT} = {'diff': [1.7249999999999904e-05, 1.729100000000261e-05, 1.730500000000218e-05, 1.731900000000175e-05, 1.7277999999999044e-05, 1.7264000000002944e-05, 1.7263999999999474e-05, 1.737500000000003e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:04.746" endtime="20201029 12:43:04.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.754" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:04.753" endtime="20201029 12:43:04.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.757" level="INFO">VALUE: [1.7249999999999904e-05, 1.729100000000261e-05, 1.730500000000218e-05, 1.731900000000175e-05, 1.7277999999999044e-05, 1.7264000000002944e-05, 1.7263999999999474e-05, 1.737500000000003e-05, 1.7277999999999044e-05, 1.7361999999999933e-05, 1.7333999999997324e-05, 1.7306000000001653e-05, 1.7306000000001653e-05, 1.7320000000001223e-05, 1.7305999999998184e-05, 1.7305999999998184e-05, 1.7277999999999044e-05, 1.7305999999998184e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7292000000002083e-05, 1.7320000000001223e-05, 1.7306000000001653e-05, 1.7306000000001653e-05, 1.7320000000001223e-05, 1.730499999999871e-05, 1.731899999999828e-05, 1.7305999999998184e-05, 1.7277999999999044e-05, 1.7306000000001653e-05, 1.7249999999999904e-05, 1.729099999999914e-05, 1.7277999999999044e-05, 1.730500000000218e-05, 1.7306000000001653e-05, 1.737500000000003e-05, 1.7320000000001223e-05, 1.7292000000002083e-05, 1.7320000000001223e-05, 1.7306000000001653e-05, 1.7277999999999044e-05, 1.7278000000002514e-05, 1.729099999999914e-05, 1.7320000000001223e-05, 1.730499999999871e-05, 1.730499999999871e-05, 1.731899999999828e-05, 1.7305999999998184e-05, 1.731899999999828e-05]</msg>
<status status="PASS" starttime="20201029 12:43:04.755" endtime="20201029 12:43:04.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.750" endtime="20201029 12:43:04.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.404" endtime="20201029 12:43:04.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.381" endtime="20201029 12:43:04.758"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.761" endtime="20201029 12:43:04.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.759" endtime="20201029 12:43:04.781"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.794" endtime="20201029 12:43:04.808"></status>
</kw>
<msg timestamp="20201029 12:43:04.809" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.791" endtime="20201029 12:43:04.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.812" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.810" endtime="20201029 12:43:04.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.813" endtime="20201029 12:43:04.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.788" endtime="20201029 12:43:04.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.784" endtime="20201029 12:43:04.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.824" endtime="20201029 12:43:05.110"></status>
</kw>
<msg timestamp="20201029 12:43:05.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.822" endtime="20201029 12:43:05.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025076319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025102778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.114" endtime="20201029 12:43:05.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.122" endtime="20201029 12:43:05.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.819" endtime="20201029 12:43:05.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.818" endtime="20201029 12:43:05.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:05.129" level="INFO">${PHILIP_RES} = [{'diff': 2.645899999999951e-05}, {'diff': 2.6528000000001356e-05}, {'diff': 2.6555000000001022e-05}, {'diff': 2.6528000000001356e-05}, {'diff': 2.6486000000002646e-05}, {'diff': 2.6513999999998317e-0...</msg>
<status status="PASS" starttime="20201029 12:43:05.126" endtime="20201029 12:43:05.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.134" level="INFO">${RESULT} = {'diff': [2.645899999999951e-05, 2.6528000000001356e-05, 2.6555000000001022e-05, 2.6528000000001356e-05, 2.6486000000002646e-05, 2.6513999999998317e-05, 2.6527999999997887e-05, 2.647299999999908e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:05.130" endtime="20201029 12:43:05.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.138" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:05.137" endtime="20201029 12:43:05.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.141" level="INFO">VALUE: [2.645899999999951e-05, 2.6528000000001356e-05, 2.6555000000001022e-05, 2.6528000000001356e-05, 2.6486000000002646e-05, 2.6513999999998317e-05, 2.6527999999997887e-05, 2.647299999999908e-05, 2.6555000000001022e-05, 2.6556000000000496e-05, 2.6556000000000496e-05, 2.6499999999998747e-05, 2.6485999999999177e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.6555000000001022e-05, 2.6583999999999636e-05, 2.6542000000000926e-05, 2.6583000000000162e-05, 2.6556000000000496e-05, 2.6542000000000926e-05, 2.6555000000001022e-05, 2.6527000000001882e-05, 2.641699999999733e-05, 2.6513999999998317e-05, 2.6514000000001786e-05, 2.6528000000001356e-05, 2.6583000000000162e-05, 2.6514000000001786e-05, 2.6499999999998747e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.6526999999998413e-05, 2.6556000000000496e-05, 2.6542000000000926e-05, 2.6540999999997983e-05, 2.6554999999997553e-05, 2.6513999999998317e-05, 2.6527999999997887e-05, 2.6512999999998843e-05, 2.6499999999998747e-05, 2.6555000000001022e-05, 2.6541999999997457e-05, 2.6540999999997983e-05, 2.6541999999997457e-05, 2.6527999999997887e-05, 2.6485999999999177e-05, 2.6527999999997887e-05, 2.6541999999997457e-05, 2.6513999999998317e-05]</msg>
<status status="PASS" starttime="20201029 12:43:05.139" endtime="20201029 12:43:05.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.134" endtime="20201029 12:43:05.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.782" endtime="20201029 12:43:05.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.759" endtime="20201029 12:43:05.143"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:05.145" endtime="20201029 12:43:05.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.144" endtime="20201029 12:43:05.166"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.174" endtime="20201029 12:43:05.192"></status>
</kw>
<msg timestamp="20201029 12:43:05.192" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.172" endtime="20201029 12:43:05.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.195" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.193" endtime="20201029 12:43:05.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.196" endtime="20201029 12:43:05.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.170" endtime="20201029 12:43:05.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.168" endtime="20201029 12:43:05.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.205" endtime="20201029 12:43:05.492"></status>
</kw>
<msg timestamp="20201029 12:43:05.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.204" endtime="20201029 12:43:05.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.497" endtime="20201029 12:43:05.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.505" endtime="20201029 12:43:05.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.201" endtime="20201029 12:43:05.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.199" endtime="20201029 12:43:05.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:05.512" level="INFO">${PHILIP_RES} = [{'diff': 3.654199999999705e-05}, {'diff': 3.657000000000313e-05}, {'diff': 3.66659999999977e-05}, {'diff': 3.6597000000002794e-05}, {'diff': 3.6610999999998894e-05}, {'diff': 3.6681000000000213e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:05.509" endtime="20201029 12:43:05.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.517" level="INFO">${RESULT} = {'diff': [3.654199999999705e-05, 3.657000000000313e-05, 3.66659999999977e-05, 3.6597000000002794e-05, 3.6610999999998894e-05, 3.6681000000000213e-05, 3.66520000000016e-05, 3.6624999999998464e-05, 3.65...</msg>
<status status="PASS" starttime="20201029 12:43:05.513" endtime="20201029 12:43:05.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.522" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:05.521" endtime="20201029 12:43:05.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.524" level="INFO">VALUE: [3.654199999999705e-05, 3.657000000000313e-05, 3.66659999999977e-05, 3.6597000000002794e-05, 3.6610999999998894e-05, 3.6681000000000213e-05, 3.66520000000016e-05, 3.6624999999998464e-05, 3.651399999999791e-05, 3.6652999999997604e-05, 3.6625000000001934e-05, 3.6596999999999325e-05, 3.666600000000117e-05, 3.6582999999999755e-05, 3.6639000000001504e-05, 3.6652999999997604e-05, 3.667999999999727e-05, 3.6582999999999755e-05, 3.6596999999999325e-05, 3.6653000000001074e-05, 3.6582999999999755e-05, 3.6639000000001504e-05, 3.6638999999998034e-05, 3.656999999999966e-05, 3.6653000000001074e-05, 3.6639000000001504e-05, 3.6639000000001504e-05, 3.6582999999999755e-05, 3.669499999999978e-05, 3.6638999999998034e-05, 3.6582999999999755e-05, 3.6667000000000644e-05, 3.6610999999998894e-05, 3.65840000000027e-05, 3.66659999999977e-05, 3.6582999999999755e-05, 3.6624999999998464e-05, 3.6639000000001504e-05, 3.66520000000016e-05, 3.6596999999999325e-05, 3.6582999999999755e-05, 3.6653000000001074e-05, 3.6610999999998894e-05, 3.6624999999998464e-05, 3.656999999999966e-05, 3.6638999999998034e-05, 3.6596999999999325e-05, 3.6638999999998034e-05, 3.6639000000001504e-05, 3.654200000000052e-05]</msg>
<status status="PASS" starttime="20201029 12:43:05.523" endtime="20201029 12:43:05.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.518" endtime="20201029 12:43:05.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.166" endtime="20201029 12:43:05.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.143" endtime="20201029 12:43:05.526"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:05.528" endtime="20201029 12:43:05.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.527" endtime="20201029 12:43:05.548"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.557" endtime="20201029 12:43:05.573"></status>
</kw>
<msg timestamp="20201029 12:43:05.574" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.555" endtime="20201029 12:43:05.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.577" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.575" endtime="20201029 12:43:05.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.578" endtime="20201029 12:43:05.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.552" endtime="20201029 12:43:05.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.550" endtime="20201029 12:43:05.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.587" endtime="20201029 12:43:05.874"></status>
</kw>
<msg timestamp="20201029 12:43:05.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.586" endtime="20201029 12:43:05.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.878" endtime="20201029 12:43:05.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.887" endtime="20201029 12:43:05.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.583" endtime="20201029 12:43:05.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.581" endtime="20201029 12:43:05.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:05.895" level="INFO">${PHILIP_RES} = [{'diff': 4.755600000000068e-05}, {'diff': 4.7625000000002526e-05}, {'diff': 4.762499999999906e-05}, {'diff': 4.763899999999863e-05}, {'diff': 4.766600000000176e-05}, {'diff': 4.7639000000002096e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:05.891" endtime="20201029 12:43:05.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.899" level="INFO">${RESULT} = {'diff': [4.755600000000068e-05, 4.7625000000002526e-05, 4.762499999999906e-05, 4.763899999999863e-05, 4.766600000000176e-05, 4.7639000000002096e-05, 4.759699999999992e-05, 4.766599999999829e-05, 4.76...</msg>
<status status="PASS" starttime="20201029 12:43:05.896" endtime="20201029 12:43:05.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.904" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:05.903" endtime="20201029 12:43:05.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.907" level="INFO">VALUE: [4.755600000000068e-05, 4.7625000000002526e-05, 4.762499999999906e-05, 4.763899999999863e-05, 4.766600000000176e-05, 4.7639000000002096e-05, 4.759699999999992e-05, 4.766599999999829e-05, 4.762499999999906e-05, 4.752800000000154e-05, 4.759699999999992e-05, 4.76529999999982e-05, 4.762499999999906e-05, 4.758300000000035e-05, 4.756900000000078e-05, 4.762499999999906e-05, 4.762499999999906e-05, 4.759799999999939e-05, 4.754200000000111e-05, 4.762499999999906e-05, 4.763899999999863e-05, 4.758300000000035e-05, 4.7625000000002526e-05, 4.762499999999906e-05, 4.762499999999906e-05, 4.766699999999777e-05, 4.761099999999949e-05, 4.759699999999992e-05, 4.7625000000002526e-05, 4.757000000000025e-05, 4.758399999999982e-05, 4.7653000000001666e-05, 4.7625000000002526e-05, 4.762499999999906e-05, 4.762499999999906e-05, 4.763899999999863e-05, 4.7625000000002526e-05, 4.7625000000002526e-05, 4.75269999999986e-05, 4.762499999999906e-05, 4.761099999999949e-05, 4.757000000000025e-05, 4.754200000000111e-05, 4.762499999999906e-05, 4.763899999999863e-05, 4.762499999999906e-05, 4.763800000000262e-05, 4.7639000000002096e-05, 4.759799999999939e-05, 4.759699999999992e-05]</msg>
<status status="PASS" starttime="20201029 12:43:05.906" endtime="20201029 12:43:05.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.900" endtime="20201029 12:43:05.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.549" endtime="20201029 12:43:05.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.526" endtime="20201029 12:43:05.909"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:05.911" endtime="20201029 12:43:05.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.910" endtime="20201029 12:43:05.931"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.940" endtime="20201029 12:43:05.960"></status>
</kw>
<msg timestamp="20201029 12:43:05.960" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.938" endtime="20201029 12:43:05.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.963" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.962" endtime="20201029 12:43:05.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.964" endtime="20201029 12:43:05.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.936" endtime="20201029 12:43:05.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.934" endtime="20201029 12:43:05.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.975" endtime="20201029 12:43:06.261"></status>
</kw>
<msg timestamp="20201029 12:43:06.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019844569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.973" endtime="20201029 12:43:06.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019844569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019903903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.265" endtime="20201029 12:43:06.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.274" endtime="20201029 12:43:06.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.970" endtime="20201029 12:43:06.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.969" endtime="20201029 12:43:06.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:06.281" level="INFO">${PHILIP_RES} = [{'diff': 5.9334000000001164e-05}, {'diff': 5.9486000000000955e-05}, {'diff': 5.938899999999997e-05}, {'diff': 5.9415999999999636e-05}, {'diff': 5.9486000000000955e-05}, {'diff': 5.9443999999998776e-0...</msg>
<status status="PASS" starttime="20201029 12:43:06.277" endtime="20201029 12:43:06.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.285" level="INFO">${RESULT} = {'diff': [5.9334000000001164e-05, 5.9486000000000955e-05, 5.938899999999997e-05, 5.9415999999999636e-05, 5.9486000000000955e-05, 5.9443999999998776e-05, 5.9457999999998346e-05, 5.945900000000129e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:06.282" endtime="20201029 12:43:06.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.289" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:06.288" endtime="20201029 12:43:06.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.292" level="INFO">VALUE: [5.9334000000001164e-05, 5.9486000000000955e-05, 5.938899999999997e-05, 5.9415999999999636e-05, 5.9486000000000955e-05, 5.9443999999998776e-05, 5.9457999999998346e-05, 5.945900000000129e-05, 5.93750000000004e-05, 5.948699999999696e-05, 5.941699999999911e-05, 5.940300000000301e-05, 5.943100000000215e-05, 5.93750000000004e-05, 5.9458000000001815e-05, 5.938899999999997e-05, 5.9458000000001815e-05, 5.940300000000301e-05, 5.9444000000002245e-05, 5.9444000000002245e-05, 5.938899999999997e-05, 5.947300000000086e-05, 5.941700000000258e-05, 5.938899999999997e-05, 5.943100000000215e-05, 5.93750000000004e-05, 5.944499999999825e-05, 5.9457999999998346e-05, 5.938899999999997e-05, 5.9458000000001815e-05, 5.9457999999998346e-05, 5.9485999999997485e-05, 5.9362000000000303e-05, 5.9457999999998346e-05, 5.936100000000083e-05, 5.947299999999739e-05, 5.941699999999911e-05, 5.9429999999999206e-05, 5.9415999999999636e-05, 5.941699999999911e-05, 5.944499999999825e-05, 5.936100000000083e-05, 5.9486000000000955e-05, 5.9402000000000066e-05, 5.9457999999998346e-05, 5.936100000000083e-05, 5.9458000000001815e-05, 5.940299999999954e-05, 5.9319999999998124e-05, 5.9486000000000955e-05]</msg>
<status status="PASS" starttime="20201029 12:43:06.291" endtime="20201029 12:43:06.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.286" endtime="20201029 12:43:06.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.932" endtime="20201029 12:43:06.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.909" endtime="20201029 12:43:06.294"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:06.297" endtime="20201029 12:43:06.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.295" endtime="20201029 12:43:06.317"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.325" endtime="20201029 12:43:06.343"></status>
</kw>
<msg timestamp="20201029 12:43:06.344" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.324" endtime="20201029 12:43:06.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.346" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.345" endtime="20201029 12:43:06.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.347" endtime="20201029 12:43:06.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.321" endtime="20201029 12:43:06.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.319" endtime="20201029 12:43:06.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.357" endtime="20201029 12:43:06.643"></status>
</kw>
<msg timestamp="20201029 12:43:06.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021295569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:06.355" endtime="20201029 12:43:06.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021295569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:06.647" endtime="20201029 12:43:06.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.655" endtime="20201029 12:43:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.352" endtime="20201029 12:43:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.350" endtime="20201029 12:43:06.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:06.662" level="INFO">${PHILIP_RES} = [{'diff': 7.2069000000001e-05}, {'diff': 7.219400000000112e-05}, {'diff': 7.208300000000056e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.219400000000112e-05}, {'diff': 7.212500000000274e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:06.659" endtime="20201029 12:43:06.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.667" level="INFO">${RESULT} = {'diff': [7.2069000000001e-05, 7.219400000000112e-05, 7.208300000000056e-05, 7.21109999999997e-05, 7.219400000000112e-05, 7.212500000000274e-05, 7.220800000000069e-05, 7.222299999999973e-05, 7.2110999...</msg>
<status status="PASS" starttime="20201029 12:43:06.663" endtime="20201029 12:43:06.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.672" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:06.671" endtime="20201029 12:43:06.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.674" level="INFO">VALUE: [7.2069000000001e-05, 7.219400000000112e-05, 7.208300000000056e-05, 7.21109999999997e-05, 7.219400000000112e-05, 7.212500000000274e-05, 7.220800000000069e-05, 7.222299999999973e-05, 7.21109999999997e-05, 7.217999999999808e-05, 7.215299999999841e-05, 7.212499999999927e-05, 7.229200000000158e-05, 7.213899999999884e-05, 7.223599999999983e-05, 7.219500000000059e-05, 7.22499999999994e-05, 7.209700000000013e-05, 7.213900000000231e-05, 7.219400000000112e-05, 7.20560000000009e-05, 7.217999999999808e-05, 7.209700000000013e-05, 7.212500000000274e-05, 7.22499999999994e-05, 7.21109999999997e-05, 7.220800000000069e-05, 7.209699999999666e-05, 7.220800000000069e-05, 7.211100000000317e-05, 7.215300000000188e-05, 7.216600000000198e-05, 7.219500000000059e-05, 7.204199999999786e-05, 7.218099999999755e-05, 7.209700000000013e-05, 7.21109999999997e-05, 7.219400000000112e-05, 7.21109999999997e-05, 7.218000000000155e-05, 7.209799999999961e-05, 7.212500000000274e-05, 7.219500000000059e-05, 7.209700000000013e-05, 7.21109999999997e-05, 7.218000000000155e-05, 7.215300000000188e-05, 7.209699999999666e-05, 7.215300000000188e-05, 7.212500000000274e-05]</msg>
<status status="PASS" starttime="20201029 12:43:06.673" endtime="20201029 12:43:06.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.668" endtime="20201029 12:43:06.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.317" endtime="20201029 12:43:06.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.295" endtime="20201029 12:43:06.676"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:06.678" endtime="20201029 12:43:06.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.677" endtime="20201029 12:43:06.698"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.707" endtime="20201029 12:43:06.725"></status>
</kw>
<msg timestamp="20201029 12:43:06.725" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.705" endtime="20201029 12:43:06.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.728" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.726" endtime="20201029 12:43:06.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.729" endtime="20201029 12:43:06.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.702" endtime="20201029 12:43:06.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.700" endtime="20201029 12:43:06.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.738" endtime="20201029 12:43:07.024"></status>
</kw>
<msg timestamp="20201029 12:43:07.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.737" endtime="20201029 12:43:07.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.028" endtime="20201029 12:43:07.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.036" endtime="20201029 12:43:07.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.734" endtime="20201029 12:43:07.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.732" endtime="20201029 12:43:07.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:07.046" level="INFO">${PHILIP_RES} = [{'diff': 8.57920000000012e-05}, {'diff': 8.58050000000013e-05}, {'diff': 8.576399999999859e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.576399999999859e-05}, {'diff': 8.582000000000034e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:07.043" endtime="20201029 12:43:07.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.050" level="INFO">${RESULT} = {'diff': [8.57920000000012e-05, 8.58050000000013e-05, 8.576399999999859e-05, 8.583300000000044e-05, 8.576399999999859e-05, 8.582000000000034e-05, 8.570899999999979e-05, 8.588900000000219e-05, 8.576400...</msg>
<status status="PASS" starttime="20201029 12:43:07.047" endtime="20201029 12:43:07.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.055" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:07.054" endtime="20201029 12:43:07.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.057" level="INFO">VALUE: [8.57920000000012e-05, 8.58050000000013e-05, 8.576399999999859e-05, 8.583300000000044e-05, 8.576399999999859e-05, 8.582000000000034e-05, 8.570899999999979e-05, 8.588900000000219e-05, 8.576400000000206e-05, 8.583300000000044e-05, 8.581900000000087e-05, 8.570800000000031e-05, 8.568000000000117e-05, 8.58050000000013e-05, 8.579099999999826e-05, 8.580499999999783e-05, 8.573599999999945e-05, 8.588900000000219e-05, 8.580600000000077e-05, 8.577699999999869e-05, 8.583399999999991e-05, 8.586099999999958e-05, 8.576399999999859e-05, 8.577799999999816e-05, 8.577800000000163e-05, 8.581900000000087e-05, 8.579099999999826e-05, 8.573600000000292e-05, 8.576399999999859e-05, 8.56669999999976e-05, 8.581900000000087e-05, 8.582000000000034e-05, 8.569500000000022e-05, 8.582000000000034e-05, 8.57920000000012e-05, 8.583399999999991e-05, 8.569400000000074e-05, 8.58059999999973e-05, 8.57920000000012e-05, 8.572299999999936e-05, 8.581900000000087e-05, 8.573600000000292e-05, 8.582000000000034e-05, 8.569500000000022e-05, 8.583400000000338e-05, 8.577800000000163e-05, 8.57920000000012e-05, 8.569500000000022e-05, 8.583399999999991e-05, 8.574999999999902e-05]</msg>
<status status="PASS" starttime="20201029 12:43:07.056" endtime="20201029 12:43:07.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.051" endtime="20201029 12:43:07.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.699" endtime="20201029 12:43:07.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.676" endtime="20201029 12:43:07.059"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.061" endtime="20201029 12:43:07.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.060" endtime="20201029 12:43:07.081"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.090" endtime="20201029 12:43:07.106"></status>
</kw>
<msg timestamp="20201029 12:43:07.107" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.089" endtime="20201029 12:43:07.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.109" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.108" endtime="20201029 12:43:07.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.110" endtime="20201029 12:43:07.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.086" endtime="20201029 12:43:07.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.084" endtime="20201029 12:43:07.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.121" endtime="20201029 12:43:07.406"></status>
</kw>
<msg timestamp="20201029 12:43:07.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020308806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020408833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.119" endtime="20201029 12:43:07.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020308806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020408833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.411" endtime="20201029 12:43:07.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.419" endtime="20201029 12:43:07.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.116" endtime="20201029 12:43:07.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.115" endtime="20201029 12:43:07.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:07.426" level="INFO">${PHILIP_RES} = [{'diff': 0.00010002700000000253}, {'diff': 0.0001002220000000005}, {'diff': 0.00010027799999999878}, {'diff': 0.00010015299999999866}, {'diff': 0.00010016599999999876}, {'diff': 0.0001001810000000012...</msg>
<status status="PASS" starttime="20201029 12:43:07.422" endtime="20201029 12:43:07.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.430" level="INFO">${RESULT} = {'diff': [0.00010002700000000253, 0.0001002220000000005, 0.00010027799999999878, 0.00010015299999999866, 0.00010016599999999876, 0.00010018100000000127, 0.00010012499999999952, 0.00010022299999999998,...</msg>
<status status="PASS" starttime="20201029 12:43:07.427" endtime="20201029 12:43:07.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.434" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:07.433" endtime="20201029 12:43:07.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.437" level="INFO">VALUE: [0.00010002700000000253, 0.0001002220000000005, 0.00010027799999999878, 0.00010015299999999866, 0.00010016599999999876, 0.00010018100000000127, 0.00010012499999999952, 0.00010022299999999998, 0.00010011099999999995, 0.0001001670000000017, 0.00010019500000000084, 0.00010029199999999835, 0.00010017999999999833, 0.00010016600000000223, 0.00010020900000000041, 0.0001003060000000014, 0.00010016699999999823, 0.00010018100000000127, 0.00010019400000000137, 0.00010013899999999909, 0.00010027800000000225, 0.00010019500000000084, 0.00010029199999999835, 0.00010012499999999952, 0.00010026399999999921, 0.00010015300000000213, 0.00010023600000000008, 0.0001002220000000005, 0.00010026399999999921, 0.00010029199999999835, 0.00010020799999999747, 0.00010019400000000137, 0.00010019400000000137, 0.00010019500000000084, 0.0001002220000000005, 0.00010017999999999833, 0.00010017999999999833, 0.00010024999999999964, 0.0001002220000000005, 0.0001002220000000005, 0.00010022199999999704, 0.00010016599999999876, 0.00010030499999999845, 0.00010019500000000084, 0.00010018100000000127, 0.00010016599999999876, 0.00010017999999999833, 0.00010009700000000038, 0.00010019499999999737, 0.00010008400000000028]</msg>
<status status="PASS" starttime="20201029 12:43:07.435" endtime="20201029 12:43:07.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.430" endtime="20201029 12:43:07.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.082" endtime="20201029 12:43:07.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.059" endtime="20201029 12:43:07.439"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.441" endtime="20201029 12:43:07.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.440" endtime="20201029 12:43:07.461"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.470" endtime="20201029 12:43:07.488"></status>
</kw>
<msg timestamp="20201029 12:43:07.488" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.469" endtime="20201029 12:43:07.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.491" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.489" endtime="20201029 12:43:07.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.492" endtime="20201029 12:43:07.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.466" endtime="20201029 12:43:07.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.464" endtime="20201029 12:43:07.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.501" endtime="20201029 12:43:07.787"></status>
</kw>
<msg timestamp="20201029 12:43:07.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02216825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:07.500" endtime="20201029 12:43:07.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02216825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:07.791" endtime="20201029 12:43:07.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.799" endtime="20201029 12:43:07.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.497" endtime="20201029 12:43:07.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.495" endtime="20201029 12:43:07.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:07.806" level="INFO">${PHILIP_RES} = [{'diff': 0.00011551400000000059}, {'diff': 0.0001155689999999994}, {'diff': 0.00011552700000000068}, {'diff': 0.00011552800000000016}, {'diff': 0.00011562499999999767}, {'diff': 0.0001154719999999984...</msg>
<status status="PASS" starttime="20201029 12:43:07.803" endtime="20201029 12:43:07.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.811" level="INFO">${RESULT} = {'diff': [0.00011551400000000059, 0.0001155689999999994, 0.00011552700000000068, 0.00011552800000000016, 0.00011562499999999767, 0.00011547199999999841, 0.00011551399999999712, 0.00011552700000000068,...</msg>
<status status="PASS" starttime="20201029 12:43:07.807" endtime="20201029 12:43:07.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.815" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:07.814" endtime="20201029 12:43:07.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.818" level="INFO">VALUE: [0.00011551400000000059, 0.0001155689999999994, 0.00011552700000000068, 0.00011552800000000016, 0.00011562499999999767, 0.00011547199999999841, 0.00011551399999999712, 0.00011552700000000068, 0.00011554199999999973, 0.000115597000000002, 0.00011555499999999982, 0.00011551400000000059, 0.00011551400000000059, 0.0001156109999999981, 0.00011552800000000016, 0.00011555499999999982, 0.00011559800000000148, 0.00011554100000000025, 0.00011555499999999982, 0.00011551300000000111, 0.00011562500000000114, 0.00011558400000000191, 0.00011552800000000016, 0.00011547200000000188, 0.00011554199999999973, 0.00011551400000000059, 0.0001156109999999981, 0.00011554100000000025, 0.00011556999999999887, 0.00011562499999999767, 0.00011548599999999798, 0.00011548599999999798, 0.00011555499999999982, 0.0001155559999999993, 0.00011551400000000059, 0.000115597000000002, 0.00011548600000000145, 0.00011558299999999896, 0.00011561100000000157, 0.00011550000000000102, 0.00011548599999999798, 0.00011563900000000071, 0.00011548599999999798, 0.00011556900000000286, 0.00011552800000000016, 0.00011555499999999982, 0.00011554199999999973, 0.00011545900000000178, 0.00011554199999999973, 0.00011558300000000243]</msg>
<status status="PASS" starttime="20201029 12:43:07.817" endtime="20201029 12:43:07.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.812" endtime="20201029 12:43:07.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.462" endtime="20201029 12:43:07.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.439" endtime="20201029 12:43:07.819"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.822" endtime="20201029 12:43:07.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.820" endtime="20201029 12:43:07.843"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.851" endtime="20201029 12:43:07.870"></status>
</kw>
<msg timestamp="20201029 12:43:07.870" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.849" endtime="20201029 12:43:07.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.873" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.872" endtime="20201029 12:43:07.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.874" endtime="20201029 12:43:07.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.847" endtime="20201029 12:43:07.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.845" endtime="20201029 12:43:07.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.884" endtime="20201029 12:43:08.170"></status>
</kw>
<msg timestamp="20201029 12:43:08.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017931833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018063528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.882" endtime="20201029 12:43:08.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017931833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018063528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.174" endtime="20201029 12:43:08.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.182" endtime="20201029 12:43:08.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.880" endtime="20201029 12:43:08.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.878" endtime="20201029 12:43:08.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:08.190" level="INFO">${PHILIP_RES} = [{'diff': 0.00013169499999999765}, {'diff': 0.00013180600000000167}, {'diff': 0.00013186100000000048}, {'diff': 0.00013180499999999873}, {'diff': 0.00013173600000000035}, {'diff': 0.000131791000000002...</msg>
<status status="PASS" starttime="20201029 12:43:08.187" endtime="20201029 12:43:08.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.194" level="INFO">${RESULT} = {'diff': [0.00013169499999999765, 0.00013180600000000167, 0.00013186100000000048, 0.00013180499999999873, 0.00013173600000000035, 0.00013179100000000263, 0.0001318890000000031, 0.00013172200000000078,...</msg>
<status status="PASS" starttime="20201029 12:43:08.191" endtime="20201029 12:43:08.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.199" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:08.198" endtime="20201029 12:43:08.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.201" level="INFO">VALUE: [0.00013169499999999765, 0.00013180600000000167, 0.00013186100000000048, 0.00013180499999999873, 0.00013173600000000035, 0.00013179100000000263, 0.0001318890000000031, 0.00013172200000000078, 0.0001318470000000009, 0.0001317639999999995, 0.00013186100000000048, 0.00013173600000000035, 0.00013183300000000134, 0.00013187500000000005, 0.00013184800000000038, 0.00013172200000000078, 0.00013188899999999962, 0.00013173600000000035, 0.00013186100000000048, 0.00013177799999999906, 0.00013186100000000048, 0.00013173600000000035, 0.00013182000000000124, 0.00013186199999999995, 0.0001317639999999995, 0.00013186100000000048, 0.00013177799999999906, 0.0001317639999999995, 0.00013188899999999962, 0.00013172200000000078, 0.0001317639999999995, 0.00013172200000000078, 0.00013187500000000005, 0.00013176300000000002, 0.00013181999999999777, 0.0001318059999999982, 0.00013176400000000296, 0.00013174999999999992, 0.0001318189999999983, 0.00013183299999999787, 0.0001317639999999995, 0.00013172200000000078, 0.00013177799999999906, 0.0001318059999999982, 0.00013187500000000005, 0.00013173600000000035, 0.0001318470000000009, 0.00013188899999999962, 0.00013177799999999906, 0.00013187500000000005]</msg>
<status status="PASS" starttime="20201029 12:43:08.200" endtime="20201029 12:43:08.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.195" endtime="20201029 12:43:08.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.843" endtime="20201029 12:43:08.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.820" endtime="20201029 12:43:08.203"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:08.206" endtime="20201029 12:43:08.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.204" endtime="20201029 12:43:08.226"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.234" endtime="20201029 12:43:08.257"></status>
</kw>
<msg timestamp="20201029 12:43:08.258" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.232" endtime="20201029 12:43:08.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.263" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.260" endtime="20201029 12:43:08.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.265" endtime="20201029 12:43:08.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.230" endtime="20201029 12:43:08.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.228" endtime="20201029 12:43:08.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.282" endtime="20201029 12:43:08.569"></status>
</kw>
<msg timestamp="20201029 12:43:08.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.280" endtime="20201029 12:43:08.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.573" endtime="20201029 12:43:08.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.581" endtime="20201029 12:43:08.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.276" endtime="20201029 12:43:08.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.272" endtime="20201029 12:43:08.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:08.588" level="INFO">${PHILIP_RES} = [{'diff': 0.00014876399999999915}, {'diff': 0.00014886100000000013}, {'diff': 0.00014872200000000044}, {'diff': 0.00014876400000000262}, {'diff': 0.00014884700000000056}, {'diff': 0.000148736}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:43:08.585" endtime="20201029 12:43:08.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.592" level="INFO">${RESULT} = {'diff': [0.00014876399999999915, 0.00014886100000000013, 0.00014872200000000044, 0.00014876400000000262, 0.00014884700000000056, 0.000148736, 0.00014880600000000133, 0.0001489030000000023, 0.00014879...</msg>
<status status="PASS" starttime="20201029 12:43:08.589" endtime="20201029 12:43:08.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.596" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:08.595" endtime="20201029 12:43:08.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.599" level="INFO">VALUE: [0.00014876399999999915, 0.00014886100000000013, 0.00014872200000000044, 0.00014876400000000262, 0.00014884700000000056, 0.000148736, 0.00014880600000000133, 0.0001489030000000023, 0.00014879200000000176, 0.0001487919999999983, 0.0001489169999999984, 0.00014881999999999743, 0.00014881899999999795, 0.00014891599999999894, 0.00014880500000000185, 0.000148833000000001, 0.00014888899999999927, 0.00014876400000000262, 0.00014876399999999915, 0.00014891700000000188, 0.0001489160000000024, 0.00014880500000000185, 0.00014884800000000004, 0.00014883400000000047, 0.00014886100000000013, 0.00014874999999999958, 0.0001488749999999997, 0.0001487919999999983, 0.00014874999999999958, 0.000148833000000001, 0.000148736, 0.00014874999999999958, 0.00014891700000000188, 0.000148833000000001, 0.00014880599999999786, 0.00014876399999999915, 0.00014881899999999795, 0.00014884700000000056, 0.00014884800000000004, 0.00014880599999999786, 0.0001488200000000009, 0.0001488619999999996, 0.00014881899999999795, 0.00014880499999999838, 0.00014880500000000185, 0.00014884700000000056, 0.00014880600000000133, 0.00014884700000000056, 0.0001488200000000009, 0.00014883400000000047]</msg>
<status status="PASS" starttime="20201029 12:43:08.598" endtime="20201029 12:43:08.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.593" endtime="20201029 12:43:08.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.226" endtime="20201029 12:43:08.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.204" endtime="20201029 12:43:08.602"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:08.604" endtime="20201029 12:43:08.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.603" endtime="20201029 12:43:08.624"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.633" endtime="20201029 12:43:08.654"></status>
</kw>
<msg timestamp="20201029 12:43:08.654" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.631" endtime="20201029 12:43:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.657" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.655" endtime="20201029 12:43:08.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.658" endtime="20201029 12:43:08.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.628" endtime="20201029 12:43:08.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.626" endtime="20201029 12:43:08.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.667" endtime="20201029 12:43:08.954"></status>
</kw>
<msg timestamp="20201029 12:43:08.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.666" endtime="20201029 12:43:08.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:08.958" endtime="20201029 12:43:08.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.966" endtime="20201029 12:43:08.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.663" endtime="20201029 12:43:08.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.661" endtime="20201029 12:43:08.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:08.973" level="INFO">${PHILIP_RES} = [{'diff': 0.0001667220000000011}, {'diff': 0.00016679099999999947}, {'diff': 0.0001667639999999998}, {'diff': 0.00016681999999999808}, {'diff': 0.00016680499999999904}, {'diff': 0.00016681999999999808...</msg>
<status status="PASS" starttime="20201029 12:43:08.969" endtime="20201029 12:43:08.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.978" level="INFO">${RESULT} = {'diff': [0.0001667220000000011, 0.00016679099999999947, 0.0001667639999999998, 0.00016681999999999808, 0.00016680499999999904, 0.00016681999999999808, 0.00016680499999999904, 0.00016670799999999805, ...</msg>
<status status="PASS" starttime="20201029 12:43:08.974" endtime="20201029 12:43:08.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.982" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:08.981" endtime="20201029 12:43:08.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.985" level="INFO">VALUE: [0.0001667220000000011, 0.00016679099999999947, 0.0001667639999999998, 0.00016681999999999808, 0.00016680499999999904, 0.00016681999999999808, 0.00016680499999999904, 0.00016670799999999805, 0.0001667639999999998, 0.00016680499999999904, 0.00016672199999999762, 0.00016679199999999894, 0.00016675000000000023, 0.00016679199999999894, 0.00016672300000000057, 0.00016672199999999762, 0.00016679099999999947, 0.00016677800000000284, 0.00016670800000000152, 0.00016680499999999904, 0.0001668480000000007, 0.00016688899999999993, 0.00016680600000000198, 0.00016675000000000023, 0.00016684700000000122, 0.00016679199999999894, 0.00016683299999999818, 0.00016670899999999753, 0.00016680499999999904, 0.00016687500000000036, 0.00016681900000000208, 0.0001667920000000024, 0.00016673600000000066, 0.00016677799999999937, 0.00016677799999999937, 0.0001668189999999986, 0.0001668059999999985, 0.00016669400000000195, 0.00016691700000000254, 0.00016669499999999796, 0.00016679199999999894, 0.00016687500000000036, 0.00016680499999999904, 0.00016679099999999947, 0.00016668000000000238, 0.00016684699999999775, 0.00016681999999999808, 0.0001667769999999999, 0.00016683300000000165, 0.000166709000000001]</msg>
<status status="PASS" starttime="20201029 12:43:08.983" endtime="20201029 12:43:08.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.979" endtime="20201029 12:43:08.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.625" endtime="20201029 12:43:08.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.602" endtime="20201029 12:43:08.987"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:08.989" endtime="20201029 12:43:09.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.988" endtime="20201029 12:43:09.009"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.018" endtime="20201029 12:43:09.041"></status>
</kw>
<msg timestamp="20201029 12:43:09.041" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.016" endtime="20201029 12:43:09.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.044" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.042" endtime="20201029 12:43:09.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.045" endtime="20201029 12:43:09.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.014" endtime="20201029 12:43:09.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.012" endtime="20201029 12:43:09.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.054" endtime="20201029 12:43:09.340"></status>
</kw>
<msg timestamp="20201029 12:43:09.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.053" endtime="20201029 12:43:09.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.344" endtime="20201029 12:43:09.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.352" endtime="20201029 12:43:09.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.050" endtime="20201029 12:43:09.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.048" endtime="20201029 12:43:09.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:09.360" level="INFO">${PHILIP_RES} = [{'diff': 0.00018552800000000078}, {'diff': 0.00018562500000000176}, {'diff': 0.00018575000000000189}, {'diff': 0.0001856949999999996}, {'diff': 0.00018575000000000189}, {'diff': 0.0001856379999999984...</msg>
<status status="PASS" starttime="20201029 12:43:09.357" endtime="20201029 12:43:09.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.364" level="INFO">${RESULT} = {'diff': [0.00018552800000000078, 0.00018562500000000176, 0.00018575000000000189, 0.0001856949999999996, 0.00018575000000000189, 0.0001856379999999984, 0.00018573599999999885, 0.00018573599999999885, ...</msg>
<status status="PASS" starttime="20201029 12:43:09.361" endtime="20201029 12:43:09.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.369" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:09.368" endtime="20201029 12:43:09.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.371" level="INFO">VALUE: [0.00018552800000000078, 0.00018562500000000176, 0.00018575000000000189, 0.0001856949999999996, 0.00018575000000000189, 0.0001856379999999984, 0.00018573599999999885, 0.00018573599999999885, 0.00018561099999999872, 0.00018572199999999928, 0.00018570800000000318, 0.00018561099999999872, 0.00018576399999999799, 0.00018565299999999743, 0.0001856249999999983, 0.0001857079999999997, 0.00018563899999999786, 0.00018568100000000004, 0.00018575000000000189, 0.00018572199999999928, 0.0001856530000000009, 0.0001857079999999997, 0.00018566599999999753, 0.00018573599999999885, 0.00018561099999999872, 0.00018568000000000057, 0.00018573600000000232, 0.00018563900000000133, 0.0001857079999999997, 0.00018565200000000143, 0.00018563900000000133, 0.000185666000000001, 0.00018573599999999885, 0.00018566700000000047, 0.0001857079999999997, 0.0001857079999999997, 0.000185666000000001, 0.00018569400000000014, 0.0001857079999999997, 0.0001856110000000022, 0.000185666999999997, 0.000185666000000001, 0.00018570800000000318, 0.00018569400000000014, 0.00018566700000000047, 0.0001856530000000009, 0.0001856110000000022, 0.00018568000000000057, 0.0001856530000000009, 0.00018566700000000047]</msg>
<status status="PASS" starttime="20201029 12:43:09.370" endtime="20201029 12:43:09.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.365" endtime="20201029 12:43:09.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.010" endtime="20201029 12:43:09.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.987" endtime="20201029 12:43:09.373"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:09.376" endtime="20201029 12:43:09.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.374" endtime="20201029 12:43:09.396"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.404" endtime="20201029 12:43:09.428"></status>
</kw>
<msg timestamp="20201029 12:43:09.429" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.403" endtime="20201029 12:43:09.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.431" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.430" endtime="20201029 12:43:09.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.432" endtime="20201029 12:43:09.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.400" endtime="20201029 12:43:09.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.398" endtime="20201029 12:43:09.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.443" endtime="20201029 12:43:09.731"></status>
</kw>
<msg timestamp="20201029 12:43:09.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.441" endtime="20201029 12:43:09.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.735" endtime="20201029 12:43:09.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.743" endtime="20201029 12:43:09.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.438" endtime="20201029 12:43:09.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.436" endtime="20201029 12:43:09.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:09.750" level="INFO">${PHILIP_RES} = [{'diff': 0.00020522200000000143}, {'diff': 0.00020536100000000113}, {'diff': 0.000205236000000001}, {'diff': 0.0002053750000000007}, {'diff': 0.00020530499999999938}, {'diff': 0.00020534700000000156}...</msg>
<status status="PASS" starttime="20201029 12:43:09.747" endtime="20201029 12:43:09.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.754" level="INFO">${RESULT} = {'diff': [0.00020522200000000143, 0.00020536100000000113, 0.000205236000000001, 0.0002053750000000007, 0.00020530499999999938, 0.00020534700000000156, 0.00020520800000000186, 0.0002052909999999998, 0....</msg>
<status status="PASS" starttime="20201029 12:43:09.751" endtime="20201029 12:43:09.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.758" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:09.757" endtime="20201029 12:43:09.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.760" level="INFO">VALUE: [0.00020522200000000143, 0.00020536100000000113, 0.000205236000000001, 0.0002053750000000007, 0.00020530499999999938, 0.00020534700000000156, 0.00020520800000000186, 0.0002052909999999998, 0.00020531900000000242, 0.0002053469999999981, 0.00020534700000000156, 0.00020526400000000014, 0.00020529199999999928, 0.00020531899999999895, 0.0002052779999999997, 0.0002052079999999984, 0.00020538900000000027, 0.00020538900000000027, 0.0002053750000000007, 0.00020529199999999928, 0.00020522199999999796, 0.00020527700000000024, 0.0002052909999999998, 0.00020529199999999928, 0.000205236000000001, 0.00020533400000000146, 0.00020530499999999938, 0.0002052909999999998, 0.00020519399999999882, 0.00020522200000000143, 0.00020522199999999796, 0.00020530499999999938, 0.00020522200000000143, 0.00020522200000000143, 0.00020522199999999796, 0.00020519500000000176, 0.00020520899999999787, 0.00020526400000000014, 0.00020530499999999938, 0.00020531999999999842, 0.0002052079999999984, 0.00020523599999999753, 0.00020529099999999634, 0.00020530599999999538, 0.00020523599999999753, 0.00020522199999999796, 0.00020536100000000113, 0.0002052079999999984, 0.00020530500000000285, 0.00020523599999999753]</msg>
<status status="PASS" starttime="20201029 12:43:09.759" endtime="20201029 12:43:09.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.755" endtime="20201029 12:43:09.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.396" endtime="20201029 12:43:09.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.374" endtime="20201029 12:43:09.763"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:09.766" endtime="20201029 12:43:09.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.764" endtime="20201029 12:43:09.786"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.794" endtime="20201029 12:43:09.819"></status>
</kw>
<msg timestamp="20201029 12:43:09.820" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.792" endtime="20201029 12:43:09.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.822" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.821" endtime="20201029 12:43:09.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.823" endtime="20201029 12:43:09.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.790" endtime="20201029 12:43:09.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.788" endtime="20201029 12:43:09.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.832" endtime="20201029 12:43:10.135"></status>
</kw>
<msg timestamp="20201029 12:43:10.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019050583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019276472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.831" endtime="20201029 12:43:10.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019050583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019276472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.139" endtime="20201029 12:43:10.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.147" endtime="20201029 12:43:10.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.828" endtime="20201029 12:43:10.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.826" endtime="20201029 12:43:10.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:10.153" level="INFO">${PHILIP_RES} = [{'diff': 0.00022588899999999995}, {'diff': 0.0002259299999999992}, {'diff': 0.0002259450000000017}, {'diff': 0.000225903000000003}, {'diff': 0.00022581899999999863}, {'diff': 0.00022590299999999952},...</msg>
<status status="PASS" starttime="20201029 12:43:10.150" endtime="20201029 12:43:10.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.158" level="INFO">${RESULT} = {'diff': [0.00022588899999999995, 0.0002259299999999992, 0.0002259450000000017, 0.000225903000000003, 0.00022581899999999863, 0.00022590299999999952, 0.00022588899999999995, 0.00022583400000000114, 0....</msg>
<status status="PASS" starttime="20201029 12:43:10.154" endtime="20201029 12:43:10.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.163" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:10.161" endtime="20201029 12:43:10.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.165" level="INFO">VALUE: [0.00022588899999999995, 0.0002259299999999992, 0.0002259450000000017, 0.000225903000000003, 0.00022581899999999863, 0.00022590299999999952, 0.00022588899999999995, 0.00022583400000000114, 0.00022584700000000124, 0.0002260130000000006, 0.0002259580000000018, 0.00022590299999999952, 0.00022588899999999995, 0.00022598600000000094, 0.00022593099999999866, 0.00022588899999999995, 0.00022587500000000038, 0.00022601400000000008, 0.00022598600000000094, 0.00022587500000000038, 0.00022590299999999952, 0.00022587500000000038, 0.00022588899999999995, 0.0002259450000000017, 0.0002259169999999991, 0.0002259169999999991, 0.00022602799999999965, 0.00022583400000000114, 0.0002259169999999991, 0.00022591700000000256, 0.0002259450000000017, 0.00022595799999999833, 0.00022594399999999876, 0.00022584800000000071, 0.0002260549999999993, 0.00022584800000000071, 0.0002259299999999992, 0.00022590299999999952, 0.00022587500000000038, 0.0002259299999999992, 0.00022590299999999952, 0.0002259580000000018, 0.00022591599999999962, 0.00022584700000000124, 0.00022602799999999965, 0.00022583399999999768, 0.00022581899999999863, 0.0002258190000000021, 0.0002259169999999991, 0.00022590299999999952]</msg>
<status status="PASS" starttime="20201029 12:43:10.164" endtime="20201029 12:43:10.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.159" endtime="20201029 12:43:10.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.786" endtime="20201029 12:43:10.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.763" endtime="20201029 12:43:10.167"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.169" endtime="20201029 12:43:10.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.168" endtime="20201029 12:43:10.189"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.197" endtime="20201029 12:43:10.221"></status>
</kw>
<msg timestamp="20201029 12:43:10.222" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.196" endtime="20201029 12:43:10.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.224" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.223" endtime="20201029 12:43:10.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.225" endtime="20201029 12:43:10.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.193" endtime="20201029 12:43:10.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.191" endtime="20201029 12:43:10.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.234" endtime="20201029 12:43:10.520"></status>
</kw>
<msg timestamp="20201029 12:43:10.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017284028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017531292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.233" endtime="20201029 12:43:10.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017284028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017531292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.524" endtime="20201029 12:43:10.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.532" endtime="20201029 12:43:10.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.230" endtime="20201029 12:43:10.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.228" endtime="20201029 12:43:10.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:10.542" level="INFO">${PHILIP_RES} = [{'diff': 0.0002472640000000005}, {'diff': 0.00024752800000000033}, {'diff': 0.0002474169999999998}, {'diff': 0.00024747200000000205}, {'diff': 0.0002474719999999986}, {'diff': 0.00024737500000000107}...</msg>
<status status="PASS" starttime="20201029 12:43:10.538" endtime="20201029 12:43:10.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.546" level="INFO">${RESULT} = {'diff': [0.0002472640000000005, 0.00024752800000000033, 0.0002474169999999998, 0.00024747200000000205, 0.0002474719999999986, 0.00024737500000000107, 0.0002474730000000015, 0.0002474719999999986, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:10.543" endtime="20201029 12:43:10.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.550" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:10.549" endtime="20201029 12:43:10.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.552" level="INFO">VALUE: [0.0002472640000000005, 0.00024752800000000033, 0.0002474169999999998, 0.00024747200000000205, 0.0002474719999999986, 0.00024737500000000107, 0.0002474730000000015, 0.0002474719999999986, 0.0002474589999999985, 0.0002474169999999998, 0.00024752800000000033, 0.00024751400000000076, 0.0002474030000000002, 0.0002474030000000002, 0.00024729199999999965, 0.00024737500000000107, 0.0002473610000000015, 0.00024738899999999717, 0.0002474999999999977, 0.0002473610000000015, 0.00024737500000000107, 0.0002473199999999988, 0.0002473749999999976, 0.0002473190000000028, 0.00024734699999999846, 0.0002473189999999993, 0.0002473610000000015, 0.0002473480000000014, 0.00024733400000000183, 0.00024724999999999747, 0.00024725000000000094, 0.000247457999999999, 0.00024729199999999965, 0.0002473329999999989, 0.0002472779999999966, 0.00024738900000000064, 0.00024729199999999965, 0.0002474580000000025, 0.0002473610000000015, 0.00024737500000000107, 0.0002473879999999977, 0.00024737500000000107, 0.0002472780000000001, 0.00024734699999999846, 0.0002473470000000019, 0.00024726399999999704, 0.0002473470000000019, 0.00024725000000000094, 0.00024722199999999833, 0.00024732000000000226]</msg>
<status status="PASS" starttime="20201029 12:43:10.551" endtime="20201029 12:43:10.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.546" endtime="20201029 12:43:10.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.190" endtime="20201029 12:43:10.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.167" endtime="20201029 12:43:10.554"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.557" endtime="20201029 12:43:10.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.555" endtime="20201029 12:43:10.577"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.585" endtime="20201029 12:43:10.613"></status>
</kw>
<msg timestamp="20201029 12:43:10.613" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.583" endtime="20201029 12:43:10.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.616" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.614" endtime="20201029 12:43:10.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.617" endtime="20201029 12:43:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.581" endtime="20201029 12:43:10.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.579" endtime="20201029 12:43:10.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.627" endtime="20201029 12:43:10.912"></status>
</kw>
<msg timestamp="20201029 12:43:10.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.625" endtime="20201029 12:43:10.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021919319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022188889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.916" endtime="20201029 12:43:10.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.924" endtime="20201029 12:43:10.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.623" endtime="20201029 12:43:10.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.621" endtime="20201029 12:43:10.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:10.930" level="INFO">${PHILIP_RES} = [{'diff': 0.0002695700000000002}, {'diff': 0.00026963900000000207}, {'diff': 0.00026973699999999906}, {'diff': 0.0002695969999999999}, {'diff': 0.0002696800000000013}, {'diff': 0.00026963900000000207}...</msg>
<status status="PASS" starttime="20201029 12:43:10.927" endtime="20201029 12:43:10.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.934" level="INFO">${RESULT} = {'diff': [0.0002695700000000002, 0.00026963900000000207, 0.00026973699999999906, 0.0002695969999999999, 0.0002696800000000013, 0.00026963900000000207, 0.00026970800000000045, 0.00026962499999999903, 0...</msg>
<status status="PASS" starttime="20201029 12:43:10.931" endtime="20201029 12:43:10.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.939" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:10.938" endtime="20201029 12:43:10.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.941" level="INFO">VALUE: [0.0002695700000000002, 0.00026963900000000207, 0.00026973699999999906, 0.0002695969999999999, 0.0002696800000000013, 0.00026963900000000207, 0.00026970800000000045, 0.00026962499999999903, 0.00026962499999999903, 0.00026948599999999934, 0.0002695830000000003, 0.0002695830000000003, 0.0002695969999999999, 0.0002695410000000016, 0.00026961099999999946, 0.00026963900000000207, 0.0002695830000000003, 0.00026956900000000075, 0.00026955600000000066, 0.00026948599999999934, 0.00026961099999999946, 0.0002696250000000025, 0.00026961099999999946, 0.0002695559999999972, 0.0002696389999999986, 0.00026966600000000174, 0.00026965300000000164, 0.00026963900000000207, 0.00026963900000000207, 0.0002695830000000003, 0.0002697359999999996, 0.0002695420000000011, 0.0002695559999999972, 0.00026959800000000284, 0.00026959800000000284, 0.0002696800000000013, 0.0002696250000000025, 0.000269722, 0.00026961100000000293, 0.0002696250000000025, 0.0002695969999999964, 0.0002696670000000012, 0.0002695559999999972, 0.0002695969999999964, 0.00026963900000000207, 0.000269722, 0.00026958400000000327, 0.0002697089999999999, 0.000269610999999996, 0.00026965300000000164]</msg>
<status status="PASS" starttime="20201029 12:43:10.940" endtime="20201029 12:43:10.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.935" endtime="20201029 12:43:10.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.577" endtime="20201029 12:43:10.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.555" endtime="20201029 12:43:10.944"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.946" endtime="20201029 12:43:10.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.945" endtime="20201029 12:43:10.966"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.974" endtime="20201029 12:43:11.001"></status>
</kw>
<msg timestamp="20201029 12:43:11.001" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.973" endtime="20201029 12:43:11.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.004" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.002" endtime="20201029 12:43:11.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.005" endtime="20201029 12:43:11.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.970" endtime="20201029 12:43:11.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.968" endtime="20201029 12:43:11.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.014" endtime="20201029 12:43:11.301"></status>
</kw>
<msg timestamp="20201029 12:43:11.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:11.012" endtime="20201029 12:43:11.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:11.306" endtime="20201029 12:43:11.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.314" endtime="20201029 12:43:11.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.010" endtime="20201029 12:43:11.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.008" endtime="20201029 12:43:11.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:11.320" level="INFO">${PHILIP_RES} = [{'diff': 0.0002926390000000008}, {'diff': 0.00029266699999999993}, {'diff': 0.0002928189999999997}, {'diff': 0.00029270799999999916}, {'diff': 0.0002928329999999993}, {'diff': 0.0002927910000000006},...</msg>
<status status="PASS" starttime="20201029 12:43:11.317" endtime="20201029 12:43:11.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.325" level="INFO">${RESULT} = {'diff': [0.0002926390000000008, 0.00029266699999999993, 0.0002928189999999997, 0.00029270799999999916, 0.0002928329999999993, 0.0002927910000000006, 0.00029275000000000134, 0.00029287500000000147, 0....</msg>
<status status="PASS" starttime="20201029 12:43:11.321" endtime="20201029 12:43:11.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.330" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:11.329" endtime="20201029 12:43:11.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.333" level="INFO">VALUE: [0.0002926390000000008, 0.00029266699999999993, 0.0002928189999999997, 0.00029270799999999916, 0.0002928329999999993, 0.0002927910000000006, 0.00029275000000000134, 0.00029287500000000147, 0.00029284699999999886, 0.0002927499999999979, 0.0002927780000000005, 0.00029272199999999873, 0.0002926939999999996, 0.00029284699999999886, 0.0002927090000000021, 0.0002927780000000005, 0.00029270799999999916, 0.00029270799999999916, 0.00029270799999999916, 0.0002928059999999996, 0.0002928059999999996, 0.0002926520000000009, 0.00029270799999999916, 0.00029275000000000134, 0.00029279200000000005, 0.00029270799999999916, 0.0002927780000000005, 0.00029270899999999864, 0.00029263799999999784, 0.00029268100000000297, 0.00029279200000000005, 0.00029266699999999993, 0.00029284700000000233, 0.00029272199999999873, 0.0002926809999999995, 0.00029275000000000134, 0.0002927220000000022, 0.00029279200000000005, 0.00029268099999999603, 0.0002928329999999993, 0.0002927499999999944, 0.00029266699999999646, 0.0002927220000000022, 0.00029263900000000426, 0.00029275000000000134, 0.00029273700000000125, 0.0002927640000000009, 0.0002928329999999993, 0.00029273600000000177, 0.00029279200000000005]</msg>
<status status="PASS" starttime="20201029 12:43:11.331" endtime="20201029 12:43:11.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.326" endtime="20201029 12:43:11.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.967" endtime="20201029 12:43:11.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.944" endtime="20201029 12:43:11.335"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.337" endtime="20201029 12:43:11.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.336" endtime="20201029 12:43:11.357"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.365" endtime="20201029 12:43:11.396"></status>
</kw>
<msg timestamp="20201029 12:43:11.397" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.364" endtime="20201029 12:43:11.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.399" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.398" endtime="20201029 12:43:11.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.401" endtime="20201029 12:43:11.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.361" endtime="20201029 12:43:11.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.359" endtime="20201029 12:43:11.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.410" endtime="20201029 12:43:11.716"></status>
</kw>
<msg timestamp="20201029 12:43:11.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020594986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.408" endtime="20201029 12:43:11.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020594986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.720" endtime="20201029 12:43:11.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.729" endtime="20201029 12:43:11.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.406" endtime="20201029 12:43:11.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.404" endtime="20201029 12:43:11.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:11.738" level="INFO">${PHILIP_RES} = [{'diff': 0.00031681899999999943}, {'diff': 0.0003169169999999999}, {'diff': 0.0003169719999999987}, {'diff': 0.0003170000000000013}, {'diff': 0.00031697200000000217}, {'diff': 0.0003168750000000012},...</msg>
<status status="PASS" starttime="20201029 12:43:11.734" endtime="20201029 12:43:11.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.742" level="INFO">${RESULT} = {'diff': [0.00031681899999999943, 0.0003169169999999999, 0.0003169719999999987, 0.0003170000000000013, 0.00031697200000000217, 0.0003168750000000012, 0.0003169169999999999, 0.0003170139999999974, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:11.739" endtime="20201029 12:43:11.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.747" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:11.746" endtime="20201029 12:43:11.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.749" level="INFO">VALUE: [0.00031681899999999943, 0.0003169169999999999, 0.0003169719999999987, 0.0003170000000000013, 0.00031697200000000217, 0.0003168750000000012, 0.0003169169999999999, 0.0003170139999999974, 0.0003170000000000013, 0.00031709800000000177, 0.00031702800000000045, 0.0003170140000000009, 0.00031702800000000045, 0.0003170550000000001, 0.0003170140000000009, 0.0003168620000000011, 0.00031688900000000075, 0.00031693099999999946, 0.00031693, 0.0003168889999999973, 0.00031702800000000045, 0.00031694399999999956, 0.000317042, 0.0003168750000000012, 0.00031702800000000045, 0.0003169169999999999, 0.00031698600000000174, 0.0003170140000000009, 0.00031698599999999827, 0.00031702800000000045, 0.0003170140000000009, 0.0003170139999999974, 0.000317027999999997, 0.00031694399999999956, 0.00031694499999999903, 0.0003169589999999986, 0.0003169030000000003, 0.00031693099999999946, 0.0003170559999999961, 0.00031706900000000315, 0.0003170000000000048, 0.0003170550000000036, 0.0003170420000000035, 0.0003169860000000052, 0.0003168889999999938, 0.00031693099999999946, 0.00031694499999999903, 0.0003169030000000003, 0.0003169169999999999, 0.000317139000000001]</msg>
<status status="PASS" starttime="20201029 12:43:11.748" endtime="20201029 12:43:11.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.743" endtime="20201029 12:43:11.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.358" endtime="20201029 12:43:11.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.335" endtime="20201029 12:43:11.751"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.754" endtime="20201029 12:43:11.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.752" endtime="20201029 12:43:11.774"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.782" endtime="20201029 12:43:11.814"></status>
</kw>
<msg timestamp="20201029 12:43:11.814" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.781" endtime="20201029 12:43:11.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.817" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.815" endtime="20201029 12:43:11.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.818" endtime="20201029 12:43:11.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.778" endtime="20201029 12:43:11.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.776" endtime="20201029 12:43:11.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.828" endtime="20201029 12:43:12.114"></status>
</kw>
<msg timestamp="20201029 12:43:12.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:11.827" endtime="20201029 12:43:12.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.118" endtime="20201029 12:43:12.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.126" endtime="20201029 12:43:12.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.824" endtime="20201029 12:43:12.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.822" endtime="20201029 12:43:12.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.133" level="INFO">${PHILIP_RES} = [{'diff': 0.0003417780000000009}, {'diff': 0.00034180600000000005}, {'diff': 0.0003417780000000009}, {'diff': 0.00034186100000000233}, {'diff': 0.00034180600000000005}, {'diff': 0.00034172200000000263...</msg>
<status status="PASS" starttime="20201029 12:43:12.130" endtime="20201029 12:43:12.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.137" level="INFO">${RESULT} = {'diff': [0.0003417780000000009, 0.00034180600000000005, 0.0003417780000000009, 0.00034186100000000233, 0.00034180600000000005, 0.00034172200000000263, 0.00034177799999999744, 0.0003418050000000006, 0...</msg>
<status status="PASS" starttime="20201029 12:43:12.134" endtime="20201029 12:43:12.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.141" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.140" endtime="20201029 12:43:12.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.144" level="INFO">VALUE: [0.0003417780000000009, 0.00034180600000000005, 0.0003417780000000009, 0.00034186100000000233, 0.00034180600000000005, 0.00034172200000000263, 0.00034177799999999744, 0.0003418050000000006, 0.00034195799999999985, 0.00034176400000000134, 0.0003419310000000002, 0.0003417780000000009, 0.0003419310000000002, 0.00034186099999999886, 0.0003418329999999997, 0.0003418329999999997, 0.0003418329999999997, 0.0003418469999999993, 0.00034187499999999843, 0.0003419170000000006, 0.0003418339999999992, 0.0003417639999999979, 0.0003417780000000009, 0.00034173599999999874, 0.0003418469999999993, 0.00034177799999999744, 0.00034188900000000147, 0.00034180600000000005, 0.0003416390000000012, 0.00034183299999999625, 0.0003417780000000009, 0.0003419019999999981, 0.0003419030000000045, 0.0003419450000000032, 0.0003418469999999993, 0.0003419580000000033, 0.0003418050000000006, 0.0003418469999999993, 0.00034191599999999767, 0.0003419030000000045, 0.00034186099999999886, 0.00034191699999999714, 0.0003417920000000005, 0.0003417500000000018, 0.00034181900000000015, 0.0003418469999999993, 0.0003417780000000009, 0.00034186099999999886, 0.00034177700000000144, 0.0003417360000000022]</msg>
<status status="PASS" starttime="20201029 12:43:12.143" endtime="20201029 12:43:12.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.138" endtime="20201029 12:43:12.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.775" endtime="20201029 12:43:12.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.752" endtime="20201029 12:43:12.147"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.149" endtime="20201029 12:43:12.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.148" endtime="20201029 12:43:12.169"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.178" endtime="20201029 12:43:12.210"></status>
</kw>
<msg timestamp="20201029 12:43:12.211" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.176" endtime="20201029 12:43:12.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.213" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.212" endtime="20201029 12:43:12.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.214" endtime="20201029 12:43:12.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.174" endtime="20201029 12:43:12.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.171" endtime="20201029 12:43:12.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.224" endtime="20201029 12:43:12.510"></status>
</kw>
<msg timestamp="20201029 12:43:12.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.222" endtime="20201029 12:43:12.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.514" endtime="20201029 12:43:12.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.522" endtime="20201029 12:43:12.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.219" endtime="20201029 12:43:12.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.218" endtime="20201029 12:43:12.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.529" level="INFO">${PHILIP_RES} = [{'diff': 0.0003674869999999997}, {'diff': 0.00036763899999999947}, {'diff': 0.0003676249999999999}, {'diff': 0.0003676249999999999}, {'diff': 0.0003676110000000003}, {'diff': 0.0003676660000000026}, ...</msg>
<status status="PASS" starttime="20201029 12:43:12.526" endtime="20201029 12:43:12.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.534" level="INFO">${RESULT} = {'diff': [0.0003674869999999997, 0.00036763899999999947, 0.0003676249999999999, 0.0003676249999999999, 0.0003676110000000003, 0.0003676660000000026, 0.0003676669999999986, 0.0003675700000000011, 0.000...</msg>
<status status="PASS" starttime="20201029 12:43:12.530" endtime="20201029 12:43:12.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.538" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.537" endtime="20201029 12:43:12.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.541" level="INFO">VALUE: [0.0003674869999999997, 0.00036763899999999947, 0.0003676249999999999, 0.0003676249999999999, 0.0003676110000000003, 0.0003676660000000026, 0.0003676669999999986, 0.0003675700000000011, 0.0003676249999999999, 0.0003676110000000003, 0.00036765299999999904, 0.0003675700000000011, 0.0003676249999999999, 0.00036756899999999815, 0.000367540999999999, 0.0003675690000000016, 0.0003674860000000002, 0.0003676110000000003, 0.00036748599999999673, 0.00036761099999999686, 0.00036763900000000294, 0.0003676669999999986, 0.0003677080000000013, 0.0003675140000000028, 0.00036768000000000217, 0.0003675419999999985, 0.0003675420000000054, 0.0003676110000000038, 0.0003677220000000009, 0.0003675829999999977, 0.0003675829999999977, 0.0003676530000000025, 0.0003676670000000021, 0.00036768000000000217, 0.00036772199999999394, 0.0003678189999999984, 0.0003677080000000013, 0.0003676939999999948, 0.0003676530000000025, 0.00036755599999999805, 0.00036756899999999815, 0.00036763900000000294, 0.00036749999999999977, 0.0003676670000000021, 0.0003676670000000021, 0.0003676530000000025, 0.0003676670000000021, 0.0003676950000000012, 0.0003676939999999948, 0.0003676660000000026]</msg>
<status status="PASS" starttime="20201029 12:43:12.539" endtime="20201029 12:43:12.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.535" endtime="20201029 12:43:12.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.170" endtime="20201029 12:43:12.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.147" endtime="20201029 12:43:12.543"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.545" endtime="20201029 12:43:12.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.544" endtime="20201029 12:43:12.565"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.574" endtime="20201029 12:43:12.603"></status>
</kw>
<msg timestamp="20201029 12:43:12.603" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.572" endtime="20201029 12:43:12.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.606" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.605" endtime="20201029 12:43:12.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.607" endtime="20201029 12:43:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.569" endtime="20201029 12:43:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.567" endtime="20201029 12:43:12.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.616" endtime="20201029 12:43:12.904"></status>
</kw>
<msg timestamp="20201029 12:43:12.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01820175, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:12.615" endtime="20201029 12:43:12.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01820175, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:12.908" endtime="20201029 12:43:12.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.916" endtime="20201029 12:43:12.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.612" endtime="20201029 12:43:12.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.610" endtime="20201029 12:43:12.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.923" level="INFO">${PHILIP_RES} = [{'diff': 0.00039424999999999877}, {'diff': 0.00039443099999999717}, {'diff': 0.00039443100000000064}, {'diff': 0.00039417999999999745}, {'diff': 0.00039437500000000236}, {'diff': 0.000394346999999999...</msg>
<status status="PASS" starttime="20201029 12:43:12.920" endtime="20201029 12:43:12.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.927" level="INFO">${RESULT} = {'diff': [0.00039424999999999877, 0.00039443099999999717, 0.00039443100000000064, 0.00039417999999999745, 0.00039437500000000236, 0.00039434699999999975, 0.00039443100000000064, 0.0003946519999999988,...</msg>
<status status="PASS" starttime="20201029 12:43:12.924" endtime="20201029 12:43:12.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.932" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.931" endtime="20201029 12:43:12.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.934" level="INFO">VALUE: [0.00039424999999999877, 0.00039443099999999717, 0.00039443100000000064, 0.00039417999999999745, 0.00039437500000000236, 0.00039434699999999975, 0.00039443100000000064, 0.0003946519999999988, 0.00039458300000000043, 0.0003946109999999996, 0.0003944719999999999, 0.00039452799999999816, 0.00039448599999999945, 0.00039454099999999825, 0.00039430500000000104, 0.00039433399999999966, 0.0003944589999999998, 0.00039420899999999953, 0.00039430500000000104, 0.0003942770000000019, 0.0003943609999999993, 0.0003943330000000002, 0.0003943610000000028, 0.0003943330000000002, 0.00039426399999999834, 0.0003942919999999975, 0.00039430599999999705, 0.0003944160000000016, 0.00039438899999999846, 0.0003942359999999992, 0.0003943330000000002, 0.00039447200000000335, 0.0003944030000000015, 0.00039429100000000494, 0.0003942919999999975, 0.0003943329999999967, 0.00039440200000000203, 0.000394499999999999, 0.0003944160000000016, 0.0003942919999999975, 0.00039441599999999466, 0.0003942359999999992, 0.0003944719999999999, 0.0003943749999999954, 0.0003944030000000015, 0.00039443000000000117, 0.00039432000000000356, 0.0003942779999999979, 0.00039438900000000193, 0.00039436099999999585]</msg>
<status status="PASS" starttime="20201029 12:43:12.933" endtime="20201029 12:43:12.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.928" endtime="20201029 12:43:12.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.566" endtime="20201029 12:43:12.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.543" endtime="20201029 12:43:12.936"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.939" endtime="20201029 12:43:12.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.937" endtime="20201029 12:43:12.959"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.967" endtime="20201029 12:43:13.004"></status>
</kw>
<msg timestamp="20201029 12:43:13.005" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.966" endtime="20201029 12:43:13.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.008" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.006" endtime="20201029 12:43:13.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.009" endtime="20201029 12:43:13.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.963" endtime="20201029 12:43:13.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.961" endtime="20201029 12:43:13.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.020" endtime="20201029 12:43:13.308"></status>
</kw>
<msg timestamp="20201029 12:43:13.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021543375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.019" endtime="20201029 12:43:13.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021543375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.312" endtime="20201029 12:43:13.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.320" endtime="20201029 12:43:13.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.016" endtime="20201029 12:43:13.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.014" endtime="20201029 12:43:13.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:13.327" level="INFO">${PHILIP_RES} = [{'diff': 0.0004219310000000004}, {'diff': 0.0004221249999999989}, {'diff': 0.0004220419999999975}, {'diff': 0.0004220560000000005}, {'diff': 0.0004220560000000005}, {'diff': 0.00042201399999999833}, ...</msg>
<status status="PASS" starttime="20201029 12:43:13.324" endtime="20201029 12:43:13.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.331" level="INFO">${RESULT} = {'diff': [0.0004219310000000004, 0.0004221249999999989, 0.0004220419999999975, 0.0004220560000000005, 0.0004220560000000005, 0.00042201399999999833, 0.00042201399999999833, 0.0004219859999999992, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:13.328" endtime="20201029 12:43:13.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.336" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:13.335" endtime="20201029 12:43:13.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.338" level="INFO">VALUE: [0.0004219310000000004, 0.0004221249999999989, 0.0004220419999999975, 0.0004220560000000005, 0.0004220560000000005, 0.00042201399999999833, 0.00042201399999999833, 0.0004219859999999992, 0.0004220140000000018, 0.0004220280000000014, 0.0004219300000000009, 0.0004220270000000019, 0.0004219159999999979, 0.0004218339999999994, 0.00042177799999999765, 0.00042187499999999864, 0.0004217920000000007, 0.00042186100000000254, 0.0004219300000000009, 0.00042183299999999993, 0.0004219170000000008, 0.0004220279999999979, 0.00042190199999999484, 0.0004217919999999972, 0.00042186100000000254, 0.0004218330000000034, 0.00042186100000000254, 0.0004218880000000022, 0.00042179200000000416, 0.00042180600000000373, 0.0004219300000000009, 0.00042186100000000254, 0.00042184699999999603, 0.0004219170000000008, 0.00042187499999999517, 0.0004218189999999969, 0.0004219310000000004, 0.000421764000000005, 0.0004218049999999973, 0.0004218189999999969, 0.00042199999999999876, 0.0004219719999999996, 0.00042190300000000125, 0.0004219170000000008, 0.00042184700000000297, 0.0004218059999999968, 0.0004220140000000053, 0.00042188899999999474, 0.00042191600000000135, 0.0004219719999999996]</msg>
<status status="PASS" starttime="20201029 12:43:13.337" endtime="20201029 12:43:13.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.332" endtime="20201029 12:43:13.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.959" endtime="20201029 12:43:13.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.937" endtime="20201029 12:43:13.341"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:13.343" endtime="20201029 12:43:13.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.342" endtime="20201029 12:43:13.363"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.372" endtime="20201029 12:43:13.406"></status>
</kw>
<msg timestamp="20201029 12:43:13.407" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.370" endtime="20201029 12:43:13.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.409" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.408" endtime="20201029 12:43:13.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.410" endtime="20201029 12:43:13.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.368" endtime="20201029 12:43:13.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.366" endtime="20201029 12:43:13.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.420" endtime="20201029 12:43:13.705"></status>
</kw>
<msg timestamp="20201029 12:43:13.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018372097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018822278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.418" endtime="20201029 12:43:13.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018372097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018822278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.709" endtime="20201029 12:43:13.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.717" endtime="20201029 12:43:13.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.415" endtime="20201029 12:43:13.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.414" endtime="20201029 12:43:13.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:13.724" level="INFO">${PHILIP_RES} = [{'diff': 0.0004501810000000009}, {'diff': 0.00045016600000000184}, {'diff': 0.0004501670000000013}, {'diff': 0.000450194000000001}, {'diff': 0.0004503609999999998}, {'diff': 0.0004501810000000009}, {...</msg>
<status status="PASS" starttime="20201029 12:43:13.720" endtime="20201029 12:43:13.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.729" level="INFO">${RESULT} = {'diff': [0.0004501810000000009, 0.00045016600000000184, 0.0004501670000000013, 0.000450194000000001, 0.0004503609999999998, 0.0004501810000000009, 0.0004503200000000006, 0.00045044400000000123, 0.000...</msg>
<status status="PASS" starttime="20201029 12:43:13.725" endtime="20201029 12:43:13.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.733" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:13.732" endtime="20201029 12:43:13.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.736" level="INFO">VALUE: [0.0004501810000000009, 0.00045016600000000184, 0.0004501670000000013, 0.000450194000000001, 0.0004503609999999998, 0.0004501810000000009, 0.0004503200000000006, 0.00045044400000000123, 0.000450306000000001, 0.0004501939999999975, 0.00045034700000000025, 0.0004501529999999983, 0.0004502779999999984, 0.00045029100000000197, 0.00045020800000000055, 0.0004504169999999981, 0.00045027800000000187, 0.0004503190000000011, 0.00045033400000000015, 0.00045030500000000154, 0.0004503609999999998, 0.0004501529999999983, 0.0004502359999999997, 0.0004502640000000023, 0.000450209, 0.0004502220000000001, 0.000450209, 0.00045031899999999764, 0.0004503619999999958, 0.0004502779999999984, 0.00045030499999999807, 0.0004503749999999959, 0.00045034799999999625, 0.00045030599999999754, 0.0004503469999999968, 0.0004502220000000001, 0.0004502500000000062, 0.0004500830000000039, 0.00045012499999999567, 0.00045009699999999653, 0.00045015300000000175, 0.0004501669999999944, 0.00045015200000000227, 0.0004503470000000037, 0.00045026399999999883, 0.0004502920000000049, 0.00045029100000000544, 0.00045037500000000286, 0.000450403000000002, 0.00045033300000000415]</msg>
<status status="PASS" starttime="20201029 12:43:13.734" endtime="20201029 12:43:13.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.729" endtime="20201029 12:43:13.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.364" endtime="20201029 12:43:13.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.341" endtime="20201029 12:43:13.738"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:13.740" endtime="20201029 12:43:13.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.739" endtime="20201029 12:43:13.760"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.769" endtime="20201029 12:43:13.804"></status>
</kw>
<msg timestamp="20201029 12:43:13.804" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.767" endtime="20201029 12:43:13.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.807" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.805" endtime="20201029 12:43:13.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.808" endtime="20201029 12:43:13.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.764" endtime="20201029 12:43:13.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.762" endtime="20201029 12:43:13.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.817" endtime="20201029 12:43:14.107"></status>
</kw>
<msg timestamp="20201029 12:43:14.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.816" endtime="20201029 12:43:14.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.111" endtime="20201029 12:43:14.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.120" endtime="20201029 12:43:14.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.813" endtime="20201029 12:43:14.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.811" endtime="20201029 12:43:14.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:14.127" level="INFO">${PHILIP_RES} = [{'diff': 0.0004797770000000007}, {'diff': 0.00047973600000000144}, {'diff': 0.00047991600000000037}, {'diff': 0.0004798049999999998}, {'diff': 0.00047974999999999754}, {'diff': 0.00047972200000000187...</msg>
<status status="PASS" starttime="20201029 12:43:14.123" endtime="20201029 12:43:14.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.131" level="INFO">${RESULT} = {'diff': [0.0004797770000000007, 0.00047973600000000144, 0.00047991600000000037, 0.0004798049999999998, 0.00047974999999999754, 0.00047972200000000187, 0.000479653, 0.00047976299999999764, 0.000479708...</msg>
<status status="PASS" starttime="20201029 12:43:14.128" endtime="20201029 12:43:14.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.135" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:14.134" endtime="20201029 12:43:14.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.138" level="INFO">VALUE: [0.0004797770000000007, 0.00047973600000000144, 0.00047991600000000037, 0.0004798049999999998, 0.00047974999999999754, 0.00047972200000000187, 0.000479653, 0.00047976299999999764, 0.0004797089999999983, 0.0004796669999999996, 0.00047965200000000055, 0.0004797919999999997, 0.0004798189999999994, 0.00047980600000000276, 0.00047969399999999926, 0.0004799309999999994, 0.00047982000000000233, 0.0004798469999999985, 0.0004797920000000032, 0.0004798189999999994, 0.0004797919999999997, 0.000479750000000001, 0.0004796669999999996, 0.0004797639999999971, 0.00047994399999999604, 0.000479652000000004, 0.00047977800000000015, 0.00047968000000000316, 0.0004796939999999958, 0.0004797080000000023, 0.00047973600000000144, 0.0004796530000000035, 0.0004797919999999997, 0.00047987499999999766, 0.000479750000000001, 0.000479750000000001, 0.0004797080000000023, 0.0004796669999999961, 0.0004797919999999997, 0.000479750000000001, 0.00047977800000000015, 0.0004798609999999981, 0.0004797919999999997, 0.0004800280000000004, 0.0004798189999999994, 0.00047981999999999886, 0.0004798609999999981, 0.0004798189999999994, 0.00047965299999999655, 0.0004797640000000006]</msg>
<status status="PASS" starttime="20201029 12:43:14.136" endtime="20201029 12:43:14.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.131" endtime="20201029 12:43:14.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.761" endtime="20201029 12:43:14.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.738" endtime="20201029 12:43:14.140"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.142" endtime="20201029 12:43:14.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.141" endtime="20201029 12:43:14.162"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.170" endtime="20201029 12:43:14.210"></status>
</kw>
<msg timestamp="20201029 12:43:14.210" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.169" endtime="20201029 12:43:14.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.213" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.212" endtime="20201029 12:43:14.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.214" endtime="20201029 12:43:14.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.166" endtime="20201029 12:43:14.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.164" endtime="20201029 12:43:14.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.225" endtime="20201029 12:43:14.510"></status>
</kw>
<msg timestamp="20201029 12:43:14.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018994125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.223" endtime="20201029 12:43:14.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018994125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.514" endtime="20201029 12:43:14.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.522" endtime="20201029 12:43:14.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.220" endtime="20201029 12:43:14.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.218" endtime="20201029 12:43:14.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:14.529" level="INFO">${PHILIP_RES} = [{'diff': 0.0005096530000000023}, {'diff': 0.0005096669999999984}, {'diff': 0.000509695000000001}, {'diff': 0.0005098469999999973}, {'diff': 0.0005098480000000002}, {'diff': 0.0005098060000000015}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:14.526" endtime="20201029 12:43:14.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.533" level="INFO">${RESULT} = {'diff': [0.0005096530000000023, 0.0005096669999999984, 0.000509695000000001, 0.0005098469999999973, 0.0005098480000000002, 0.0005098060000000015, 0.0005097079999999976, 0.0005100139999999996, 0.00051...</msg>
<status status="PASS" starttime="20201029 12:43:14.530" endtime="20201029 12:43:14.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.538" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:14.537" endtime="20201029 12:43:14.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.540" level="INFO">VALUE: [0.0005096530000000023, 0.0005096669999999984, 0.000509695000000001, 0.0005098469999999973, 0.0005098480000000002, 0.0005098060000000015, 0.0005097079999999976, 0.0005100139999999996, 0.00051, 0.0005099450000000012, 0.00051, 0.0005099449999999978, 0.0005099719999999974, 0.0005099300000000022, 0.0005099159999999991, 0.000509902999999999, 0.0005100690000000019, 0.0005100700000000014, 0.0005099579999999979, 0.0005098889999999995, 0.0005100139999999996, 0.0005100700000000014, 0.0005100269999999997, 0.0005099169999999986, 0.0005098749999999999, 0.0005099589999999973, 0.0005099719999999974, 0.0005099159999999991, 0.0005100280000000026, 0.0005099999999999966, 0.0005099449999999978, 0.0005099160000000061, 0.0005100000000000035, 0.0005100000000000035, 0.0005099870000000034, 0.0005099999999999966, 0.0005100000000000035, 0.0005099439999999983, 0.0005099450000000047, 0.0005099169999999986, 0.000509985999999997, 0.0005099729999999969, 0.0005098749999999999, 0.0005099579999999979, 0.0005100549999999954, 0.0005100969999999941, 0.0005098190000000016, 0.0005100700000000014, 0.0005099999999999966, 0.0005099299999999987]</msg>
<status status="PASS" starttime="20201029 12:43:14.539" endtime="20201029 12:43:14.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.534" endtime="20201029 12:43:14.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.163" endtime="20201029 12:43:14.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.140" endtime="20201029 12:43:14.543"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.545" endtime="20201029 12:43:14.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.544" endtime="20201029 12:43:14.565"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.574" endtime="20201029 12:43:14.617"></status>
</kw>
<msg timestamp="20201029 12:43:14.618" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.572" endtime="20201029 12:43:14.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.620" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.619" endtime="20201029 12:43:14.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.621" endtime="20201029 12:43:14.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.569" endtime="20201029 12:43:14.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.567" endtime="20201029 12:43:14.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.631" endtime="20201029 12:43:14.918"></status>
</kw>
<msg timestamp="20201029 12:43:14.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022762472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.629" endtime="20201029 12:43:14.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022762472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.922" endtime="20201029 12:43:14.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.930" endtime="20201029 12:43:14.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.626" endtime="20201029 12:43:14.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.624" endtime="20201029 12:43:14.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:14.936" level="INFO">${PHILIP_RES} = [{'diff': 0.0005408470000000005}, {'diff': 0.0005410830000000012}, {'diff': 0.0005410560000000016}, {'diff': 0.0005410690000000017}, {'diff': 0.0005410549999999986}, {'diff': 0.0005410549999999986}, {...</msg>
<status status="PASS" starttime="20201029 12:43:14.933" endtime="20201029 12:43:14.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.941" level="INFO">${RESULT} = {'diff': [0.0005408470000000005, 0.0005410830000000012, 0.0005410560000000016, 0.0005410690000000017, 0.0005410549999999986, 0.0005410549999999986, 0.0005410419999999985, 0.0005410549999999986, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:43:14.937" endtime="20201029 12:43:14.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.946" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:14.945" endtime="20201029 12:43:14.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.948" level="INFO">VALUE: [0.0005408470000000005, 0.0005410830000000012, 0.0005410560000000016, 0.0005410690000000017, 0.0005410549999999986, 0.0005410549999999986, 0.0005410419999999985, 0.0005410549999999986, 0.0005409860000000002, 0.0005407639999999991, 0.0005409029999999988, 0.0005409310000000014, 0.0005408610000000001, 0.0005407920000000017, 0.0005407499999999996, 0.0005408059999999978, 0.0005407090000000003, 0.0005407080000000009, 0.0005408610000000036, 0.0005406250000000029, 0.0005407909999999988, 0.0005407229999999999, 0.0005408890000000027, 0.0005406799999999948, 0.0005407639999999991, 0.0005407220000000004, 0.000540847000000004, 0.0005408480000000035, 0.0005408469999999971, 0.0005408330000000044, 0.0005408189999999979, 0.0005407919999999983, 0.0005408189999999979, 0.0005407499999999996, 0.0005408610000000036, 0.0005407920000000052, 0.0005409309999999945, 0.0005408200000000044, 0.0005408620000000031, 0.0005408330000000044, 0.0005407639999999991, 0.0005407639999999991, 0.0005408050000000053, 0.0005408329999999975, 0.0005409440000000015, 0.0005408200000000044, 0.0005408059999999978, 0.0005409030000000023, 0.0005409860000000002, 0.000540736]</msg>
<status status="PASS" starttime="20201029 12:43:14.947" endtime="20201029 12:43:14.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.942" endtime="20201029 12:43:14.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.566" endtime="20201029 12:43:14.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.543" endtime="20201029 12:43:14.950"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.953" endtime="20201029 12:43:14.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.951" endtime="20201029 12:43:14.973"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.981" endtime="20201029 12:43:15.025"></status>
</kw>
<msg timestamp="20201029 12:43:15.025" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.980" endtime="20201029 12:43:15.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.028" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.026" endtime="20201029 12:43:15.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.029" endtime="20201029 12:43:15.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.977" endtime="20201029 12:43:15.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.975" endtime="20201029 12:43:15.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.039" endtime="20201029 12:43:15.326"></status>
</kw>
<msg timestamp="20201029 12:43:15.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.037" endtime="20201029 12:43:15.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.330" endtime="20201029 12:43:15.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.338" endtime="20201029 12:43:15.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.034" endtime="20201029 12:43:15.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.032" endtime="20201029 12:43:15.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:15.345" level="INFO">${PHILIP_RES} = [{'diff': 0.0005725549999999989}, {'diff': 0.0005725830000000015}, {'diff': 0.0005727639999999999}, {'diff': 0.0005728049999999991}, {'diff': 0.0005726250000000002}, {'diff': 0.0005726389999999998}, {...</msg>
<status status="PASS" starttime="20201029 12:43:15.341" endtime="20201029 12:43:15.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.349" level="INFO">${RESULT} = {'diff': [0.0005725549999999989, 0.0005725830000000015, 0.0005727639999999999, 0.0005728049999999991, 0.0005726250000000002, 0.0005726389999999998, 0.0005728330000000018, 0.0005726250000000002, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:43:15.346" endtime="20201029 12:43:15.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.353" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:15.352" endtime="20201029 12:43:15.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.356" level="INFO">VALUE: [0.0005725549999999989, 0.0005725830000000015, 0.0005727639999999999, 0.0005728049999999991, 0.0005726250000000002, 0.0005726389999999998, 0.0005728330000000018, 0.0005726250000000002, 0.0005727360000000008, 0.0005728200000000017, 0.000572791999999999, 0.0005728329999999983, 0.000572889, 0.0005727360000000008, 0.0005726380000000003, 0.0005728049999999957, 0.0005727499999999969, 0.0005728059999999952, 0.0005726939999999986, 0.0005726949999999981, 0.0005725969999999941, 0.0005727089999999976, 0.0005726669999999989, 0.0005728469999999944, 0.0005727360000000042, 0.0005726389999999998, 0.0005727359999999973, 0.0005725700000000014, 0.000572778000000003, 0.000572777999999996, 0.0005727909999999961, 0.0005727770000000035, 0.0005726949999999981, 0.0005728059999999952, 0.000572695000000005, 0.0005726659999999995, 0.0005728330000000018, 0.0005728470000000013, 0.0005726389999999998, 0.0005727220000000047, 0.0005726250000000002, 0.0005727080000000051, 0.0005726250000000002, 0.0005726949999999981, 0.0005725829999999946, 0.0005727500000000038, 0.0005727360000000042, 0.000572679999999999, 0.000572791000000003, 0.0005726519999999999]</msg>
<status status="PASS" starttime="20201029 12:43:15.354" endtime="20201029 12:43:15.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.350" endtime="20201029 12:43:15.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.974" endtime="20201029 12:43:15.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.951" endtime="20201029 12:43:15.358"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.360" endtime="20201029 12:43:15.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.359" endtime="20201029 12:43:15.383"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.400" endtime="20201029 12:43:15.446"></status>
</kw>
<msg timestamp="20201029 12:43:15.446" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.398" endtime="20201029 12:43:15.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.449" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.447" endtime="20201029 12:43:15.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.450" endtime="20201029 12:43:15.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.391" endtime="20201029 12:43:15.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.389" endtime="20201029 12:43:15.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.460" endtime="20201029 12:43:15.746"></status>
</kw>
<msg timestamp="20201029 12:43:15.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031180264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.458" endtime="20201029 12:43:15.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031180264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031785931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.750" endtime="20201029 12:43:15.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.758" endtime="20201029 12:43:15.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.456" endtime="20201029 12:43:15.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.454" endtime="20201029 12:43:15.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:15.765" level="INFO">${PHILIP_RES} = [{'diff': 0.0006056670000000042}, {'diff': 0.0006054450000000031}, {'diff': 0.0006057369999999951}, {'diff': 0.0006056659999999978}, {'diff': 0.000605721999999996}, {'diff': 0.0006057360000000026}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:15.761" endtime="20201029 12:43:15.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.769" level="INFO">${RESULT} = {'diff': [0.0006056670000000042, 0.0006054450000000031, 0.0006057369999999951, 0.0006056659999999978, 0.000605721999999996, 0.0006057360000000026, 0.0006056529999999977, 0.0006056389999999981, 0.00060...</msg>
<status status="PASS" starttime="20201029 12:43:15.766" endtime="20201029 12:43:15.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.773" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:15.772" endtime="20201029 12:43:15.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.775" level="INFO">VALUE: [0.0006056670000000042, 0.0006054450000000031, 0.0006057369999999951, 0.0006056659999999978, 0.000605721999999996, 0.0006057360000000026, 0.0006056529999999977, 0.0006056389999999981, 0.0006057500000000021, 0.000605639000000005, 0.0006056670000000042, 0.0006057089999999959, 0.0006058060000000004, 0.0006058890000000053, 0.0006057920000000008, 0.0006056249999999985, 0.0006057780000000013, 0.0006057089999999959, 0.0006056529999999977, 0.0006057360000000026, 0.0006056799999999973, 0.0006057079999999965, 0.000605721999999996, 0.0006058469999999996, 0.0006058469999999996, 0.000605722000000003, 0.0006056939999999969, 0.0006059720000000032, 0.000605931000000004, 0.0006059720000000032, 0.0006057920000000008, 0.0006057909999999944, 0.0006057640000000017, 0.0006057910000000014, 0.0006058190000000005, 0.0006058050000000009, 0.0006059030000000049, 0.0006056249999999985, 0.0006056809999999968, 0.0006056660000000047, 0.0006057360000000026, 0.0006056799999999973, 0.0006056949999999964, 0.0006056670000000042, 0.0006056810000000037, 0.0006057080000000034, 0.0006058340000000065, 0.0006059450000000036, 0.0006056660000000047, 0.0006058609999999992]</msg>
<status status="PASS" starttime="20201029 12:43:15.774" endtime="20201029 12:43:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.769" endtime="20201029 12:43:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.384" endtime="20201029 12:43:15.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.358" endtime="20201029 12:43:15.778"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.780" endtime="20201029 12:43:15.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.779" endtime="20201029 12:43:15.800"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.815" endtime="20201029 12:43:15.865"></status>
</kw>
<msg timestamp="20201029 12:43:15.865" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.812" endtime="20201029 12:43:15.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.870" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.868" endtime="20201029 12:43:15.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.873" endtime="20201029 12:43:15.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.806" endtime="20201029 12:43:15.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.802" endtime="20201029 12:43:15.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.891" endtime="20201029 12:43:16.179"></status>
</kw>
<msg timestamp="20201029 12:43:16.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028347958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028987139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.888" endtime="20201029 12:43:16.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028347958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028987139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.184" endtime="20201029 12:43:16.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.192" endtime="20201029 12:43:16.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.883" endtime="20201029 12:43:16.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.879" endtime="20201029 12:43:16.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:16.198" level="INFO">${PHILIP_RES} = [{'diff': 0.0006391809999999991}, {'diff': 0.0006392919999999996}, {'diff': 0.0006392089999999982}, {'diff': 0.000639360999999998}, {'diff': 0.0006392640000000005}, {'diff': 0.0006392080000000022}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:16.195" endtime="20201029 12:43:16.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.203" level="INFO">${RESULT} = {'diff': [0.0006391809999999991, 0.0006392919999999996, 0.0006392089999999982, 0.000639360999999998, 0.0006392640000000005, 0.0006392080000000022, 0.0006393059999999992, 0.0006392500000000009, 0.00063...</msg>
<status status="PASS" starttime="20201029 12:43:16.199" endtime="20201029 12:43:16.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.207" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:16.206" endtime="20201029 12:43:16.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.209" level="INFO">VALUE: [0.0006391809999999991, 0.0006392919999999996, 0.0006392089999999982, 0.000639360999999998, 0.0006392640000000005, 0.0006392080000000022, 0.0006393059999999992, 0.0006392500000000009, 0.0006391520000000039, 0.0006392910000000002, 0.0006390140000000002, 0.0006391940000000026, 0.0006391529999999965, 0.0006391659999999966, 0.0006391529999999965, 0.0006394029999999967, 0.0006392230000000013, 0.0006391109999999978, 0.0006391810000000026, 0.0006391810000000026, 0.0006391950000000021, 0.0006393749999999976, 0.0006393340000000053, 0.0006392780000000001, 0.0006392780000000001, 0.0006391939999999957, 0.0006392500000000009, 0.0006392500000000009, 0.000639167000000003, 0.0006392219999999948, 0.0006391939999999957, 0.0006391950000000021, 0.0006392640000000005, 0.0006391389999999969, 0.0006393059999999992, 0.0006392639999999936, 0.0006393330000000058, 0.0006393189999999993, 0.0006390829999999986, 0.0006392219999999948, 0.000639167000000003, 0.0006392770000000006, 0.0006392500000000009, 0.0006392219999999948, 0.0006390970000000051, 0.0006391939999999957, 0.0006391810000000026, 0.0006392360000000014, 0.0006392780000000001, 0.0006391799999999961]</msg>
<status status="PASS" starttime="20201029 12:43:16.208" endtime="20201029 12:43:16.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.204" endtime="20201029 12:43:16.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.801" endtime="20201029 12:43:16.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.778" endtime="20201029 12:43:16.211"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.214" endtime="20201029 12:43:16.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.212" endtime="20201029 12:43:16.234"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.242" endtime="20201029 12:43:16.291"></status>
</kw>
<msg timestamp="20201029 12:43:16.291" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.240" endtime="20201029 12:43:16.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.294" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.292" endtime="20201029 12:43:16.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.295" endtime="20201029 12:43:16.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.238" endtime="20201029 12:43:16.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.236" endtime="20201029 12:43:16.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.303" endtime="20201029 12:43:16.590"></status>
</kw>
<msg timestamp="20201029 12:43:16.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.302" endtime="20201029 12:43:16.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021819597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.594" endtime="20201029 12:43:16.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.602" endtime="20201029 12:43:16.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.299" endtime="20201029 12:43:16.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.298" endtime="20201029 12:43:16.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:16.609" level="INFO">${PHILIP_RES} = [{'diff': 0.0006738890000000004}, {'diff': 0.0006740420000000032}, {'diff': 0.0006739309999999991}, {'diff': 0.0006740689999999994}, {'diff': 0.0006738750000000009}, {'diff': 0.0006740839999999984}, {...</msg>
<status status="PASS" starttime="20201029 12:43:16.606" endtime="20201029 12:43:16.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.613" level="INFO">${RESULT} = {'diff': [0.0006738890000000004, 0.0006740420000000032, 0.0006739309999999991, 0.0006740689999999994, 0.0006738750000000009, 0.0006740839999999984, 0.0006739590000000018, 0.0006740410000000002, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:16.610" endtime="20201029 12:43:16.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.622" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:16.620" endtime="20201029 12:43:16.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.628" level="INFO">VALUE: [0.0006738890000000004, 0.0006740420000000032, 0.0006739309999999991, 0.0006740689999999994, 0.0006738750000000009, 0.0006740839999999984, 0.0006739590000000018, 0.0006740410000000002, 0.0006741799999999999, 0.0006740140000000006, 0.0006739309999999991, 0.0006740419999999997, 0.0006739439999999992, 0.0006739720000000018, 0.0006740420000000066, 0.0006738469999999983, 0.0006739860000000014, 0.000674000000000001, 0.000674000000000001, 0.0006739450000000022, 0.0006740280000000001, 0.0006740559999999993, 0.0006739449999999952, 0.0006740140000000006, 0.0006738890000000039, 0.0006739580000000023, 0.0006739729999999944, 0.0006738609999999978, 0.0006739450000000022, 0.0006739580000000023, 0.0006739719999999949, 0.0006738749999999974, 0.0006740559999999993, 0.0006740830000000059, 0.0006740419999999997, 0.0006739590000000018, 0.0006739310000000026, 0.0006739579999999953, 0.0006739309999999957, 0.0006741109999999981, 0.0006740410000000002, 0.0006740559999999993, 0.0006739030000000035, 0.0006740559999999993, 0.0006740270000000007, 0.0006740280000000001, 0.0006740280000000001, 0.0006740969999999985, 0.0006740419999999997, 0.0006741520000000042]</msg>
<status status="PASS" starttime="20201029 12:43:16.625" endtime="20201029 12:43:16.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.615" endtime="20201029 12:43:16.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.234" endtime="20201029 12:43:16.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.212" endtime="20201029 12:43:16.632"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.637" endtime="20201029 12:43:16.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.634" endtime="20201029 12:43:16.660"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.677" endtime="20201029 12:43:16.727"></status>
</kw>
<msg timestamp="20201029 12:43:16.727" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.674" endtime="20201029 12:43:16.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.730" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.728" endtime="20201029 12:43:16.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.731" endtime="20201029 12:43:16.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.668" endtime="20201029 12:43:16.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.664" endtime="20201029 12:43:16.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.741" endtime="20201029 12:43:17.027"></status>
</kw>
<msg timestamp="20201029 12:43:17.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030116736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030825806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.740" endtime="20201029 12:43:17.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030116736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030825806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.031" endtime="20201029 12:43:17.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.039" endtime="20201029 12:43:17.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.737" endtime="20201029 12:43:17.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.735" endtime="20201029 12:43:17.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:17.046" level="INFO">${PHILIP_RES} = [{'diff': 0.0007090699999999991}, {'diff': 0.0007090409999999971}, {'diff': 0.0007090000000000013}, {'diff': 0.000709124999999998}, {'diff': 0.0007091109999999984}, {'diff': 0.0007091529999999971}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:17.043" endtime="20201029 12:43:17.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.050" level="INFO">${RESULT} = {'diff': [0.0007090699999999991, 0.0007090409999999971, 0.0007090000000000013, 0.000709124999999998, 0.0007091109999999984, 0.0007091529999999971, 0.0007090979999999983, 0.0007091120000000048, 0.00070...</msg>
<status status="PASS" starttime="20201029 12:43:17.047" endtime="20201029 12:43:17.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.054" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:17.053" endtime="20201029 12:43:17.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.056" level="INFO">VALUE: [0.0007090699999999991, 0.0007090409999999971, 0.0007090000000000013, 0.000709124999999998, 0.0007091109999999984, 0.0007091529999999971, 0.0007090979999999983, 0.0007091120000000048, 0.0007091659999999972, 0.0007091810000000032, 0.0007090830000000062, 0.0007091799999999968, 0.000709236000000002, 0.0007091940000000033, 0.000709124999999998, 0.0007092780000000007, 0.0007091250000000049, 0.0007091390000000045, 0.000709235999999995, 0.0007091670000000036, 0.0007092780000000007, 0.0007092230000000019, 0.0007092090000000023, 0.0007091389999999975, 0.0007090000000000013, 0.000709235999999995, 0.000709333999999999, 0.0007092370000000014, 0.0007091529999999971, 0.0007092920000000003, 0.0007092080000000028, 0.0007092079999999959, 0.0007091670000000036, 0.0007093059999999998, 0.000709124999999998, 0.0007090689999999997, 0.000709042, 0.0007093189999999999, 0.0007090689999999997, 0.000709236000000002, 0.0007093469999999991, 0.0007093469999999991, 0.0007092780000000007, 0.0007093469999999991, 0.0007092080000000028, 0.000709236000000002, 0.0007091800000000037, 0.0007091389999999975, 0.0007091810000000032, 0.000709236000000002]</msg>
<status status="PASS" starttime="20201029 12:43:17.055" endtime="20201029 12:43:17.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.050" endtime="20201029 12:43:17.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.661" endtime="20201029 12:43:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.633" endtime="20201029 12:43:17.059"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.061" endtime="20201029 12:43:17.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.060" endtime="20201029 12:43:17.081"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.089" endtime="20201029 12:43:17.139"></status>
</kw>
<msg timestamp="20201029 12:43:17.139" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.088" endtime="20201029 12:43:17.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.142" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.140" endtime="20201029 12:43:17.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.143" endtime="20201029 12:43:17.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.085" endtime="20201029 12:43:17.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.084" endtime="20201029 12:43:17.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.152" endtime="20201029 12:43:17.442"></status>
</kw>
<msg timestamp="20201029 12:43:17.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018255917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.150" endtime="20201029 12:43:17.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018255917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019001319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.451" endtime="20201029 12:43:17.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.469" endtime="20201029 12:43:17.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.148" endtime="20201029 12:43:17.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.146" endtime="20201029 12:43:17.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:17.482" level="INFO">${PHILIP_RES} = [{'diff': 0.0007454019999999992}, {'diff': 0.0007455550000000019}, {'diff': 0.0007453890000000025}, {'diff': 0.0007454720000000005}, {'diff': 0.0007454159999999987}, {'diff': 0.0007455279999999988}, {...</msg>
<status status="PASS" starttime="20201029 12:43:17.476" endtime="20201029 12:43:17.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.493" level="INFO">${RESULT} = {'diff': [0.0007454019999999992, 0.0007455550000000019, 0.0007453890000000025, 0.0007454720000000005, 0.0007454159999999987, 0.0007455279999999988, 0.0007453060000000011, 0.0007454310000000013, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:43:17.485" endtime="20201029 12:43:17.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.502" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:17.500" endtime="20201029 12:43:17.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.507" level="INFO">VALUE: [0.0007454019999999992, 0.0007455550000000019, 0.0007453890000000025, 0.0007454720000000005, 0.0007454159999999987, 0.0007455279999999988, 0.0007453060000000011, 0.0007454310000000013, 0.0007453609999999999, 0.0007454170000000017, 0.0007452080000000007, 0.0007453889999999991, 0.0007454029999999986, 0.0007454590000000004, 0.0007456379999999999, 0.0007453609999999999, 0.0007455420000000018, 0.0007454159999999987, 0.0007454579999999975, 0.0007454449999999974, 0.0007454729999999965, 0.0007454440000000048, 0.0007455690000000015, 0.0007453200000000007, 0.0007453889999999991, 0.0007453889999999991, 0.0007454860000000035, 0.0007452359999999963, 0.0007453749999999995, 0.0007455970000000006, 0.0007453469999999934, 0.0007452500000000029, 0.0007454029999999986, 0.0007455420000000018, 0.0007455560000000014, 0.0007453470000000004, 0.0007454590000000039, 0.000745472000000004, 0.000745570000000001, 0.0007453889999999991, 0.0007454859999999966, 0.0007452230000000032, 0.0007454450000000043, 0.000745166999999998, 0.0007453609999999999, 0.0007453749999999995, 0.0007454589999999969, 0.0007452640000000024, 0.0007453190000000012, 0.0007453189999999943]</msg>
<status status="PASS" starttime="20201029 12:43:17.504" endtime="20201029 12:43:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.495" endtime="20201029 12:43:17.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.082" endtime="20201029 12:43:17.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.059" endtime="20201029 12:43:17.511"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.516" endtime="20201029 12:43:17.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.513" endtime="20201029 12:43:17.536"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.545" endtime="20201029 12:43:17.602"></status>
</kw>
<msg timestamp="20201029 12:43:17.602" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.543" endtime="20201029 12:43:17.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.604" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.603" endtime="20201029 12:43:17.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.606" endtime="20201029 12:43:17.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.540" endtime="20201029 12:43:17.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.539" endtime="20201029 12:43:17.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.615" endtime="20201029 12:43:17.904"></status>
</kw>
<msg timestamp="20201029 12:43:17.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021079333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.613" endtime="20201029 12:43:17.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021079333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.908" endtime="20201029 12:43:17.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.916" endtime="20201029 12:43:17.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.610" endtime="20201029 12:43:17.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.609" endtime="20201029 12:43:17.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:17.922" level="INFO">${PHILIP_RES} = [{'diff': 0.000782708}, {'diff': 0.0007827640000000018}, {'diff': 0.0007827219999999996}, {'diff': 0.0007825700000000033}, {'diff': 0.000782708}, {'diff': 0.0007829310000000006}, {'diff': 0.0007829310...</msg>
<status status="PASS" starttime="20201029 12:43:17.919" endtime="20201029 12:43:17.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.926" level="INFO">${RESULT} = {'diff': [0.000782708, 0.0007827640000000018, 0.0007827219999999996, 0.0007825700000000033, 0.000782708, 0.0007829310000000006, 0.0007829310000000006, 0.00078282, 0.0007827919999999974, 0.000782916000...</msg>
<status status="PASS" starttime="20201029 12:43:17.923" endtime="20201029 12:43:17.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.930" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:17.929" endtime="20201029 12:43:17.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.933" level="INFO">VALUE: [0.000782708, 0.0007827640000000018, 0.0007827219999999996, 0.0007825700000000033, 0.000782708, 0.0007829310000000006, 0.0007829310000000006, 0.00078282, 0.0007827919999999974, 0.0007829160000000016, 0.0007827780000000013, 0.0007827640000000018, 0.0007827639999999983, 0.0007828200000000035, 0.0007826949999999999, 0.0007829310000000006, 0.0007829719999999998, 0.0007829580000000003, 0.0007829450000000002, 0.0007827499999999987, 0.0007828610000000027, 0.0007829159999999946, 0.0007828610000000027, 0.0007829580000000003, 0.0007828610000000027, 0.0007829729999999993, 0.0007830000000000059, 0.0007826530000000012, 0.000782917000000001, 0.0007828189999999971, 0.0007828890000000019, 0.0007829859999999994, 0.0007829310000000006, 0.0007829859999999994, 0.0007828609999999958, 0.0007829450000000002, 0.0007829160000000016, 0.0007829859999999994, 0.0007829440000000007, 0.0007827219999999996, 0.0007827089999999995, 0.0007829300000000011, 0.0007828189999999971, 0.0007828469999999962, 0.000782999999999999, 0.0007827920000000044, 0.0007830140000000055, 0.0007829160000000016, 0.0007827499999999987, 0.0007828469999999962]</msg>
<status status="PASS" starttime="20201029 12:43:17.932" endtime="20201029 12:43:17.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.927" endtime="20201029 12:43:17.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.537" endtime="20201029 12:43:17.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.511" endtime="20201029 12:43:17.935"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.937" endtime="20201029 12:43:17.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.936" endtime="20201029 12:43:17.957"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.965" endtime="20201029 12:43:18.023"></status>
</kw>
<msg timestamp="20201029 12:43:18.024" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.964" endtime="20201029 12:43:18.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.026" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.025" endtime="20201029 12:43:18.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.027" endtime="20201029 12:43:18.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.961" endtime="20201029 12:43:18.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.959" endtime="20201029 12:43:18.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.037" endtime="20201029 12:43:18.352"></status>
</kw>
<msg timestamp="20201029 12:43:18.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.036" endtime="20201029 12:43:18.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.356" endtime="20201029 12:43:18.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.364" endtime="20201029 12:43:18.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.033" endtime="20201029 12:43:18.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.031" endtime="20201029 12:43:18.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:18.370" level="INFO">${PHILIP_RES} = [{'diff': 0.0008208199999999999}, {'diff': 0.0008209580000000001}, {'diff': 0.0008209170000000009}, {'diff': 0.0008209030000000013}, {'diff': 0.0008207770000000017}, {'diff': 0.0008207629999999987}, {...</msg>
<status status="PASS" starttime="20201029 12:43:18.367" endtime="20201029 12:43:18.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.374" level="INFO">${RESULT} = {'diff': [0.0008208199999999999, 0.0008209580000000001, 0.0008209170000000009, 0.0008209030000000013, 0.0008207770000000017, 0.0008207629999999987, 0.0008208890000000017, 0.0008208889999999983, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:43:18.371" endtime="20201029 12:43:18.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.378" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:18.377" endtime="20201029 12:43:18.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.381" level="INFO">VALUE: [0.0008208199999999999, 0.0008209580000000001, 0.0008209170000000009, 0.0008209030000000013, 0.0008207770000000017, 0.0008207629999999987, 0.0008208890000000017, 0.0008208889999999983, 0.0008209440000000005, 0.0008209160000000014, 0.0008209999999999988, 0.0008209720000000031, 0.0008208339999999995, 0.0008211119999999988, 0.0008209030000000048, 0.0008209310000000039, 0.0008210140000000019, 0.0008209719999999962, 0.0008209730000000026, 0.0008209029999999978, 0.000820930999999997, 0.0008208199999999999, 0.0008209450000000035, 0.0008210690000000007, 0.0008209730000000026, 0.0008209859999999958, 0.0008209029999999978, 0.0008209580000000036, 0.0008208610000000061, 0.000820959000000003, 0.0008207920000000007, 0.0008209029999999978, 0.0008209729999999957, 0.0008210140000000019, 0.0008210140000000019, 0.0008208609999999991, 0.0008207919999999938, 0.0008209579999999966, 0.0008209029999999978, 0.0008209439999999971, 0.0008207919999999938, 0.000820833, 0.0008208060000000003, 0.0008208749999999987, 0.0008209030000000048, 0.0008208749999999987, 0.0008209720000000031, 0.0008209720000000031, 0.0008208889999999913, 0.000821027000000002]</msg>
<status status="PASS" starttime="20201029 12:43:18.379" endtime="20201029 12:43:18.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.375" endtime="20201029 12:43:18.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.958" endtime="20201029 12:43:18.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.935" endtime="20201029 12:43:18.384"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.390" endtime="20201029 12:43:18.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.386" endtime="20201029 12:43:18.413"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.426" endtime="20201029 12:43:18.486"></status>
</kw>
<msg timestamp="20201029 12:43:18.487" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.424" endtime="20201029 12:43:18.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.489" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.488" endtime="20201029 12:43:18.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.491" endtime="20201029 12:43:18.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.420" endtime="20201029 12:43:18.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.416" endtime="20201029 12:43:18.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.501" endtime="20201029 12:43:18.789"></status>
</kw>
<msg timestamp="20201029 12:43:18.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029402569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030262278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.499" endtime="20201029 12:43:18.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029402569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030262278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.793" endtime="20201029 12:43:18.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.800" endtime="20201029 12:43:18.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.497" endtime="20201029 12:43:18.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.495" endtime="20201029 12:43:18.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:18.807" level="INFO">${PHILIP_RES} = [{'diff': 0.0008597090000000002}, {'diff': 0.0008599440000000014}, {'diff': 0.0008598889999999991}, {'diff': 0.0008597769999999991}, {'diff': 0.0008598479999999964}, {'diff': 0.0008599999999999997}, {...</msg>
<status status="PASS" starttime="20201029 12:43:18.804" endtime="20201029 12:43:18.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.812" level="INFO">${RESULT} = {'diff': [0.0008597090000000002, 0.0008599440000000014, 0.0008598889999999991, 0.0008597769999999991, 0.0008598479999999964, 0.0008599999999999997, 0.000859875000000003, 0.000859763999999999, 0.000859...</msg>
<status status="PASS" starttime="20201029 12:43:18.808" endtime="20201029 12:43:18.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.816" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:18.815" endtime="20201029 12:43:18.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.818" level="INFO">VALUE: [0.0008597090000000002, 0.0008599440000000014, 0.0008598889999999991, 0.0008597769999999991, 0.0008598479999999964, 0.0008599999999999997, 0.000859875000000003, 0.000859763999999999, 0.0008598749999999961, 0.0008599860000000001, 0.0008601250000000032, 0.0008598329999999973, 0.0008597229999999997, 0.0008598199999999973, 0.0008599170000000017, 0.0008598049999999982, 0.0008598329999999973, 0.0008597780000000055, 0.000859583000000004, 0.0008597080000000007, 0.0008596800000000016, 0.0008595829999999971, 0.0008597229999999997, 0.0008596800000000016, 0.0008596120000000027, 0.0008596530000000019, 0.000859763999999999, 0.0008597369999999993, 0.0008598199999999973, 0.0008598059999999977, 0.0008596530000000019, 0.000859763999999999, 0.0008597499999999994, 0.0008597919999999981, 0.0008596530000000019, 0.0008597220000000003, 0.0008596660000000089, 0.0008598469999999969, 0.0008597090000000002, 0.0008596949999999937, 0.0008598889999999887, 0.0008597219999999933, 0.000859763999999999, 0.0008599299999999949, 0.0008599580000000079, 0.000859763999999999, 0.0008599030000000091, 0.0008600549999999985, 0.0008597909999999986, 0.0008595969999999897]</msg>
<status status="PASS" starttime="20201029 12:43:18.817" endtime="20201029 12:43:18.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.812" endtime="20201029 12:43:18.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.414" endtime="20201029 12:43:18.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.385" endtime="20201029 12:43:18.820"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.822" endtime="20201029 12:43:18.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.821" endtime="20201029 12:43:18.843"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.850" endtime="20201029 12:43:18.912"></status>
</kw>
<msg timestamp="20201029 12:43:18.913" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.849" endtime="20201029 12:43:18.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.915" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.914" endtime="20201029 12:43:18.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.916" endtime="20201029 12:43:18.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.846" endtime="20201029 12:43:18.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.844" endtime="20201029 12:43:18.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.925" endtime="20201029 12:43:19.227"></status>
</kw>
<msg timestamp="20201029 12:43:19.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021377153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.923" endtime="20201029 12:43:19.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021377153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.231" endtime="20201029 12:43:19.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.239" endtime="20201029 12:43:19.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.921" endtime="20201029 12:43:19.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.919" endtime="20201029 12:43:19.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:19.245" level="INFO">${PHILIP_RES} = [{'diff': 0.0008988469999999978}, {'diff': 0.0008992360000000012}, {'diff': 0.000899388999999997}, {'diff': 0.0008993890000000004}, {'diff': 0.0008991390000000002}, {'diff': 0.0008990279999999996}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:19.242" endtime="20201029 12:43:19.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.249" level="INFO">${RESULT} = {'diff': [0.0008988469999999978, 0.0008992360000000012, 0.000899388999999997, 0.0008993890000000004, 0.0008991390000000002, 0.0008990279999999996, 0.0008991250000000006, 0.0008992360000000012, 0.00089...</msg>
<status status="PASS" starttime="20201029 12:43:19.246" endtime="20201029 12:43:19.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.254" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:19.253" endtime="20201029 12:43:19.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.256" level="INFO">VALUE: [0.0008988469999999978, 0.0008992360000000012, 0.000899388999999997, 0.0008993890000000004, 0.0008991390000000002, 0.0008990279999999996, 0.0008991250000000006, 0.0008992360000000012, 0.000899208000000002, 0.0008992219999999981, 0.0008990140000000001, 0.0008992219999999981, 0.0008991390000000002, 0.0008990560000000022, 0.0008993049999999961, 0.000899111000000001, 0.0008991390000000002, 0.0008992500000000042, 0.0008990550000000028, 0.0008990549999999958, 0.0008994309999999991, 0.0008994449999999987, 0.0008995699999999954, 0.000899485999999998, 0.0008996669999999998, 0.0008992910000000034, 0.0008991809999999989, 0.0008993330000000022, 0.0008992780000000034, 0.0008992499999999973, 0.0008992359999999977, 0.0008993890000000004, 0.000899403, 0.0008991949999999985, 0.0008992780000000034, 0.0008992080000000055, 0.000898999999999997, 0.0008991669999999993, 0.0008992499999999973, 0.0008994169999999996, 0.0008992500000000042, 0.0008992079999999986, 0.000899291999999996, 0.0008993749999999939, 0.0008992080000000124, 0.0008993470000000087, 0.0008993890000000004, 0.0008991529999999998, 0.000899208999999998, 0.0009237780000000001]</msg>
<status status="PASS" starttime="20201029 12:43:19.255" endtime="20201029 12:43:19.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.250" endtime="20201029 12:43:19.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.843" endtime="20201029 12:43:19.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.820" endtime="20201029 12:43:19.258"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.260" endtime="20201029 12:43:19.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.259" endtime="20201029 12:43:19.280"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.289" endtime="20201029 12:43:19.350"></status>
</kw>
<msg timestamp="20201029 12:43:19.351" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.287" endtime="20201029 12:43:19.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.353" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.352" endtime="20201029 12:43:19.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.354" endtime="20201029 12:43:19.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.284" endtime="20201029 12:43:19.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.282" endtime="20201029 12:43:19.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.364" endtime="20201029 12:43:19.650"></status>
</kw>
<msg timestamp="20201029 12:43:19.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:19.363" endtime="20201029 12:43:19.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0207585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:19.654" endtime="20201029 12:43:19.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.662" endtime="20201029 12:43:19.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.360" endtime="20201029 12:43:19.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.358" endtime="20201029 12:43:19.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:19.668" level="INFO">${PHILIP_RES} = [{'diff': 0.0009398610000000002}, {'diff': 0.000939818999999998}, {'diff': 0.0009399169999999984}, {'diff': 0.0009398200000000009}, {'diff': 0.0009398749999999997}, {'diff': 0.0009397909999999988}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:19.665" endtime="20201029 12:43:19.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.673" level="INFO">${RESULT} = {'diff': [0.0009398610000000002, 0.000939818999999998, 0.0009399169999999984, 0.0009398200000000009, 0.0009398749999999997, 0.0009397909999999988, 0.000939833000000001, 0.0009399030000000023, 0.000940...</msg>
<status status="PASS" starttime="20201029 12:43:19.669" endtime="20201029 12:43:19.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.677" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:19.676" endtime="20201029 12:43:19.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.679" level="INFO">VALUE: [0.0009398610000000002, 0.000939818999999998, 0.0009399169999999984, 0.0009398200000000009, 0.0009398749999999997, 0.0009397909999999988, 0.000939833000000001, 0.0009399030000000023, 0.0009400970000000008, 0.0009398749999999997, 0.0009398190000000015, 0.000939736, 0.0009400700000000012, 0.0009400280000000025, 0.0009400830000000013, 0.0009398610000000002, 0.0009398749999999997, 0.0009399579999999977, 0.0009399019999999994, 0.000939833000000001, 0.0009400280000000025, 0.0009398610000000002, 0.0009400280000000025, 0.000939833000000001, 0.0009398200000000009, 0.0009401799999999988, 0.000939915999999999, 0.0009399169999999984, 0.0009399449999999976, 0.0009400840000000008, 0.0009400280000000025, 0.0009399450000000045, 0.000939930999999998, 0.000939833000000001, 0.0009399859999999968, 0.0009399859999999968, 0.0009401389999999996, 0.0009398749999999997, 0.0009399999999999964, 0.0009399169999999984, 0.0009400550000000021, 0.000939833000000001, 0.0009397919999999949, 0.0009398190000000084, 0.0009399719999999973, 0.0009398889999999993, 0.0009398060000000014, 0.0009397780000000022, 0.0009399030000000058, 0.000940125]</msg>
<status status="PASS" starttime="20201029 12:43:19.678" endtime="20201029 12:43:19.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.673" endtime="20201029 12:43:19.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.281" endtime="20201029 12:43:19.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.258" endtime="20201029 12:43:19.682"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.684" endtime="20201029 12:43:19.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.683" endtime="20201029 12:43:19.704"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.712" endtime="20201029 12:43:19.776"></status>
</kw>
<msg timestamp="20201029 12:43:19.777" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.711" endtime="20201029 12:43:19.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.779" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.778" endtime="20201029 12:43:19.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.780" endtime="20201029 12:43:19.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.708" endtime="20201029 12:43:19.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.706" endtime="20201029 12:43:19.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.789" endtime="20201029 12:43:20.090"></status>
</kw>
<msg timestamp="20201029 12:43:20.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017665917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.788" endtime="20201029 12:43:20.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017665917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018647236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.094" endtime="20201029 12:43:20.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.102" endtime="20201029 12:43:20.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.785" endtime="20201029 12:43:20.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.783" endtime="20201029 12:43:20.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:20.108" level="INFO">${PHILIP_RES} = [{'diff': 0.0009813190000000013}, {'diff': 0.000981570000000001}, {'diff': 0.0009817920000000022}, {'diff': 0.0009815279999999989}, {'diff': 0.0009816249999999999}, {'diff': 0.0009817360000000004}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:20.105" endtime="20201029 12:43:20.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.113" level="INFO">${RESULT} = {'diff': [0.0009813190000000013, 0.000981570000000001, 0.0009817920000000022, 0.0009815279999999989, 0.0009816249999999999, 0.0009817360000000004, 0.0009815829999999977, 0.000981665999999999, 0.000981...</msg>
<status status="PASS" starttime="20201029 12:43:20.109" endtime="20201029 12:43:20.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.118" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:20.117" endtime="20201029 12:43:20.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.120" level="INFO">VALUE: [0.0009813190000000013, 0.000981570000000001, 0.0009817920000000022, 0.0009815279999999989, 0.0009816249999999999, 0.0009817360000000004, 0.0009815829999999977, 0.000981665999999999, 0.0009816519999999995, 0.0009815840000000006, 0.000981555999999998, 0.0009814999999999997, 0.0009814860000000002, 0.0009814019999999993, 0.0009813889999999992, 0.0009816389999999994, 0.0009814159999999988, 0.000981250000000003, 0.0009813339999999934, 0.000981180000000005, 0.0009812639999999956, 0.0009812219999999969, 0.000981443999999998, 0.0009815000000000032, 0.0009815000000000032, 0.0009814029999999987, 0.000981444000000005, 0.0009812920000000017, 0.0009810840000000001, 0.0009813469999999935, 0.0009816670000000055, 0.000981944999999998, 0.0009818480000000004, 0.0009814860000000036, 0.0009814719999999971, 0.0009815280000000023, 0.0009816110000000003, 0.0009815970000000007, 0.0009815140000000028, 0.0009815560000000015, 0.0009814999999999963, 0.0009816110000000003, 0.0009815830000000011, 0.000981570000000001, 0.0009817369999999964, 0.0009816659999999922, 0.0009818059999999879, 0.0009815690000000016, 0.0009814449999999975, 0.0009814029999999918]</msg>
<status status="PASS" starttime="20201029 12:43:20.119" endtime="20201029 12:43:20.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.114" endtime="20201029 12:43:20.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.705" endtime="20201029 12:43:20.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.682" endtime="20201029 12:43:20.122"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.124" endtime="20201029 12:43:20.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.123" endtime="20201029 12:43:20.145"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.153" endtime="20201029 12:43:20.218"></status>
</kw>
<msg timestamp="20201029 12:43:20.219" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.151" endtime="20201029 12:43:20.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.221" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.220" endtime="20201029 12:43:20.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.222" endtime="20201029 12:43:20.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.148" endtime="20201029 12:43:20.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.147" endtime="20201029 12:43:20.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.231" endtime="20201029 12:43:20.518"></status>
</kw>
<msg timestamp="20201029 12:43:20.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020827111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.230" endtime="20201029 12:43:20.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020827111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.523" endtime="20201029 12:43:20.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.530" endtime="20201029 12:43:20.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.227" endtime="20201029 12:43:20.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.226" endtime="20201029 12:43:20.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:20.537" level="INFO">${PHILIP_RES} = [{'diff': 0.0010241529999999999}, {'diff': 0.0010243189999999992}, {'diff': 0.001024278}, {'diff': 0.0010241390000000003}, {'diff': 0.001024083000000002}, {'diff': 0.0010241390000000003}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:20.534" endtime="20201029 12:43:20.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.541" level="INFO">${RESULT} = {'diff': [0.0010241529999999999, 0.0010243189999999992, 0.001024278, 0.0010241390000000003, 0.001024083000000002, 0.0010241390000000003, 0.0010242499999999974, 0.0010240560000000024, 0.001024124999999...</msg>
<status status="PASS" starttime="20201029 12:43:20.538" endtime="20201029 12:43:20.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.545" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:20.544" endtime="20201029 12:43:20.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.548" level="INFO">VALUE: [0.0010241529999999999, 0.0010243189999999992, 0.001024278, 0.0010241390000000003, 0.001024083000000002, 0.0010241390000000003, 0.0010242499999999974, 0.0010240560000000024, 0.0010241249999999973, 0.0010242220000000017, 0.0010240969999999981, 0.0010241250000000007, 0.0010241669999999994, 0.001024291999999996, 0.0010239579999999984, 0.0010241390000000003, 0.0010241250000000007, 0.0010243189999999958, 0.0010240839999999946, 0.001023971999999998, 0.0010240979999999941, 0.0010241250000000007, 0.0010241529999999999, 0.0010241799999999995, 0.001024166, 0.001024263999999997, 0.0010241669999999994, 0.0010242089999999981, 0.0010240410000000033, 0.0010241110000000012, 0.0010241120000000006, 0.001024276999999997, 0.0010243189999999958, 0.0010243060000000026, 0.0010241250000000007, 0.001024180999999999, 0.0010242780000000035, 0.0010242780000000035, 0.0010243199999999952, 0.0010243190000000027, 0.001024194000000006, 0.0010239450000000122, 0.0010241939999999922, 0.0010241669999999925, 0.0010240970000000016, 0.0010237919999999956, 0.0010236250000000002, 0.001023806000000002, 0.001023679999999999, 0.0010237220000000047]</msg>
<status status="PASS" starttime="20201029 12:43:20.546" endtime="20201029 12:43:20.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.542" endtime="20201029 12:43:20.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.145" endtime="20201029 12:43:20.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.122" endtime="20201029 12:43:20.550"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.552" endtime="20201029 12:43:20.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.551" endtime="20201029 12:43:20.572"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.580" endtime="20201029 12:43:20.651"></status>
</kw>
<msg timestamp="20201029 12:43:20.651" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.579" endtime="20201029 12:43:20.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.654" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.653" endtime="20201029 12:43:20.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.655" endtime="20201029 12:43:20.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.576" endtime="20201029 12:43:20.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.574" endtime="20201029 12:43:20.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.668" endtime="20201029 12:43:20.966"></status>
</kw>
<msg timestamp="20201029 12:43:20.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018960278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.665" endtime="20201029 12:43:20.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018960278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.970" endtime="20201029 12:43:20.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.978" endtime="20201029 12:43:20.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.661" endtime="20201029 12:43:20.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.659" endtime="20201029 12:43:20.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:20.985" level="INFO">${PHILIP_RES} = [{'diff': 0.0010669440000000002}, {'diff': 0.0010671110000000025}, {'diff': 0.001067000000000002}, {'diff': 0.0010671660000000013}, {'diff': 0.001067125000000002}, {'diff': 0.001066819}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:20.982" endtime="20201029 12:43:20.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.989" level="INFO">${RESULT} = {'diff': [0.0010669440000000002, 0.0010671110000000025, 0.001067000000000002, 0.0010671660000000013, 0.001067125000000002, 0.001066819, 0.0010669579999999998, 0.0010669860000000024, 0.0010669300000000...</msg>
<status status="PASS" starttime="20201029 12:43:20.986" endtime="20201029 12:43:20.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.993" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:20.992" endtime="20201029 12:43:20.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.996" level="INFO">VALUE: [0.0010669440000000002, 0.0010671110000000025, 0.001067000000000002, 0.0010671660000000013, 0.001067125000000002, 0.001066819, 0.0010669579999999998, 0.0010669860000000024, 0.0010669300000000007, 0.0010669170000000006, 0.001066888999999998, 0.0010669019999999946, 0.0010669310000000001, 0.0010669020000000015, 0.0010668340000000026, 0.0010669719999999994, 0.0010671670000000008, 0.001066985999999999, 0.0010671389999999947, 0.0010667359999999987, 0.0010670420000000042, 0.001066985999999999, 0.0010669729999999988, 0.0010669869999999984, 0.0010671520000000018, 0.001066985999999999, 0.0010669449999999997, 0.0010671670000000008, 0.0010669729999999988, 0.001067013999999998, 0.0010670419999999972, 0.0010669999999999985, 0.0010672359999999992, 0.0010668750000000018, 0.001066985999999999, 0.001067013999999998, 0.0010668189999999966, 0.0010670549999999973, 0.001067013999999998, 0.001066903000000008, 0.0010670139999999911, 0.0010670830000000103, 0.0010670280000000115, 0.0010671810000000004, 0.0010671939999999935, 0.0010670549999999973, 0.0010669170000000006, 0.0010669440000000002, 0.001066902999999994, 0.001066639000000008]</msg>
<status status="PASS" starttime="20201029 12:43:20.994" endtime="20201029 12:43:20.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.990" endtime="20201029 12:43:20.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.573" endtime="20201029 12:43:20.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.550" endtime="20201029 12:43:20.998"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.001" endtime="20201029 12:43:21.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.999" endtime="20201029 12:43:21.021"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.029" endtime="20201029 12:43:21.098"></status>
</kw>
<msg timestamp="20201029 12:43:21.098" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.027" endtime="20201029 12:43:21.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.101" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.099" endtime="20201029 12:43:21.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.102" endtime="20201029 12:43:21.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.025" endtime="20201029 12:43:21.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.023" endtime="20201029 12:43:21.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.111" endtime="20201029 12:43:21.396"></status>
</kw>
<msg timestamp="20201029 12:43:21.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017454972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018565778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.109" endtime="20201029 12:43:21.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017454972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018565778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.400" endtime="20201029 12:43:21.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.408" endtime="20201029 12:43:21.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.107" endtime="20201029 12:43:21.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.105" endtime="20201029 12:43:21.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:21.414" level="INFO">${PHILIP_RES} = [{'diff': 0.0011108060000000024}, {'diff': 0.001110820000000002}, {'diff': 0.0011109860000000013}, {'diff': 0.0011115980000000018}, {'diff': 0.0011112780000000003}, {'diff': 0.0011112360000000016}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:21.411" endtime="20201029 12:43:21.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.419" level="INFO">${RESULT} = {'diff': [0.0011108060000000024, 0.001110820000000002, 0.0011109860000000013, 0.0011115980000000018, 0.0011112780000000003, 0.0011112360000000016, 0.001111611000000002, 0.0011115280000000005, 0.001111...</msg>
<status status="PASS" starttime="20201029 12:43:21.415" endtime="20201029 12:43:21.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.424" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:21.423" endtime="20201029 12:43:21.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.426" level="INFO">VALUE: [0.0011108060000000024, 0.001110820000000002, 0.0011109860000000013, 0.0011115980000000018, 0.0011112780000000003, 0.0011112360000000016, 0.001111611000000002, 0.0011115280000000005, 0.0011115000000000014, 0.0011115689999999998, 0.0011113750000000013, 0.001111639000000001, 0.0011117220000000025, 0.001111624999999998, 0.0011116659999999973, 0.0011115550000000002, 0.0011116109999999985, 0.0011116940000000033, 0.0011116389999999976, 0.0011117370000000015, 0.0011117920000000003, 0.0011116810000000032, 0.0011115550000000002, 0.0011119309999999966, 0.0011117499999999947, 0.0011115280000000005, 0.001111514000000001, 0.0011116669999999967, 0.0011116939999999964, 0.0011115409999999937, 0.0011118050000000004, 0.0011116529999999972, 0.001111625000000005, 0.0011114019999999974, 0.001111526999999994, 0.0011114719999999953, 0.0011115550000000002, 0.0011114450000000026, 0.0011116949999999959, 0.0011116109999999985, 0.0011116669999999967, 0.0011116530000000041, 0.0011114859999999949, 0.0011117780000000077, 0.0011117499999999947, 0.0011115140000000079, 0.0011117219999999955, 0.0011116389999999976, 0.0011117920000000003, 0.0011114580000000096]</msg>
<status status="PASS" starttime="20201029 12:43:21.425" endtime="20201029 12:43:21.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.420" endtime="20201029 12:43:21.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.021" endtime="20201029 12:43:21.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.999" endtime="20201029 12:43:21.428"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.430" endtime="20201029 12:43:21.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.429" endtime="20201029 12:43:21.450"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.459" endtime="20201029 12:43:21.533"></status>
</kw>
<msg timestamp="20201029 12:43:21.534" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.457" endtime="20201029 12:43:21.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.540" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.536" endtime="20201029 12:43:21.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.543" endtime="20201029 12:43:21.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.454" endtime="20201029 12:43:21.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.453" endtime="20201029 12:43:21.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.566" endtime="20201029 12:43:21.871"></status>
</kw>
<msg timestamp="20201029 12:43:21.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.562" endtime="20201029 12:43:21.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.875" endtime="20201029 12:43:21.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.883" endtime="20201029 12:43:21.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.556" endtime="20201029 12:43:21.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.552" endtime="20201029 12:43:21.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:21.890" level="INFO">${PHILIP_RES} = [{'diff': 0.0011561390000000005}, {'diff': 0.0011562360000000015}, {'diff': 0.0011562090000000018}, {'diff': 0.0011563890000000007}, {'diff': 0.0011561809999999992}, {'diff': 0.0011563609999999981}, {...</msg>
<status status="PASS" starttime="20201029 12:43:21.887" endtime="20201029 12:43:21.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.894" level="INFO">${RESULT} = {'diff': [0.0011561390000000005, 0.0011562360000000015, 0.0011562090000000018, 0.0011563890000000007, 0.0011561809999999992, 0.0011563609999999981, 0.0011562639999999971, 0.0011563059999999993, 0.0011...</msg>
<status status="PASS" starttime="20201029 12:43:21.891" endtime="20201029 12:43:21.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.898" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:21.897" endtime="20201029 12:43:21.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.900" level="INFO">VALUE: [0.0011561390000000005, 0.0011562360000000015, 0.0011562090000000018, 0.0011563890000000007, 0.0011561809999999992, 0.0011563609999999981, 0.0011562639999999971, 0.0011563059999999993, 0.0011562079999999988, 0.0011560419999999995, 0.0011562079999999988, 0.0011560969999999948, 0.0011563480000000015, 0.0011562079999999988, 0.0011561110000000013, 0.0011561949999999988, 0.0011564719999999987, 0.0011563889999999938, 0.001156055000000003, 0.0011559579999999986, 0.0011561939999999993, 0.0011559169999999994, 0.0011561660000000001, 0.0011563200000000023, 0.0011563610000000016, 0.0011560689999999957, 0.0011561799999999997, 0.0011563050000000033, 0.0011560699999999952, 0.0011562639999999971, 0.0011562639999999971, 0.0011561799999999997, 0.0011562639999999971, 0.0011560140000000038, 0.0011563060000000028, 0.0011560000000000042, 0.0011560969999999948, 0.0011559719999999912, 0.0011560840000000017, 0.0011561390000000005, 0.0011560979999999943, 0.0011560409999999965, 0.001156041999999996, 0.001156236000000005, 0.0011560830000000022, 0.001156207999999992, 0.0011562089999999914, 0.0011560559999999886, 0.0011560000000000042, 0.001156138000000001]</msg>
<status status="PASS" starttime="20201029 12:43:21.899" endtime="20201029 12:43:21.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.895" endtime="20201029 12:43:21.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.451" endtime="20201029 12:43:21.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.428" endtime="20201029 12:43:21.902"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.905" endtime="20201029 12:43:21.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.903" endtime="20201029 12:43:21.925"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.933" endtime="20201029 12:43:22.007"></status>
</kw>
<msg timestamp="20201029 12:43:22.008" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.931" endtime="20201029 12:43:22.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.010" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.009" endtime="20201029 12:43:22.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.011" endtime="20201029 12:43:22.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.929" endtime="20201029 12:43:22.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.927" endtime="20201029 12:43:22.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.021" endtime="20201029 12:43:22.307"></status>
</kw>
<msg timestamp="20201029 12:43:22.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017922361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019124833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.019" endtime="20201029 12:43:22.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017922361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019124833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.311" endtime="20201029 12:43:22.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.319" endtime="20201029 12:43:22.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.017" endtime="20201029 12:43:22.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.015" endtime="20201029 12:43:22.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:22.325" level="INFO">${PHILIP_RES} = [{'diff': 0.0012024719999999996}, {'diff': 0.0012024030000000012}, {'diff': 0.0012025830000000001}, {'diff': 0.001202375000000002}, {'diff': 0.00120257}, {'diff': 0.0012025420000000009}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:22.322" endtime="20201029 12:43:22.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.329" level="INFO">${RESULT} = {'diff': [0.0012024719999999996, 0.0012024030000000012, 0.0012025830000000001, 0.001202375000000002, 0.00120257, 0.0012025420000000009, 0.0012024999999999987, 0.001202347999999999, 0.00120255600000000...</msg>
<status status="PASS" starttime="20201029 12:43:22.326" endtime="20201029 12:43:22.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.334" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:22.333" endtime="20201029 12:43:22.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.336" level="INFO">VALUE: [0.0012024719999999996, 0.0012024030000000012, 0.0012025830000000001, 0.001202375000000002, 0.00120257, 0.0012025420000000009, 0.0012024999999999987, 0.001202347999999999, 0.0012025560000000005, 0.0012024999999999987, 0.0012023890000000016, 0.001202360999999999, 0.001202360999999999, 0.0012026250000000058, 0.0012024999999999952, 0.001202555000000001, 0.001202472000000003, 0.0012025969999999997, 0.0012025270000000018, 0.0012026109999999993, 0.001202472000000003, 0.0012027219999999963, 0.0012023190000000003, 0.0012027219999999963, 0.0012024860000000026, 0.0012026519999999985, 0.0012027500000000024, 0.0012024299999999974, 0.0012024310000000038, 0.0012025830000000001, 0.0012024449999999964, 0.0012025969999999997, 0.0012025000000000022, 0.0012025830000000001, 0.0012025559999999935, 0.0012026670000000045, 0.001202526999999995, 0.0012026120000000057, 0.0012025410000000014, 0.0012025000000000091, 0.0012024169999999973, 0.0012024860000000026, 0.0012026389999999915, 0.0012024860000000026, 0.0012025280000000083, 0.0012024999999999952, 0.0012024020000000052, 0.0012026249999999988, 0.0012026109999999923, 0.0012025280000000083]</msg>
<status status="PASS" starttime="20201029 12:43:22.335" endtime="20201029 12:43:22.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.330" endtime="20201029 12:43:22.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.925" endtime="20201029 12:43:22.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.903" endtime="20201029 12:43:22.339"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.341" endtime="20201029 12:43:22.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.340" endtime="20201029 12:43:22.361"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.369" endtime="20201029 12:43:22.447"></status>
</kw>
<msg timestamp="20201029 12:43:22.447" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.368" endtime="20201029 12:43:22.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.453" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.450" endtime="20201029 12:43:22.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.455" endtime="20201029 12:43:22.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.365" endtime="20201029 12:43:22.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.364" endtime="20201029 12:43:22.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.474" endtime="20201029 12:43:22.776"></status>
</kw>
<msg timestamp="20201029 12:43:22.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018288806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.470" endtime="20201029 12:43:22.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018288806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.780" endtime="20201029 12:43:22.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.788" endtime="20201029 12:43:22.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.465" endtime="20201029 12:43:22.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.461" endtime="20201029 12:43:22.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:22.795" level="INFO">${PHILIP_RES} = [{'diff': 0.001248875}, {'diff': 0.0012490139999999997}, {'diff': 0.0012488480000000003}, {'diff': 0.0012490000000000001}, {'diff': 0.001248957999999998}, {'diff': 0.0012488470000000008}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:22.791" endtime="20201029 12:43:22.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.799" level="INFO">${RESULT} = {'diff': [0.001248875, 0.0012490139999999997, 0.0012488480000000003, 0.0012490000000000001, 0.001248957999999998, 0.0012488470000000008, 0.0012487639999999994, 0.0012490700000000014, 0.001248847000000...</msg>
<status status="PASS" starttime="20201029 12:43:22.796" endtime="20201029 12:43:22.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.804" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:22.803" endtime="20201029 12:43:22.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.806" level="INFO">VALUE: [0.001248875, 0.0012490139999999997, 0.0012488480000000003, 0.0012490000000000001, 0.001248957999999998, 0.0012488470000000008, 0.0012487639999999994, 0.0012490700000000014, 0.0012488470000000008, 0.001248764000000003, 0.0012489169999999952, 0.0012489019999999962, 0.0012489450000000013, 0.0012489450000000013, 0.001248972000000001, 0.0012489580000000014, 0.0012487499999999999, 0.0012489310000000017, 0.001248790999999999, 0.0012489030000000026, 0.0012488199999999977, 0.0012489300000000023, 0.0012488329999999978, 0.0012491110000000041, 0.0012487639999999994, 0.0012488329999999978, 0.001248680000000002, 0.0012486810000000015, 0.0012485829999999976, 0.001248583999999997, 0.0012486530000000023, 0.0012486389999999958, 0.0012487769999999995, 0.0012485000000000065, 0.0012486670000000089, 0.001248568999999991, 0.001248486000000007, 0.0012485979999999897, 0.0012484580000000078, 0.001248597000000004, 0.0012486940000000085, 0.0012486530000000023, 0.001248457999999994, 0.0012484999999999996, 0.0012485549999999984, 0.001248666999999995, 0.0012486810000000015, 0.0012488610000000039, 0.0012488469999999974, 0.0012488749999999965]</msg>
<status status="PASS" starttime="20201029 12:43:22.805" endtime="20201029 12:43:22.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.800" endtime="20201029 12:43:22.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.362" endtime="20201029 12:43:22.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.339" endtime="20201029 12:43:22.808"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.810" endtime="20201029 12:43:22.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.809" endtime="20201029 12:43:22.830"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.838" endtime="20201029 12:43:22.921"></status>
</kw>
<msg timestamp="20201029 12:43:22.922" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.837" endtime="20201029 12:43:22.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.924" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.923" endtime="20201029 12:43:22.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.925" endtime="20201029 12:43:22.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.834" endtime="20201029 12:43:22.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.832" endtime="20201029 12:43:22.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.934" endtime="20201029 12:43:23.221"></status>
</kw>
<msg timestamp="20201029 12:43:23.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.933" endtime="20201029 12:43:23.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022953444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.225" endtime="20201029 12:43:23.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.233" endtime="20201029 12:43:23.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.930" endtime="20201029 12:43:23.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.929" endtime="20201029 12:43:23.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:23.239" level="INFO">${PHILIP_RES} = [{'diff': 0.001296110999999999}, {'diff': 0.001296292000000001}, {'diff': 0.0012964729999999994}, {'diff': 0.0012964450000000002}, {'diff': 0.0012960839999999994}, {'diff': 0.0012962359999999992}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:23.236" endtime="20201029 12:43:23.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.244" level="INFO">${RESULT} = {'diff': [0.001296110999999999, 0.001296292000000001, 0.0012964729999999994, 0.0012964450000000002, 0.0012960839999999994, 0.0012962359999999992, 0.0012962910000000015, 0.0012961939999999936, 0.001296...</msg>
<status status="PASS" starttime="20201029 12:43:23.240" endtime="20201029 12:43:23.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.248" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:23.247" endtime="20201029 12:43:23.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.250" level="INFO">VALUE: [0.001296110999999999, 0.001296292000000001, 0.0012964729999999994, 0.0012964450000000002, 0.0012960839999999994, 0.0012962359999999992, 0.0012962910000000015, 0.0012961939999999936, 0.001296208, 0.0012963189999999972, 0.0012964580000000003, 0.0012964019999999951, 0.0012964030000000015, 0.0012964859999999995, 0.0012963189999999972, 0.0012966520000000023, 0.001296611000000003, 0.0012967080000000006, 0.0012964859999999995, 0.0012965129999999991, 0.0012964029999999946, 0.0012965840000000034, 0.0012967499999999993, 0.0012967220000000002, 0.0012966250000000026, 0.0012966670000000013, 0.0012967080000000006, 0.001296694000000001, 0.0012963470000000032, 0.0012963470000000102, 0.001296499999999992, 0.0012964589999999998, 0.0012964030000000015, 0.0012966519999999954, 0.0012964439999999938, 0.0012964030000000015, 0.0012967629999999924, 0.001296554999999991, 0.0012965700000000108, 0.0012968330000000111, 0.0012971109999999897, 0.0013384999999999925, 0.0012972359999999933, 0.001297096999999997, 0.001297179999999995, 0.0012969580000000008, 0.001296986, 0.00129738900000001, 0.0012972079999999941, 0.001297096999999997]</msg>
<status status="PASS" starttime="20201029 12:43:23.249" endtime="20201029 12:43:23.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.245" endtime="20201029 12:43:23.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.831" endtime="20201029 12:43:23.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.808" endtime="20201029 12:43:23.252"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.255" endtime="20201029 12:43:23.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.253" endtime="20201029 12:43:23.275"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.283" endtime="20201029 12:43:23.366"></status>
</kw>
<msg timestamp="20201029 12:43:23.367" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.281" endtime="20201029 12:43:23.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.372" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.369" endtime="20201029 12:43:23.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.374" endtime="20201029 12:43:23.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.279" endtime="20201029 12:43:23.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.277" endtime="20201029 12:43:23.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.395" endtime="20201029 12:43:23.695"></status>
</kw>
<msg timestamp="20201029 12:43:23.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019379431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.392" endtime="20201029 12:43:23.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019379431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.699" endtime="20201029 12:43:23.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.707" endtime="20201029 12:43:23.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.386" endtime="20201029 12:43:23.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.383" endtime="20201029 12:43:23.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:23.714" level="INFO">${PHILIP_RES} = [{'diff': 0.0013449300000000011}, {'diff': 0.0013450840000000033}, {'diff': 0.0013450410000000017}, {'diff': 0.0013448749999999988}, {'diff': 0.001344792000000001}, {'diff': 0.0013448060000000005}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:23.711" endtime="20201029 12:43:23.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.718" level="INFO">${RESULT} = {'diff': [0.0013449300000000011, 0.0013450840000000033, 0.0013450410000000017, 0.0013448749999999988, 0.001344792000000001, 0.0013448060000000005, 0.0013448609999999993, 0.0013450560000000007, 0.00134...</msg>
<status status="PASS" starttime="20201029 12:43:23.715" endtime="20201029 12:43:23.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.722" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:23.721" endtime="20201029 12:43:23.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.724" level="INFO">VALUE: [0.0013449300000000011, 0.0013450840000000033, 0.0013450410000000017, 0.0013448749999999988, 0.001344792000000001, 0.0013448060000000005, 0.0013448609999999993, 0.0013450560000000007, 0.0013450830000000004, 0.001344736000000006, 0.0013446810000000003, 0.001344790999999998, 0.0013446390000000016, 0.0013450420000000046, 0.0013449450000000002, 0.0013450969999999965, 0.0013449719999999998, 0.0013449859999999994, 0.0013449310000000006, 0.0013448049999999975, 0.0013448329999999967, 0.0013450560000000042, 0.0013450419999999977, 0.0013449580000000003, 0.0013451250000000026, 0.0013448890000000019, 0.0013448890000000019, 0.0013449030000000015, 0.0013449300000000011, 0.001344708, 0.0013450550000000047, 0.0013450970000000034, 0.0013450559999999973, 0.0013450560000000111, 0.001345110999999996, 0.0013448610000000027, 0.0013448890000000019, 0.0013448610000000027, 0.0013450129999999921, 0.0013449579999999933, 0.0013449870000000058, 0.0013449579999999933, 0.0013447220000000065, 0.0013449719999999998, 0.0013450689999999904, 0.00134511100000001, 0.0013448750000000093, 0.0013451669999999943, 0.0013448330000000036, 0.0013451250000000026]</msg>
<status status="PASS" starttime="20201029 12:43:23.723" endtime="20201029 12:43:23.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.719" endtime="20201029 12:43:23.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.275" endtime="20201029 12:43:23.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.253" endtime="20201029 12:43:23.727"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.730" endtime="20201029 12:43:23.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.728" endtime="20201029 12:43:23.750"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.758" endtime="20201029 12:43:23.850"></status>
</kw>
<msg timestamp="20201029 12:43:23.851" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.756" endtime="20201029 12:43:23.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.854" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.852" endtime="20201029 12:43:23.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.855" endtime="20201029 12:43:23.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.754" endtime="20201029 12:43:23.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.752" endtime="20201029 12:43:23.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.864" endtime="20201029 12:43:24.150"></status>
</kw>
<msg timestamp="20201029 12:43:24.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.862" endtime="20201029 12:43:24.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.154" endtime="20201029 12:43:24.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.162" endtime="20201029 12:43:24.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.859" endtime="20201029 12:43:24.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.858" endtime="20201029 12:43:24.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:24.168" level="INFO">${PHILIP_RES} = [{'diff': 0.0013947500000000002}, {'diff': 0.001394819000000002}, {'diff': 0.0013947360000000006}, {'diff': 0.0013945840000000008}, {'diff': 0.0013948610000000007}, {'diff': 0.0013947360000000006}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:24.165" endtime="20201029 12:43:24.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.173" level="INFO">${RESULT} = {'diff': [0.0013947500000000002, 0.001394819000000002, 0.0013947360000000006, 0.0013945840000000008, 0.0013948610000000007, 0.0013947360000000006, 0.0013942079999999975, 0.0013942919999999984, 0.00139...</msg>
<status status="PASS" starttime="20201029 12:43:24.169" endtime="20201029 12:43:24.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.177" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:24.176" endtime="20201029 12:43:24.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.180" level="INFO">VALUE: [0.0013947500000000002, 0.001394819000000002, 0.0013947360000000006, 0.0013945840000000008, 0.0013948610000000007, 0.0013947360000000006, 0.0013942079999999975, 0.0013942919999999984, 0.0013941660000000022, 0.0013942639999999992, 0.0013941530000000021, 0.001394013999999999, 0.0013942090000000004, 0.0013941799999999949, 0.001394124999999996, 0.001394305999999998, 0.0013943329999999976, 0.0013942219999999936, 0.0013943750000000033, 0.0013942779999999988, 0.0013944439999999947, 0.0013942779999999988, 0.0013940830000000043, 0.0013945830000000048, 0.001394639000000003, 0.0013947360000000006, 0.0013946810000000018, 0.001394721999999994, 0.0013948060000000123, 0.0013946670000000022, 0.0013949449999999947, 0.0013949030000000029, 0.0013948750000000038, 0.0013949580000000017, 0.0013949439999999952, 0.0013946529999999957, 0.0013944440000000086, 0.001394611000000004, 0.0013948610000000111, 0.001394708999999994, 0.0013948189999999916, 0.0013948189999999916, 0.0013947780000000132, 0.0013948890000000103, 0.0013947779999999993, 0.0013950409999999996, 0.0013947779999999993, 0.0013946519999999962, 0.0013947360000000075, 0.001394527999999992]</msg>
<status status="PASS" starttime="20201029 12:43:24.178" endtime="20201029 12:43:24.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.174" endtime="20201029 12:43:24.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.750" endtime="20201029 12:43:24.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.728" endtime="20201029 12:43:24.186"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.189" endtime="20201029 12:43:24.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.187" endtime="20201029 12:43:24.212"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.230" endtime="20201029 12:43:24.321"></status>
</kw>
<msg timestamp="20201029 12:43:24.323" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.226" endtime="20201029 12:43:24.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.328" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.325" endtime="20201029 12:43:24.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.331" endtime="20201029 12:43:24.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.220" endtime="20201029 12:43:24.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.216" endtime="20201029 12:43:24.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.350" endtime="20201029 12:43:24.645"></status>
</kw>
<msg timestamp="20201029 12:43:24.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034790903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036235792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.347" endtime="20201029 12:43:24.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034790903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036235792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.649" endtime="20201029 12:43:24.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.657" endtime="20201029 12:43:24.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.342" endtime="20201029 12:43:24.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.338" endtime="20201029 12:43:24.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:24.664" level="INFO">${PHILIP_RES} = [{'diff': 0.0014448890000000048}, {'diff': 0.001444736000000002}, {'diff': 0.001444944999999996}, {'diff': 0.0014449029999999974}, {'diff': 0.001444916999999997}, {'diff': 0.001445138999999998}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:43:24.660" endtime="20201029 12:43:24.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.667" level="INFO">${RESULT} = {'diff': [0.0014448890000000048, 0.001444736000000002, 0.001444944999999996, 0.0014449029999999974, 0.001444916999999997, 0.001445138999999998, 0.0014447770000000013, 0.0014448750000000052, 0.00144488...</msg>
<status status="PASS" starttime="20201029 12:43:24.664" endtime="20201029 12:43:24.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.672" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:24.671" endtime="20201029 12:43:24.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.674" level="INFO">VALUE: [0.0014448890000000048, 0.001444736000000002, 0.001444944999999996, 0.0014449029999999974, 0.001444916999999997, 0.001445138999999998, 0.0014447770000000013, 0.0014448750000000052, 0.0014448889999999978, 0.0014449860000000023, 0.0014450420000000005, 0.0014451669999999972, 0.0014450970000000063, 0.0014450839999999993, 0.0014451529999999976, 0.0014450000000000018, 0.0014448749999999982, 0.0014448609999999987, 0.0014449030000000043, 0.0014449720000000027, 0.0014450000000000018, 0.0014449029999999974, 0.0014449309999999965, 0.0014449589999999957, 0.0014449860000000092, 0.0014452360000000025, 0.0014448749999999982, 0.001444917000000004, 0.0014448050000000073, 0.0014447500000000085, 0.0014450140000000083, 0.0014447219999999955, 0.0014449579999999962, 0.0014450979999999919, 0.0014447499999999946, 0.001444929999999997, 0.0014448890000000048, 0.0014447080000000029, 0.001444846999999999, 0.001444846999999999, 0.001445028000000001, 0.0014448610000000056, 0.0014443059999999924, 0.0014445559999999996, 0.0014441529999999897, 0.001444138999999997, 0.0014443890000000043, 0.0014443060000000063, 0.0014441810000000027, 0.0014444450000000025]</msg>
<status status="PASS" starttime="20201029 12:43:24.673" endtime="20201029 12:43:24.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.668" endtime="20201029 12:43:24.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.213" endtime="20201029 12:43:24.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.186" endtime="20201029 12:43:24.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.959" endtime="20201029 12:43:24.676"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:02.645" endtime="20201029 12:43:24.677" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:41.936" endtime="20201029 12:43:24.685"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.754" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:24.762" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:25.935" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:24.753" endtime="20201029 12:43:25.937"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.942" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:25.939" endtime="20201029 12:43:25.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.752" endtime="20201029 12:43:25.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.948" endtime="20201029 12:43:26.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.945" endtime="20201029 12:43:26.212"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.234" endtime="20201029 12:43:26.254"></status>
</kw>
<msg timestamp="20201029 12:43:26.255" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.223" endtime="20201029 12:43:26.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.257" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.256" endtime="20201029 12:43:26.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.260" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:26.258" endtime="20201029 12:43:26.261"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:26.221" endtime="20201029 12:43:26.261"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:26.218" endtime="20201029 12:43:26.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.217" endtime="20201029 12:43:26.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:26.266" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:26.265" endtime="20201029 12:43:26.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.263" endtime="20201029 12:43:26.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.216" endtime="20201029 12:43:26.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.216" endtime="20201029 12:43:26.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.268" endtime="20201029 12:43:26.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.215" endtime="20201029 12:43:26.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.270" endtime="20201029 12:43:26.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.213" endtime="20201029 12:43:26.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.750" endtime="20201029 12:43:26.273"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.278" endtime="20201029 12:43:26.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.277" endtime="20201029 12:43:26.298"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.313" endtime="20201029 12:43:26.334"></status>
</kw>
<msg timestamp="20201029 12:43:26.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.311" endtime="20201029 12:43:26.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.336" endtime="20201029 12:43:26.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.340" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:26.338" endtime="20201029 12:43:26.340"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:26.309" endtime="20201029 12:43:26.341"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:26.306" endtime="20201029 12:43:26.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.305" endtime="20201029 12:43:26.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:26.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:26.345" endtime="20201029 12:43:26.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.343" endtime="20201029 12:43:26.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.304" endtime="20201029 12:43:26.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.304" endtime="20201029 12:43:26.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.347" endtime="20201029 12:43:26.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.301" endtime="20201029 12:43:26.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.299" endtime="20201029 12:43:26.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.276" endtime="20201029 12:43:26.350"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.359" endtime="20201029 12:43:26.375"></status>
</kw>
<msg timestamp="20201029 12:43:26.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.358" endtime="20201029 12:43:26.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.376" endtime="20201029 12:43:26.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.379" endtime="20201029 12:43:26.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.355" endtime="20201029 12:43:26.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.353" endtime="20201029 12:43:26.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.388" endtime="20201029 12:43:26.680"></status>
</kw>
<msg timestamp="20201029 12:43:26.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072069514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072075569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.386" endtime="20201029 12:43:26.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072069514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072075569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.685" endtime="20201029 12:43:26.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.693" endtime="20201029 12:43:26.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.384" endtime="20201029 12:43:26.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.382" endtime="20201029 12:43:26.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.700" level="INFO">${RESULT} = [{'diff': 6.0550000000048065e-06}, {'diff': 6.05600000000428e-06}, {'diff': 6.097000000010455e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.0410000000121755e-06}, {'diff': 6.041999999997771e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:26.697" endtime="20201029 12:43:26.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:26.704" level="INFO">${ACCURACY} = {'diff': [6.0550000000048065e-06, 6.05600000000428e-06, 6.097000000010455e-06, 6.0689999999974376e-06, 6.0410000000121755e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6....</msg>
<status status="PASS" starttime="20201029 12:43:26.701" endtime="20201029 12:43:26.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.708" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:43:26.707" endtime="20201029 12:43:26.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.712" level="INFO">VALUE: [6.0550000000048065e-06, 6.05600000000428e-06, 6.097000000010455e-06, 6.0689999999974376e-06, 6.0410000000121755e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.069000000011315e-06, 6.041999999997771e-06, 6.0410000000121755e-06, 6.096999999996577e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.097999999996051e-06, 6.02800000000514e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.139000000002226e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.08400000000342e-06, 6.054999999990929e-06, 6.0689999999974376e-06, 6.0550000000048065e-06, 6.0550000000048065e-06, 6.0550000000048065e-06, 6.0410000000121755e-06, 6.098000000009929e-06, 6.096999999996577e-06, 6.0279999999912626e-06, 6.041999999997771e-06, 6.041999999997771e-06, 6.0550000000048065e-06, 6.05600000000428e-06, 6.041999999997771e-06, 6.096999999996577e-06, 6.0829999999900686e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.0550000000048065e-06, 6.05600000000428e-06, 6.02800000000514e-06, 6.040999999998298e-06, 6.055999999990402e-06, 6.012999999999158e-06, 6.138000000002752e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201029 12:43:26.710" endtime="20201029 12:43:26.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.705" endtime="20201029 12:43:26.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.718" endtime="20201029 12:43:26.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.716" endtime="20201029 12:43:26.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.715" endtime="20201029 12:43:26.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.352" endtime="20201029 12:43:26.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.351" endtime="20201029 12:43:26.739"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.749" endtime="20201029 12:43:26.767"></status>
</kw>
<msg timestamp="20201029 12:43:26.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.747" endtime="20201029 12:43:26.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.769" endtime="20201029 12:43:26.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.772" endtime="20201029 12:43:26.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.744" endtime="20201029 12:43:26.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.742" endtime="20201029 12:43:26.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.781" endtime="20201029 12:43:27.086"></status>
</kw>
<msg timestamp="20201029 12:43:27.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023874875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.779" endtime="20201029 12:43:27.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023874875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023880944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.090" endtime="20201029 12:43:27.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.098" endtime="20201029 12:43:27.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.777" endtime="20201029 12:43:27.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.775" endtime="20201029 12:43:27.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.105" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.054999999997868e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:27.102" endtime="20201029 12:43:27.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:27.110" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.054999999997868e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.0970...</msg>
<status status="PASS" starttime="20201029 12:43:27.106" endtime="20201029 12:43:27.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.115" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:43:27.113" endtime="20201029 12:43:27.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.118" level="INFO">VALUE: [6.069000000000907e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.054999999997868e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.026999999998728e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.027000000002197e-06, 6.069999999996911e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.042000000001241e-06, 5.971999999999922e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.056000000000811e-06, 5.986000000002961e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.040999999998298e-06]</msg>
<status status="PASS" starttime="20201029 12:43:27.116" endtime="20201029 12:43:27.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.110" endtime="20201029 12:43:27.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.122" endtime="20201029 12:43:27.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.121" endtime="20201029 12:43:27.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.120" endtime="20201029 12:43:27.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.740" endtime="20201029 12:43:27.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.740" endtime="20201029 12:43:27.143"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.152" endtime="20201029 12:43:27.168"></status>
</kw>
<msg timestamp="20201029 12:43:27.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.151" endtime="20201029 12:43:27.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.170" endtime="20201029 12:43:27.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.172" endtime="20201029 12:43:27.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.148" endtime="20201029 12:43:27.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.146" endtime="20201029 12:43:27.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.182" endtime="20201029 12:43:27.469"></status>
</kw>
<msg timestamp="20201029 12:43:27.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.181" endtime="20201029 12:43:27.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021698181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.474" endtime="20201029 12:43:27.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.482" endtime="20201029 12:43:27.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.178" endtime="20201029 12:43:27.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.176" endtime="20201029 12:43:27.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.489" level="INFO">${RESULT} = [{'diff': 6.054999999997868e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.110999999999617e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.054999999997868e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:27.485" endtime="20201029 12:43:27.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:27.494" level="INFO">${ACCURACY} = {'diff': [6.054999999997868e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.110999999999617e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.026999999998728e-06, 6.056000000000811e-06, 6.055...</msg>
<status status="PASS" starttime="20201029 12:43:27.490" endtime="20201029 12:43:27.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.499" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:43:27.498" endtime="20201029 12:43:27.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.501" level="INFO">VALUE: [6.054999999997868e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.110999999999617e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.026999999998728e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.1389999999987566e-06, 6.028000000001671e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.055999999997341e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.0139999999986316e-06]</msg>
<status status="PASS" starttime="20201029 12:43:27.500" endtime="20201029 12:43:27.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.495" endtime="20201029 12:43:27.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.506" endtime="20201029 12:43:27.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.504" endtime="20201029 12:43:27.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.503" endtime="20201029 12:43:27.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.144" endtime="20201029 12:43:27.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.144" endtime="20201029 12:43:27.527"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.536" endtime="20201029 12:43:27.556"></status>
</kw>
<msg timestamp="20201029 12:43:27.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.534" endtime="20201029 12:43:27.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.557" endtime="20201029 12:43:27.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.560" endtime="20201029 12:43:27.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.531" endtime="20201029 12:43:27.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.529" endtime="20201029 12:43:27.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.570" endtime="20201029 12:43:27.871"></status>
</kw>
<msg timestamp="20201029 12:43:27.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025070083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.568" endtime="20201029 12:43:27.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025064014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025070083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.875" endtime="20201029 12:43:27.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.883" endtime="20201029 12:43:27.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.565" endtime="20201029 12:43:27.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.564" endtime="20201029 12:43:27.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.890" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.054999999997868e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:27.886" endtime="20201029 12:43:27.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:27.894" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.0689...</msg>
<status status="PASS" starttime="20201029 12:43:27.891" endtime="20201029 12:43:27.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.898" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:43:27.897" endtime="20201029 12:43:27.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.904" level="INFO">VALUE: [6.069000000000907e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.056000000000811e-06, 5.971999999999922e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.0689999999974376e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.0839999999999506e-06, 5.999999999999062e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.110999999999617e-06, 6.056000000000811e-06, 6.027000000002197e-06, 6.041999999997771e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201029 12:43:27.900" endtime="20201029 12:43:27.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.895" endtime="20201029 12:43:27.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.914" endtime="20201029 12:43:27.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.911" endtime="20201029 12:43:27.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.907" endtime="20201029 12:43:27.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.528" endtime="20201029 12:43:27.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.527" endtime="20201029 12:43:27.938"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.948" endtime="20201029 12:43:27.967"></status>
</kw>
<msg timestamp="20201029 12:43:27.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.946" endtime="20201029 12:43:27.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.969" endtime="20201029 12:43:27.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.971" endtime="20201029 12:43:27.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.943" endtime="20201029 12:43:27.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.941" endtime="20201029 12:43:27.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.981" endtime="20201029 12:43:28.265"></status>
</kw>
<msg timestamp="20201029 12:43:28.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028795931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028802, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:27.979" endtime="20201029 12:43:28.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028795931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028802, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:28.270" endtime="20201029 12:43:28.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.278" endtime="20201029 12:43:28.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.977" endtime="20201029 12:43:28.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.975" endtime="20201029 12:43:28.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.284" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0279999999982015e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:28.281" endtime="20201029 12:43:28.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:28.288" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 5.9589999999998255e-06, 6.0839999999999506e-06, 6.0...</msg>
<status status="PASS" starttime="20201029 12:43:28.285" endtime="20201029 12:43:28.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.293" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:43:28.292" endtime="20201029 12:43:28.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.295" level="INFO">VALUE: [6.069000000000907e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 5.9589999999998255e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.110999999999617e-06, 5.985999999999492e-06, 6.111000000003086e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.110999999999617e-06, 6.041000000001767e-06, 5.999999999999062e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.026999999998728e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201029 12:43:28.294" endtime="20201029 12:43:28.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.289" endtime="20201029 12:43:28.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.301" endtime="20201029 12:43:28.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.299" endtime="20201029 12:43:28.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.298" endtime="20201029 12:43:28.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.939" endtime="20201029 12:43:28.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.938" endtime="20201029 12:43:28.321"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.330" endtime="20201029 12:43:28.350"></status>
</kw>
<msg timestamp="20201029 12:43:28.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.329" endtime="20201029 12:43:28.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.351" endtime="20201029 12:43:28.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.354" endtime="20201029 12:43:28.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.326" endtime="20201029 12:43:28.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.324" endtime="20201029 12:43:28.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.363" endtime="20201029 12:43:28.674"></status>
</kw>
<msg timestamp="20201029 12:43:28.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.361" endtime="20201029 12:43:28.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024027375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.678" endtime="20201029 12:43:28.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.686" endtime="20201029 12:43:28.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.359" endtime="20201029 12:43:28.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.357" endtime="20201029 12:43:28.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.692" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.0839999999999506e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:28.689" endtime="20201029 12:43:28.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:28.697" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.05...</msg>
<status status="PASS" starttime="20201029 12:43:28.693" endtime="20201029 12:43:28.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.702" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:43:28.701" endtime="20201029 12:43:28.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.704" level="INFO">VALUE: [6.056000000000811e-06, 6.054999999997868e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.0839999999999506e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 5.9589999999998255e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201029 12:43:28.703" endtime="20201029 12:43:28.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.698" endtime="20201029 12:43:28.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.709" endtime="20201029 12:43:28.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.707" endtime="20201029 12:43:28.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.706" endtime="20201029 12:43:28.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.322" endtime="20201029 12:43:28.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.322" endtime="20201029 12:43:28.730"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.738" endtime="20201029 12:43:28.755"></status>
</kw>
<msg timestamp="20201029 12:43:28.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.737" endtime="20201029 12:43:28.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.757" endtime="20201029 12:43:28.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.759" endtime="20201029 12:43:28.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.734" endtime="20201029 12:43:28.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.732" endtime="20201029 12:43:28.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.768" endtime="20201029 12:43:29.056"></status>
</kw>
<msg timestamp="20201029 12:43:29.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.767" endtime="20201029 12:43:29.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.060" endtime="20201029 12:43:29.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.068" endtime="20201029 12:43:29.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.764" endtime="20201029 12:43:29.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.762" endtime="20201029 12:43:29.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.074" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.069000000000907e-06}, {'diff': 5.999999999999062e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:29.071" endtime="20201029 12:43:29.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:29.078" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.0420...</msg>
<status status="PASS" starttime="20201029 12:43:29.075" endtime="20201029 12:43:29.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.083" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:43:29.082" endtime="20201029 12:43:29.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.085" level="INFO">VALUE: [6.056000000000811e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 5.971999999999922e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.056000000000811e-06, 5.971999999999922e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0829999999970075e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201029 12:43:29.084" endtime="20201029 12:43:29.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.079" endtime="20201029 12:43:29.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.090" endtime="20201029 12:43:29.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.088" endtime="20201029 12:43:29.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.087" endtime="20201029 12:43:29.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.731" endtime="20201029 12:43:29.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.730" endtime="20201029 12:43:29.111"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.119" endtime="20201029 12:43:29.138"></status>
</kw>
<msg timestamp="20201029 12:43:29.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.118" endtime="20201029 12:43:29.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.139" endtime="20201029 12:43:29.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.142" endtime="20201029 12:43:29.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.115" endtime="20201029 12:43:29.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.113" endtime="20201029 12:43:29.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.151" endtime="20201029 12:43:29.436"></status>
</kw>
<msg timestamp="20201029 12:43:29.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02364375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023649806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:29.149" endtime="20201029 12:43:29.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02364375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023649806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:29.440" endtime="20201029 12:43:29.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.449" endtime="20201029 12:43:29.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.147" endtime="20201029 12:43:29.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.145" endtime="20201029 12:43:29.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.455" level="INFO">${RESULT} = [{'diff': 6.055999999997341e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.055000000001337e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:29.452" endtime="20201029 12:43:29.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:29.459" level="INFO">${ACCURACY} = {'diff': [6.055999999997341e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.0690...</msg>
<status status="PASS" starttime="20201029 12:43:29.456" endtime="20201029 12:43:29.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.464" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:43:29.463" endtime="20201029 12:43:29.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.466" level="INFO">VALUE: [6.055999999997341e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.069999999996911e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.0829999999970075e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.041000000001767e-06, 6.110999999999617e-06, 6.054999999997868e-06, 5.971999999999922e-06, 6.0139999999986316e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.0979999999995205e-06, 6.027000000002197e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.028000000001671e-06, 5.971999999999922e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.026999999998728e-06, 6.055000000001337e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201029 12:43:29.465" endtime="20201029 12:43:29.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.460" endtime="20201029 12:43:29.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.480" endtime="20201029 12:43:29.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.478" endtime="20201029 12:43:29.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.477" endtime="20201029 12:43:29.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.112" endtime="20201029 12:43:29.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.111" endtime="20201029 12:43:29.500"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.509" endtime="20201029 12:43:29.526"></status>
</kw>
<msg timestamp="20201029 12:43:29.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.508" endtime="20201029 12:43:29.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.528" endtime="20201029 12:43:29.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.530" endtime="20201029 12:43:29.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.505" endtime="20201029 12:43:29.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.503" endtime="20201029 12:43:29.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.539" endtime="20201029 12:43:29.824"></status>
</kw>
<msg timestamp="20201029 12:43:29.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.538" endtime="20201029 12:43:29.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020628972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.828" endtime="20201029 12:43:29.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.836" endtime="20201029 12:43:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.535" endtime="20201029 12:43:29.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.533" endtime="20201029 12:43:29.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.842" level="INFO">${RESULT} = [{'diff': 6.040999999998298e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.055000000001337e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:29.839" endtime="20201029 12:43:29.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:29.850" level="INFO">${ACCURACY} = {'diff': [6.040999999998298e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.08...</msg>
<status status="PASS" starttime="20201029 12:43:29.843" endtime="20201029 12:43:29.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.854" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:43:29.853" endtime="20201029 12:43:29.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.857" level="INFO">VALUE: [6.040999999998298e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.083000000000477e-06, 5.999999999999062e-06, 6.041999999997771e-06, 6.11199999999909e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.040999999998298e-06, 5.9589999999998255e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201029 12:43:29.855" endtime="20201029 12:43:29.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.851" endtime="20201029 12:43:29.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.861" endtime="20201029 12:43:29.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.860" endtime="20201029 12:43:29.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.859" endtime="20201029 12:43:29.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.501" endtime="20201029 12:43:29.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.501" endtime="20201029 12:43:29.882"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.891" endtime="20201029 12:43:29.906"></status>
</kw>
<msg timestamp="20201029 12:43:29.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.889" endtime="20201029 12:43:29.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.908" endtime="20201029 12:43:29.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.910" endtime="20201029 12:43:29.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.887" endtime="20201029 12:43:29.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.885" endtime="20201029 12:43:29.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.919" endtime="20201029 12:43:30.204"></status>
</kw>
<msg timestamp="20201029 12:43:30.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020791056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.917" endtime="20201029 12:43:30.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020791056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.208" endtime="20201029 12:43:30.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.216" endtime="20201029 12:43:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.915" endtime="20201029 12:43:30.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.913" endtime="20201029 12:43:30.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.222" level="INFO">${RESULT} = [{'diff': 6.041000000001767e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.124999999999187e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:30.219" endtime="20201029 12:43:30.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:30.227" level="INFO">${ACCURACY} = {'diff': [6.041000000001767e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.124999999999187e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.070...</msg>
<status status="PASS" starttime="20201029 12:43:30.223" endtime="20201029 12:43:30.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.231" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:43:30.230" endtime="20201029 12:43:30.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.233" level="INFO">VALUE: [6.041000000001767e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.124999999999187e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 6.040999999998298e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 6.0139999999986316e-06, 6.041000000001767e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201029 12:43:30.232" endtime="20201029 12:43:30.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.227" endtime="20201029 12:43:30.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.238" endtime="20201029 12:43:30.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.237" endtime="20201029 12:43:30.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.236" endtime="20201029 12:43:30.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.883" endtime="20201029 12:43:30.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.883" endtime="20201029 12:43:30.259"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.267" endtime="20201029 12:43:30.286"></status>
</kw>
<msg timestamp="20201029 12:43:30.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.266" endtime="20201029 12:43:30.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.288" endtime="20201029 12:43:30.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.290" endtime="20201029 12:43:30.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.263" endtime="20201029 12:43:30.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.261" endtime="20201029 12:43:30.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.300" endtime="20201029 12:43:30.586"></status>
</kw>
<msg timestamp="20201029 12:43:30.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020980681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.299" endtime="20201029 12:43:30.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020980681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.590" endtime="20201029 12:43:30.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.598" endtime="20201029 12:43:30.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.296" endtime="20201029 12:43:30.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.294" endtime="20201029 12:43:30.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.604" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.069000000000907e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:30.601" endtime="20201029 12:43:30.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:30.608" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.040...</msg>
<status status="PASS" starttime="20201029 12:43:30.605" endtime="20201029 12:43:30.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.613" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:43:30.612" endtime="20201029 12:43:30.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.615" level="INFO">VALUE: [6.083000000000477e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.042000000001241e-06, 5.999999999999062e-06, 6.056000000000811e-06, 6.055000000001337e-06, 5.999999999999062e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.000000000002531e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.125000000002656e-06, 6.124999999999187e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201029 12:43:30.614" endtime="20201029 12:43:30.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.609" endtime="20201029 12:43:30.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.621" endtime="20201029 12:43:30.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.620" endtime="20201029 12:43:30.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.618" endtime="20201029 12:43:30.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.260" endtime="20201029 12:43:30.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.259" endtime="20201029 12:43:30.642"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.651" endtime="20201029 12:43:30.671"></status>
</kw>
<msg timestamp="20201029 12:43:30.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.649" endtime="20201029 12:43:30.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.672" endtime="20201029 12:43:30.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.675" endtime="20201029 12:43:30.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.646" endtime="20201029 12:43:30.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.644" endtime="20201029 12:43:30.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.684" endtime="20201029 12:43:30.982"></status>
</kw>
<msg timestamp="20201029 12:43:30.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024881847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.682" endtime="20201029 12:43:30.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024881847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024887903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.986" endtime="20201029 12:43:30.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.994" endtime="20201029 12:43:30.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.679" endtime="20201029 12:43:30.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.678" endtime="20201029 12:43:30.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.001" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:30.998" endtime="20201029 12:43:31.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:31.006" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.068...</msg>
<status status="PASS" starttime="20201029 12:43:31.002" endtime="20201029 12:43:31.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.011" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:43:31.010" endtime="20201029 12:43:31.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.014" level="INFO">VALUE: [6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.0689999999974376e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.013000000002627e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.110999999999617e-06, 5.985999999999492e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.026999999998728e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201029 12:43:31.012" endtime="20201029 12:43:31.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.007" endtime="20201029 12:43:31.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.019" endtime="20201029 12:43:31.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.017" endtime="20201029 12:43:31.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.016" endtime="20201029 12:43:31.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.643" endtime="20201029 12:43:31.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.642" endtime="20201029 12:43:31.040"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.052" endtime="20201029 12:43:31.073"></status>
</kw>
<msg timestamp="20201029 12:43:31.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.049" endtime="20201029 12:43:31.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.075" endtime="20201029 12:43:31.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.080" endtime="20201029 12:43:31.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.045" endtime="20201029 12:43:31.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.042" endtime="20201029 12:43:31.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.094" endtime="20201029 12:43:31.383"></status>
</kw>
<msg timestamp="20201029 12:43:31.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02888775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028893778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:31.092" endtime="20201029 12:43:31.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02888775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028893778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:31.393" endtime="20201029 12:43:31.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.411" endtime="20201029 12:43:31.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.088" endtime="20201029 12:43:31.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.085" endtime="20201029 12:43:31.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.425" level="INFO">${RESULT} = [{'diff': 6.0279999999982015e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.0829999999970075e-06},...</msg>
<status status="PASS" starttime="20201029 12:43:31.418" endtime="20201029 12:43:31.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:31.434" level="INFO">${ACCURACY} = {'diff': [6.0279999999982015e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.0829999999970075e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.05...</msg>
<status status="PASS" starttime="20201029 12:43:31.427" endtime="20201029 12:43:31.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.444" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:43:31.441" endtime="20201029 12:43:31.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.449" level="INFO">VALUE: [6.0279999999982015e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.0829999999970075e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.012999999999158e-06, 5.999999999999062e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.069999999996911e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.027000000002197e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.040999999998298e-06, 6.070000000000381e-06, 5.9729999999993955e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.040999999998298e-06]</msg>
<status status="PASS" starttime="20201029 12:43:31.446" endtime="20201029 12:43:31.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.436" endtime="20201029 12:43:31.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.459" endtime="20201029 12:43:31.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.456" endtime="20201029 12:43:31.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.454" endtime="20201029 12:43:31.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.041" endtime="20201029 12:43:31.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.040" endtime="20201029 12:43:31.481"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.490" endtime="20201029 12:43:31.513"></status>
</kw>
<msg timestamp="20201029 12:43:31.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.488" endtime="20201029 12:43:31.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.514" endtime="20201029 12:43:31.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.517" endtime="20201029 12:43:31.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.486" endtime="20201029 12:43:31.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.483" endtime="20201029 12:43:31.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.526" endtime="20201029 12:43:31.812"></status>
</kw>
<msg timestamp="20201029 12:43:31.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.524" endtime="20201029 12:43:31.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024818736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024824806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.816" endtime="20201029 12:43:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.824" endtime="20201029 12:43:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.521" endtime="20201029 12:43:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.520" endtime="20201029 12:43:31.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.830" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.040999999998298e-06}, {'diff': 5.999999999999062e-06}, {'diff': 6.097000000000047e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:31.827" endtime="20201029 12:43:31.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:31.835" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.040999999998298e-06, 5.999999999999062e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.0410...</msg>
<status status="PASS" starttime="20201029 12:43:31.831" endtime="20201029 12:43:31.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.839" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:43:31.838" endtime="20201029 12:43:31.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.841" level="INFO">VALUE: [6.070000000000381e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.040999999998298e-06, 5.999999999999062e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069999999996911e-06, 6.124999999999187e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.000000000002531e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.041999999997771e-06, 6.012999999999158e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201029 12:43:31.840" endtime="20201029 12:43:31.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.835" endtime="20201029 12:43:31.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.847" endtime="20201029 12:43:31.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.846" endtime="20201029 12:43:31.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.845" endtime="20201029 12:43:31.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.482" endtime="20201029 12:43:31.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.481" endtime="20201029 12:43:31.868"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.877" endtime="20201029 12:43:31.895"></status>
</kw>
<msg timestamp="20201029 12:43:31.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.875" endtime="20201029 12:43:31.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.897" endtime="20201029 12:43:31.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.899" endtime="20201029 12:43:31.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.873" endtime="20201029 12:43:31.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.870" endtime="20201029 12:43:31.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.908" endtime="20201029 12:43:32.194"></status>
</kw>
<msg timestamp="20201029 12:43:32.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024473778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024479847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.907" endtime="20201029 12:43:32.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024473778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024479847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.198" endtime="20201029 12:43:32.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.206" endtime="20201029 12:43:32.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.904" endtime="20201029 12:43:32.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.902" endtime="20201029 12:43:32.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.213" level="INFO">${RESULT} = [{'diff': 6.0689999999974376e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0979999999995205e-06}, {'diff': 6.041999999997771e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:32.210" endtime="20201029 12:43:32.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:32.218" level="INFO">${ACCURACY} = {'diff': [6.0689999999974376e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.0...</msg>
<status status="PASS" starttime="20201029 12:43:32.214" endtime="20201029 12:43:32.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.223" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:43:32.222" endtime="20201029 12:43:32.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.225" level="INFO">VALUE: [6.0689999999974376e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.0979999999995205e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 5.986000000002961e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.0839999999999506e-06, 6.026999999998728e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.041000000001767e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.055000000001337e-06, 5.9579999999968825e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.014000000002101e-06, 6.0139999999986316e-06, 6.041000000001767e-06]</msg>
<status status="PASS" starttime="20201029 12:43:32.224" endtime="20201029 12:43:32.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.219" endtime="20201029 12:43:32.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.230" endtime="20201029 12:43:32.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.229" endtime="20201029 12:43:32.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.227" endtime="20201029 12:43:32.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.869" endtime="20201029 12:43:32.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.868" endtime="20201029 12:43:32.251"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.260" endtime="20201029 12:43:32.278"></status>
</kw>
<msg timestamp="20201029 12:43:32.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.258" endtime="20201029 12:43:32.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.279" endtime="20201029 12:43:32.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.282" endtime="20201029 12:43:32.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.255" endtime="20201029 12:43:32.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.253" endtime="20201029 12:43:32.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.291" endtime="20201029 12:43:32.584"></status>
</kw>
<msg timestamp="20201029 12:43:32.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023559778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.290" endtime="20201029 12:43:32.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023553764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023559778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.588" endtime="20201029 12:43:32.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.596" endtime="20201029 12:43:32.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.287" endtime="20201029 12:43:32.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.285" endtime="20201029 12:43:32.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.603" level="INFO">${RESULT} = [{'diff': 6.0139999999986316e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.08400000000342e-06}, {'diff': 6.069000000000907e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:32.600" endtime="20201029 12:43:32.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:32.607" level="INFO">${ACCURACY} = {'diff': [6.0139999999986316e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.08400000000342e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.042...</msg>
<status status="PASS" starttime="20201029 12:43:32.604" endtime="20201029 12:43:32.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.611" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:43:32.610" endtime="20201029 12:43:32.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.614" level="INFO">VALUE: [6.0139999999986316e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.08400000000342e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.042000000001241e-06, 5.958000000000352e-06, 6.041000000001767e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.041999999997771e-06, 5.999999999999062e-06, 6.0689999999974376e-06, 6.0139999999986316e-06, 6.027000000002197e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.0829999999970075e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.0829999999970075e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.069999999996911e-06, 6.041999999997771e-06, 5.958000000000352e-06, 6.0839999999999506e-06, 6.041000000001767e-06, 6.054999999997868e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201029 12:43:32.613" endtime="20201029 12:43:32.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.608" endtime="20201029 12:43:32.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.619" endtime="20201029 12:43:32.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.617" endtime="20201029 12:43:32.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.616" endtime="20201029 12:43:32.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.252" endtime="20201029 12:43:32.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.251" endtime="20201029 12:43:32.640"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.648" endtime="20201029 12:43:32.669"></status>
</kw>
<msg timestamp="20201029 12:43:32.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.647" endtime="20201029 12:43:32.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.671" endtime="20201029 12:43:32.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.673" endtime="20201029 12:43:32.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.644" endtime="20201029 12:43:32.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.642" endtime="20201029 12:43:32.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.682" endtime="20201029 12:43:32.966"></status>
</kw>
<msg timestamp="20201029 12:43:32.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.681" endtime="20201029 12:43:32.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.970" endtime="20201029 12:43:32.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.979" endtime="20201029 12:43:32.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.678" endtime="20201029 12:43:32.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.677" endtime="20201029 12:43:32.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.985" level="INFO">${RESULT} = [{'diff': 6.0829999999970075e-06}, {'diff': 5.971999999999922e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.056000000000811e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:32.982" endtime="20201029 12:43:32.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:32.989" level="INFO">${ACCURACY} = {'diff': [6.0829999999970075e-06, 5.971999999999922e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6....</msg>
<status status="PASS" starttime="20201029 12:43:32.986" endtime="20201029 12:43:32.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.994" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:43:32.993" endtime="20201029 12:43:32.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.996" level="INFO">VALUE: [6.0829999999970075e-06, 5.971999999999922e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.027000000002197e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.069000000000907e-06, 5.971999999999922e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.056000000000811e-06, 5.985999999999492e-06, 6.028000000001671e-06, 6.097000000000047e-06, 5.999999999999062e-06, 6.0689999999974376e-06, 6.139000000002226e-06, 6.069999999996911e-06, 6.0839999999999506e-06, 6.0829999999970075e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 5.999999999999062e-06]</msg>
<status status="PASS" starttime="20201029 12:43:32.995" endtime="20201029 12:43:32.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.990" endtime="20201029 12:43:32.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.002" endtime="20201029 12:43:33.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.001" endtime="20201029 12:43:33.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.999" endtime="20201029 12:43:33.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.641" endtime="20201029 12:43:33.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.640" endtime="20201029 12:43:33.023"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.032" endtime="20201029 12:43:33.046"></status>
</kw>
<msg timestamp="20201029 12:43:33.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.030" endtime="20201029 12:43:33.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.048" endtime="20201029 12:43:33.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.050" endtime="20201029 12:43:33.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.028" endtime="20201029 12:43:33.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.026" endtime="20201029 12:43:33.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.059" endtime="20201029 12:43:33.344"></status>
</kw>
<msg timestamp="20201029 12:43:33.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.058" endtime="20201029 12:43:33.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.348" endtime="20201029 12:43:33.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.357" endtime="20201029 12:43:33.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.055" endtime="20201029 12:43:33.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.053" endtime="20201029 12:43:33.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.364" level="INFO">${RESULT} = [{'diff': 6.110999999999617e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.042000000001241e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:33.361" endtime="20201029 12:43:33.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:33.371" level="INFO">${ACCURACY} = {'diff': [6.110999999999617e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.07...</msg>
<status status="PASS" starttime="20201029 12:43:33.365" endtime="20201029 12:43:33.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.376" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:43:33.375" endtime="20201029 12:43:33.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.379" level="INFO">VALUE: [6.110999999999617e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.027000000002197e-06, 6.055999999997341e-06, 6.040999999998298e-06, 5.971999999999922e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0139999999986316e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.153000000001796e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.040999999998298e-06]</msg>
<status status="PASS" starttime="20201029 12:43:33.377" endtime="20201029 12:43:33.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.372" endtime="20201029 12:43:33.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.384" endtime="20201029 12:43:33.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.382" endtime="20201029 12:43:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.381" endtime="20201029 12:43:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.024" endtime="20201029 12:43:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.023" endtime="20201029 12:43:33.404"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.413" endtime="20201029 12:43:33.428"></status>
</kw>
<msg timestamp="20201029 12:43:33.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.411" endtime="20201029 12:43:33.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.429" endtime="20201029 12:43:33.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.432" endtime="20201029 12:43:33.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.409" endtime="20201029 12:43:33.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.407" endtime="20201029 12:43:33.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.441" endtime="20201029 12:43:33.726"></status>
</kw>
<msg timestamp="20201029 12:43:33.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020542014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.439" endtime="20201029 12:43:33.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020542014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020548083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.730" endtime="20201029 12:43:33.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.738" endtime="20201029 12:43:33.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.436" endtime="20201029 12:43:33.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.435" endtime="20201029 12:43:33.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.744" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.041000000001767e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:33.741" endtime="20201029 12:43:33.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:33.749" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.0970...</msg>
<status status="PASS" starttime="20201029 12:43:33.745" endtime="20201029 12:43:33.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.753" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:43:33.752" endtime="20201029 12:43:33.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.756" level="INFO">VALUE: [6.069000000000907e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.139000000002226e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.027000000002197e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.153000000001796e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.041000000001767e-06, 5.999999999999062e-06, 6.041000000001767e-06]</msg>
<status status="PASS" starttime="20201029 12:43:33.754" endtime="20201029 12:43:33.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.749" endtime="20201029 12:43:33.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.760" endtime="20201029 12:43:33.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.759" endtime="20201029 12:43:33.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.758" endtime="20201029 12:43:33.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.405" endtime="20201029 12:43:33.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.405" endtime="20201029 12:43:33.781"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.790" endtime="20201029 12:43:33.811"></status>
</kw>
<msg timestamp="20201029 12:43:33.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.788" endtime="20201029 12:43:33.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.813" endtime="20201029 12:43:33.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.815" endtime="20201029 12:43:33.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.786" endtime="20201029 12:43:33.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.784" endtime="20201029 12:43:33.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.824" endtime="20201029 12:43:34.109"></status>
</kw>
<msg timestamp="20201029 12:43:34.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025546639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025552681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.823" endtime="20201029 12:43:34.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025546639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025552681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.114" endtime="20201029 12:43:34.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.122" endtime="20201029 12:43:34.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.820" endtime="20201029 12:43:34.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.818" endtime="20201029 12:43:34.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.128" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0979999999995205e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:34.125" endtime="20201029 12:43:34.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:34.132" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.124999999999187e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.055...</msg>
<status status="PASS" starttime="20201029 12:43:34.129" endtime="20201029 12:43:34.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.137" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:43:34.136" endtime="20201029 12:43:34.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.139" level="INFO">VALUE: [6.042000000001241e-06, 6.124999999999187e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.014000000002101e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055999999997341e-06, 5.999999999999062e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.012999999999158e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0979999999995205e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.0829999999970075e-06]</msg>
<status status="PASS" starttime="20201029 12:43:34.138" endtime="20201029 12:43:34.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.133" endtime="20201029 12:43:34.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.145" endtime="20201029 12:43:34.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.144" endtime="20201029 12:43:34.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.143" endtime="20201029 12:43:34.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.782" endtime="20201029 12:43:34.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.782" endtime="20201029 12:43:34.166"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.175" endtime="20201029 12:43:34.192"></status>
</kw>
<msg timestamp="20201029 12:43:34.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.173" endtime="20201029 12:43:34.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.193" endtime="20201029 12:43:34.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.196" endtime="20201029 12:43:34.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.170" endtime="20201029 12:43:34.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.168" endtime="20201029 12:43:34.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.205" endtime="20201029 12:43:34.489"></status>
</kw>
<msg timestamp="20201029 12:43:34.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.203" endtime="20201029 12:43:34.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022592222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.493" endtime="20201029 12:43:34.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.501" endtime="20201029 12:43:34.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.201" endtime="20201029 12:43:34.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.199" endtime="20201029 12:43:34.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.508" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.055000000001337e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:34.505" endtime="20201029 12:43:34.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:34.513" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.0419...</msg>
<status status="PASS" starttime="20201029 12:43:34.509" endtime="20201029 12:43:34.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.518" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:43:34.517" endtime="20201029 12:43:34.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.520" level="INFO">VALUE: [6.070000000000381e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.026999999998728e-06, 6.041000000001767e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.0139999999986316e-06, 6.0689999999974376e-06, 6.153000000001796e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.0829999999970075e-06, 5.999999999999062e-06, 6.056000000000811e-06, 6.070000000000381e-06, 5.9729999999993955e-06, 6.041000000001767e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.0139999999986316e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.0839999999999506e-06, 6.153000000001796e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201029 12:43:34.519" endtime="20201029 12:43:34.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.514" endtime="20201029 12:43:34.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.530" endtime="20201029 12:43:34.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.529" endtime="20201029 12:43:34.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.528" endtime="20201029 12:43:34.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.167" endtime="20201029 12:43:34.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.166" endtime="20201029 12:43:34.551"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.560" endtime="20201029 12:43:34.578"></status>
</kw>
<msg timestamp="20201029 12:43:34.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.558" endtime="20201029 12:43:34.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.580" endtime="20201029 12:43:34.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.582" endtime="20201029 12:43:34.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.556" endtime="20201029 12:43:34.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.554" endtime="20201029 12:43:34.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.591" endtime="20201029 12:43:34.877"></status>
</kw>
<msg timestamp="20201029 12:43:34.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024268653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.590" endtime="20201029 12:43:34.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024268653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024274736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.881" endtime="20201029 12:43:34.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.889" endtime="20201029 12:43:34.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.587" endtime="20201029 12:43:34.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.586" endtime="20201029 12:43:34.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.896" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0279999999982015e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:34.893" endtime="20201029 12:43:34.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:34.900" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6....</msg>
<status status="PASS" starttime="20201029 12:43:34.897" endtime="20201029 12:43:34.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.905" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:43:34.904" endtime="20201029 12:43:34.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.909" level="INFO">VALUE: [6.083000000000477e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.097000000000047e-06, 5.985999999999492e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201029 12:43:34.907" endtime="20201029 12:43:34.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.901" endtime="20201029 12:43:34.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.916" endtime="20201029 12:43:34.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.913" endtime="20201029 12:43:34.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.912" endtime="20201029 12:43:34.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.552" endtime="20201029 12:43:34.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.551" endtime="20201029 12:43:34.937"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.945" endtime="20201029 12:43:34.968"></status>
</kw>
<msg timestamp="20201029 12:43:34.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.944" endtime="20201029 12:43:34.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.969" endtime="20201029 12:43:34.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.972" endtime="20201029 12:43:34.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.941" endtime="20201029 12:43:34.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.939" endtime="20201029 12:43:34.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.981" endtime="20201029 12:43:35.265"></status>
</kw>
<msg timestamp="20201029 12:43:35.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.980" endtime="20201029 12:43:35.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025480833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025486875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.269" endtime="20201029 12:43:35.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.277" endtime="20201029 12:43:35.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.977" endtime="20201029 12:43:35.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.975" endtime="20201029 12:43:35.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.284" level="INFO">${RESULT} = [{'diff': 6.041999999997771e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.041999999997771e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:35.281" endtime="20201029 12:43:35.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:35.288" level="INFO">${ACCURACY} = {'diff': [6.041999999997771e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.028...</msg>
<status status="PASS" starttime="20201029 12:43:35.285" endtime="20201029 12:43:35.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.292" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:43:35.291" endtime="20201029 12:43:35.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.295" level="INFO">VALUE: [6.041999999997771e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.125000000002656e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.028000000001671e-06, 6.0829999999970075e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.0839999999999506e-06, 6.041999999997771e-06, 6.137999999999283e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201029 12:43:35.293" endtime="20201029 12:43:35.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.289" endtime="20201029 12:43:35.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.301" endtime="20201029 12:43:35.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.299" endtime="20201029 12:43:35.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.298" endtime="20201029 12:43:35.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.938" endtime="20201029 12:43:35.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.937" endtime="20201029 12:43:35.321"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.330" endtime="20201029 12:43:35.348"></status>
</kw>
<msg timestamp="20201029 12:43:35.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.328" endtime="20201029 12:43:35.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.349" endtime="20201029 12:43:35.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.352" endtime="20201029 12:43:35.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.326" endtime="20201029 12:43:35.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.324" endtime="20201029 12:43:35.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.361" endtime="20201029 12:43:35.645"></status>
</kw>
<msg timestamp="20201029 12:43:35.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.360" endtime="20201029 12:43:35.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.649" endtime="20201029 12:43:35.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.658" endtime="20201029 12:43:35.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.357" endtime="20201029 12:43:35.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.355" endtime="20201029 12:43:35.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.664" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.000000000002531e-06}, {'diff': 6.027000000002197e-06}, {'diff': 6.055999999997341e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:35.661" endtime="20201029 12:43:35.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:35.669" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.000000000002531e-06, 6.027000000002197e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.042...</msg>
<status status="PASS" starttime="20201029 12:43:35.665" endtime="20201029 12:43:35.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.674" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:43:35.673" endtime="20201029 12:43:35.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.676" level="INFO">VALUE: [6.042000000001241e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.000000000002531e-06, 6.027000000002197e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.153000000001796e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.0979999999995205e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.0279999999982015e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.055999999997341e-06, 6.0139999999986316e-06]</msg>
<status status="PASS" starttime="20201029 12:43:35.675" endtime="20201029 12:43:35.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.670" endtime="20201029 12:43:35.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.681" endtime="20201029 12:43:35.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.680" endtime="20201029 12:43:35.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.679" endtime="20201029 12:43:35.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.322" endtime="20201029 12:43:35.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.322" endtime="20201029 12:43:35.702"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.711" endtime="20201029 12:43:35.733"></status>
</kw>
<msg timestamp="20201029 12:43:35.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.709" endtime="20201029 12:43:35.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.734" endtime="20201029 12:43:35.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.737" endtime="20201029 12:43:35.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.707" endtime="20201029 12:43:35.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.705" endtime="20201029 12:43:35.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.746" endtime="20201029 12:43:36.034"></status>
</kw>
<msg timestamp="20201029 12:43:36.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023902861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.744" endtime="20201029 12:43:36.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023896778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023902861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.038" endtime="20201029 12:43:36.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.046" endtime="20201029 12:43:36.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.741" endtime="20201029 12:43:36.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.740" endtime="20201029 12:43:36.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.052" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.056000000000811e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:36.049" endtime="20201029 12:43:36.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:36.057" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0699...</msg>
<status status="PASS" starttime="20201029 12:43:36.053" endtime="20201029 12:43:36.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.061" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:43:36.060" endtime="20201029 12:43:36.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.064" level="INFO">VALUE: [6.083000000000477e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.0139999999986316e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.028000000001671e-06, 6.0279999999982015e-06, 6.0689999999974376e-06, 6.0979999999995205e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.014000000002101e-06, 5.987000000002435e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.026999999998728e-06, 6.054999999997868e-06, 6.0279999999982015e-06, 6.054999999997868e-06]</msg>
<status status="PASS" starttime="20201029 12:43:36.062" endtime="20201029 12:43:36.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.057" endtime="20201029 12:43:36.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.069" endtime="20201029 12:43:36.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.067" endtime="20201029 12:43:36.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.066" endtime="20201029 12:43:36.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.703" endtime="20201029 12:43:36.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.702" endtime="20201029 12:43:36.089"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.098" endtime="20201029 12:43:36.116"></status>
</kw>
<msg timestamp="20201029 12:43:36.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.097" endtime="20201029 12:43:36.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.117" endtime="20201029 12:43:36.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.120" endtime="20201029 12:43:36.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.094" endtime="20201029 12:43:36.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.092" endtime="20201029 12:43:36.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.129" endtime="20201029 12:43:36.415"></status>
</kw>
<msg timestamp="20201029 12:43:36.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023257333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.128" endtime="20201029 12:43:36.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023251292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023257333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.419" endtime="20201029 12:43:36.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.427" endtime="20201029 12:43:36.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.125" endtime="20201029 12:43:36.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.123" endtime="20201029 12:43:36.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.434" level="INFO">${RESULT} = [{'diff': 6.041000000001767e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.069000000000907e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:36.431" endtime="20201029 12:43:36.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:36.438" level="INFO">${ACCURACY} = {'diff': [6.041000000001767e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.028...</msg>
<status status="PASS" starttime="20201029 12:43:36.435" endtime="20201029 12:43:36.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.443" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:43:36.441" endtime="20201029 12:43:36.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.445" level="INFO">VALUE: [6.041000000001767e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.0689999999974376e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.070000000000381e-06, 6.0139999999986316e-06, 6.026999999998728e-06, 6.110999999999617e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.0279999999982015e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.040999999998298e-06, 6.054999999997868e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.139000000002226e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.055999999997341e-06]</msg>
<status status="PASS" starttime="20201029 12:43:36.444" endtime="20201029 12:43:36.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.439" endtime="20201029 12:43:36.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.451" endtime="20201029 12:43:36.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.449" endtime="20201029 12:43:36.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.448" endtime="20201029 12:43:36.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.090" endtime="20201029 12:43:36.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.090" endtime="20201029 12:43:36.471"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.480" endtime="20201029 12:43:36.497"></status>
</kw>
<msg timestamp="20201029 12:43:36.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.479" endtime="20201029 12:43:36.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.499" endtime="20201029 12:43:36.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.501" endtime="20201029 12:43:36.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.476" endtime="20201029 12:43:36.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.474" endtime="20201029 12:43:36.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.510" endtime="20201029 12:43:36.797"></status>
</kw>
<msg timestamp="20201029 12:43:36.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.509" endtime="20201029 12:43:36.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.802" endtime="20201029 12:43:36.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.811" endtime="20201029 12:43:36.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.506" endtime="20201029 12:43:36.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.505" endtime="20201029 12:43:36.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.819" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.083000000000477e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:36.816" endtime="20201029 12:43:36.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:36.828" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.0839999999999506e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.055...</msg>
<status status="PASS" starttime="20201029 12:43:36.820" endtime="20201029 12:43:36.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.833" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:43:36.831" endtime="20201029 12:43:36.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.835" level="INFO">VALUE: [6.042000000001241e-06, 6.041999999997771e-06, 6.040999999998298e-06, 6.0839999999999506e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.040999999998298e-06, 6.070000000000381e-06, 5.999999999999062e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.069999999996911e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.124999999999187e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.040999999998298e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201029 12:43:36.834" endtime="20201029 12:43:36.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.829" endtime="20201029 12:43:36.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.840" endtime="20201029 12:43:36.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.838" endtime="20201029 12:43:36.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.837" endtime="20201029 12:43:36.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.472" endtime="20201029 12:43:36.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.472" endtime="20201029 12:43:36.861"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.869" endtime="20201029 12:43:36.889"></status>
</kw>
<msg timestamp="20201029 12:43:36.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.868" endtime="20201029 12:43:36.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.891" endtime="20201029 12:43:36.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.893" endtime="20201029 12:43:36.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.865" endtime="20201029 12:43:36.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.863" endtime="20201029 12:43:36.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.902" endtime="20201029 12:43:37.188"></status>
</kw>
<msg timestamp="20201029 12:43:37.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.901" endtime="20201029 12:43:37.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.192" endtime="20201029 12:43:37.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.200" endtime="20201029 12:43:37.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.898" endtime="20201029 12:43:37.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.896" endtime="20201029 12:43:37.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.207" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.028000000001671e-06}, {'diff': 6.069000000000907e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:37.204" endtime="20201029 12:43:37.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:37.211" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.0549...</msg>
<status status="PASS" starttime="20201029 12:43:37.208" endtime="20201029 12:43:37.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.215" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:43:37.214" endtime="20201029 12:43:37.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.218" level="INFO">VALUE: [6.042000000001241e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.069999999996911e-06, 6.11200000000256e-06, 6.028000000001671e-06, 6.0839999999999506e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.026999999998728e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.070000000000381e-06, 5.999999999999062e-06, 5.971999999999922e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.026999999998728e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.1389999999987566e-06, 6.0279999999982015e-06, 6.042000000001241e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201029 12:43:37.216" endtime="20201029 12:43:37.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.212" endtime="20201029 12:43:37.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.223" endtime="20201029 12:43:37.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.221" endtime="20201029 12:43:37.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.220" endtime="20201029 12:43:37.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.862" endtime="20201029 12:43:37.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.861" endtime="20201029 12:43:37.244"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.252" endtime="20201029 12:43:37.272"></status>
</kw>
<msg timestamp="20201029 12:43:37.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.251" endtime="20201029 12:43:37.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.273" endtime="20201029 12:43:37.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.276" endtime="20201029 12:43:37.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.248" endtime="20201029 12:43:37.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.246" endtime="20201029 12:43:37.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.285" endtime="20201029 12:43:37.569"></status>
</kw>
<msg timestamp="20201029 12:43:37.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024507181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.283" endtime="20201029 12:43:37.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024501097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024507181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.573" endtime="20201029 12:43:37.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.582" endtime="20201029 12:43:37.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.281" endtime="20201029 12:43:37.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.279" endtime="20201029 12:43:37.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.588" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.069000000000907e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:37.585" endtime="20201029 12:43:37.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:37.592" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.069999999996911e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.069...</msg>
<status status="PASS" starttime="20201029 12:43:37.589" endtime="20201029 12:43:37.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.597" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:43:37.596" endtime="20201029 12:43:37.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.599" level="INFO">VALUE: [6.0839999999999506e-06, 6.069999999996911e-06, 6.041999999997771e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.069000000000907e-06, 5.985999999999492e-06, 6.070000000000381e-06, 6.056000000000811e-06, 5.985999999999492e-06, 6.0829999999970075e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.012999999999158e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.027000000002197e-06, 6.055000000001337e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.0829999999970075e-06, 6.028000000001671e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.028000000001671e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.124999999999187e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201029 12:43:37.598" endtime="20201029 12:43:37.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.593" endtime="20201029 12:43:37.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.605" endtime="20201029 12:43:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.604" endtime="20201029 12:43:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.602" endtime="20201029 12:43:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.245" endtime="20201029 12:43:37.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.244" endtime="20201029 12:43:37.626"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.635" endtime="20201029 12:43:37.653"></status>
</kw>
<msg timestamp="20201029 12:43:37.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.633" endtime="20201029 12:43:37.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.655" endtime="20201029 12:43:37.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.657" endtime="20201029 12:43:37.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.630" endtime="20201029 12:43:37.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.628" endtime="20201029 12:43:37.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.666" endtime="20201029 12:43:37.952"></status>
</kw>
<msg timestamp="20201029 12:43:37.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024124514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.665" endtime="20201029 12:43:37.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024124514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024130556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.956" endtime="20201029 12:43:37.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.964" endtime="20201029 12:43:37.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.662" endtime="20201029 12:43:37.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.660" endtime="20201029 12:43:37.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.971" level="INFO">${RESULT} = [{'diff': 6.042000000001241e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.054999999997868e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:37.968" endtime="20201029 12:43:37.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:37.976" level="INFO">${ACCURACY} = {'diff': [6.042000000001241e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.041...</msg>
<status status="PASS" starttime="20201029 12:43:37.972" endtime="20201029 12:43:37.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.981" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:43:37.980" endtime="20201029 12:43:37.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.983" level="INFO">VALUE: [6.042000000001241e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.041000000001767e-06, 6.040999999998298e-06, 6.041000000001767e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.013000000002627e-06, 6.040999999998298e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.111000000003086e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.014000000002101e-06, 6.054999999997868e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.0139999999986316e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.0139999999986316e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.042000000001241e-06, 6.0979999999995205e-06]</msg>
<status status="PASS" starttime="20201029 12:43:37.982" endtime="20201029 12:43:37.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.977" endtime="20201029 12:43:37.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.988" endtime="20201029 12:43:38.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.987" endtime="20201029 12:43:38.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.985" endtime="20201029 12:43:38.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.627" endtime="20201029 12:43:38.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.626" endtime="20201029 12:43:38.009"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.018" endtime="20201029 12:43:38.040"></status>
</kw>
<msg timestamp="20201029 12:43:38.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.016" endtime="20201029 12:43:38.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.041" endtime="20201029 12:43:38.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.044" endtime="20201029 12:43:38.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.014" endtime="20201029 12:43:38.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.011" endtime="20201029 12:43:38.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.053" endtime="20201029 12:43:38.340"></status>
</kw>
<msg timestamp="20201029 12:43:38.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.051" endtime="20201029 12:43:38.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.345" endtime="20201029 12:43:38.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.353" endtime="20201029 12:43:38.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.049" endtime="20201029 12:43:38.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.047" endtime="20201029 12:43:38.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.359" level="INFO">${RESULT} = [{'diff': 2.9874999999998653e-05}, {'diff': 2.4249999999999966e-05}, {'diff': 1.938899999999813e-05}, {'diff': 2.043100000000131e-05}, {'diff': 2.2290999999997202e-05}, {'diff': 2.612500000000184e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:38.356" endtime="20201029 12:43:38.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:38.364" level="INFO">${ACCURACY} = {'diff': [2.9874999999998653e-05, 2.4249999999999966e-05, 1.938899999999813e-05, 2.043100000000131e-05, 2.2290999999997202e-05, 2.612500000000184e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:38.360" endtime="20201029 12:43:38.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.368" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:43:38.367" endtime="20201029 12:43:38.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.370" level="INFO">VALUE: [2.9874999999998653e-05, 2.4249999999999966e-05, 1.938899999999813e-05, 2.043100000000131e-05, 2.2290999999997202e-05, 2.612500000000184e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.1277999999999575e-05, 2.037499999999956e-05, 2.519499999999869e-05, 2.037499999999956e-05, 2.1334000000001324e-05, 1.94029999999977e-05, 2.3236000000002865e-05, 1.940300000000117e-05, 2.513900000000041e-05, 2.4193999999998217e-05, 2.4236000000000396e-05, 2.234700000000242e-05, 2.512499999999737e-05, 1.9402000000001696e-05, 2.037500000000303e-05, 2.419500000000116e-05, 2.4180000000002116e-05, 2.520899999999826e-05, 2.2319999999999285e-05, 2.1235999999997396e-05, 2.3221999999999826e-05, 2.133300000000185e-05, 1.9416000000001266e-05, 2.5179999999999647e-05, 1.945899999999945e-05, 2.033299999999738e-05, 2.518099999999912e-05, 2.131899999999881e-05, 1.9430000000000835e-05, 2.5138000000000937e-05, 2.1305999999998715e-05, 1.93890000000016e-05, 2.2305999999999715e-05, 2.6098000000002175e-05, 2.515299999999998e-05, 2.3208000000000256e-05, 2.5137999999997468e-05, 2.3221999999999826e-05, 2.037499999999956e-05, 2.4306000000001715e-05, 1.937499999999856e-05, 2.133299999999838e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.369" endtime="20201029 12:43:38.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.364" endtime="20201029 12:43:38.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.376" endtime="20201029 12:43:38.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.374" endtime="20201029 12:43:38.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.373" endtime="20201029 12:43:38.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.010" endtime="20201029 12:43:38.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.009" endtime="20201029 12:43:38.396"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.406" endtime="20201029 12:43:38.423"></status>
</kw>
<msg timestamp="20201029 12:43:38.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.404" endtime="20201029 12:43:38.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.425" endtime="20201029 12:43:38.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.427" endtime="20201029 12:43:38.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.401" endtime="20201029 12:43:38.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.399" endtime="20201029 12:43:38.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.436" endtime="20201029 12:43:38.723"></status>
</kw>
<msg timestamp="20201029 12:43:38.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.435" endtime="20201029 12:43:38.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022255528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.727" endtime="20201029 12:43:38.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.735" endtime="20201029 12:43:38.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.432" endtime="20201029 12:43:38.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.430" endtime="20201029 12:43:38.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.742" level="INFO">${RESULT} = [{'diff': 1.1764000000000913e-05}, {'diff': 2.1347999999997425e-05}, {'diff': 2.14029999999997e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.033300000000085e-05}, {'diff': 2.5083999999998136e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:38.738" endtime="20201029 12:43:38.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:38.746" level="INFO">${ACCURACY} = {'diff': [1.1764000000000913e-05, 2.1347999999997425e-05, 2.14029999999997e-05, 2.3278000000001575e-05, 2.033300000000085e-05, 2.5083999999998136e-05, 2.0347999999999894e-05, 2.2277999999997106e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:38.743" endtime="20201029 12:43:38.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.750" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:43:38.749" endtime="20201029 12:43:38.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.753" level="INFO">VALUE: [1.1764000000000913e-05, 2.1347999999997425e-05, 2.14029999999997e-05, 2.3278000000001575e-05, 2.033300000000085e-05, 2.5083999999998136e-05, 2.0347999999999894e-05, 2.2277999999997106e-05, 2.133299999999838e-05, 2.418100000000159e-05, 2.036099999999999e-05, 2.4208000000001256e-05, 2.1305999999998715e-05, 2.320899999999973e-05, 2.144499999999841e-05, 2.2319999999999285e-05, 2.2250000000001435e-05, 2.3221999999999826e-05, 2.134699999999795e-05, 2.0458000000000975e-05, 2.2278000000000575e-05, 2.3249999999998966e-05, 2.2235999999998396e-05, 2.1415999999999796e-05, 2.413899999999941e-05, 2.413899999999941e-05, 2.1305999999998715e-05, 2.3208000000000256e-05, 2.4208000000001256e-05, 2.615299999999751e-05, 2.129099999999967e-05, 2.037499999999956e-05, 2.231899999999981e-05, 2.3207999999996787e-05, 2.4222000000000826e-05, 1.943100000000031e-05, 1.9430000000000835e-05, 2.4166000000002547e-05, 2.3249999999998966e-05, 2.5166000000000077e-05, 2.42230000000003e-05, 2.233300000000285e-05, 2.3221999999999826e-05, 2.6110999999998802e-05, 2.3221999999999826e-05, 2.512499999999737e-05, 2.329100000000167e-05, 1.945900000000292e-05, 2.2264000000001005e-05, 2.4165999999999077e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.751" endtime="20201029 12:43:38.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.747" endtime="20201029 12:43:38.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.759" endtime="20201029 12:43:38.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.757" endtime="20201029 12:43:38.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.756" endtime="20201029 12:43:38.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.397" endtime="20201029 12:43:38.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.397" endtime="20201029 12:43:38.779"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.789" endtime="20201029 12:43:38.810"></status>
</kw>
<msg timestamp="20201029 12:43:38.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.787" endtime="20201029 12:43:38.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.811" endtime="20201029 12:43:38.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.814" endtime="20201029 12:43:38.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.784" endtime="20201029 12:43:38.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.782" endtime="20201029 12:43:38.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.823" endtime="20201029 12:43:39.107"></status>
</kw>
<msg timestamp="20201029 12:43:39.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026284292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026291292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.821" endtime="20201029 12:43:39.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026284292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026291292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.111" endtime="20201029 12:43:39.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.119" endtime="20201029 12:43:39.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.819" endtime="20201029 12:43:39.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.817" endtime="20201029 12:43:39.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.126" level="INFO">${RESULT} = [{'diff': 7.000000000000062e-06}, {'diff': 2.4236000000000396e-05}, {'diff': 2.3277999999998106e-05}, {'diff': 2.22770000000011e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.6070000000003035e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:39.123" endtime="20201029 12:43:39.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.131" level="INFO">${ACCURACY} = {'diff': [7.000000000000062e-06, 2.4236000000000396e-05, 2.3277999999998106e-05, 2.22770000000011e-05, 2.518099999999912e-05, 2.6070000000003035e-05, 2.2250000000001435e-05, 2.2236000000001865e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:39.127" endtime="20201029 12:43:39.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.136" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.135" endtime="20201029 12:43:39.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.138" level="INFO">VALUE: [7.000000000000062e-06, 2.4236000000000396e-05, 2.3277999999998106e-05, 2.22770000000011e-05, 2.518099999999912e-05, 2.6070000000003035e-05, 2.2250000000001435e-05, 2.2236000000001865e-05, 1.944499999999988e-05, 2.5193999999999217e-05, 2.1306000000002184e-05, 2.2319999999999285e-05, 1.934699999999942e-05, 1.941699999999727e-05, 2.3249999999998966e-05, 2.516699999999955e-05, 2.2277999999997106e-05, 2.512500000000084e-05, 2.3208000000000256e-05, 2.6069999999999566e-05, 2.131900000000228e-05, 2.04029999999987e-05, 2.516699999999955e-05, 2.034700000000042e-05, 2.134700000000142e-05, 2.04029999999987e-05, 2.2278000000000575e-05, 2.4208000000001256e-05, 1.94029999999977e-05, 1.9416000000001266e-05, 2.6082999999999662e-05, 2.0361999999999464e-05, 2.513900000000041e-05, 2.133300000000185e-05, 2.411100000000027e-05, 2.3193999999997217e-05, 2.037499999999956e-05, 2.043099999999784e-05, 2.3221999999999826e-05, 2.134699999999795e-05, 2.2235999999998396e-05, 1.9457999999999975e-05, 2.513899999999694e-05, 2.1320000000001754e-05, 2.6098000000002175e-05, 2.3263999999998536e-05, 2.041700000000174e-05, 2.0291999999998145e-05, 2.416699999999855e-05, 1.938899999999813e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.137" endtime="20201029 12:43:39.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.132" endtime="20201029 12:43:39.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.143" endtime="20201029 12:43:39.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.141" endtime="20201029 12:43:39.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.140" endtime="20201029 12:43:39.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.780" endtime="20201029 12:43:39.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.780" endtime="20201029 12:43:39.164"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.173" endtime="20201029 12:43:39.193"></status>
</kw>
<msg timestamp="20201029 12:43:39.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.171" endtime="20201029 12:43:39.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.194" endtime="20201029 12:43:39.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.197" endtime="20201029 12:43:39.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.169" endtime="20201029 12:43:39.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.166" endtime="20201029 12:43:39.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.210" endtime="20201029 12:43:39.497"></status>
</kw>
<msg timestamp="20201029 12:43:39.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02356175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:39.208" endtime="20201029 12:43:39.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02356175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023582153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:39.501" endtime="20201029 12:43:39.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.509" endtime="20201029 12:43:39.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.204" endtime="20201029 12:43:39.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.202" endtime="20201029 12:43:39.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.516" level="INFO">${RESULT} = [{'diff': 2.040300000000217e-05}, {'diff': 2.6166000000001077e-05}, {'diff': 2.4179999999998647e-05}, {'diff': 2.036099999999999e-05}, {'diff': 1.947300000000249e-05}, {'diff': 2.3333999999999855e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:39.512" endtime="20201029 12:43:39.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.520" level="INFO">${ACCURACY} = {'diff': [2.040300000000217e-05, 2.6166000000001077e-05, 2.4179999999998647e-05, 2.036099999999999e-05, 1.947300000000249e-05, 2.3333999999999855e-05, 2.2235999999998396e-05, 2.608300000000313e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:39.517" endtime="20201029 12:43:39.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.524" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.523" endtime="20201029 12:43:39.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.527" level="INFO">VALUE: [2.040300000000217e-05, 2.6166000000001077e-05, 2.4179999999998647e-05, 2.036099999999999e-05, 1.947300000000249e-05, 2.3333999999999855e-05, 2.2235999999998396e-05, 2.608300000000313e-05, 2.3263999999998536e-05, 2.416699999999855e-05, 2.512499999999737e-05, 2.131899999999881e-05, 2.041700000000174e-05, 2.041699999999827e-05, 2.6096999999999232e-05, 2.133299999999838e-05, 1.94029999999977e-05, 2.2319999999999285e-05, 2.513900000000041e-05, 1.940300000000117e-05, 2.6180000000000647e-05, 2.2305999999999715e-05, 2.512500000000084e-05, 2.034700000000042e-05, 2.5082999999998662e-05, 2.415300000000245e-05, 2.2334000000002324e-05, 2.4222000000000826e-05, 2.033300000000085e-05, 2.134699999999795e-05, 1.941699999999727e-05, 1.943100000000031e-05, 2.4194000000001686e-05, 2.2278000000000575e-05, 2.2250000000001435e-05, 2.1305999999998715e-05, 2.4236000000000396e-05, 2.1348000000000894e-05, 2.3276999999998632e-05, 2.230500000000024e-05, 2.133299999999838e-05, 2.413899999999941e-05, 2.3263999999998536e-05, 2.037500000000303e-05, 2.512500000000084e-05, 2.50970000000017e-05, 2.2319999999999285e-05, 2.3235999999999396e-05, 2.036099999999999e-05, 2.3249999999998966e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.525" endtime="20201029 12:43:39.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.521" endtime="20201029 12:43:39.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.535" endtime="20201029 12:43:39.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.534" endtime="20201029 12:43:39.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.533" endtime="20201029 12:43:39.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.165" endtime="20201029 12:43:39.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.164" endtime="20201029 12:43:39.556"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.565" endtime="20201029 12:43:39.583"></status>
</kw>
<msg timestamp="20201029 12:43:39.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.563" endtime="20201029 12:43:39.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.585" endtime="20201029 12:43:39.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.587" endtime="20201029 12:43:39.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.561" endtime="20201029 12:43:39.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.559" endtime="20201029 12:43:39.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.596" endtime="20201029 12:43:39.882"></status>
</kw>
<msg timestamp="20201029 12:43:39.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:39.595" endtime="20201029 12:43:39.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023038181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:39.886" endtime="20201029 12:43:39.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.895" endtime="20201029 12:43:39.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.592" endtime="20201029 12:43:39.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.590" endtime="20201029 12:43:39.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.901" level="INFO">${RESULT} = [{'diff': 3.0818999999997904e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.419500000000116e-05}, {'diff': 2.2276999999997632e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.416700000000202e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:39.898" endtime="20201029 12:43:39.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.905" level="INFO">${ACCURACY} = {'diff': [3.0818999999997904e-05, 2.1264000000000005e-05, 2.419500000000116e-05, 2.2276999999997632e-05, 2.034700000000042e-05, 2.416700000000202e-05, 2.04029999999987e-05, 2.3249999999998966e-05, 1.9...</msg>
<status status="PASS" starttime="20201029 12:43:39.902" endtime="20201029 12:43:39.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.910" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.909" endtime="20201029 12:43:39.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.912" level="INFO">VALUE: [3.0818999999997904e-05, 2.1264000000000005e-05, 2.419500000000116e-05, 2.2276999999997632e-05, 2.034700000000042e-05, 2.416700000000202e-05, 2.04029999999987e-05, 2.3249999999998966e-05, 1.9430000000000835e-05, 2.03890000000026e-05, 2.136099999999752e-05, 2.4236000000000396e-05, 2.138900000000013e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.4222000000000826e-05, 2.3263999999998536e-05, 2.4222000000000826e-05, 2.4208000000001256e-05, 2.32229999999993e-05, 2.5082999999998662e-05, 1.941700000000074e-05, 2.6069000000000092e-05, 1.94029999999977e-05, 2.5179999999999647e-05, 1.9430000000000835e-05, 2.038899999999913e-05, 2.4222000000000826e-05, 1.944499999999988e-05, 2.233299999999938e-05, 2.513900000000041e-05, 2.036099999999999e-05, 1.9430000000000835e-05, 2.515299999999998e-05, 2.033300000000085e-05, 2.50970000000017e-05, 2.613900000000141e-05, 2.133299999999838e-05, 2.613899999999794e-05, 2.3249999999998966e-05, 2.223700000000134e-05, 2.1250000000000435e-05, 2.5278000000000106e-05, 2.5179999999999647e-05, 2.3235999999999396e-05, 2.6096999999999232e-05, 2.5207999999998787e-05, 1.9429999999997366e-05, 2.037500000000303e-05, 2.4208000000001256e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.911" endtime="20201029 12:43:39.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.906" endtime="20201029 12:43:39.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.918" endtime="20201029 12:43:39.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.917" endtime="20201029 12:43:39.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.915" endtime="20201029 12:43:39.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.557" endtime="20201029 12:43:39.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.557" endtime="20201029 12:43:39.939"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.947" endtime="20201029 12:43:39.965"></status>
</kw>
<msg timestamp="20201029 12:43:39.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.946" endtime="20201029 12:43:39.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.966" endtime="20201029 12:43:39.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.969" endtime="20201029 12:43:39.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.943" endtime="20201029 12:43:39.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.941" endtime="20201029 12:43:39.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.978" endtime="20201029 12:43:40.264"></status>
</kw>
<msg timestamp="20201029 12:43:40.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.976" endtime="20201029 12:43:40.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.268" endtime="20201029 12:43:40.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.276" endtime="20201029 12:43:40.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.974" endtime="20201029 12:43:40.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.972" endtime="20201029 12:43:40.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.283" level="INFO">${RESULT} = [{'diff': 2.2278000000000575e-05}, {'diff': 2.3264000000002005e-05}, {'diff': 2.136099999999752e-05}, {'diff': 2.5193999999999217e-05}, {'diff': 2.6083999999999136e-05}, {'diff': 2.319500000000016e-05...</msg>
<status status="PASS" starttime="20201029 12:43:40.279" endtime="20201029 12:43:40.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:40.290" level="INFO">${ACCURACY} = {'diff': [2.2278000000000575e-05, 2.3264000000002005e-05, 2.136099999999752e-05, 2.5193999999999217e-05, 2.6083999999999136e-05, 2.319500000000016e-05, 1.9457999999999975e-05, 2.038899999999913e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:40.284" endtime="20201029 12:43:40.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.295" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:43:40.294" endtime="20201029 12:43:40.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.297" level="INFO">VALUE: [2.2278000000000575e-05, 2.3264000000002005e-05, 2.136099999999752e-05, 2.5193999999999217e-05, 2.6083999999999136e-05, 2.319500000000016e-05, 1.9457999999999975e-05, 2.038899999999913e-05, 2.2292000000000145e-05, 2.613899999999794e-05, 2.4249999999999966e-05, 2.4236000000000396e-05, 2.037499999999956e-05, 2.5096999999998232e-05, 2.5193999999999217e-05, 2.3278000000001575e-05, 2.131900000000228e-05, 2.131900000000228e-05, 2.3221999999999826e-05, 2.2249999999997966e-05, 2.2278000000000575e-05, 2.2388000000001657e-05, 2.2263999999997536e-05, 2.1277999999999575e-05, 2.2292000000000145e-05, 2.0458000000000975e-05, 2.036099999999999e-05, 2.0347999999999894e-05, 2.041700000000174e-05, 2.519499999999869e-05, 2.3291999999997676e-05, 2.231899999999981e-05, 2.4236000000000396e-05, 2.037499999999956e-05, 2.511100000000127e-05, 2.131899999999881e-05, 2.5138000000000937e-05, 2.130500000000271e-05, 2.1320000000001754e-05, 2.3193999999997217e-05, 2.3277999999998106e-05, 2.134700000000142e-05, 2.2263999999997536e-05, 2.320899999999973e-05, 2.4236000000000396e-05, 2.3347999999999425e-05, 2.040300000000217e-05, 2.230500000000024e-05, 2.5110999999997802e-05, 2.5138000000000937e-05]</msg>
<status status="PASS" starttime="20201029 12:43:40.296" endtime="20201029 12:43:40.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.291" endtime="20201029 12:43:40.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.302" endtime="20201029 12:43:40.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.301" endtime="20201029 12:43:40.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.299" endtime="20201029 12:43:40.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.940" endtime="20201029 12:43:40.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.939" endtime="20201029 12:43:40.323"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.332" endtime="20201029 12:43:40.353"></status>
</kw>
<msg timestamp="20201029 12:43:40.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.330" endtime="20201029 12:43:40.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.354" endtime="20201029 12:43:40.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.357" endtime="20201029 12:43:40.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.328" endtime="20201029 12:43:40.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.325" endtime="20201029 12:43:40.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.366" endtime="20201029 12:43:40.652"></status>
</kw>
<msg timestamp="20201029 12:43:40.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025051681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025067278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.364" endtime="20201029 12:43:40.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025051681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025067278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.657" endtime="20201029 12:43:40.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.665" endtime="20201029 12:43:40.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.362" endtime="20201029 12:43:40.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.360" endtime="20201029 12:43:40.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.671" level="INFO">${RESULT} = [{'diff': 1.559699999999914e-05}, {'diff': 2.515299999999998e-05}, {'diff': 2.4249999999999966e-05}, {'diff': 2.516699999999955e-05}, {'diff': 2.1333999999997855e-05}, {'diff': 2.037499999999956e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:40.668" endtime="20201029 12:43:40.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:40.676" level="INFO">${ACCURACY} = {'diff': [1.559699999999914e-05, 2.515299999999998e-05, 2.4249999999999966e-05, 2.516699999999955e-05, 2.1333999999997855e-05, 2.037499999999956e-05, 2.14029999999997e-05, 2.2292000000000145e-05, 2.32...</msg>
<status status="PASS" starttime="20201029 12:43:40.672" endtime="20201029 12:43:40.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.680" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:43:40.679" endtime="20201029 12:43:40.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.683" level="INFO">VALUE: [1.559699999999914e-05, 2.515299999999998e-05, 2.4249999999999966e-05, 2.516699999999955e-05, 2.1333999999997855e-05, 2.037499999999956e-05, 2.14029999999997e-05, 2.2292000000000145e-05, 2.3221999999999826e-05, 1.9388000000002126e-05, 2.1277999999999575e-05, 2.036099999999999e-05, 2.3264000000002005e-05, 2.136100000000099e-05, 2.4179999999998647e-05, 2.1320000000001754e-05, 2.3221999999999826e-05, 2.415299999999898e-05, 2.2292000000000145e-05, 2.5179999999999647e-05, 2.034700000000042e-05, 2.130499999999924e-05, 2.130499999999924e-05, 2.3249999999998966e-05, 2.0347999999999894e-05, 2.5166000000000077e-05, 2.4236000000000396e-05, 2.3235999999999396e-05, 2.416699999999855e-05, 2.518099999999912e-05, 2.230500000000024e-05, 2.420900000000073e-05, 2.036099999999999e-05, 2.036099999999999e-05, 2.5194000000002686e-05, 2.037499999999956e-05, 2.5110999999997802e-05, 2.420900000000073e-05, 2.134700000000142e-05, 2.2263999999997536e-05, 1.93890000000016e-05, 1.9415999999997796e-05, 2.5222000000001826e-05, 2.518099999999912e-05, 2.1250000000000435e-05, 1.940300000000117e-05, 2.131899999999881e-05, 2.14029999999997e-05, 2.4236000000000396e-05, 1.940300000000117e-05]</msg>
<status status="PASS" starttime="20201029 12:43:40.681" endtime="20201029 12:43:40.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.677" endtime="20201029 12:43:40.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.688" endtime="20201029 12:43:40.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.686" endtime="20201029 12:43:40.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.685" endtime="20201029 12:43:40.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.324" endtime="20201029 12:43:40.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.323" endtime="20201029 12:43:40.708"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.717" endtime="20201029 12:43:40.733"></status>
</kw>
<msg timestamp="20201029 12:43:40.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.716" endtime="20201029 12:43:40.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.735" endtime="20201029 12:43:40.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.737" endtime="20201029 12:43:40.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.713" endtime="20201029 12:43:40.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.711" endtime="20201029 12:43:40.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.746" endtime="20201029 12:43:41.032"></status>
</kw>
<msg timestamp="20201029 12:43:41.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021346514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02138125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:40.745" endtime="20201029 12:43:41.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021346514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02138125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:41.036" endtime="20201029 12:43:41.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.045" endtime="20201029 12:43:41.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.742" endtime="20201029 12:43:41.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.740" endtime="20201029 12:43:41.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.051" level="INFO">${RESULT} = [{'diff': 3.473600000000049e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.037499999999956e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:41.048" endtime="20201029 12:43:41.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.055" level="INFO">${ACCURACY} = {'diff': [3.473600000000049e-05, 2.3235999999999396e-05, 2.2278000000000575e-05, 2.036099999999999e-05, 2.3235999999999396e-05, 2.037499999999956e-05, 2.134700000000142e-05, 2.038899999999913e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 12:43:41.052" endtime="20201029 12:43:41.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.060" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.059" endtime="20201029 12:43:41.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.062" level="INFO">VALUE: [3.473600000000049e-05, 2.3235999999999396e-05, 2.2278000000000575e-05, 2.036099999999999e-05, 2.3235999999999396e-05, 2.037499999999956e-05, 2.134700000000142e-05, 2.038899999999913e-05, 2.513900000000041e-05, 1.940300000000117e-05, 2.4208000000001256e-05, 2.134700000000142e-05, 2.3250000000002435e-05, 1.9402000000001696e-05, 2.516699999999955e-05, 2.3221999999999826e-05, 1.933299999999985e-05, 1.943100000000031e-05, 2.040300000000217e-05, 2.3320000000000285e-05, 2.616700000000055e-05, 2.516699999999955e-05, 2.3235999999999396e-05, 2.136100000000099e-05, 2.137500000000056e-05, 2.2292000000000145e-05, 1.9387999999998656e-05, 2.12770000000001e-05, 2.418099999999812e-05, 2.043100000000131e-05, 2.5112000000000745e-05, 2.3208000000000256e-05, 1.9430000000000835e-05, 2.138900000000013e-05, 2.4249999999999966e-05, 2.5180000000003117e-05, 2.040300000000217e-05, 2.42230000000003e-05, 1.943100000000031e-05, 2.4179999999998647e-05, 2.418099999999812e-05, 2.415299999999898e-05, 2.2264000000001005e-05, 1.9457999999999975e-05, 2.2278000000000575e-05, 2.42230000000003e-05, 2.3264000000002005e-05, 2.4236000000000396e-05, 2.419500000000116e-05, 1.941700000000074e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.061" endtime="20201029 12:43:41.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.056" endtime="20201029 12:43:41.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.068" endtime="20201029 12:43:41.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.067" endtime="20201029 12:43:41.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.065" endtime="20201029 12:43:41.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.709" endtime="20201029 12:43:41.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.709" endtime="20201029 12:43:41.089"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.097" endtime="20201029 12:43:41.118"></status>
</kw>
<msg timestamp="20201029 12:43:41.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.096" endtime="20201029 12:43:41.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.119" endtime="20201029 12:43:41.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.122" endtime="20201029 12:43:41.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.093" endtime="20201029 12:43:41.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.091" endtime="20201029 12:43:41.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.131" endtime="20201029 12:43:41.416"></status>
</kw>
<msg timestamp="20201029 12:43:41.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.129" endtime="20201029 12:43:41.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.420" endtime="20201029 12:43:41.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.429" endtime="20201029 12:43:41.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.127" endtime="20201029 12:43:41.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.125" endtime="20201029 12:43:41.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.435" level="INFO">${RESULT} = [{'diff': 2.2278000000000575e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.4221999999997357e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.134700000000142e-05}, {'diff': 2.3250000000002435e-0...</msg>
<status status="PASS" starttime="20201029 12:43:41.432" endtime="20201029 12:43:41.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.440" level="INFO">${ACCURACY} = {'diff': [2.2278000000000575e-05, 2.3235999999999396e-05, 2.4221999999997357e-05, 2.3263999999998536e-05, 2.134700000000142e-05, 2.3250000000002435e-05, 1.94029999999977e-05, 2.04029999999987e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 12:43:41.436" endtime="20201029 12:43:41.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.445" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.444" endtime="20201029 12:43:41.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.448" level="INFO">VALUE: [2.2278000000000575e-05, 2.3235999999999396e-05, 2.4221999999997357e-05, 2.3263999999998536e-05, 2.134700000000142e-05, 2.3250000000002435e-05, 1.94029999999977e-05, 2.04029999999987e-05, 2.141699999999927e-05, 2.412499999999984e-05, 2.418099999999812e-05, 2.2278000000000575e-05, 2.3263999999998536e-05, 2.136100000000099e-05, 2.4208000000001256e-05, 2.4194000000001686e-05, 2.231899999999981e-05, 2.3249999999998966e-05, 2.1320000000001754e-05, 2.134699999999795e-05, 2.1319999999998285e-05, 2.2292000000000145e-05, 2.418100000000159e-05, 2.2304999999996772e-05, 1.9347999999998894e-05, 2.040300000000217e-05, 1.9457999999999975e-05, 1.941699999999727e-05, 2.043099999999784e-05, 2.041700000000174e-05, 2.137499999999709e-05, 2.518100000000259e-05, 2.4249999999999966e-05, 2.420900000000073e-05, 2.5166000000000077e-05, 2.04029999999987e-05, 2.413900000000288e-05, 2.1334000000001324e-05, 2.613900000000141e-05, 1.943100000000031e-05, 2.230500000000024e-05, 2.2249999999997966e-05, 1.938899999999813e-05, 2.041700000000174e-05, 2.4208000000001256e-05, 2.03890000000026e-05, 2.1319999999998285e-05, 2.5166000000000077e-05, 2.516699999999955e-05, 2.4194000000001686e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.446" endtime="20201029 12:43:41.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.441" endtime="20201029 12:43:41.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.453" endtime="20201029 12:43:41.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.452" endtime="20201029 12:43:41.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.450" endtime="20201029 12:43:41.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.090" endtime="20201029 12:43:41.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.089" endtime="20201029 12:43:41.474"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.483" endtime="20201029 12:43:41.502"></status>
</kw>
<msg timestamp="20201029 12:43:41.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.482" endtime="20201029 12:43:41.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.504" endtime="20201029 12:43:41.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.507" endtime="20201029 12:43:41.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.479" endtime="20201029 12:43:41.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.477" endtime="20201029 12:43:41.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.516" endtime="20201029 12:43:41.803"></status>
</kw>
<msg timestamp="20201029 12:43:41.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02420425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024234167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:41.514" endtime="20201029 12:43:41.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02420425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024234167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:41.807" endtime="20201029 12:43:41.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.815" endtime="20201029 12:43:41.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.511" endtime="20201029 12:43:41.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.510" endtime="20201029 12:43:41.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.821" level="INFO">${RESULT} = [{'diff': 2.9917000000000832e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.415299999999898e-05}, {'diff': 2.4083999999997135e-05}, {'diff': 2.0387999999999656e-05}, {'diff': 2.3263999999998536e-0...</msg>
<status status="PASS" starttime="20201029 12:43:41.818" endtime="20201029 12:43:41.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.826" level="INFO">${ACCURACY} = {'diff': [2.9917000000000832e-05, 2.2250000000001435e-05, 2.415299999999898e-05, 2.4083999999997135e-05, 2.0387999999999656e-05, 2.3263999999998536e-05, 1.934699999999942e-05, 2.516700000000302e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:41.822" endtime="20201029 12:43:41.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.830" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.829" endtime="20201029 12:43:41.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.833" level="INFO">VALUE: [2.9917000000000832e-05, 2.2250000000001435e-05, 2.415299999999898e-05, 2.4083999999997135e-05, 2.0387999999999656e-05, 2.3263999999998536e-05, 1.934699999999942e-05, 2.516700000000302e-05, 2.4222000000000826e-05, 2.4249999999999966e-05, 2.4151999999999507e-05, 2.513899999999694e-05, 1.944499999999988e-05, 1.943100000000031e-05, 2.4111999999999745e-05, 2.418099999999812e-05, 2.038899999999913e-05, 1.9457999999999975e-05, 2.4222000000000826e-05, 2.3221999999999826e-05, 2.32090000000032e-05, 2.2235999999998396e-05, 2.136100000000099e-05, 2.3264000000002005e-05, 2.2305999999999715e-05, 2.3208000000000256e-05, 2.137500000000056e-05, 2.130500000000271e-05, 2.0362000000002933e-05, 2.4208000000001256e-05, 2.516699999999955e-05, 2.2278000000000575e-05, 2.4291999999998676e-05, 2.2320000000002754e-05, 2.133299999999838e-05, 1.940300000000117e-05, 2.133299999999838e-05, 2.5152000000000507e-05, 2.4194000000001686e-05, 2.516699999999955e-05, 2.0472000000000545e-05, 2.4236000000000396e-05, 2.512499999999737e-05, 2.034700000000042e-05, 1.9430000000000835e-05, 2.041700000000174e-05, 2.515299999999998e-05, 2.512500000000084e-05, 2.1333999999997855e-05, 2.230500000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.831" endtime="20201029 12:43:41.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.826" endtime="20201029 12:43:41.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.838" endtime="20201029 12:43:41.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.836" endtime="20201029 12:43:41.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.835" endtime="20201029 12:43:41.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.475" endtime="20201029 12:43:41.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.475" endtime="20201029 12:43:41.859"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.867" endtime="20201029 12:43:41.884"></status>
</kw>
<msg timestamp="20201029 12:43:41.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.866" endtime="20201029 12:43:41.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.886" endtime="20201029 12:43:41.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.888" endtime="20201029 12:43:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.863" endtime="20201029 12:43:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.861" endtime="20201029 12:43:41.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.897" endtime="20201029 12:43:42.183"></status>
</kw>
<msg timestamp="20201029 12:43:42.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.896" endtime="20201029 12:43:42.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.187" endtime="20201029 12:43:42.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.195" endtime="20201029 12:43:42.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.893" endtime="20201029 12:43:42.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.891" endtime="20201029 12:43:42.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.202" level="INFO">${RESULT} = [{'diff': 1.9415999999997796e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.519499999999869e-05}, {'diff': 2.137500000000056e-05}, {'diff': 1.9457999999999975e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:42.198" endtime="20201029 12:43:42.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.206" level="INFO">${ACCURACY} = {'diff': [1.9415999999997796e-05, 2.036099999999999e-05, 2.231899999999981e-05, 2.519499999999869e-05, 2.137500000000056e-05, 1.9457999999999975e-05, 2.4208000000001256e-05, 2.513900000000041e-05, 1.9...</msg>
<status status="PASS" starttime="20201029 12:43:42.203" endtime="20201029 12:43:42.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.210" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.209" endtime="20201029 12:43:42.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.213" level="INFO">VALUE: [1.9415999999997796e-05, 2.036099999999999e-05, 2.231899999999981e-05, 2.519499999999869e-05, 2.137500000000056e-05, 1.9457999999999975e-05, 2.4208000000001256e-05, 2.513900000000041e-05, 1.9401999999998226e-05, 1.945899999999945e-05, 2.4236000000000396e-05, 1.938899999999813e-05, 2.6070000000003035e-05, 2.3263999999998536e-05, 2.3276999999998632e-05, 2.133300000000185e-05, 2.5179999999999647e-05, 1.9429999999997366e-05, 2.137500000000056e-05, 2.0305999999997715e-05, 2.60970000000027e-05, 2.136099999999752e-05, 2.4179999999998647e-05, 1.941700000000074e-05, 2.3235999999999396e-05, 2.515299999999998e-05, 2.515299999999998e-05, 2.3236000000002865e-05, 1.93890000000016e-05, 2.037500000000303e-05, 2.4249999999999966e-05, 2.5166000000000077e-05, 2.518099999999912e-05, 2.519499999999869e-05, 1.936099999999899e-05, 2.613900000000141e-05, 2.041700000000174e-05, 2.5070000000002035e-05, 2.131899999999881e-05, 2.233299999999938e-05, 2.134700000000142e-05, 2.4236000000000396e-05, 2.037499999999956e-05, 2.5207999999998787e-05, 2.2276999999997632e-05, 2.4222000000000826e-05, 2.3235999999999396e-05, 2.323699999999887e-05, 1.938899999999813e-05, 2.038899999999913e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.211" endtime="20201029 12:43:42.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.207" endtime="20201029 12:43:42.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.218" endtime="20201029 12:43:42.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.217" endtime="20201029 12:43:42.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.216" endtime="20201029 12:43:42.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.860" endtime="20201029 12:43:42.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.859" endtime="20201029 12:43:42.239"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.248" endtime="20201029 12:43:42.270"></status>
</kw>
<msg timestamp="20201029 12:43:42.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.246" endtime="20201029 12:43:42.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.271" endtime="20201029 12:43:42.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.274" endtime="20201029 12:43:42.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.244" endtime="20201029 12:43:42.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.242" endtime="20201029 12:43:42.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.283" endtime="20201029 12:43:42.569"></status>
</kw>
<msg timestamp="20201029 12:43:42.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022937028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.281" endtime="20201029 12:43:42.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022937028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.573" endtime="20201029 12:43:42.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.581" endtime="20201029 12:43:42.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.279" endtime="20201029 12:43:42.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.277" endtime="20201029 12:43:42.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.588" level="INFO">${RESULT} = [{'diff': 7.931000000002686e-06}, {'diff': 2.0347999999999894e-05}, {'diff': 2.4193999999998217e-05}, {'diff': 2.519499999999869e-05}, {'diff': 2.229100000000067e-05}, {'diff': 2.02769999999991e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:42.585" endtime="20201029 12:43:42.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.593" level="INFO">${ACCURACY} = {'diff': [7.931000000002686e-06, 2.0347999999999894e-05, 2.4193999999998217e-05, 2.519499999999869e-05, 2.229100000000067e-05, 2.02769999999991e-05, 2.513900000000041e-05, 2.040300000000217e-05, 1.945...</msg>
<status status="PASS" starttime="20201029 12:43:42.589" endtime="20201029 12:43:42.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.597" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.596" endtime="20201029 12:43:42.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.600" level="INFO">VALUE: [7.931000000002686e-06, 2.0347999999999894e-05, 2.4193999999998217e-05, 2.519499999999869e-05, 2.229100000000067e-05, 2.02769999999991e-05, 2.513900000000041e-05, 2.040300000000217e-05, 1.9457999999999975e-05, 2.236099999999852e-05, 2.2263999999997536e-05, 2.3236000000002865e-05, 2.136100000000099e-05, 2.134699999999795e-05, 2.326300000000253e-05, 1.9471999999999545e-05, 2.133299999999838e-05, 2.2292000000000145e-05, 2.5152000000000507e-05, 2.1292000000002614e-05, 2.4249999999999966e-05, 2.2278000000000575e-05, 1.944499999999988e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.4236000000000396e-05, 2.041699999999827e-05, 2.42230000000003e-05, 2.2305999999999715e-05, 2.518099999999912e-05, 2.034700000000042e-05, 2.418100000000159e-05, 2.136100000000099e-05, 2.32770000000021e-05, 2.513900000000041e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.3277999999998106e-05, 2.5152000000000507e-05, 2.515299999999998e-05, 2.516699999999955e-05, 2.3292000000001145e-05, 2.2262999999998062e-05, 2.3221999999999826e-05, 2.416700000000202e-05, 2.2319999999999285e-05, 2.3264000000002005e-05, 2.4207999999997787e-05, 2.037499999999956e-05, 2.613899999999794e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.599" endtime="20201029 12:43:42.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.594" endtime="20201029 12:43:42.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.605" endtime="20201029 12:43:42.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.603" endtime="20201029 12:43:42.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.602" endtime="20201029 12:43:42.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.240" endtime="20201029 12:43:42.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.239" endtime="20201029 12:43:42.626"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.635" endtime="20201029 12:43:42.652"></status>
</kw>
<msg timestamp="20201029 12:43:42.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.633" endtime="20201029 12:43:42.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.654" endtime="20201029 12:43:42.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.656" endtime="20201029 12:43:42.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.630" endtime="20201029 12:43:42.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.628" endtime="20201029 12:43:42.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.665" endtime="20201029 12:43:42.953"></status>
</kw>
<msg timestamp="20201029 12:43:42.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023217736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.664" endtime="20201029 12:43:42.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023187764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023217736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.957" endtime="20201029 12:43:42.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.965" endtime="20201029 12:43:42.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.661" endtime="20201029 12:43:42.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.660" endtime="20201029 12:43:42.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.972" level="INFO">${RESULT} = [{'diff': 2.9971999999999638e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.4290999999999202e-05}, {'diff': 2.5264000000000536e-05}, {'diff': 2.133300000000185e-05}, {'diff': 2.3249999999998966e-0...</msg>
<status status="PASS" starttime="20201029 12:43:42.969" endtime="20201029 12:43:42.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.976" level="INFO">${ACCURACY} = {'diff': [2.9971999999999638e-05, 2.5179999999999647e-05, 2.4290999999999202e-05, 2.5264000000000536e-05, 2.133300000000185e-05, 2.3249999999998966e-05, 2.2278000000000575e-05, 1.93890000000016e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:42.973" endtime="20201029 12:43:42.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.980" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.979" endtime="20201029 12:43:42.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.983" level="INFO">VALUE: [2.9971999999999638e-05, 2.5179999999999647e-05, 2.4290999999999202e-05, 2.5264000000000536e-05, 2.133300000000185e-05, 2.3249999999998966e-05, 2.2278000000000575e-05, 1.93890000000016e-05, 2.5110999999997802e-05, 2.04029999999987e-05, 2.418099999999812e-05, 2.3250000000002435e-05, 2.4222000000000826e-05, 2.4236000000000396e-05, 2.6137999999998468e-05, 2.513900000000041e-05, 2.2333999999998855e-05, 2.3278000000001575e-05, 2.138899999999666e-05, 2.3250000000002435e-05, 2.3194000000000686e-05, 2.516700000000302e-05, 2.3221999999999826e-05, 2.229100000000067e-05, 2.041699999999827e-05, 2.137500000000056e-05, 2.5193999999999217e-05, 1.941700000000074e-05, 2.513900000000041e-05, 1.940300000000117e-05, 2.4235999999996927e-05, 2.3262999999999062e-05, 2.334699999999995e-05, 2.3304999999997772e-05, 2.32090000000032e-05, 2.515299999999998e-05, 2.230500000000024e-05, 2.416699999999855e-05, 2.131899999999881e-05, 2.034700000000042e-05, 2.4222000000000826e-05, 2.6110999999998802e-05, 2.4222000000000826e-05, 2.520899999999826e-05, 2.315299999999798e-05, 2.036099999999999e-05, 2.5179999999999647e-05, 2.6110999999998802e-05, 2.4236000000000396e-05, 2.4207999999997787e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.982" endtime="20201029 12:43:42.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.977" endtime="20201029 12:43:42.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.988" endtime="20201029 12:43:43.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.987" endtime="20201029 12:43:43.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.985" endtime="20201029 12:43:43.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.627" endtime="20201029 12:43:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.626" endtime="20201029 12:43:43.009"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.018" endtime="20201029 12:43:43.034"></status>
</kw>
<msg timestamp="20201029 12:43:43.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.016" endtime="20201029 12:43:43.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.036" endtime="20201029 12:43:43.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.038" endtime="20201029 12:43:43.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.014" endtime="20201029 12:43:43.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.011" endtime="20201029 12:43:43.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.047" endtime="20201029 12:43:43.333"></status>
</kw>
<msg timestamp="20201029 12:43:43.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.046" endtime="20201029 12:43:43.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022004597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.337" endtime="20201029 12:43:43.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.345" endtime="20201029 12:43:43.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.043" endtime="20201029 12:43:43.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.041" endtime="20201029 12:43:43.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.352" level="INFO">${RESULT} = [{'diff': 2.2278000000000575e-05}, {'diff': 2.4179999999998647e-05}, {'diff': 2.32770000000021e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.3278000000001575e-05...</msg>
<status status="PASS" starttime="20201029 12:43:43.349" endtime="20201029 12:43:43.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.356" level="INFO">${ACCURACY} = {'diff': [2.2278000000000575e-05, 2.4179999999998647e-05, 2.32770000000021e-05, 2.4236000000000396e-05, 2.2305999999999715e-05, 2.3278000000001575e-05, 2.037499999999956e-05, 2.2278000000000575e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:43.353" endtime="20201029 12:43:43.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.360" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.359" endtime="20201029 12:43:43.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.363" level="INFO">VALUE: [2.2278000000000575e-05, 2.4179999999998647e-05, 2.32770000000021e-05, 2.4236000000000396e-05, 2.2305999999999715e-05, 2.3278000000001575e-05, 2.037499999999956e-05, 2.2278000000000575e-05, 2.3249999999998966e-05, 2.2305999999999715e-05, 2.231899999999981e-05, 1.941700000000074e-05, 2.6096999999999232e-05, 1.937499999999856e-05, 2.516699999999955e-05, 2.0362000000002933e-05, 2.3208000000000256e-05, 1.943100000000031e-05, 2.2305999999999715e-05, 2.323699999999887e-05, 1.940300000000117e-05, 2.4194000000001686e-05, 1.9457999999999975e-05, 1.943100000000031e-05, 1.9457999999999975e-05, 2.136100000000099e-05, 2.231899999999981e-05, 2.420900000000073e-05, 2.134700000000142e-05, 2.1347999999997425e-05, 2.4222000000000826e-05, 2.1320000000001754e-05, 2.3235999999999396e-05, 2.2319999999999285e-05, 2.5208000000002256e-05, 2.3249999999998966e-05, 2.037499999999956e-05, 2.415299999999898e-05, 2.6124999999998372e-05, 2.043100000000131e-05, 2.4236000000000396e-05, 2.4208000000001256e-05, 2.415300000000245e-05, 2.4165999999999077e-05, 2.134700000000142e-05, 2.3263999999998536e-05, 2.230500000000024e-05, 2.231899999999981e-05, 2.516699999999955e-05, 1.9444000000000405e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.361" endtime="20201029 12:43:43.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.357" endtime="20201029 12:43:43.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.369" endtime="20201029 12:43:43.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.367" endtime="20201029 12:43:43.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.366" endtime="20201029 12:43:43.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.010" endtime="20201029 12:43:43.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.009" endtime="20201029 12:43:43.389"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.398" endtime="20201029 12:43:43.420"></status>
</kw>
<msg timestamp="20201029 12:43:43.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.397" endtime="20201029 12:43:43.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.422" endtime="20201029 12:43:43.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.424" endtime="20201029 12:43:43.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.394" endtime="20201029 12:43:43.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.392" endtime="20201029 12:43:43.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.434" endtime="20201029 12:43:43.720"></status>
</kw>
<msg timestamp="20201029 12:43:43.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.432" endtime="20201029 12:43:43.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.725" endtime="20201029 12:43:43.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.733" endtime="20201029 12:43:43.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.429" endtime="20201029 12:43:43.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.428" endtime="20201029 12:43:43.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.740" level="INFO">${RESULT} = [{'diff': 1.1778000000000483e-05}, {'diff': 2.423699999999987e-05}, {'diff': 1.9430000000000835e-05}, {'diff': 2.511100000000127e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.038899999999913e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:43.736" endtime="20201029 12:43:43.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.747" level="INFO">${ACCURACY} = {'diff': [1.1778000000000483e-05, 2.423699999999987e-05, 1.9430000000000835e-05, 2.511100000000127e-05, 2.3263999999998536e-05, 2.038899999999913e-05, 2.520900000000173e-05, 2.134699999999795e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 12:43:43.741" endtime="20201029 12:43:43.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.752" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.751" endtime="20201029 12:43:43.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.754" level="INFO">VALUE: [1.1778000000000483e-05, 2.423699999999987e-05, 1.9430000000000835e-05, 2.511100000000127e-05, 2.3263999999998536e-05, 2.038899999999913e-05, 2.520900000000173e-05, 2.134699999999795e-05, 2.3291999999997676e-05, 1.9499999999998685e-05, 2.5250000000000966e-05, 1.943100000000031e-05, 2.131899999999881e-05, 2.036099999999999e-05, 1.943100000000031e-05, 1.943100000000031e-05, 2.037499999999956e-05, 2.1305999999998715e-05, 2.5193999999999217e-05, 2.040300000000217e-05, 2.034700000000042e-05, 2.512500000000084e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.036099999999999e-05, 2.2292000000000145e-05, 2.4180000000002116e-05, 2.1277999999999575e-05, 2.2333999999998855e-05, 2.04029999999987e-05, 2.420900000000073e-05, 2.038899999999913e-05, 2.2278000000000575e-05, 2.5110999999997802e-05, 2.133299999999838e-05, 2.3262999999999062e-05, 2.3235999999999396e-05, 2.4221999999997357e-05, 2.42230000000003e-05, 2.1320000000001754e-05, 2.611100000000227e-05, 1.9429999999997366e-05, 2.6221999999999357e-05, 2.137500000000056e-05, 2.034700000000042e-05, 2.418100000000159e-05, 2.4222000000000826e-05, 1.9430000000000835e-05, 2.04029999999987e-05, 1.943100000000031e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.753" endtime="20201029 12:43:43.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.748" endtime="20201029 12:43:43.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.759" endtime="20201029 12:43:43.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.758" endtime="20201029 12:43:43.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.756" endtime="20201029 12:43:43.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.390" endtime="20201029 12:43:43.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.390" endtime="20201029 12:43:43.780"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.789" endtime="20201029 12:43:43.808"></status>
</kw>
<msg timestamp="20201029 12:43:43.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.787" endtime="20201029 12:43:43.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.810" endtime="20201029 12:43:43.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.813" endtime="20201029 12:43:43.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.785" endtime="20201029 12:43:43.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.782" endtime="20201029 12:43:43.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.821" endtime="20201029 12:43:44.108"></status>
</kw>
<msg timestamp="20201029 12:43:44.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024591153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.820" endtime="20201029 12:43:44.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024591153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024612472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.112" endtime="20201029 12:43:44.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.120" endtime="20201029 12:43:44.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.817" endtime="20201029 12:43:44.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.816" endtime="20201029 12:43:44.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.127" level="INFO">${RESULT} = [{'diff': 2.131899999999881e-05}, {'diff': 2.4208000000001256e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.5207999999998787e-0...</msg>
<status status="PASS" starttime="20201029 12:43:44.124" endtime="20201029 12:43:44.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.131" level="INFO">${ACCURACY} = {'diff': [2.131899999999881e-05, 2.4208000000001256e-05, 2.2292000000000145e-05, 2.3235999999999396e-05, 2.2250000000001435e-05, 2.5207999999998787e-05, 2.037499999999956e-05, 2.32229999999993e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:44.128" endtime="20201029 12:43:44.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.136" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.135" endtime="20201029 12:43:44.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.138" level="INFO">VALUE: [2.131899999999881e-05, 2.4208000000001256e-05, 2.2292000000000145e-05, 2.3235999999999396e-05, 2.2250000000001435e-05, 2.5207999999998787e-05, 2.037499999999956e-05, 2.32229999999993e-05, 2.413899999999941e-05, 2.2249999999997966e-05, 2.229100000000067e-05, 2.4222000000000826e-05, 2.519499999999869e-05, 2.036099999999999e-05, 1.9416000000001266e-05, 2.2319999999999285e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.513900000000041e-05, 2.2306000000003184e-05, 2.134699999999795e-05, 2.4193999999998217e-05, 2.0334000000000324e-05, 2.331900000000081e-05, 2.518099999999912e-05, 2.133299999999838e-05, 2.2249999999997966e-05, 1.943100000000031e-05, 2.411100000000027e-05, 2.6221999999999357e-05, 2.420900000000073e-05, 1.941700000000074e-05, 2.518099999999912e-05, 2.0347999999999894e-05, 2.036099999999999e-05, 2.3333999999999855e-05, 2.3278000000001575e-05, 2.3207999999996787e-05, 2.3250000000002435e-05, 2.234700000000242e-05, 2.136100000000099e-05, 1.94029999999977e-05, 2.3208000000000256e-05, 2.416699999999855e-05, 2.3194000000000686e-05, 2.037499999999956e-05, 2.236099999999852e-05, 2.1305999999998715e-05, 2.513900000000041e-05, 2.3263999999998536e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.137" endtime="20201029 12:43:44.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.132" endtime="20201029 12:43:44.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.143" endtime="20201029 12:43:44.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.142" endtime="20201029 12:43:44.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.140" endtime="20201029 12:43:44.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.781" endtime="20201029 12:43:44.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.780" endtime="20201029 12:43:44.164"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.173" endtime="20201029 12:43:44.190"></status>
</kw>
<msg timestamp="20201029 12:43:44.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.171" endtime="20201029 12:43:44.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.192" endtime="20201029 12:43:44.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.194" endtime="20201029 12:43:44.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.168" endtime="20201029 12:43:44.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.166" endtime="20201029 12:43:44.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.203" endtime="20201029 12:43:44.490"></status>
</kw>
<msg timestamp="20201029 12:43:44.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.202" endtime="20201029 12:43:44.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022280361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022300736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.494" endtime="20201029 12:43:44.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.503" endtime="20201029 12:43:44.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.199" endtime="20201029 12:43:44.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.198" endtime="20201029 12:43:44.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.509" level="INFO">${RESULT} = [{'diff': 2.037500000000303e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.6166000000001077e-05}, {'diff': 2.3236000000002865e-05}, {'diff': 2.4179999999998647e-05}, {'diff': 2.131899999999881e-05...</msg>
<status status="PASS" starttime="20201029 12:43:44.506" endtime="20201029 12:43:44.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.513" level="INFO">${ACCURACY} = {'diff': [2.037500000000303e-05, 2.2264000000001005e-05, 2.6166000000001077e-05, 2.3236000000002865e-05, 2.4179999999998647e-05, 2.131899999999881e-05, 2.5110999999997802e-05, 1.938899999999813e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:44.510" endtime="20201029 12:43:44.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.518" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.517" endtime="20201029 12:43:44.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.520" level="INFO">VALUE: [2.037500000000303e-05, 2.2264000000001005e-05, 2.6166000000001077e-05, 2.3236000000002865e-05, 2.4179999999998647e-05, 2.131899999999881e-05, 2.5110999999997802e-05, 1.938899999999813e-05, 2.518100000000259e-05, 2.137500000000056e-05, 2.0334000000000324e-05, 2.418099999999812e-05, 2.518100000000259e-05, 2.3249999999998966e-05, 2.2278000000000575e-05, 2.037499999999956e-05, 2.2278000000000575e-05, 2.226300000000153e-05, 2.3235999999999396e-05, 2.2292000000000145e-05, 2.6110999999998802e-05, 2.4249999999999966e-05, 2.134699999999795e-05, 2.2278000000000575e-05, 2.0320000000000754e-05, 2.2250000000001435e-05, 2.4208000000001256e-05, 1.9416000000001266e-05, 2.034699999999695e-05, 2.4165999999999077e-05, 2.3194000000000686e-05, 2.136100000000099e-05, 2.040300000000217e-05, 2.3278000000001575e-05, 1.9319999999999754e-05, 2.1319999999998285e-05, 2.3221999999999826e-05, 2.513900000000041e-05, 2.5222000000001826e-05, 2.138900000000013e-05, 2.518099999999912e-05, 2.4221999999997357e-05, 2.2264000000001005e-05, 2.036099999999999e-05, 2.516700000000302e-05, 2.2305999999999715e-05, 2.4207999999997787e-05, 2.4180000000002116e-05, 2.034700000000042e-05, 2.512499999999737e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.519" endtime="20201029 12:43:44.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.514" endtime="20201029 12:43:44.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.526" endtime="20201029 12:43:44.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.525" endtime="20201029 12:43:44.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.524" endtime="20201029 12:43:44.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.165" endtime="20201029 12:43:44.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.164" endtime="20201029 12:43:44.547"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.555" endtime="20201029 12:43:44.572"></status>
</kw>
<msg timestamp="20201029 12:43:44.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.554" endtime="20201029 12:43:44.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.574" endtime="20201029 12:43:44.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.576" endtime="20201029 12:43:44.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.551" endtime="20201029 12:43:44.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.549" endtime="20201029 12:43:44.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.585" endtime="20201029 12:43:44.872"></status>
</kw>
<msg timestamp="20201029 12:43:44.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021270125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.584" endtime="20201029 12:43:44.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021270125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.876" endtime="20201029 12:43:44.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.884" endtime="20201029 12:43:44.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.581" endtime="20201029 12:43:44.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.580" endtime="20201029 12:43:44.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.891" level="INFO">${RESULT} = [{'diff': 3.373599999999949e-05}, {'diff': 2.034700000000042e-05}, {'diff': 2.0387999999999656e-05}, {'diff': 2.2277999999997106e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.038899999999913e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:44.888" endtime="20201029 12:43:44.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.896" level="INFO">${ACCURACY} = {'diff': [3.373599999999949e-05, 2.034700000000042e-05, 2.0387999999999656e-05, 2.2277999999997106e-05, 2.4236000000000396e-05, 2.038899999999913e-05, 2.1320000000001754e-05, 2.5152000000000507e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:44.892" endtime="20201029 12:43:44.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.900" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.899" endtime="20201029 12:43:44.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.903" level="INFO">VALUE: [3.373599999999949e-05, 2.034700000000042e-05, 2.0387999999999656e-05, 2.2277999999997106e-05, 2.4236000000000396e-05, 2.038899999999913e-05, 2.1320000000001754e-05, 2.5152000000000507e-05, 2.2292000000000145e-05, 2.419499999999769e-05, 2.136100000000099e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.5096999999998232e-05, 2.231899999999981e-05, 2.4236000000000396e-05, 2.50970000000017e-05, 2.22770000000011e-05, 2.137500000000056e-05, 2.3278000000001575e-05, 2.4180000000002116e-05, 2.516699999999955e-05, 2.233300000000285e-05, 2.136100000000099e-05, 2.6082999999999662e-05, 2.1334000000001324e-05, 2.137500000000056e-05, 2.137500000000056e-05, 2.512500000000084e-05, 2.5166000000000077e-05, 1.9416000000001266e-05, 2.138900000000013e-05, 2.038899999999913e-05, 2.2250000000001435e-05, 2.6082999999999662e-05, 2.2264000000001005e-05, 2.14029999999997e-05, 2.0387999999999656e-05, 2.513900000000041e-05, 2.2264000000001005e-05, 2.3249999999998966e-05, 2.041699999999827e-05, 2.038899999999913e-05, 2.3263999999998536e-05, 2.038899999999913e-05, 2.3235999999999396e-05, 2.6069000000000092e-05, 2.131899999999881e-05, 2.134700000000142e-05, 2.3249999999998966e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.901" endtime="20201029 12:43:44.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.897" endtime="20201029 12:43:44.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.914" endtime="20201029 12:43:44.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.910" endtime="20201029 12:43:44.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.908" endtime="20201029 12:43:44.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.548" endtime="20201029 12:43:44.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.547" endtime="20201029 12:43:44.938"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.956" endtime="20201029 12:43:44.977"></status>
</kw>
<msg timestamp="20201029 12:43:44.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.953" endtime="20201029 12:43:44.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.980" endtime="20201029 12:43:44.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.985" endtime="20201029 12:43:44.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.947" endtime="20201029 12:43:44.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.943" endtime="20201029 12:43:44.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.004" endtime="20201029 12:43:45.292"></status>
</kw>
<msg timestamp="20201029 12:43:45.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034845556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034856361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.001" endtime="20201029 12:43:45.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034845556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034856361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.299" endtime="20201029 12:43:45.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.309" endtime="20201029 12:43:45.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.995" endtime="20201029 12:43:45.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.992" endtime="20201029 12:43:45.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.316" level="INFO">${RESULT} = [{'diff': 1.0805000000002618e-05}, {'diff': 2.2277999999993636e-05}, {'diff': 2.5166000000000077e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.2277999999993636e-...</msg>
<status status="PASS" starttime="20201029 12:43:45.313" endtime="20201029 12:43:45.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.320" level="INFO">${ACCURACY} = {'diff': [1.0805000000002618e-05, 2.2277999999993636e-05, 2.5166000000000077e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.2277999999993636e-05, 2.2236000000001865e-05, 2.2264000000001005e-05...</msg>
<status status="PASS" starttime="20201029 12:43:45.317" endtime="20201029 12:43:45.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.324" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.323" endtime="20201029 12:43:45.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.327" level="INFO">VALUE: [1.0805000000002618e-05, 2.2277999999993636e-05, 2.5166000000000077e-05, 2.2305999999999715e-05, 2.2305999999999715e-05, 2.2277999999993636e-05, 2.2236000000001865e-05, 2.2264000000001005e-05, 2.413899999999941e-05, 2.2278000000000575e-05, 2.513900000000041e-05, 2.4235999999996927e-05, 2.036099999999652e-05, 2.2264000000001005e-05, 2.3290999999994733e-05, 2.136100000000446e-05, 2.1291999999999145e-05, 2.129099999999967e-05, 2.2180000000003586e-05, 2.033300000000432e-05, 1.9430000000000835e-05, 2.13890000000036e-05, 2.518099999999912e-05, 2.512500000000084e-05, 1.945899999999945e-05, 1.944499999999988e-05, 2.3250000000002435e-05, 2.0264000000005944e-05, 2.033300000000432e-05, 2.2236000000001865e-05, 2.3278000000001575e-05, 2.2278000000000575e-05, 2.4250000000003435e-05, 2.034699999999695e-05, 2.5055999999995526e-05, 2.2278000000000575e-05, 1.943100000000031e-05, 2.3222000000003296e-05, 2.2278000000000575e-05, 2.3235999999995927e-05, 2.3264000000002005e-05, 2.04169999999948e-05, 2.6082999999996193e-05, 2.4194000000005156e-05, 2.418099999999812e-05, 1.941700000000074e-05, 2.037500000000303e-05, 2.2334000000005794e-05, 2.419499999999769e-05, 2.512500000000084e-05]</msg>
<status status="PASS" starttime="20201029 12:43:45.326" endtime="20201029 12:43:45.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.321" endtime="20201029 12:43:45.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.332" endtime="20201029 12:43:45.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.330" endtime="20201029 12:43:45.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.329" endtime="20201029 12:43:45.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.940" endtime="20201029 12:43:45.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.939" endtime="20201029 12:43:45.353"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.361" endtime="20201029 12:43:45.380"></status>
</kw>
<msg timestamp="20201029 12:43:45.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.360" endtime="20201029 12:43:45.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.382" endtime="20201029 12:43:45.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.384" endtime="20201029 12:43:45.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.357" endtime="20201029 12:43:45.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.355" endtime="20201029 12:43:45.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.393" endtime="20201029 12:43:45.678"></status>
</kw>
<msg timestamp="20201029 12:43:45.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.392" endtime="20201029 12:43:45.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024361292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.683" endtime="20201029 12:43:45.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.691" endtime="20201029 12:43:45.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.389" endtime="20201029 12:43:45.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.387" endtime="20201029 12:43:45.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.697" level="INFO">${RESULT} = [{'diff': 2.8055999999998527e-05}, {'diff': 1.93890000000016e-05}, {'diff': 2.2263999999997536e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.3249999999998966e-05}, {'diff': 2.3208000000000256e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:45.694" endtime="20201029 12:43:45.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.701" level="INFO">${ACCURACY} = {'diff': [2.8055999999998527e-05, 1.93890000000016e-05, 2.2263999999997536e-05, 2.512500000000084e-05, 2.3249999999998966e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.512500000000084e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:45.698" endtime="20201029 12:43:45.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.706" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.705" endtime="20201029 12:43:45.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.708" level="INFO">VALUE: [2.8055999999998527e-05, 1.93890000000016e-05, 2.2263999999997536e-05, 2.512500000000084e-05, 2.3249999999998966e-05, 2.3208000000000256e-05, 2.3208000000000256e-05, 2.512500000000084e-05, 2.0415999999998796e-05, 2.515299999999998e-05, 2.512500000000084e-05, 1.945899999999945e-05, 2.136100000000099e-05, 2.036099999999999e-05, 2.2180000000000116e-05, 2.1305999999998715e-05, 2.1305999999998715e-05, 2.22770000000011e-05, 2.041700000000174e-05, 2.2264000000001005e-05, 2.223699999999787e-05, 2.4221999999997357e-05, 2.1236000000000865e-05, 2.2263999999997536e-05, 2.320899999999973e-05, 2.2264000000001005e-05, 2.1235999999997396e-05, 2.3221999999999826e-05, 2.134700000000142e-05, 2.2292000000000145e-05, 2.419500000000116e-05, 2.2278000000000575e-05, 2.036099999999999e-05, 2.3222000000003296e-05, 2.2334000000002324e-05, 2.513900000000041e-05, 2.034700000000042e-05, 2.3235999999999396e-05, 2.1306000000002184e-05, 2.2305999999999715e-05, 2.1291999999999145e-05, 2.3250000000002435e-05, 2.2278000000000575e-05, 2.519499999999869e-05, 2.3235999999999396e-05, 1.9429999999997366e-05, 1.937500000000203e-05, 2.136100000000099e-05, 2.3264000000002005e-05, 2.4208000000001256e-05]</msg>
<status status="PASS" starttime="20201029 12:43:45.707" endtime="20201029 12:43:45.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.702" endtime="20201029 12:43:45.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.714" endtime="20201029 12:43:45.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.713" endtime="20201029 12:43:45.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.711" endtime="20201029 12:43:45.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.354" endtime="20201029 12:43:45.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.353" endtime="20201029 12:43:45.735"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.743" endtime="20201029 12:43:45.765"></status>
</kw>
<msg timestamp="20201029 12:43:45.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.742" endtime="20201029 12:43:45.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.766" endtime="20201029 12:43:45.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.768" endtime="20201029 12:43:45.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.739" endtime="20201029 12:43:45.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.737" endtime="20201029 12:43:45.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.778" endtime="20201029 12:43:46.064"></status>
</kw>
<msg timestamp="20201029 12:43:46.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023879972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.776" endtime="20201029 12:43:46.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023859569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023879972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.068" endtime="20201029 12:43:46.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.076" endtime="20201029 12:43:46.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.773" endtime="20201029 12:43:46.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.772" endtime="20201029 12:43:46.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.082" level="INFO">${RESULT} = [{'diff': 2.04029999999987e-05}, {'diff': 2.03890000000026e-05}, {'diff': 2.134699999999795e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.3236000000002865e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:46.079" endtime="20201029 12:43:46.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.087" level="INFO">${ACCURACY} = {'diff': [2.04029999999987e-05, 2.03890000000026e-05, 2.134699999999795e-05, 2.2319999999999285e-05, 2.037499999999956e-05, 2.3236000000002865e-05, 1.940300000000117e-05, 2.4165999999999077e-05, 2.040...</msg>
<status status="PASS" starttime="20201029 12:43:46.083" endtime="20201029 12:43:46.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.092" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.091" endtime="20201029 12:43:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.094" level="INFO">VALUE: [2.04029999999987e-05, 2.03890000000026e-05, 2.134699999999795e-05, 2.2319999999999285e-05, 2.037499999999956e-05, 2.3236000000002865e-05, 1.940300000000117e-05, 2.4165999999999077e-05, 2.0402000000002696e-05, 2.238899999999766e-05, 2.238900000000113e-05, 2.5179999999999647e-05, 2.3221999999999826e-05, 2.513900000000041e-05, 1.937500000000203e-05, 2.6110999999998802e-05, 2.0415999999998796e-05, 1.940300000000117e-05, 2.5221999999998357e-05, 2.233300000000285e-05, 2.034700000000042e-05, 2.4151999999999507e-05, 2.3278000000001575e-05, 2.2278000000000575e-05, 2.4179999999998647e-05, 2.512500000000084e-05, 2.04029999999987e-05, 2.12770000000001e-05, 2.3320000000000285e-05, 2.0347999999999894e-05, 2.415299999999898e-05, 2.036099999999999e-05, 2.037500000000303e-05, 1.8472000000002015e-05, 2.5166000000000077e-05, 2.512500000000084e-05, 1.9444000000000405e-05, 2.3276999999998632e-05, 2.036099999999999e-05, 2.512500000000084e-05, 2.5208000000002256e-05, 2.4221999999997357e-05, 2.131900000000228e-05, 2.034700000000042e-05, 1.938899999999813e-05, 2.3235999999999396e-05, 2.234700000000242e-05, 2.2319999999999285e-05, 2.420899999999726e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.093" endtime="20201029 12:43:46.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.088" endtime="20201029 12:43:46.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.099" endtime="20201029 12:43:46.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.098" endtime="20201029 12:43:46.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.097" endtime="20201029 12:43:46.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.736" endtime="20201029 12:43:46.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.735" endtime="20201029 12:43:46.120"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.129" endtime="20201029 12:43:46.145"></status>
</kw>
<msg timestamp="20201029 12:43:46.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.127" endtime="20201029 12:43:46.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.146" endtime="20201029 12:43:46.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.149" endtime="20201029 12:43:46.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.124" endtime="20201029 12:43:46.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.122" endtime="20201029 12:43:46.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.158" endtime="20201029 12:43:46.448"></status>
</kw>
<msg timestamp="20201029 12:43:46.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020683583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.156" endtime="20201029 12:43:46.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020683583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.457" endtime="20201029 12:43:46.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.476" endtime="20201029 12:43:46.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.154" endtime="20201029 12:43:46.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.152" endtime="20201029 12:43:46.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.490" level="INFO">${RESULT} = [{'diff': 3.3790999999998295e-05}, {'diff': 1.944499999999988e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.03890000000026e-05}, {'diff': 2.520900000000173e-05}, {'diff': 2.036099999999999e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:46.483" endtime="20201029 12:43:46.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.498" level="INFO">${ACCURACY} = {'diff': [3.3790999999998295e-05, 1.944499999999988e-05, 2.2292000000000145e-05, 2.03890000000026e-05, 2.520900000000173e-05, 2.036099999999999e-05, 2.3221999999999826e-05, 2.4193999999998217e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 12:43:46.492" endtime="20201029 12:43:46.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.507" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.505" endtime="20201029 12:43:46.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.513" level="INFO">VALUE: [3.3790999999998295e-05, 1.944499999999988e-05, 2.2292000000000145e-05, 2.03890000000026e-05, 2.520900000000173e-05, 2.036099999999999e-05, 2.3221999999999826e-05, 2.4193999999998217e-05, 2.041700000000174e-05, 1.943100000000031e-05, 2.2236000000001865e-05, 2.131900000000228e-05, 2.4236000000000396e-05, 1.9429999999997366e-05, 2.3264000000002005e-05, 2.4222000000000826e-05, 2.2278000000000575e-05, 2.4222000000000826e-05, 2.513900000000041e-05, 2.138900000000013e-05, 1.936099999999899e-05, 2.034699999999695e-05, 2.2320000000002754e-05, 2.234699999999895e-05, 2.2264000000001005e-05, 1.9416000000001266e-05, 2.3263999999998536e-05, 2.137500000000056e-05, 2.1306000000002184e-05, 2.512500000000084e-05, 2.233299999999938e-05, 2.0401999999999226e-05, 2.519499999999869e-05, 2.045900000000045e-05, 2.413900000000288e-05, 2.515299999999998e-05, 2.4236000000000396e-05, 2.134699999999795e-05, 2.4249999999999966e-05, 2.611100000000227e-05, 2.515299999999998e-05, 2.2250000000001435e-05, 2.329100000000167e-05, 2.03890000000026e-05, 2.136100000000099e-05, 1.9471999999999545e-05, 2.611100000000227e-05, 2.4193999999998217e-05, 2.2333999999998855e-05, 2.5194000000002686e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.510" endtime="20201029 12:43:46.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.500" endtime="20201029 12:43:46.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.523" endtime="20201029 12:43:46.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.520" endtime="20201029 12:43:46.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.517" endtime="20201029 12:43:46.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.121" endtime="20201029 12:43:46.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.120" endtime="20201029 12:43:46.545"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.553" endtime="20201029 12:43:46.575"></status>
</kw>
<msg timestamp="20201029 12:43:46.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.551" endtime="20201029 12:43:46.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.576" endtime="20201029 12:43:46.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.579" endtime="20201029 12:43:46.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.549" endtime="20201029 12:43:46.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.547" endtime="20201029 12:43:46.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.588" endtime="20201029 12:43:46.873"></status>
</kw>
<msg timestamp="20201029 12:43:46.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02318675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:46.586" endtime="20201029 12:43:46.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023155875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02318675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:46.877" endtime="20201029 12:43:46.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.885" endtime="20201029 12:43:46.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.583" endtime="20201029 12:43:46.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.582" endtime="20201029 12:43:46.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.892" level="INFO">${RESULT} = [{'diff': 3.087499999999965e-05}, {'diff': 2.5249999999997497e-05}, {'diff': 2.133300000000185e-05}, {'diff': 2.138900000000013e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.133299999999838e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:46.889" endtime="20201029 12:43:46.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.896" level="INFO">${ACCURACY} = {'diff': [3.087499999999965e-05, 2.5249999999997497e-05, 2.133300000000185e-05, 2.138900000000013e-05, 2.037499999999956e-05, 2.133299999999838e-05, 2.418100000000159e-05, 2.1305999999998715e-05, 2.61...</msg>
<status status="PASS" starttime="20201029 12:43:46.893" endtime="20201029 12:43:46.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.901" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.900" endtime="20201029 12:43:46.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.903" level="INFO">VALUE: [3.087499999999965e-05, 2.5249999999997497e-05, 2.133300000000185e-05, 2.138900000000013e-05, 2.037499999999956e-05, 2.133299999999838e-05, 2.418100000000159e-05, 2.1305999999998715e-05, 2.613900000000141e-05, 2.3249999999998966e-05, 2.2292000000000145e-05, 2.4221999999997357e-05, 2.131900000000228e-05, 2.037499999999956e-05, 2.5193999999999217e-05, 2.613900000000141e-05, 2.513900000000041e-05, 2.4179999999998647e-05, 2.4221999999997357e-05, 2.1348000000000894e-05, 2.5054999999999522e-05, 2.4179999999998647e-05, 2.038899999999913e-05, 2.423699999999987e-05, 2.329100000000167e-05, 2.4194000000001686e-05, 2.036099999999999e-05, 2.1334000000001324e-05, 2.3278000000001575e-05, 2.5221999999998357e-05, 2.231899999999981e-05, 2.229100000000067e-05, 2.513900000000041e-05, 2.515299999999998e-05, 2.230500000000024e-05, 2.3290999999998202e-05, 2.3222000000003296e-05, 2.4194000000001686e-05, 2.134700000000142e-05, 2.318100000000059e-05, 2.5138000000000937e-05, 2.136100000000099e-05, 2.3250000000002435e-05, 2.612500000000184e-05, 2.138900000000013e-05, 2.2292000000000145e-05, 2.516700000000302e-05, 2.419500000000116e-05, 2.333300000000038e-05, 2.133299999999838e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.902" endtime="20201029 12:43:46.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.897" endtime="20201029 12:43:46.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.909" endtime="20201029 12:43:46.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.907" endtime="20201029 12:43:46.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.906" endtime="20201029 12:43:46.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.545" endtime="20201029 12:43:46.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.545" endtime="20201029 12:43:46.929"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.938" endtime="20201029 12:43:46.953"></status>
</kw>
<msg timestamp="20201029 12:43:46.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.936" endtime="20201029 12:43:46.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.954" endtime="20201029 12:43:46.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.957" endtime="20201029 12:43:46.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.934" endtime="20201029 12:43:46.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.932" endtime="20201029 12:43:46.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.966" endtime="20201029 12:43:47.250"></status>
</kw>
<msg timestamp="20201029 12:43:47.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.964" endtime="20201029 12:43:47.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.255" endtime="20201029 12:43:47.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.263" endtime="20201029 12:43:47.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.962" endtime="20201029 12:43:47.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.960" endtime="20201029 12:43:47.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.269" level="INFO">${RESULT} = [{'diff': 1.841699999999974e-05}, {'diff': 2.134700000000142e-05}, {'diff': 1.9415999999997796e-05}, {'diff': 1.9387999999998656e-05}, {'diff': 2.611100000000227e-05}, {'diff': 2.230500000000024e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:47.266" endtime="20201029 12:43:47.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.276" level="INFO">${ACCURACY} = {'diff': [1.841699999999974e-05, 2.134700000000142e-05, 1.9415999999997796e-05, 1.9387999999998656e-05, 2.611100000000227e-05, 2.230500000000024e-05, 1.9429999999997366e-05, 2.3278000000001575e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:47.270" endtime="20201029 12:43:47.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.281" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.280" endtime="20201029 12:43:47.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.283" level="INFO">VALUE: [1.841699999999974e-05, 2.134700000000142e-05, 1.9415999999997796e-05, 1.9387999999998656e-05, 2.611100000000227e-05, 2.230500000000024e-05, 1.9429999999997366e-05, 2.3278000000001575e-05, 2.513900000000041e-05, 2.130499999999924e-05, 2.038899999999913e-05, 2.041700000000174e-05, 2.4236000000000396e-05, 2.2305999999999715e-05, 2.516699999999955e-05, 2.4208000000001256e-05, 2.137500000000056e-05, 2.233299999999938e-05, 2.3278000000001575e-05, 2.6112000000001745e-05, 2.515299999999998e-05, 2.2319999999999285e-05, 2.2235999999998396e-05, 2.0347999999999894e-05, 2.419500000000116e-05, 2.2292000000000145e-05, 2.038899999999913e-05, 2.136100000000099e-05, 2.4249999999999966e-05, 2.233300000000285e-05, 2.133299999999838e-05, 2.236099999999852e-05, 2.133299999999838e-05, 2.134700000000142e-05, 2.038899999999913e-05, 2.4236000000000396e-05, 2.134699999999795e-05, 2.3250000000002435e-05, 2.034700000000042e-05, 1.94029999999977e-05, 2.4236000000000396e-05, 2.233299999999938e-05, 2.138900000000013e-05, 2.3236000000002865e-05, 2.031900000000128e-05, 2.130499999999924e-05, 2.2292000000000145e-05, 2.519499999999869e-05, 2.137500000000056e-05, 2.129099999999967e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.282" endtime="20201029 12:43:47.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.277" endtime="20201029 12:43:47.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.288" endtime="20201029 12:43:47.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.287" endtime="20201029 12:43:47.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.286" endtime="20201029 12:43:47.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.930" endtime="20201029 12:43:47.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.930" endtime="20201029 12:43:47.309"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.318" endtime="20201029 12:43:47.334"></status>
</kw>
<msg timestamp="20201029 12:43:47.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.316" endtime="20201029 12:43:47.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.336" endtime="20201029 12:43:47.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.338" endtime="20201029 12:43:47.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.314" endtime="20201029 12:43:47.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.311" endtime="20201029 12:43:47.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.347" endtime="20201029 12:43:47.635"></status>
</kw>
<msg timestamp="20201029 12:43:47.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.346" endtime="20201029 12:43:47.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.639" endtime="20201029 12:43:47.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.647" endtime="20201029 12:43:47.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.343" endtime="20201029 12:43:47.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.342" endtime="20201029 12:43:47.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.654" level="INFO">${RESULT} = [{'diff': 8.875000000001937e-06}, {'diff': 2.130499999999924e-05}, {'diff': 2.3291999999997676e-05}, {'diff': 2.4180000000002116e-05}, {'diff': 2.508300000000213e-05}, {'diff': 1.944499999999988e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:47.650" endtime="20201029 12:43:47.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.658" level="INFO">${ACCURACY} = {'diff': [8.875000000001937e-06, 2.130499999999924e-05, 2.3291999999997676e-05, 2.4180000000002116e-05, 2.508300000000213e-05, 1.944499999999988e-05, 2.3250000000002435e-05, 2.2292000000000145e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:47.655" endtime="20201029 12:43:47.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.662" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.661" endtime="20201029 12:43:47.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.665" level="INFO">VALUE: [8.875000000001937e-06, 2.130499999999924e-05, 2.3291999999997676e-05, 2.4180000000002116e-05, 2.508300000000213e-05, 1.944499999999988e-05, 2.3250000000002435e-05, 2.2292000000000145e-05, 2.1291999999999145e-05, 2.2264000000001005e-05, 2.03890000000026e-05, 2.513900000000041e-05, 2.3166000000001546e-05, 2.6124999999998372e-05, 2.4222000000000826e-05, 2.230500000000024e-05, 2.033300000000085e-05, 2.3221999999999826e-05, 2.1264000000000005e-05, 2.3249999999998966e-05, 2.518100000000259e-05, 2.033300000000085e-05, 2.416699999999855e-05, 2.42230000000003e-05, 2.5207999999998787e-05, 2.2262999999998062e-05, 2.037499999999956e-05, 2.323700000000234e-05, 2.5193999999999217e-05, 1.94029999999977e-05, 2.130499999999924e-05, 2.5152000000000507e-05, 2.229100000000067e-05, 2.6069999999999566e-05, 2.513900000000041e-05, 1.944499999999988e-05, 2.041699999999827e-05, 2.036099999999999e-05, 2.133299999999838e-05, 1.9444000000000405e-05, 2.03890000000026e-05, 2.2264000000001005e-05, 2.612500000000184e-05, 2.516699999999955e-05, 1.944499999999988e-05, 2.2305999999999715e-05, 2.038899999999913e-05, 2.036099999999999e-05, 2.033300000000085e-05, 2.229100000000067e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.663" endtime="20201029 12:43:47.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.658" endtime="20201029 12:43:47.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.669" endtime="20201029 12:43:47.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.668" endtime="20201029 12:43:47.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.667" endtime="20201029 12:43:47.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.310" endtime="20201029 12:43:47.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.309" endtime="20201029 12:43:47.690"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.699" endtime="20201029 12:43:47.720"></status>
</kw>
<msg timestamp="20201029 12:43:47.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.697" endtime="20201029 12:43:47.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.722" endtime="20201029 12:43:47.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.724" endtime="20201029 12:43:47.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.695" endtime="20201029 12:43:47.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.693" endtime="20201029 12:43:47.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.733" endtime="20201029 12:43:48.019"></status>
</kw>
<msg timestamp="20201029 12:43:48.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.732" endtime="20201029 12:43:48.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022934833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.023" endtime="20201029 12:43:48.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.031" endtime="20201029 12:43:48.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.729" endtime="20201029 12:43:48.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.727" endtime="20201029 12:43:48.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.038" level="INFO">${RESULT} = [{'diff': 2.8930000000003397e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.138900000000013e-05}, {'diff': 2.515299999999998e-05}, {'diff': 2.4193999999998217e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:48.034" endtime="20201029 12:43:48.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.042" level="INFO">${ACCURACY} = {'diff': [2.8930000000003397e-05, 2.2278000000000575e-05, 2.041700000000174e-05, 2.138900000000013e-05, 2.515299999999998e-05, 2.4193999999998217e-05, 2.234699999999895e-05, 2.4236000000000396e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:48.039" endtime="20201029 12:43:48.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.046" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.045" endtime="20201029 12:43:48.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.049" level="INFO">VALUE: [2.8930000000003397e-05, 2.2278000000000575e-05, 2.041700000000174e-05, 2.138900000000013e-05, 2.515299999999998e-05, 2.4193999999998217e-05, 2.234699999999895e-05, 2.4236000000000396e-05, 2.2277999999997106e-05, 2.2249999999997966e-05, 2.034700000000042e-05, 2.4222000000000826e-05, 2.138900000000013e-05, 1.944499999999988e-05, 2.6083999999999136e-05, 2.130499999999924e-05, 1.941699999999727e-05, 2.136099999999752e-05, 2.1277999999999575e-05, 2.3264000000002005e-05, 2.5166000000000077e-05, 2.415300000000245e-05, 1.938899999999813e-05, 1.941700000000074e-05, 2.519499999999869e-05, 2.420899999999726e-05, 2.2278000000000575e-05, 2.0361999999999464e-05, 2.516700000000302e-05, 2.134700000000142e-05, 1.9430000000000835e-05, 2.4221999999997357e-05, 2.1334000000001324e-05, 2.3249999999998966e-05, 2.420899999999726e-05, 1.944499999999988e-05, 2.4222000000000826e-05, 2.229100000000067e-05, 2.233299999999938e-05, 2.0430000000001836e-05, 2.136099999999752e-05, 2.041700000000174e-05, 2.515300000000345e-05, 2.6055999999999996e-05, 2.42230000000003e-05, 2.5166000000000077e-05, 2.038899999999913e-05, 2.3235999999999396e-05, 2.3290999999998202e-05, 2.1291999999999145e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.047" endtime="20201029 12:43:48.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.043" endtime="20201029 12:43:48.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.054" endtime="20201029 12:43:48.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.053" endtime="20201029 12:43:48.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.052" endtime="20201029 12:43:48.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.691" endtime="20201029 12:43:48.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.691" endtime="20201029 12:43:48.075"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.084" endtime="20201029 12:43:48.099"></status>
</kw>
<msg timestamp="20201029 12:43:48.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.082" endtime="20201029 12:43:48.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.101" endtime="20201029 12:43:48.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.103" endtime="20201029 12:43:48.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.080" endtime="20201029 12:43:48.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.077" endtime="20201029 12:43:48.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.112" endtime="20201029 12:43:48.397"></status>
</kw>
<msg timestamp="20201029 12:43:48.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.110" endtime="20201029 12:43:48.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019821542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.401" endtime="20201029 12:43:48.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.409" endtime="20201029 12:43:48.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.108" endtime="20201029 12:43:48.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.106" endtime="20201029 12:43:48.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.416" level="INFO">${RESULT} = [{'diff': 7.013999999999632e-06}, {'diff': 1.9443999999996936e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.4222000000000826e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.133299999999838e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:48.413" endtime="20201029 12:43:48.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.421" level="INFO">${ACCURACY} = {'diff': [7.013999999999632e-06, 1.9443999999996936e-05, 2.4236000000000396e-05, 2.4222000000000826e-05, 2.037499999999956e-05, 2.133299999999838e-05, 2.4249999999999966e-05, 1.943100000000031e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:48.417" endtime="20201029 12:43:48.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.425" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.424" endtime="20201029 12:43:48.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.428" level="INFO">VALUE: [7.013999999999632e-06, 1.9443999999996936e-05, 2.4236000000000396e-05, 2.4222000000000826e-05, 2.037499999999956e-05, 2.133299999999838e-05, 2.4249999999999966e-05, 1.943100000000031e-05, 1.9457999999999975e-05, 2.5152000000000507e-05, 2.4236000000000396e-05, 2.043100000000131e-05, 2.3276999999998632e-05, 2.3263999999998536e-05, 2.229100000000067e-05, 2.3263999999998536e-05, 2.2250000000001435e-05, 2.1264000000000005e-05, 2.1334000000001324e-05, 2.034700000000042e-05, 1.941700000000074e-05, 2.420900000000073e-05, 2.038899999999913e-05, 1.943100000000031e-05, 2.136100000000099e-05, 2.137500000000056e-05, 2.1334000000001324e-05, 2.419500000000116e-05, 2.320899999999973e-05, 2.134699999999795e-05, 1.9471999999999545e-05, 2.5207999999998787e-05, 2.230500000000024e-05, 2.3249999999998966e-05, 2.2305999999999715e-05, 2.234699999999895e-05, 2.3249999999998966e-05, 2.613900000000141e-05, 2.5193999999999217e-05, 2.229100000000067e-05, 1.9430000000000835e-05, 2.037499999999956e-05, 2.413900000000288e-05, 2.037499999999956e-05, 2.0387999999999656e-05, 2.3221999999999826e-05, 2.613899999999794e-05, 2.3249999999998966e-05, 2.0401999999999226e-05, 2.419499999999769e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.426" endtime="20201029 12:43:48.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.421" endtime="20201029 12:43:48.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.433" endtime="20201029 12:43:48.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.431" endtime="20201029 12:43:48.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.430" endtime="20201029 12:43:48.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.076" endtime="20201029 12:43:48.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.075" endtime="20201029 12:43:48.453"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.462" endtime="20201029 12:43:48.481"></status>
</kw>
<msg timestamp="20201029 12:43:48.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.460" endtime="20201029 12:43:48.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.482" endtime="20201029 12:43:48.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.485" endtime="20201029 12:43:48.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.458" endtime="20201029 12:43:48.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.456" endtime="20201029 12:43:48.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.494" endtime="20201029 12:43:48.779"></status>
</kw>
<msg timestamp="20201029 12:43:48.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.492" endtime="20201029 12:43:48.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023463681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023499319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.784" endtime="20201029 12:43:48.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.792" endtime="20201029 12:43:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.490" endtime="20201029 12:43:48.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.488" endtime="20201029 12:43:48.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.798" level="INFO">${RESULT} = [{'diff': 3.563800000000103e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.3250000000002435e-05}, {'diff': 2.1334000000001324e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:48.795" endtime="20201029 12:43:48.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.802" level="INFO">${ACCURACY} = {'diff': [3.563800000000103e-05, 2.036099999999999e-05, 2.512500000000084e-05, 2.231899999999981e-05, 2.3250000000002435e-05, 2.1334000000001324e-05, 2.133300000000185e-05, 2.611100000000227e-05, 2.52...</msg>
<status status="PASS" starttime="20201029 12:43:48.799" endtime="20201029 12:43:48.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.807" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.806" endtime="20201029 12:43:48.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.809" level="INFO">VALUE: [3.563800000000103e-05, 2.036099999999999e-05, 2.512500000000084e-05, 2.231899999999981e-05, 2.3250000000002435e-05, 2.1334000000001324e-05, 2.133300000000185e-05, 2.611100000000227e-05, 2.5207999999998787e-05, 1.941699999999727e-05, 2.4194000000001686e-05, 2.4208000000001256e-05, 2.1362000000000464e-05, 1.8471999999998545e-05, 2.32090000000032e-05, 2.4249999999999966e-05, 2.03890000000026e-05, 2.4179999999998647e-05, 2.4194000000001686e-05, 2.5166000000000077e-05, 2.137500000000056e-05, 2.2278000000000575e-05, 1.94029999999977e-05, 2.3278000000001575e-05, 2.0430000000001836e-05, 2.6110999999998802e-05, 2.131900000000228e-05, 2.231899999999981e-05, 2.2306000000003184e-05, 2.42230000000003e-05, 2.6055999999999996e-05, 2.419500000000116e-05, 2.134700000000142e-05, 2.2278000000000575e-05, 2.2235999999998396e-05, 2.037499999999956e-05, 2.42230000000003e-05, 2.036099999999999e-05, 2.229100000000067e-05, 2.22770000000011e-05, 2.133299999999838e-05, 2.2305999999999715e-05, 2.516699999999955e-05, 2.131899999999881e-05, 2.2292000000000145e-05, 2.5221999999998357e-05, 1.943100000000031e-05, 2.6083999999999136e-05, 1.941700000000074e-05, 2.229100000000067e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.808" endtime="20201029 12:43:48.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.803" endtime="20201029 12:43:48.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.814" endtime="20201029 12:43:48.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.813" endtime="20201029 12:43:48.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.812" endtime="20201029 12:43:48.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.454" endtime="20201029 12:43:48.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.454" endtime="20201029 12:43:48.835"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.844" endtime="20201029 12:43:48.867"></status>
</kw>
<msg timestamp="20201029 12:43:48.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.842" endtime="20201029 12:43:48.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.869" endtime="20201029 12:43:48.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.871" endtime="20201029 12:43:48.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.839" endtime="20201029 12:43:48.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.837" endtime="20201029 12:43:48.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.880" endtime="20201029 12:43:49.165"></status>
</kw>
<msg timestamp="20201029 12:43:49.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:48.879" endtime="20201029 12:43:49.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023576208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0235975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:49.169" endtime="20201029 12:43:49.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.178" endtime="20201029 12:43:49.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.876" endtime="20201029 12:43:49.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.874" endtime="20201029 12:43:49.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.187" level="INFO">${RESULT} = [{'diff': 2.1291999999999145e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.1291999999999145e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.229100000000067e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:49.181" endtime="20201029 12:43:49.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.193" level="INFO">${ACCURACY} = {'diff': [2.1291999999999145e-05, 2.4236000000000396e-05, 2.038899999999913e-05, 2.1291999999999145e-05, 2.037499999999956e-05, 2.229100000000067e-05, 2.6110999999998802e-05, 2.515299999999998e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:49.188" endtime="20201029 12:43:49.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.198" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.197" endtime="20201029 12:43:49.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.201" level="INFO">VALUE: [2.1291999999999145e-05, 2.4236000000000396e-05, 2.038899999999913e-05, 2.1291999999999145e-05, 2.037499999999956e-05, 2.229100000000067e-05, 2.6110999999998802e-05, 2.515299999999998e-05, 2.22229999999983e-05, 2.613900000000141e-05, 1.941700000000074e-05, 2.6096999999999232e-05, 2.2278000000000575e-05, 1.9457999999999975e-05, 2.3276999999998632e-05, 2.518099999999912e-05, 2.2249999999997966e-05, 2.513900000000041e-05, 2.130499999999924e-05, 2.041700000000174e-05, 2.508300000000213e-05, 2.130500000000271e-05, 2.2264000000001005e-05, 2.038899999999913e-05, 2.423699999999987e-05, 2.2292000000000145e-05, 2.511100000000127e-05, 2.4222000000000826e-05, 2.520900000000173e-05, 2.038899999999913e-05, 2.0361999999999464e-05, 2.3194000000000686e-05, 2.2264000000001005e-05, 2.0320000000000754e-05, 2.2235999999998396e-05, 2.048699999999959e-05, 2.04029999999987e-05, 2.4264000000003005e-05, 2.3235999999999396e-05, 2.6110999999998802e-05, 2.2277999999997106e-05, 2.037499999999956e-05, 2.04029999999987e-05, 2.1264000000000005e-05, 2.3249999999998966e-05, 2.4236000000000396e-05, 2.1305999999998715e-05, 2.234699999999895e-05, 2.3263999999998536e-05, 2.5138000000000937e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.199" endtime="20201029 12:43:49.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.194" endtime="20201029 12:43:49.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.212" endtime="20201029 12:43:49.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.208" endtime="20201029 12:43:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.207" endtime="20201029 12:43:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.836" endtime="20201029 12:43:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.835" endtime="20201029 12:43:49.233"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.242" endtime="20201029 12:43:49.259"></status>
</kw>
<msg timestamp="20201029 12:43:49.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.240" endtime="20201029 12:43:49.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.260" endtime="20201029 12:43:49.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.263" endtime="20201029 12:43:49.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.238" endtime="20201029 12:43:49.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.236" endtime="20201029 12:43:49.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.272" endtime="20201029 12:43:49.558"></status>
</kw>
<msg timestamp="20201029 12:43:49.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.270" endtime="20201029 12:43:49.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.562" endtime="20201029 12:43:49.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.570" endtime="20201029 12:43:49.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.268" endtime="20201029 12:43:49.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.266" endtime="20201029 12:43:49.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.577" level="INFO">${RESULT} = [{'diff': 2.89309999999994e-05}, {'diff': 2.5166000000000077e-05}, {'diff': 1.9416000000001266e-05}, {'diff': 2.419499999999769e-05}, {'diff': 2.0347999999999894e-05}, {'diff': 2.415299999999898e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:49.574" endtime="20201029 12:43:49.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.582" level="INFO">${ACCURACY} = {'diff': [2.89309999999994e-05, 2.5166000000000077e-05, 1.9416000000001266e-05, 2.419499999999769e-05, 2.0347999999999894e-05, 2.415299999999898e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.61...</msg>
<status status="PASS" starttime="20201029 12:43:49.578" endtime="20201029 12:43:49.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.587" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.586" endtime="20201029 12:43:49.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.589" level="INFO">VALUE: [2.89309999999994e-05, 2.5166000000000077e-05, 1.9416000000001266e-05, 2.419499999999769e-05, 2.0347999999999894e-05, 2.415299999999898e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.615300000000098e-05, 2.5207999999998787e-05, 2.1320000000001754e-05, 2.5137999999997468e-05, 2.513900000000041e-05, 2.3221999999999826e-05, 2.134700000000142e-05, 2.5222000000001826e-05, 2.043100000000131e-05, 2.3221999999999826e-05, 2.1306000000002184e-05, 2.512499999999737e-05, 2.515299999999998e-05, 2.134700000000142e-05, 2.3249999999998966e-05, 2.334699999999995e-05, 2.6152000000001507e-05, 2.3235999999999396e-05, 2.131900000000228e-05, 2.3249999999998966e-05, 2.041700000000174e-05, 2.131899999999881e-05, 2.130499999999924e-05, 2.319500000000016e-05, 2.518099999999912e-05, 2.037499999999956e-05, 2.613899999999794e-05, 2.519499999999869e-05, 2.0334000000000324e-05, 2.22770000000011e-05, 2.134699999999795e-05, 2.4193999999998217e-05, 2.3250000000002435e-05, 2.2276999999997632e-05, 1.94029999999977e-05, 2.038899999999913e-05, 2.2319999999999285e-05, 2.4208000000001256e-05, 2.036099999999999e-05, 1.938899999999813e-05, 2.2235999999998396e-05, 2.5179999999999647e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.588" endtime="20201029 12:43:49.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.583" endtime="20201029 12:43:49.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.594" endtime="20201029 12:43:49.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.593" endtime="20201029 12:43:49.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.592" endtime="20201029 12:43:49.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.234" endtime="20201029 12:43:49.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.234" endtime="20201029 12:43:49.615"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.624" endtime="20201029 12:43:49.640"></status>
</kw>
<msg timestamp="20201029 12:43:49.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.622" endtime="20201029 12:43:49.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.642" endtime="20201029 12:43:49.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.645" endtime="20201029 12:43:49.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.619" endtime="20201029 12:43:49.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.617" endtime="20201029 12:43:49.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.654" endtime="20201029 12:43:49.941"></status>
</kw>
<msg timestamp="20201029 12:43:49.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.652" endtime="20201029 12:43:49.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.945" endtime="20201029 12:43:49.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.953" endtime="20201029 12:43:49.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.649" endtime="20201029 12:43:49.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.648" endtime="20201029 12:43:49.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.959" level="INFO">${RESULT} = [{'diff': 7.944000000002782e-06}, {'diff': 2.513900000000041e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.229100000000067e-05}, {'diff': 1.9401999999998226e-05}, {'diff': 2.6082999999999662e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:49.956" endtime="20201029 12:43:49.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.963" level="INFO">${ACCURACY} = {'diff': [7.944000000002782e-06, 2.513900000000041e-05, 2.3263999999998536e-05, 2.229100000000067e-05, 1.9401999999998226e-05, 2.6082999999999662e-05, 2.2264000000001005e-05, 2.3235999999999396e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:43:49.960" endtime="20201029 12:43:49.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.968" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.967" endtime="20201029 12:43:49.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.970" level="INFO">VALUE: [7.944000000002782e-06, 2.513900000000041e-05, 2.3263999999998536e-05, 2.229100000000067e-05, 1.9401999999998226e-05, 2.6082999999999662e-05, 2.2264000000001005e-05, 2.3235999999999396e-05, 1.944499999999988e-05, 2.413900000000288e-05, 2.1319999999998285e-05, 2.034699999999695e-05, 2.2278000000000575e-05, 2.037499999999956e-05, 1.9429999999997366e-05, 2.138900000000013e-05, 2.130500000000271e-05, 1.9416000000001266e-05, 2.515299999999998e-05, 2.3249999999998966e-05, 2.3179999999997647e-05, 2.3235999999999396e-05, 1.940300000000117e-05, 2.3179999999997647e-05, 2.418099999999812e-05, 2.133299999999838e-05, 2.518099999999912e-05, 2.326300000000253e-05, 2.134700000000142e-05, 2.136100000000099e-05, 2.229100000000067e-05, 2.3250000000002435e-05, 2.034700000000042e-05, 2.1320000000001754e-05, 2.2292000000000145e-05, 2.6110999999998802e-05, 2.515299999999998e-05, 2.036099999999999e-05, 1.940300000000117e-05, 2.6096999999999232e-05, 1.9457999999999975e-05, 2.3249999999998966e-05, 2.516699999999955e-05, 2.22770000000011e-05, 2.515299999999998e-05, 2.3235999999999396e-05, 2.519499999999869e-05, 2.42230000000003e-05, 2.418100000000159e-05, 2.4194000000001686e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.969" endtime="20201029 12:43:49.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.964" endtime="20201029 12:43:49.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.979" endtime="20201029 12:43:49.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.978" endtime="20201029 12:43:49.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.976" endtime="20201029 12:43:49.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.616" endtime="20201029 12:43:50.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.615" endtime="20201029 12:43:50.000"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.008" endtime="20201029 12:43:50.031"></status>
</kw>
<msg timestamp="20201029 12:43:50.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.007" endtime="20201029 12:43:50.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.032" endtime="20201029 12:43:50.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.035" endtime="20201029 12:43:50.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.004" endtime="20201029 12:43:50.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.002" endtime="20201029 12:43:50.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.044" endtime="20201029 12:43:50.329"></status>
</kw>
<msg timestamp="20201029 12:43:50.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024244736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024288958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.042" endtime="20201029 12:43:50.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024244736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024288958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.333" endtime="20201029 12:43:50.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.341" endtime="20201029 12:43:50.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.040" endtime="20201029 12:43:50.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.038" endtime="20201029 12:43:50.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.347" level="INFO">${RESULT} = [{'diff': 4.422200000000001e-05}, {'diff': 5.483400000000013e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.091700000000102e-05}, {'diff': 5.2014000000003e-05}, {'diff': 5.190300000000245e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:50.344" endtime="20201029 12:43:50.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.352" level="INFO">${ACCURACY} = {'diff': [4.422200000000001e-05, 5.483400000000013e-05, 5.199999999999996e-05, 5.091700000000102e-05, 5.2014000000003e-05, 5.190300000000245e-05, 5.008299999999938e-05, 5.383299999999966e-05, 5.102799...</msg>
<status status="PASS" starttime="20201029 12:43:50.348" endtime="20201029 12:43:50.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.356" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.355" endtime="20201029 12:43:50.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.358" level="INFO">VALUE: [4.422200000000001e-05, 5.483400000000013e-05, 5.199999999999996e-05, 5.091700000000102e-05, 5.2014000000003e-05, 5.190300000000245e-05, 5.008299999999938e-05, 5.383299999999966e-05, 5.10279999999981e-05, 5.5693999999998495e-05, 5.388899999999794e-05, 5.666699999999983e-05, 5.0902000000001973e-05, 5.002800000000057e-05, 5.379200000000042e-05, 5.390300000000098e-05, 5.379200000000042e-05, 4.997200000000229e-05, 5.008299999999938e-05, 5.094400000000068e-05, 5.093100000000059e-05, 5.588899999999994e-05, 5.381999999999956e-05, 5.19730000000003e-05, 4.904199999999914e-05, 5.005599999999971e-05, 5.473600000000314e-05, 5.4735999999999674e-05, 5.102800000000157e-05, 5.475000000000271e-05, 5.102800000000157e-05, 5.380500000000052e-05, 5.5791999999998954e-05, 5.006899999999981e-05, 5.091700000000102e-05, 5.1971999999997354e-05, 5.29730000000013e-05, 5.5707999999998065e-05, 5.377800000000085e-05, 5.2943999999999214e-05, 5.4791999999997953e-05, 5.005599999999971e-05, 5.1971999999997354e-05, 5.48609999999998e-05, 5.102800000000157e-05, 5.663900000000069e-05, 5.284800000000117e-05, 5.283299999999866e-05, 5.5750000000000244e-05, 5.387499999999837e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.357" endtime="20201029 12:43:50.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.352" endtime="20201029 12:43:50.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.364" endtime="20201029 12:43:50.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.363" endtime="20201029 12:43:50.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.361" endtime="20201029 12:43:50.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.001" endtime="20201029 12:43:50.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.000" endtime="20201029 12:43:50.385"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.393" endtime="20201029 12:43:50.413"></status>
</kw>
<msg timestamp="20201029 12:43:50.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.392" endtime="20201029 12:43:50.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.415" endtime="20201029 12:43:50.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.417" endtime="20201029 12:43:50.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.389" endtime="20201029 12:43:50.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.387" endtime="20201029 12:43:50.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.426" endtime="20201029 12:43:50.712"></status>
</kw>
<msg timestamp="20201029 12:43:50.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021182917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.425" endtime="20201029 12:43:50.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021121486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021182917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.716" endtime="20201029 12:43:50.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.724" endtime="20201029 12:43:50.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.422" endtime="20201029 12:43:50.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.421" endtime="20201029 12:43:50.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.730" level="INFO">${RESULT} = [{'diff': 6.143100000000068e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.570900000000101e-05}, {'diff': 4.912500000000056e-05}, {'diff': 5.663900000000069e-05}, {'diff': 5.280500000000299e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:50.727" endtime="20201029 12:43:50.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.738" level="INFO">${ACCURACY} = {'diff': [6.143100000000068e-05, 5.5722000000001104e-05, 5.570900000000101e-05, 4.912500000000056e-05, 5.663900000000069e-05, 5.280500000000299e-05, 5.1901999999999504e-05, 5.197200000000082e-05, 5.37...</msg>
<status status="PASS" starttime="20201029 12:43:50.731" endtime="20201029 12:43:50.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.742" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.741" endtime="20201029 12:43:50.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.745" level="INFO">VALUE: [6.143100000000068e-05, 5.5722000000001104e-05, 5.570900000000101e-05, 4.912500000000056e-05, 5.663900000000069e-05, 5.280500000000299e-05, 5.1901999999999504e-05, 5.197200000000082e-05, 5.3763999999997814e-05, 5.187499999999984e-05, 5.187500000000331e-05, 4.9945000000002626e-05, 5.4901999999999035e-05, 5.568100000000187e-05, 5.101399999999853e-05, 5.3749999999998244e-05, 5.198600000000039e-05, 5.088899999999841e-05, 5.090299999999798e-05, 5.102800000000157e-05, 5.379200000000042e-05, 5.565299999999926e-05, 5.5736000000000674e-05, 5.090299999999798e-05, 5.5707999999998065e-05, 5.19730000000003e-05, 4.9945000000002626e-05, 5.098599999999939e-05, 5.186100000000027e-05, 5.387500000000184e-05, 4.995800000000272e-05, 5.280499999999952e-05, 5.005599999999971e-05, 5.5763999999999814e-05, 5.090300000000145e-05, 5.291699999999955e-05, 5.28340000000016e-05, 5.5722000000001104e-05, 5.2929999999999644e-05, 5.569500000000144e-05, 5.472299999999958e-05, 5.4722000000000104e-05, 5.100000000000243e-05, 5.473700000000262e-05, 5.5693999999998495e-05, 5.194500000000116e-05, 5.56809999999984e-05, 5.663900000000069e-05, 5.286100000000127e-05, 5.002800000000057e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.743" endtime="20201029 12:43:50.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.739" endtime="20201029 12:43:50.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.750" endtime="20201029 12:43:50.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.748" endtime="20201029 12:43:50.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.747" endtime="20201029 12:43:50.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.386" endtime="20201029 12:43:50.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.385" endtime="20201029 12:43:50.770"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.779" endtime="20201029 12:43:50.800"></status>
</kw>
<msg timestamp="20201029 12:43:50.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.778" endtime="20201029 12:43:50.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.802" endtime="20201029 12:43:50.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.804" endtime="20201029 12:43:50.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.775" endtime="20201029 12:43:50.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.773" endtime="20201029 12:43:50.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.815" endtime="20201029 12:43:51.102"></status>
</kw>
<msg timestamp="20201029 12:43:51.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022457889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.813" endtime="20201029 12:43:51.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022457889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.106" endtime="20201029 12:43:51.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.114" endtime="20201029 12:43:51.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.810" endtime="20201029 12:43:51.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.807" endtime="20201029 12:43:51.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.121" level="INFO">${RESULT} = [{'diff': 4.430499999999796e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.194400000000168e-05}, {'diff': 5.094400000000068e-05}, {'diff': 5.2902000000000504e-05}, {'diff': 5.4749999999999244e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:51.118" endtime="20201029 12:43:51.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.125" level="INFO">${ACCURACY} = {'diff': [4.430499999999796e-05, 5.5708000000001534e-05, 5.194400000000168e-05, 5.094400000000068e-05, 5.2902000000000504e-05, 5.4749999999999244e-05, 5.5707999999998065e-05, 5.5736000000000674e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:43:51.122" endtime="20201029 12:43:51.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.129" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.128" endtime="20201029 12:43:51.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.131" level="INFO">VALUE: [4.430499999999796e-05, 5.5708000000001534e-05, 5.194400000000168e-05, 5.094400000000068e-05, 5.2902000000000504e-05, 5.4749999999999244e-05, 5.5707999999998065e-05, 5.5736000000000674e-05, 5.19730000000003e-05, 5.2957999999998784e-05, 5.491700000000155e-05, 4.998599999999839e-05, 5.387500000000184e-05, 5.108399999999985e-05, 5.380599999999999e-05, 5.186100000000027e-05, 5.195800000000125e-05, 5.187499999999984e-05, 5.484700000000023e-05, 5.188899999999941e-05, 5.2916000000000074e-05, 5.093100000000059e-05, 5.5736000000000674e-05, 5.6736000000001674e-05, 5.091699999999755e-05, 5.484700000000023e-05, 5.005599999999971e-05, 4.9986999999997866e-05, 5.388900000000141e-05, 5.187499999999984e-05, 5.104200000000114e-05, 5.662500000000112e-05, 5.476400000000228e-05, 5.1957999999997784e-05, 5.0943999999997214e-05, 5.484699999999676e-05, 5.283300000000213e-05, 5.008299999999938e-05, 5.379199999999695e-05, 5.198699999999987e-05, 5.088899999999841e-05, 5.104199999999767e-05, 5.572300000000058e-05, 5.3763999999997814e-05, 5.006999999999928e-05, 5.379099999999748e-05, 5.388899999999794e-05, 5.186100000000027e-05, 5.5777999999999384e-05, 5.28470000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.130" endtime="20201029 12:43:51.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.126" endtime="20201029 12:43:51.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.137" endtime="20201029 12:43:51.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.135" endtime="20201029 12:43:51.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.134" endtime="20201029 12:43:51.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.771" endtime="20201029 12:43:51.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.771" endtime="20201029 12:43:51.157"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.166" endtime="20201029 12:43:51.187"></status>
</kw>
<msg timestamp="20201029 12:43:51.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.164" endtime="20201029 12:43:51.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.188" endtime="20201029 12:43:51.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.191" endtime="20201029 12:43:51.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.162" endtime="20201029 12:43:51.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.160" endtime="20201029 12:43:51.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.200" endtime="20201029 12:43:51.484"></status>
</kw>
<msg timestamp="20201029 12:43:51.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.198" endtime="20201029 12:43:51.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.488" endtime="20201029 12:43:51.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.496" endtime="20201029 12:43:51.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.196" endtime="20201029 12:43:51.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.194" endtime="20201029 12:43:51.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.503" level="INFO">${RESULT} = [{'diff': 4.041599999999798e-05}, {'diff': 5.2916000000000074e-05}, {'diff': 5.583299999999819e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.195900000000073e-05}, {'diff': 5.479099999999848e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:51.500" endtime="20201029 12:43:51.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.507" level="INFO">${ACCURACY} = {'diff': [4.041599999999798e-05, 5.2916000000000074e-05, 5.583299999999819e-05, 5.287500000000084e-05, 5.195900000000073e-05, 5.479099999999848e-05, 5.194500000000116e-05, 5.008299999999938e-05, 5.474...</msg>
<status status="PASS" starttime="20201029 12:43:51.504" endtime="20201029 12:43:51.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.511" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.510" endtime="20201029 12:43:51.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.514" level="INFO">VALUE: [4.041599999999798e-05, 5.2916000000000074e-05, 5.583299999999819e-05, 5.287500000000084e-05, 5.195900000000073e-05, 5.479099999999848e-05, 5.194500000000116e-05, 5.008299999999938e-05, 5.4749999999999244e-05, 5.5665999999999355e-05, 5.480500000000152e-05, 5.5750000000000244e-05, 5.390300000000098e-05, 5.381900000000009e-05, 5.290299999999998e-05, 4.995800000000272e-05, 5.290299999999998e-05, 5.197200000000082e-05, 5.094500000000016e-05, 5.006899999999981e-05, 5.095800000000025e-05, 5.5777999999999384e-05, 5.5735999999997204e-05, 5.5791999999998954e-05, 5.5707999999998065e-05, 5.2971999999998354e-05, 5.484700000000023e-05, 5.5736000000000674e-05, 5.194400000000168e-05, 5.383300000000313e-05, 5.293099999999912e-05, 5.187499999999984e-05, 5.572300000000058e-05, 5.10279999999981e-05, 5.377800000000085e-05, 5.390300000000098e-05, 4.997199999999882e-05, 5.481899999999762e-05, 5.2957999999998784e-05, 5.2929999999999644e-05, 5.483300000000066e-05, 5.480500000000152e-05, 5.101299999999906e-05, 5.5750000000000244e-05, 5.490300000000198e-05, 4.995799999999925e-05, 5.290299999999998e-05, 5.2957999999998784e-05, 5.0943999999997214e-05, 5.101399999999853e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.513" endtime="20201029 12:43:51.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.508" endtime="20201029 12:43:51.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.520" endtime="20201029 12:43:51.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.518" endtime="20201029 12:43:51.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.517" endtime="20201029 12:43:51.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.158" endtime="20201029 12:43:51.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.158" endtime="20201029 12:43:51.540"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.549" endtime="20201029 12:43:51.568"></status>
</kw>
<msg timestamp="20201029 12:43:51.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.547" endtime="20201029 12:43:51.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.570" endtime="20201029 12:43:51.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.572" endtime="20201029 12:43:51.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.545" endtime="20201029 12:43:51.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.543" endtime="20201029 12:43:51.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.581" endtime="20201029 12:43:51.867"></status>
</kw>
<msg timestamp="20201029 12:43:51.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021021111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.580" endtime="20201029 12:43:51.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021021111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.871" endtime="20201029 12:43:51.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.879" endtime="20201029 12:43:51.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.577" endtime="20201029 12:43:51.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.576" endtime="20201029 12:43:51.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.885" level="INFO">${RESULT} = [{'diff': 5.379199999999695e-05}, {'diff': 5.480500000000152e-05}, {'diff': 5.004200000000014e-05}, {'diff': 5.379100000000095e-05}, {'diff': 5.5694000000001964e-05}, {'diff': 5.190299999999898e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:51.882" endtime="20201029 12:43:51.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.890" level="INFO">${ACCURACY} = {'diff': [5.379199999999695e-05, 5.480500000000152e-05, 5.004200000000014e-05, 5.379100000000095e-05, 5.5694000000001964e-05, 5.190299999999898e-05, 4.905499999999924e-05, 5.4791999999997953e-05, 5.38...</msg>
<status status="PASS" starttime="20201029 12:43:51.886" endtime="20201029 12:43:51.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.895" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.894" endtime="20201029 12:43:51.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.897" level="INFO">VALUE: [5.379199999999695e-05, 5.480500000000152e-05, 5.004200000000014e-05, 5.379100000000095e-05, 5.5694000000001964e-05, 5.190299999999898e-05, 4.905499999999924e-05, 5.4791999999997953e-05, 5.381900000000009e-05, 5.383299999999966e-05, 5.284800000000117e-05, 5.483400000000013e-05, 5.1915999999999074e-05, 5.28609999999978e-05, 5.4763999999998814e-05, 5.5750000000000244e-05, 5.194400000000168e-05, 5.190300000000245e-05, 5.384699999999923e-05, 5.477699999999891e-05, 5.5777999999999384e-05, 5.102800000000157e-05, 5.287500000000084e-05, 5.48609999999998e-05, 5.0959000000003196e-05, 5.1929999999998644e-05, 5.6735999999998205e-05, 5.288899999999694e-05, 5.002800000000057e-05, 5.1929999999998644e-05, 5.091700000000102e-05, 5.098599999999939e-05, 5.384699999999923e-05, 5.290299999999998e-05, 4.9973000000001766e-05, 5.194500000000116e-05, 5.568100000000187e-05, 5.097199999999982e-05, 5.387499999999837e-05, 5.197200000000082e-05, 5.4791999999997953e-05, 5.107000000000028e-05, 5.576400000000328e-05, 5.193099999999812e-05, 5.480600000000099e-05, 5.288900000000041e-05, 5.5805999999998523e-05, 5.191699999999855e-05, 5.008400000000232e-05, 5.193100000000159e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.896" endtime="20201029 12:43:51.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.891" endtime="20201029 12:43:51.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.902" endtime="20201029 12:43:51.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.901" endtime="20201029 12:43:51.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.900" endtime="20201029 12:43:51.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.541" endtime="20201029 12:43:51.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.541" endtime="20201029 12:43:51.923"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.931" endtime="20201029 12:43:51.955"></status>
</kw>
<msg timestamp="20201029 12:43:51.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.930" endtime="20201029 12:43:51.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.957" endtime="20201029 12:43:51.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.959" endtime="20201029 12:43:51.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.927" endtime="20201029 12:43:51.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.925" endtime="20201029 12:43:51.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.968" endtime="20201029 12:43:52.254"></status>
</kw>
<msg timestamp="20201029 12:43:52.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.966" endtime="20201029 12:43:52.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.259" endtime="20201029 12:43:52.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.267" endtime="20201029 12:43:52.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.964" endtime="20201029 12:43:52.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.962" endtime="20201029 12:43:52.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.273" level="INFO">${RESULT} = [{'diff': 4.3318999999999996e-05}, {'diff': 5.091700000000102e-05}, {'diff': 5.283300000000213e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.093100000000059e-05}, {'diff': 5.288900000000041e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:52.270" endtime="20201029 12:43:52.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.277" level="INFO">${ACCURACY} = {'diff': [4.3318999999999996e-05, 5.091700000000102e-05, 5.283300000000213e-05, 5.290299999999998e-05, 5.093100000000059e-05, 5.288900000000041e-05, 5.099999999999896e-05, 5.477699999999891e-05, 5.286...</msg>
<status status="PASS" starttime="20201029 12:43:52.274" endtime="20201029 12:43:52.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.282" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.281" endtime="20201029 12:43:52.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.284" level="INFO">VALUE: [4.3318999999999996e-05, 5.091700000000102e-05, 5.283300000000213e-05, 5.290299999999998e-05, 5.093100000000059e-05, 5.288900000000041e-05, 5.099999999999896e-05, 5.477699999999891e-05, 5.286200000000074e-05, 5.091700000000102e-05, 5.662500000000112e-05, 5.479100000000195e-05, 5.380500000000052e-05, 5.284699999999823e-05, 5.0943999999997214e-05, 5.00270000000011e-05, 5.665300000000026e-05, 5.5750000000000244e-05, 5.377700000000138e-05, 5.475000000000271e-05, 4.995799999999925e-05, 5.004200000000014e-05, 5.194400000000168e-05, 5.2902000000000504e-05, 5.5777999999999384e-05, 5.286100000000127e-05, 5.572300000000058e-05, 5.28479999999977e-05, 5.5777999999999384e-05, 5.098599999999939e-05, 5.187499999999984e-05, 5.095800000000025e-05, 5.097199999999982e-05, 5.384800000000217e-05, 5.4791999999997953e-05, 5.290299999999998e-05, 5.005500000000024e-05, 5.380500000000052e-05, 5.090299999999798e-05, 5.475000000000271e-05, 5.288900000000041e-05, 5.290299999999998e-05, 5.380599999999999e-05, 5.190299999999898e-05, 5.387500000000184e-05, 5.288899999999694e-05, 5.290299999999998e-05, 5.284800000000117e-05, 4.994400000000315e-05, 5.1915999999999074e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.283" endtime="20201029 12:43:52.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.278" endtime="20201029 12:43:52.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.289" endtime="20201029 12:43:52.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.288" endtime="20201029 12:43:52.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.287" endtime="20201029 12:43:52.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.924" endtime="20201029 12:43:52.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.923" endtime="20201029 12:43:52.310"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.318" endtime="20201029 12:43:52.342"></status>
</kw>
<msg timestamp="20201029 12:43:52.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.317" endtime="20201029 12:43:52.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.343" endtime="20201029 12:43:52.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.346" endtime="20201029 12:43:52.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.314" endtime="20201029 12:43:52.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.312" endtime="20201029 12:43:52.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.355" endtime="20201029 12:43:52.640"></status>
</kw>
<msg timestamp="20201029 12:43:52.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025307181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.353" endtime="20201029 12:43:52.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025243792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025307181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.644" endtime="20201029 12:43:52.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.652" endtime="20201029 12:43:52.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.351" endtime="20201029 12:43:52.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.349" endtime="20201029 12:43:52.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.659" level="INFO">${RESULT} = [{'diff': 6.33890000000005e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.5805999999998523e-05}, {'diff': 5.477800000000185e-05}, {'diff': 5.581899999999862e-05}, {'diff': 5.287500000000084e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:52.656" endtime="20201029 12:43:52.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.663" level="INFO">${ACCURACY} = {'diff': [6.33890000000005e-05, 5.094500000000016e-05, 5.5805999999998523e-05, 5.477800000000185e-05, 5.581899999999862e-05, 5.287500000000084e-05, 5.28609999999978e-05, 5.48609999999998e-05, 5.577699...</msg>
<status status="PASS" starttime="20201029 12:43:52.660" endtime="20201029 12:43:52.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.667" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.666" endtime="20201029 12:43:52.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.670" level="INFO">VALUE: [6.33890000000005e-05, 5.094500000000016e-05, 5.5805999999998523e-05, 5.477800000000185e-05, 5.581899999999862e-05, 5.287500000000084e-05, 5.28609999999978e-05, 5.48609999999998e-05, 5.577699999999991e-05, 5.384699999999923e-05, 5.576400000000328e-05, 5.4777999999998384e-05, 5.384699999999923e-05, 5.1916000000002543e-05, 5.102699999999863e-05, 4.995799999999925e-05, 5.095899999999973e-05, 5.194500000000116e-05, 5.283300000000213e-05, 5.28609999999978e-05, 5.5708000000001534e-05, 4.999999999999796e-05, 5.477800000000185e-05, 5.580600000000199e-05, 5.102800000000157e-05, 5.095899999999973e-05, 5.479099999999848e-05, 5.201399999999953e-05, 5.386100000000227e-05, 5.095800000000025e-05, 5.383299999999966e-05, 5.477800000000185e-05, 5.387499999999837e-05, 5.1014000000002e-05, 5.293099999999912e-05, 5.5708000000001534e-05, 4.998600000000186e-05, 5.383299999999966e-05, 5.293099999999912e-05, 5.102800000000157e-05, 4.997199999999882e-05, 5.6736000000001674e-05, 5.1014000000002e-05, 5.195900000000073e-05, 5.195899999999726e-05, 5.383299999999966e-05, 5.191700000000202e-05, 5.5805999999998523e-05, 5.1014000000002e-05, 5.095800000000025e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.669" endtime="20201029 12:43:52.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.664" endtime="20201029 12:43:52.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.676" endtime="20201029 12:43:52.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.674" endtime="20201029 12:43:52.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.673" endtime="20201029 12:43:52.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.311" endtime="20201029 12:43:52.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.310" endtime="20201029 12:43:52.696"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.705" endtime="20201029 12:43:52.723"></status>
</kw>
<msg timestamp="20201029 12:43:52.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.704" endtime="20201029 12:43:52.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.725" endtime="20201029 12:43:52.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.727" endtime="20201029 12:43:52.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.701" endtime="20201029 12:43:52.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.699" endtime="20201029 12:43:52.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.736" endtime="20201029 12:43:53.021"></status>
</kw>
<msg timestamp="20201029 12:43:53.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020547722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.735" endtime="20201029 12:43:53.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020547722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020584389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.025" endtime="20201029 12:43:53.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.033" endtime="20201029 12:43:53.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.732" endtime="20201029 12:43:53.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.730" endtime="20201029 12:43:53.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.040" level="INFO">${RESULT} = [{'diff': 3.6667000000000644e-05}, {'diff': 5.1915999999999074e-05}, {'diff': 5.282000000000203e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.2902000000000504e-05}, {'diff': 5.00279999999971e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:53.036" endtime="20201029 12:43:53.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.045" level="INFO">${ACCURACY} = {'diff': [3.6667000000000644e-05, 5.1915999999999074e-05, 5.282000000000203e-05, 5.38609999999988e-05, 5.2902000000000504e-05, 5.00279999999971e-05, 5.477699999999891e-05, 5.379200000000042e-05, 5.002...</msg>
<status status="PASS" starttime="20201029 12:43:53.041" endtime="20201029 12:43:53.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.049" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.048" endtime="20201029 12:43:53.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.051" level="INFO">VALUE: [3.6667000000000644e-05, 5.1915999999999074e-05, 5.282000000000203e-05, 5.38609999999988e-05, 5.2902000000000504e-05, 5.00279999999971e-05, 5.477699999999891e-05, 5.379200000000042e-05, 5.002699999999763e-05, 5.480500000000152e-05, 5.4735999999999674e-05, 5.004199999999667e-05, 5.095899999999973e-05, 5.286100000000127e-05, 5.5736000000000674e-05, 5.479099999999848e-05, 5.4749999999999244e-05, 5.665300000000026e-05, 5.1943999999998214e-05, 5.288900000000041e-05, 5.193099999999812e-05, 5.479100000000195e-05, 5.093100000000059e-05, 5.669499999999897e-05, 5.093000000000111e-05, 5.383399999999913e-05, 5.5736000000000674e-05, 5.186100000000027e-05, 5.2929999999999644e-05, 5.384699999999923e-05, 5.0957999999996784e-05, 5.00270000000011e-05, 5.0929999999997644e-05, 5.100000000000243e-05, 5.19730000000003e-05, 4.90270000000001e-05, 5.281999999999856e-05, 5.193099999999812e-05, 5.1901999999999504e-05, 5.5736000000000674e-05, 5.095899999999973e-05, 4.997199999999882e-05, 5.005499999999677e-05, 5.090300000000145e-05, 5.28340000000016e-05, 5.5693999999998495e-05, 5.5736000000000674e-05, 5.002800000000057e-05, 4.998600000000186e-05, 5.477700000000238e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.050" endtime="20201029 12:43:53.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.045" endtime="20201029 12:43:53.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.056" endtime="20201029 12:43:53.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.055" endtime="20201029 12:43:53.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.054" endtime="20201029 12:43:53.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.697" endtime="20201029 12:43:53.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.697" endtime="20201029 12:43:53.077"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.086" endtime="20201029 12:43:53.107"></status>
</kw>
<msg timestamp="20201029 12:43:53.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.084" endtime="20201029 12:43:53.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.109" endtime="20201029 12:43:53.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.111" endtime="20201029 12:43:53.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.082" endtime="20201029 12:43:53.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.080" endtime="20201029 12:43:53.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.120" endtime="20201029 12:43:53.405"></status>
</kw>
<msg timestamp="20201029 12:43:53.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.119" endtime="20201029 12:43:53.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.409" endtime="20201029 12:43:53.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.417" endtime="20201029 12:43:53.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.116" endtime="20201029 12:43:53.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.114" endtime="20201029 12:43:53.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.424" level="INFO">${RESULT} = [{'diff': 6.336099999999789e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.4763999999998814e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.5763999999999814e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:53.421" endtime="20201029 12:43:53.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.428" level="INFO">${ACCURACY} = {'diff': [6.336099999999789e-05, 5.287500000000084e-05, 5.187499999999984e-05, 5.4763999999998814e-05, 5.290299999999998e-05, 5.5763999999999814e-05, 5.4722000000000104e-05, 5.28609999999978e-05, 5.56...</msg>
<status status="PASS" starttime="20201029 12:43:53.425" endtime="20201029 12:43:53.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.433" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.431" endtime="20201029 12:43:53.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.435" level="INFO">VALUE: [6.336099999999789e-05, 5.287500000000084e-05, 5.187499999999984e-05, 5.4763999999998814e-05, 5.290299999999998e-05, 5.5763999999999814e-05, 5.4722000000000104e-05, 5.28609999999978e-05, 5.565299999999926e-05, 5.187499999999984e-05, 5.577699999999991e-05, 5.487499999999937e-05, 5.5693999999998495e-05, 4.906900000000228e-05, 5.291699999999955e-05, 5.093099999999712e-05, 5.5763999999999814e-05, 5.095800000000025e-05, 5.098600000000286e-05, 5.66809999999994e-05, 5.375000000000171e-05, 5.488899999999894e-05, 5.381900000000009e-05, 5.18470000000007e-05, 5.188900000000288e-05, 5.483400000000013e-05, 5.283300000000213e-05, 5.6707999999999065e-05, 5.381900000000009e-05, 5.102800000000157e-05, 5.477800000000185e-05, 5.377800000000085e-05, 5.198600000000039e-05, 5.187500000000331e-05, 5.008299999999938e-05, 5.670899999999854e-05, 5.379100000000095e-05, 5.102800000000157e-05, 5.4749999999999244e-05, 5.187499999999984e-05, 5.38609999999988e-05, 5.288900000000041e-05, 5.093100000000059e-05, 5.187499999999984e-05, 5.5763999999999814e-05, 5.094400000000068e-05, 5.188899999999941e-05, 5.198600000000039e-05, 5.476299999999934e-05, 5.5707999999998065e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.434" endtime="20201029 12:43:53.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.429" endtime="20201029 12:43:53.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.440" endtime="20201029 12:43:53.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.438" endtime="20201029 12:43:53.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.437" endtime="20201029 12:43:53.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.078" endtime="20201029 12:43:53.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.077" endtime="20201029 12:43:53.461"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.469" endtime="20201029 12:43:53.493"></status>
</kw>
<msg timestamp="20201029 12:43:53.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.468" endtime="20201029 12:43:53.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.494" endtime="20201029 12:43:53.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.497" endtime="20201029 12:43:53.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.465" endtime="20201029 12:43:53.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.463" endtime="20201029 12:43:53.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.506" endtime="20201029 12:43:53.793"></status>
</kw>
<msg timestamp="20201029 12:43:53.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025071764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.504" endtime="20201029 12:43:53.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025071764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025115111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.797" endtime="20201029 12:43:53.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.805" endtime="20201029 12:43:53.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.502" endtime="20201029 12:43:53.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.500" endtime="20201029 12:43:53.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.812" level="INFO">${RESULT} = [{'diff': 4.3346999999999136e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.002800000000057e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.58749999999969e-05}, {'diff': 5.5750000000000244e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:53.808" endtime="20201029 12:43:53.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.817" level="INFO">${ACCURACY} = {'diff': [4.3346999999999136e-05, 5.4749999999999244e-05, 5.002800000000057e-05, 5.199999999999996e-05, 5.58749999999969e-05, 5.5750000000000244e-05, 5.581999999999809e-05, 5.091700000000102e-05, 5.48...</msg>
<status status="PASS" starttime="20201029 12:43:53.813" endtime="20201029 12:43:53.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.822" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.821" endtime="20201029 12:43:53.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.824" level="INFO">VALUE: [4.3346999999999136e-05, 5.4749999999999244e-05, 5.002800000000057e-05, 5.199999999999996e-05, 5.58749999999969e-05, 5.5750000000000244e-05, 5.581999999999809e-05, 5.091700000000102e-05, 5.483299999999719e-05, 5.186100000000027e-05, 5.579099999999948e-05, 5.186199999999974e-05, 5.100000000000243e-05, 5.087500000000231e-05, 5.201399999999953e-05, 5.48479999999997e-05, 5.3916000000001074e-05, 5.476400000000228e-05, 5.094400000000068e-05, 5.487499999999937e-05, 5.0014000000001e-05, 5.201399999999953e-05, 5.281999999999856e-05, 5.005599999999971e-05, 5.666699999999983e-05, 5.487499999999937e-05, 5.491700000000155e-05, 5.3777999999997383e-05, 5.484700000000023e-05, 5.281999999999856e-05, 5.487499999999937e-05, 5.288900000000041e-05, 5.198600000000039e-05, 5.473699999999915e-05, 5.006899999999981e-05, 5.4749999999999244e-05, 5.004200000000014e-05, 5.4735999999999674e-05, 5.198600000000039e-05, 5.091700000000102e-05, 5.388900000000141e-05, 5.380599999999999e-05, 5.190299999999898e-05, 5.488899999999894e-05, 5.5694000000001964e-05, 5.2971999999998354e-05, 5.569499999999797e-05, 5.009699999999895e-05, 5.091600000000154e-05, 5.477700000000238e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.823" endtime="20201029 12:43:53.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.818" endtime="20201029 12:43:53.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.830" endtime="20201029 12:43:53.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.828" endtime="20201029 12:43:53.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.827" endtime="20201029 12:43:53.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.461" endtime="20201029 12:43:53.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.461" endtime="20201029 12:43:53.851"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.859" endtime="20201029 12:43:53.880"></status>
</kw>
<msg timestamp="20201029 12:43:53.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.858" endtime="20201029 12:43:53.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.881" endtime="20201029 12:43:53.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.887" endtime="20201029 12:43:53.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.855" endtime="20201029 12:43:53.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.853" endtime="20201029 12:43:53.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.899" endtime="20201029 12:43:54.184"></status>
</kw>
<msg timestamp="20201029 12:43:54.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.897" endtime="20201029 12:43:54.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.189" endtime="20201029 12:43:54.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.197" endtime="20201029 12:43:54.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.894" endtime="20201029 12:43:54.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.892" endtime="20201029 12:43:54.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.203" level="INFO">${RESULT} = [{'diff': 6.441699999999717e-05}, {'diff': 5.091700000000102e-05}, {'diff': 5.283399999999813e-05}, {'diff': 5.091699999999755e-05}, {'diff': 5.280599999999899e-05}, {'diff': 5.28470000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:54.200" endtime="20201029 12:43:54.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.211" level="INFO">${ACCURACY} = {'diff': [6.441699999999717e-05, 5.091700000000102e-05, 5.283399999999813e-05, 5.091699999999755e-05, 5.280599999999899e-05, 5.28470000000017e-05, 5.1985999999996924e-05, 5.187499999999984e-05, 5.3903...</msg>
<status status="PASS" starttime="20201029 12:43:54.204" endtime="20201029 12:43:54.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.215" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.214" endtime="20201029 12:43:54.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.217" level="INFO">VALUE: [6.441699999999717e-05, 5.091700000000102e-05, 5.283399999999813e-05, 5.091699999999755e-05, 5.280599999999899e-05, 5.28470000000017e-05, 5.1985999999996924e-05, 5.187499999999984e-05, 5.390300000000098e-05, 5.56809999999984e-05, 5.4735999999999674e-05, 5.481900000000109e-05, 5.284699999999823e-05, 5.188899999999941e-05, 5.4722000000000104e-05, 5.3916000000001074e-05, 5.665300000000026e-05, 5.4749999999999244e-05, 5.1957999999997784e-05, 5.4735999999999674e-05, 5.004100000000067e-05, 5.377800000000085e-05, 4.998599999999839e-05, 5.1971999999997354e-05, 5.379200000000042e-05, 5.570900000000101e-05, 5.483300000000066e-05, 5.280599999999899e-05, 5.187499999999984e-05, 5.569499999999797e-05, 5.291699999999955e-05, 5.18470000000007e-05, 5.4749999999999244e-05, 5.5665999999999355e-05, 5.005599999999971e-05, 5.376400000000128e-05, 4.997200000000229e-05, 4.997200000000229e-05, 5.388900000000141e-05, 5.087499999999884e-05, 5.28340000000016e-05, 5.101299999999906e-05, 5.377700000000138e-05, 5.38609999999988e-05, 5.5736000000000674e-05, 5.284800000000117e-05, 5.481900000000109e-05, 5.288899999999694e-05, 5.0901999999998504e-05, 5.484700000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.216" endtime="20201029 12:43:54.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.211" endtime="20201029 12:43:54.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.222" endtime="20201029 12:43:54.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.221" endtime="20201029 12:43:54.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.220" endtime="20201029 12:43:54.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.852" endtime="20201029 12:43:54.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.851" endtime="20201029 12:43:54.243"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.252" endtime="20201029 12:43:54.273"></status>
</kw>
<msg timestamp="20201029 12:43:54.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.250" endtime="20201029 12:43:54.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.274" endtime="20201029 12:43:54.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.277" endtime="20201029 12:43:54.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.248" endtime="20201029 12:43:54.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.246" endtime="20201029 12:43:54.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.286" endtime="20201029 12:43:54.573"></status>
</kw>
<msg timestamp="20201029 12:43:54.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021281972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.284" endtime="20201029 12:43:54.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021281972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.577" endtime="20201029 12:43:54.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.585" endtime="20201029 12:43:54.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.282" endtime="20201029 12:43:54.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.280" endtime="20201029 12:43:54.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.592" level="INFO">${RESULT} = [{'diff': 4.712499999999856e-05}, {'diff': 5.483400000000013e-05}, {'diff': 5.384800000000217e-05}, {'diff': 5.577699999999991e-05}, {'diff': 5.1901999999999504e-05}, {'diff': 5.005500000000024e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:54.589" endtime="20201029 12:43:54.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.596" level="INFO">${ACCURACY} = {'diff': [4.712499999999856e-05, 5.483400000000013e-05, 5.384800000000217e-05, 5.577699999999991e-05, 5.1901999999999504e-05, 5.005500000000024e-05, 5.381999999999956e-05, 5.290299999999998e-05, 5.092...</msg>
<status status="PASS" starttime="20201029 12:43:54.593" endtime="20201029 12:43:54.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.600" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.599" endtime="20201029 12:43:54.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.603" level="INFO">VALUE: [4.712499999999856e-05, 5.483400000000013e-05, 5.384800000000217e-05, 5.577699999999991e-05, 5.1901999999999504e-05, 5.005500000000024e-05, 5.381999999999956e-05, 5.290299999999998e-05, 5.0929999999997644e-05, 5.293099999999912e-05, 5.5722000000001104e-05, 5.101399999999853e-05, 5.284800000000117e-05, 5.2916000000000074e-05, 5.183299999999766e-05, 5.672300000000158e-05, 5.380599999999999e-05, 5.005599999999971e-05, 5.477699999999891e-05, 5.581900000000209e-05, 5.102800000000157e-05, 5.283399999999813e-05, 5.566699999999883e-05, 5.577699999999991e-05, 5.568100000000187e-05, 5.18609999999968e-05, 5.1014000000002e-05, 5.190300000000245e-05, 5.386100000000227e-05, 5.193000000000211e-05, 5.288900000000041e-05, 5.284699999999823e-05, 5.577699999999991e-05, 5.3763999999997814e-05, 5.38609999999988e-05, 5.66809999999994e-05, 5.28470000000017e-05, 5.006899999999981e-05, 5.379200000000042e-05, 5.20279999999991e-05, 5.4735999999999674e-05, 4.995799999999925e-05, 5.102699999999863e-05, 5.659799999999798e-05, 5.388900000000141e-05, 5.091700000000102e-05, 5.5805999999998523e-05, 5.579099999999948e-05, 5.5805999999998523e-05, 5.281900000000256e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.601" endtime="20201029 12:43:54.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.597" endtime="20201029 12:43:54.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.608" endtime="20201029 12:43:54.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.606" endtime="20201029 12:43:54.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.605" endtime="20201029 12:43:54.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.244" endtime="20201029 12:43:54.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.243" endtime="20201029 12:43:54.628"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.637" endtime="20201029 12:43:54.658"></status>
</kw>
<msg timestamp="20201029 12:43:54.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.636" endtime="20201029 12:43:54.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.659" endtime="20201029 12:43:54.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.662" endtime="20201029 12:43:54.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.633" endtime="20201029 12:43:54.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.631" endtime="20201029 12:43:54.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.671" endtime="20201029 12:43:54.956"></status>
</kw>
<msg timestamp="20201029 12:43:54.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.669" endtime="20201029 12:43:54.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.960" endtime="20201029 12:43:54.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.968" endtime="20201029 12:43:54.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.667" endtime="20201029 12:43:54.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.665" endtime="20201029 12:43:54.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.975" level="INFO">${RESULT} = [{'diff': 6.337499999999746e-05}, {'diff': 5.004200000000014e-05}, {'diff': 5.579200000000242e-05}, {'diff': 5.101399999999853e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.6707999999999065e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:54.972" endtime="20201029 12:43:54.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.979" level="INFO">${ACCURACY} = {'diff': [6.337499999999746e-05, 5.004200000000014e-05, 5.579200000000242e-05, 5.101399999999853e-05, 5.48609999999998e-05, 5.6707999999999065e-05, 5.002800000000057e-05, 5.191699999999855e-05, 5.0999...</msg>
<status status="PASS" starttime="20201029 12:43:54.976" endtime="20201029 12:43:54.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.983" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.982" endtime="20201029 12:43:54.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.986" level="INFO">VALUE: [6.337499999999746e-05, 5.004200000000014e-05, 5.579200000000242e-05, 5.101399999999853e-05, 5.48609999999998e-05, 5.6707999999999065e-05, 5.002800000000057e-05, 5.191699999999855e-05, 5.099999999999896e-05, 5.670900000000201e-05, 5.00270000000011e-05, 5.198600000000039e-05, 5.380500000000052e-05, 5.5750000000000244e-05, 5.580600000000199e-05, 5.287500000000084e-05, 5.097199999999982e-05, 5.097199999999982e-05, 5.38609999999988e-05, 5.479200000000142e-05, 5.5777999999999384e-05, 5.091700000000102e-05, 5.481999999999709e-05, 5.197200000000082e-05, 5.287500000000084e-05, 5.284699999999823e-05, 5.58749999999969e-05, 5.5777999999999384e-05, 5.098600000000286e-05, 5.2957999999998784e-05, 5.577699999999991e-05, 5.2929999999999644e-05, 5.284800000000117e-05, 5.579099999999948e-05, 5.5777999999999384e-05, 5.483400000000013e-05, 5.480499999999805e-05, 5.290299999999998e-05, 5.4915999999998605e-05, 5.481999999999709e-05, 5.379200000000042e-05, 5.481899999999762e-05, 5.197200000000082e-05, 5.488899999999894e-05, 5.4749999999999244e-05, 5.386100000000227e-05, 5.197200000000082e-05, 5.381999999999956e-05, 5.484700000000023e-05, 5.006899999999981e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.984" endtime="20201029 12:43:54.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.980" endtime="20201029 12:43:54.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.995" endtime="20201029 12:43:55.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.994" endtime="20201029 12:43:55.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.993" endtime="20201029 12:43:55.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.629" endtime="20201029 12:43:55.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.629" endtime="20201029 12:43:55.016"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.025" endtime="20201029 12:43:55.044"></status>
</kw>
<msg timestamp="20201029 12:43:55.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.023" endtime="20201029 12:43:55.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.046" endtime="20201029 12:43:55.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.048" endtime="20201029 12:43:55.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.020" endtime="20201029 12:43:55.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.018" endtime="20201029 12:43:55.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.057" endtime="20201029 12:43:55.342"></status>
</kw>
<msg timestamp="20201029 12:43:55.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.056" endtime="20201029 12:43:55.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022096708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.346" endtime="20201029 12:43:55.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.355" endtime="20201029 12:43:55.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.053" endtime="20201029 12:43:55.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.051" endtime="20201029 12:43:55.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.361" level="INFO">${RESULT} = [{'diff': 5.38609999999988e-05}, {'diff': 5.472299999999958e-05}, {'diff': 5.2957999999998784e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.375000000000171e-05}, {'diff': 5.583299999999819e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:55.358" endtime="20201029 12:43:55.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.366" level="INFO">${ACCURACY} = {'diff': [5.38609999999988e-05, 5.472299999999958e-05, 5.2957999999998784e-05, 5.4749999999999244e-05, 5.375000000000171e-05, 5.583299999999819e-05, 4.9987000000001336e-05, 5.6778000000000384e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 12:43:55.362" endtime="20201029 12:43:55.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.370" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.369" endtime="20201029 12:43:55.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.373" level="INFO">VALUE: [5.38609999999988e-05, 5.472299999999958e-05, 5.2957999999998784e-05, 5.4749999999999244e-05, 5.375000000000171e-05, 5.583299999999819e-05, 4.9987000000001336e-05, 5.6778000000000384e-05, 5.090299999999798e-05, 5.281899999999909e-05, 5.294400000000268e-05, 5.188899999999941e-05, 5.584700000000123e-05, 5.3707999999999534e-05, 5.197200000000082e-05, 5.477800000000185e-05, 4.897200000000129e-05, 5.387500000000184e-05, 5.280499999999952e-05, 5.388900000000141e-05, 4.995799999999925e-05, 5.4722000000000104e-05, 5.487499999999937e-05, 5.197200000000082e-05, 5.4722000000000104e-05, 5.476400000000228e-05, 5.483299999999719e-05, 5.28340000000016e-05, 5.104199999999767e-05, 5.56809999999984e-05, 5.580600000000199e-05, 4.995899999999873e-05, 5.482000000000056e-05, 5.5721999999997635e-05, 5.482000000000056e-05, 5.5708000000001534e-05, 5.4749999999999244e-05, 5.291699999999955e-05, 5.570900000000101e-05, 5.566699999999883e-05, 5.197200000000082e-05, 5.091700000000102e-05, 5.091700000000102e-05, 5.006899999999981e-05, 5.281999999999856e-05, 5.570900000000101e-05, 5.004200000000014e-05, 5.377700000000138e-05, 5.19730000000003e-05, 4.993000000000011e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.372" endtime="20201029 12:43:55.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.367" endtime="20201029 12:43:55.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.378" endtime="20201029 12:43:55.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.377" endtime="20201029 12:43:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.375" endtime="20201029 12:43:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.017" endtime="20201029 12:43:55.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.016" endtime="20201029 12:43:55.399"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.407" endtime="20201029 12:43:55.427"></status>
</kw>
<msg timestamp="20201029 12:43:55.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.406" endtime="20201029 12:43:55.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.429" endtime="20201029 12:43:55.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.431" endtime="20201029 12:43:55.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.403" endtime="20201029 12:43:55.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.401" endtime="20201029 12:43:55.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.440" endtime="20201029 12:43:55.730"></status>
</kw>
<msg timestamp="20201029 12:43:55.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021120139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.439" endtime="20201029 12:43:55.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021120139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.739" endtime="20201029 12:43:55.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.757" endtime="20201029 12:43:55.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.436" endtime="20201029 12:43:55.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.434" endtime="20201029 12:43:55.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.771" level="INFO">${RESULT} = [{'diff': 6.523599999999977e-05}, {'diff': 5.483400000000013e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.001399999999753e-05}, {'diff': 5.098599999999939e-05}, {'diff': 5.383299999999966e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:55.764" endtime="20201029 12:43:55.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.780" level="INFO">${ACCURACY} = {'diff': [6.523599999999977e-05, 5.483400000000013e-05, 5.290299999999998e-05, 5.001399999999753e-05, 5.098599999999939e-05, 5.383299999999966e-05, 5.481899999999762e-05, 5.377800000000085e-05, 5.0985...</msg>
<status status="PASS" starttime="20201029 12:43:55.773" endtime="20201029 12:43:55.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.789" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.787" endtime="20201029 12:43:55.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.794" level="INFO">VALUE: [6.523599999999977e-05, 5.483400000000013e-05, 5.290299999999998e-05, 5.001399999999753e-05, 5.098599999999939e-05, 5.383299999999966e-05, 5.481899999999762e-05, 5.377800000000085e-05, 5.098599999999939e-05, 5.0014000000001e-05, 5.4777999999998384e-05, 5.4777999999998384e-05, 5.281900000000256e-05, 5.38609999999988e-05, 5.191699999999855e-05, 5.384699999999923e-05, 5.000000000000143e-05, 5.6651999999997316e-05, 5.1957999999997784e-05, 5.383299999999966e-05, 5.577699999999991e-05, 5.4777999999998384e-05, 5.098599999999939e-05, 4.998600000000186e-05, 5.194400000000168e-05, 5.088900000000188e-05, 5.000000000000143e-05, 5.095899999999973e-05, 5.093099999999712e-05, 5.009699999999895e-05, 5.001399999999753e-05, 5.279199999999942e-05, 5.480600000000099e-05, 5.5707999999998065e-05, 5.482000000000056e-05, 5.286200000000074e-05, 5.005500000000024e-05, 5.572300000000058e-05, 5.188899999999941e-05, 5.2929999999999644e-05, 5.282000000000203e-05, 5.568100000000187e-05, 5.290299999999998e-05, 5.005599999999971e-05, 5.2943999999999214e-05, 5.4735999999999674e-05, 5.187499999999984e-05, 5.094500000000016e-05, 5.006999999999928e-05, 5.380599999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.791" endtime="20201029 12:43:55.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.782" endtime="20201029 12:43:55.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.804" endtime="20201029 12:43:55.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.801" endtime="20201029 12:43:55.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.799" endtime="20201029 12:43:55.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.400" endtime="20201029 12:43:55.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.399" endtime="20201029 12:43:55.826"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.835" endtime="20201029 12:43:55.854"></status>
</kw>
<msg timestamp="20201029 12:43:55.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.833" endtime="20201029 12:43:55.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.855" endtime="20201029 12:43:55.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.858" endtime="20201029 12:43:55.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.830" endtime="20201029 12:43:55.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.828" endtime="20201029 12:43:55.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.867" endtime="20201029 12:43:56.152"></status>
</kw>
<msg timestamp="20201029 12:43:56.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0209525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020998736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:55.865" endtime="20201029 12:43:56.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0209525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020998736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:56.156" endtime="20201029 12:43:56.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.164" endtime="20201029 12:43:56.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.863" endtime="20201029 12:43:56.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.861" endtime="20201029 12:43:56.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.170" level="INFO">${RESULT} = [{'diff': 4.623600000000158e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.480499999999805e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.1929999999998644e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:56.167" endtime="20201029 12:43:56.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.175" level="INFO">${ACCURACY} = {'diff': [4.623600000000158e-05, 5.383299999999966e-05, 5.480499999999805e-05, 5.482000000000056e-05, 5.4749999999999244e-05, 5.1929999999998644e-05, 5.108399999999985e-05, 5.288899999999694e-05, 5.00...</msg>
<status status="PASS" starttime="20201029 12:43:56.171" endtime="20201029 12:43:56.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.179" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.178" endtime="20201029 12:43:56.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.181" level="INFO">VALUE: [4.623600000000158e-05, 5.383299999999966e-05, 5.480499999999805e-05, 5.482000000000056e-05, 5.4749999999999244e-05, 5.1929999999998644e-05, 5.108399999999985e-05, 5.288899999999694e-05, 5.000000000000143e-05, 5.095800000000025e-05, 5.091600000000154e-05, 5.194500000000116e-05, 5.19730000000003e-05, 5.377800000000085e-05, 5.0014000000001e-05, 5.291699999999955e-05, 5.5722000000001104e-05, 5.281899999999909e-05, 5.5750000000000244e-05, 5.479099999999848e-05, 4.9973000000001766e-05, 5.6693999999999495e-05, 5.194499999999769e-05, 5.473699999999915e-05, 5.1929999999998644e-05, 5.577800000000285e-05, 5.094500000000016e-05, 5.1943999999998214e-05, 5.5763999999999814e-05, 5.5707999999998065e-05, 5.093100000000059e-05, 5.290299999999998e-05, 5.10279999999981e-05, 5.286100000000127e-05, 5.477699999999891e-05, 5.38479999999987e-05, 5.5693999999998495e-05, 5.280599999999899e-05, 5.5777999999999384e-05, 5.283399999999813e-05, 5.097200000000329e-05, 5.483300000000066e-05, 5.377800000000085e-05, 5.6707999999999065e-05, 5.1943999999998214e-05, 5.28340000000016e-05, 5.290299999999998e-05, 5.10279999999981e-05, 5.477800000000185e-05, 5.480500000000152e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.180" endtime="20201029 12:43:56.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.175" endtime="20201029 12:43:56.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.187" endtime="20201029 12:43:56.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.186" endtime="20201029 12:43:56.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.185" endtime="20201029 12:43:56.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.827" endtime="20201029 12:43:56.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.826" endtime="20201029 12:43:56.208"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.217" endtime="20201029 12:43:56.236"></status>
</kw>
<msg timestamp="20201029 12:43:56.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.215" endtime="20201029 12:43:56.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.237" endtime="20201029 12:43:56.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.239" endtime="20201029 12:43:56.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.213" endtime="20201029 12:43:56.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.210" endtime="20201029 12:43:56.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.248" endtime="20201029 12:43:56.533"></status>
</kw>
<msg timestamp="20201029 12:43:56.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.247" endtime="20201029 12:43:56.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.538" endtime="20201029 12:43:56.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.546" endtime="20201029 12:43:56.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.244" endtime="20201029 12:43:56.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.243" endtime="20201029 12:43:56.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.552" level="INFO">${RESULT} = [{'diff': 3.94859999999983e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.4763999999998814e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.28609999999978e-05}, {'diff': 5.0901999999998504e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:56.549" endtime="20201029 12:43:56.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.557" level="INFO">${ACCURACY} = {'diff': [3.94859999999983e-05, 5.201399999999953e-05, 5.4763999999998814e-05, 5.094500000000016e-05, 5.28609999999978e-05, 5.0901999999998504e-05, 5.104200000000114e-05, 4.997199999999882e-05, 5.1888...</msg>
<status status="PASS" starttime="20201029 12:43:56.553" endtime="20201029 12:43:56.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.562" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.561" endtime="20201029 12:43:56.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.564" level="INFO">VALUE: [3.94859999999983e-05, 5.201399999999953e-05, 5.4763999999998814e-05, 5.094500000000016e-05, 5.28609999999978e-05, 5.0901999999998504e-05, 5.104200000000114e-05, 4.997199999999882e-05, 5.188899999999941e-05, 5.104100000000167e-05, 5.283299999999866e-05, 4.993000000000011e-05, 5.284699999999823e-05, 5.28609999999978e-05, 5.380500000000052e-05, 5.581900000000209e-05, 4.9959000000002196e-05, 5.4749999999999244e-05, 5.284699999999823e-05, 4.9973000000001766e-05, 5.581900000000209e-05, 5.190299999999898e-05, 5.188900000000288e-05, 5.6679999999999925e-05, 5.281899999999909e-05, 5.000000000000143e-05, 5.2971999999998354e-05, 5.379200000000042e-05, 4.9972999999998297e-05, 5.6652000000000785e-05, 4.909799999999742e-05, 5.091699999999755e-05, 5.190299999999898e-05, 5.1014000000002e-05, 5.190299999999898e-05, 5.3777999999997383e-05, 5.381900000000009e-05, 5.197200000000082e-05, 5.181900000000156e-05, 4.997200000000229e-05, 5.665300000000026e-05, 5.187499999999984e-05, 5.004200000000014e-05, 5.283299999999866e-05, 5.093100000000059e-05, 5.66809999999994e-05, 5.099999999999896e-05, 5.281899999999909e-05, 4.997199999999882e-05, 5.5736000000000674e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.563" endtime="20201029 12:43:56.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.558" endtime="20201029 12:43:56.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.569" endtime="20201029 12:43:56.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.567" endtime="20201029 12:43:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.566" endtime="20201029 12:43:56.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.209" endtime="20201029 12:43:56.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.208" endtime="20201029 12:43:56.590"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.598" endtime="20201029 12:43:56.617"></status>
</kw>
<msg timestamp="20201029 12:43:56.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.597" endtime="20201029 12:43:56.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.619" endtime="20201029 12:43:56.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.621" endtime="20201029 12:43:56.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.594" endtime="20201029 12:43:56.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.592" endtime="20201029 12:43:56.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.630" endtime="20201029 12:43:56.917"></status>
</kw>
<msg timestamp="20201029 12:43:56.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.629" endtime="20201029 12:43:56.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020833944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.921" endtime="20201029 12:43:56.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.929" endtime="20201029 12:43:56.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.626" endtime="20201029 12:43:56.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.624" endtime="20201029 12:43:56.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.936" level="INFO">${RESULT} = [{'diff': 5.763899999999822e-05}, {'diff': 5.4777999999998384e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.00279999999971e-05}, {'diff': 5.5694000000001964e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:56.933" endtime="20201029 12:43:56.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.940" level="INFO">${ACCURACY} = {'diff': [5.763899999999822e-05, 5.4777999999998384e-05, 5.383299999999966e-05, 5.288900000000041e-05, 5.00279999999971e-05, 5.5694000000001964e-05, 5.570900000000101e-05, 5.381900000000009e-05, 5.184...</msg>
<status status="PASS" starttime="20201029 12:43:56.937" endtime="20201029 12:43:56.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.944" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.943" endtime="20201029 12:43:56.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.947" level="INFO">VALUE: [5.763899999999822e-05, 5.4777999999998384e-05, 5.383299999999966e-05, 5.288900000000041e-05, 5.00279999999971e-05, 5.5694000000001964e-05, 5.570900000000101e-05, 5.381900000000009e-05, 5.18470000000007e-05, 5.479099999999848e-05, 5.384699999999923e-05, 5.476400000000228e-05, 5.387500000000184e-05, 5.480500000000152e-05, 5.4791999999997953e-05, 5.295800000000225e-05, 5.099999999999896e-05, 5.1943999999998214e-05, 5.579100000000295e-05, 5.4735999999999674e-05, 5.18609999999968e-05, 5.384699999999923e-05, 5.284699999999823e-05, 5.479100000000195e-05, 5.5750000000000244e-05, 5.38470000000027e-05, 5.383299999999966e-05, 5.1901999999999504e-05, 5.5736000000000674e-05, 5.286100000000127e-05, 5.383300000000313e-05, 5.480499999999805e-05, 5.479200000000142e-05, 5.387500000000184e-05, 5.56670000000023e-05, 5.387500000000184e-05, 5.5763999999999814e-05, 5.384699999999923e-05, 5.194400000000168e-05, 5.00270000000011e-05, 5.573700000000015e-05, 5.0901999999998504e-05, 5.097199999999982e-05, 5.000000000000143e-05, 5.38609999999988e-05, 5.383399999999913e-05, 5.5763999999999814e-05, 5.095800000000025e-05, 5.479200000000142e-05, 5.5791999999998954e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.945" endtime="20201029 12:43:56.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.941" endtime="20201029 12:43:56.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.952" endtime="20201029 12:43:56.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.950" endtime="20201029 12:43:56.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.949" endtime="20201029 12:43:56.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.591" endtime="20201029 12:43:56.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.590" endtime="20201029 12:43:56.973"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.981" endtime="20201029 12:43:57.004"></status>
</kw>
<msg timestamp="20201029 12:43:57.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.980" endtime="20201029 12:43:57.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.006" endtime="20201029 12:43:57.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.008" endtime="20201029 12:43:57.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.977" endtime="20201029 12:43:57.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.975" endtime="20201029 12:43:57.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.017" endtime="20201029 12:43:57.302"></status>
</kw>
<msg timestamp="20201029 12:43:57.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024915264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.015" endtime="20201029 12:43:57.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024915264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024957667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.306" endtime="20201029 12:43:57.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.314" endtime="20201029 12:43:57.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.013" endtime="20201029 12:43:57.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.011" endtime="20201029 12:43:57.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.321" level="INFO">${RESULT} = [{'diff': 4.2402999999999885e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.476400000000228e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.094500000000016e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:57.318" endtime="20201029 12:43:57.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.325" level="INFO">${ACCURACY} = {'diff': [4.2402999999999885e-05, 5.187499999999984e-05, 5.5791999999998954e-05, 5.476400000000228e-05, 5.5791999999998954e-05, 5.094500000000016e-05, 5.387499999999837e-05, 5.28609999999978e-05, 5.57...</msg>
<status status="PASS" starttime="20201029 12:43:57.322" endtime="20201029 12:43:57.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.329" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.328" endtime="20201029 12:43:57.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.332" level="INFO">VALUE: [4.2402999999999885e-05, 5.187499999999984e-05, 5.5791999999998954e-05, 5.476400000000228e-05, 5.5791999999998954e-05, 5.094500000000016e-05, 5.387499999999837e-05, 5.28609999999978e-05, 5.5777999999999384e-05, 5.469500000000044e-05, 5.386199999999827e-05, 5.483300000000066e-05, 5.190300000000245e-05, 5.20279999999991e-05, 5.095800000000025e-05, 5.477800000000185e-05, 5.191699999999855e-05, 5.477699999999891e-05, 5.379099999999748e-05, 5.1943999999998214e-05, 5.48609999999998e-05, 5.380599999999999e-05, 5.105499999999777e-05, 5.190299999999898e-05, 5.288900000000041e-05, 5.191699999999855e-05, 5.573700000000015e-05, 5.5763999999999814e-05, 5.379100000000095e-05, 5.38609999999988e-05, 5.4777999999998384e-05, 5.5736000000000674e-05, 5.4777999999998384e-05, 5.101399999999853e-05, 5.572300000000058e-05, 5.098600000000286e-05, 5.379200000000042e-05, 5.10279999999981e-05, 4.994399999999968e-05, 5.38609999999988e-05, 5.290299999999998e-05, 5.006899999999981e-05, 5.375000000000171e-05, 5.198600000000039e-05, 5.380500000000052e-05, 5.293099999999912e-05, 5.184699999999723e-05, 5.101399999999853e-05, 5.005599999999971e-05, 5.283300000000213e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.330" endtime="20201029 12:43:57.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.326" endtime="20201029 12:43:57.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.338" endtime="20201029 12:43:57.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.336" endtime="20201029 12:43:57.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.335" endtime="20201029 12:43:57.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.974" endtime="20201029 12:43:57.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.973" endtime="20201029 12:43:57.358"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.367" endtime="20201029 12:43:57.387"></status>
</kw>
<msg timestamp="20201029 12:43:57.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.365" endtime="20201029 12:43:57.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.388" endtime="20201029 12:43:57.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.391" endtime="20201029 12:43:57.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.363" endtime="20201029 12:43:57.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.361" endtime="20201029 12:43:57.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.400" endtime="20201029 12:43:57.685"></status>
</kw>
<msg timestamp="20201029 12:43:57.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020966875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.398" endtime="20201029 12:43:57.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020922653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020966875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.690" endtime="20201029 12:43:57.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.698" endtime="20201029 12:43:57.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.396" endtime="20201029 12:43:57.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.394" endtime="20201029 12:43:57.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.705" level="INFO">${RESULT} = [{'diff': 4.422200000000001e-05}, {'diff': 5.387500000000184e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.183300000000113e-05}, {'diff': 5.56809999999984e-05}, {'diff': 5.579099999999948e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:57.701" endtime="20201029 12:43:57.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.712" level="INFO">${ACCURACY} = {'diff': [4.422200000000001e-05, 5.387500000000184e-05, 5.48609999999998e-05, 5.183300000000113e-05, 5.56809999999984e-05, 5.579099999999948e-05, 5.380599999999999e-05, 5.194400000000168e-05, 5.188899...</msg>
<status status="PASS" starttime="20201029 12:43:57.706" endtime="20201029 12:43:57.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.717" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.715" endtime="20201029 12:43:57.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.719" level="INFO">VALUE: [4.422200000000001e-05, 5.387500000000184e-05, 5.48609999999998e-05, 5.183300000000113e-05, 5.56809999999984e-05, 5.579099999999948e-05, 5.380599999999999e-05, 5.194400000000168e-05, 5.188899999999941e-05, 5.388899999999794e-05, 5.090299999999798e-05, 5.377700000000138e-05, 5.380599999999999e-05, 5.0014000000001e-05, 5.102800000000157e-05, 5.476299999999934e-05, 5.006899999999981e-05, 4.9987000000001336e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.095800000000025e-05, 5.1915999999999074e-05, 5.280599999999899e-05, 5.202699999999963e-05, 5.5721999999997635e-05, 5.284699999999823e-05, 5.100000000000243e-05, 4.995799999999925e-05, 5.100000000000243e-05, 5.188899999999941e-05, 5.28609999999978e-05, 5.5721999999997635e-05, 5.388899999999794e-05, 5.377800000000085e-05, 5.290299999999998e-05, 5.188899999999941e-05, 5.5721999999997635e-05, 5.479100000000195e-05, 5.187499999999984e-05, 5.290299999999998e-05, 4.994399999999968e-05, 5.108300000000038e-05, 5.5735999999997204e-05, 5.483400000000013e-05, 5.090299999999798e-05, 5.10279999999981e-05, 5.380500000000052e-05, 5.6763999999997344e-05, 5.379200000000042e-05, 5.091699999999755e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.718" endtime="20201029 12:43:57.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.713" endtime="20201029 12:43:57.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.724" endtime="20201029 12:43:57.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.722" endtime="20201029 12:43:57.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.721" endtime="20201029 12:43:57.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.359" endtime="20201029 12:43:57.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.359" endtime="20201029 12:43:57.745"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.753" endtime="20201029 12:43:57.773"></status>
</kw>
<msg timestamp="20201029 12:43:57.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.752" endtime="20201029 12:43:57.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.775" endtime="20201029 12:43:57.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.777" endtime="20201029 12:43:57.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.749" endtime="20201029 12:43:57.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.747" endtime="20201029 12:43:57.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.786" endtime="20201029 12:43:58.074"></status>
</kw>
<msg timestamp="20201029 12:43:58.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021462153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.785" endtime="20201029 12:43:58.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021462153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.078" endtime="20201029 12:43:58.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.086" endtime="20201029 12:43:58.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.782" endtime="20201029 12:43:58.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.781" endtime="20201029 12:43:58.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.092" level="INFO">${RESULT} = [{'diff': 4.6166999999999736e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.6722000000002104e-05}, {'diff': 5.379200000000042e-05}, {'diff': 5.483300000000066e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:58.089" endtime="20201029 12:43:58.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.097" level="INFO">${ACCURACY} = {'diff': [4.6166999999999736e-05, 5.188899999999941e-05, 5.290299999999998e-05, 5.6722000000002104e-05, 5.379200000000042e-05, 5.483300000000066e-05, 5.194400000000168e-05, 4.997200000000229e-05, 5.19...</msg>
<status status="PASS" starttime="20201029 12:43:58.093" endtime="20201029 12:43:58.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.101" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.100" endtime="20201029 12:43:58.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.103" level="INFO">VALUE: [4.6166999999999736e-05, 5.188899999999941e-05, 5.290299999999998e-05, 5.6722000000002104e-05, 5.379200000000042e-05, 5.483300000000066e-05, 5.194400000000168e-05, 4.997200000000229e-05, 5.194400000000168e-05, 5.290299999999998e-05, 5.28340000000016e-05, 5.1957999999997784e-05, 5.094400000000068e-05, 4.911099999999752e-05, 5.6693999999999495e-05, 5.580499999999905e-05, 5.383399999999913e-05, 5.281899999999909e-05, 5.5750000000000244e-05, 5.573699999999668e-05, 5.38609999999988e-05, 5.5777999999999384e-05, 5.1915999999999074e-05, 5.288900000000041e-05, 5.383399999999913e-05, 4.998599999999839e-05, 5.481999999999709e-05, 5.190300000000245e-05, 5.005599999999971e-05, 5.093000000000111e-05, 5.1943999999998214e-05, 5.6722000000002104e-05, 4.9973000000001766e-05, 4.999999999999796e-05, 5.186100000000027e-05, 5.290299999999998e-05, 5.287500000000084e-05, 5.006899999999981e-05, 4.997200000000229e-05, 5.186100000000027e-05, 5.102800000000157e-05, 5.191700000000202e-05, 5.284699999999823e-05, 5.101399999999853e-05, 4.997199999999882e-05, 5.568100000000187e-05, 5.5708000000001534e-05, 5.390300000000098e-05, 5.094400000000068e-05, 5.28470000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.102" endtime="20201029 12:43:58.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.097" endtime="20201029 12:43:58.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.108" endtime="20201029 12:43:58.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.107" endtime="20201029 12:43:58.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.106" endtime="20201029 12:43:58.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.746" endtime="20201029 12:43:58.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.745" endtime="20201029 12:43:58.129"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.137" endtime="20201029 12:43:58.160"></status>
</kw>
<msg timestamp="20201029 12:43:58.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.136" endtime="20201029 12:43:58.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.162" endtime="20201029 12:43:58.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.164" endtime="20201029 12:43:58.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.133" endtime="20201029 12:43:58.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.131" endtime="20201029 12:43:58.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.173" endtime="20201029 12:43:58.458"></status>
</kw>
<msg timestamp="20201029 12:43:58.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023897917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023941236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.171" endtime="20201029 12:43:58.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023897917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023941236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.462" endtime="20201029 12:43:58.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.470" endtime="20201029 12:43:58.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.169" endtime="20201029 12:43:58.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.167" endtime="20201029 12:43:58.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.477" level="INFO">${RESULT} = [{'diff': 4.3318999999999996e-05}, {'diff': 5.295900000000173e-05}, {'diff': 5.390299999999751e-05}, {'diff': 5.286199999999727e-05}, {'diff': 5.008299999999938e-05}, {'diff': 5.004200000000014e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:58.474" endtime="20201029 12:43:58.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.481" level="INFO">${ACCURACY} = {'diff': [4.3318999999999996e-05, 5.295900000000173e-05, 5.390299999999751e-05, 5.286199999999727e-05, 5.008299999999938e-05, 5.004200000000014e-05, 5.007000000000275e-05, 5.487499999999937e-05, 5.575...</msg>
<status status="PASS" starttime="20201029 12:43:58.478" endtime="20201029 12:43:58.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.486" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.485" endtime="20201029 12:43:58.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.488" level="INFO">VALUE: [4.3318999999999996e-05, 5.295900000000173e-05, 5.390299999999751e-05, 5.286199999999727e-05, 5.008299999999938e-05, 5.004200000000014e-05, 5.007000000000275e-05, 5.487499999999937e-05, 5.5750000000000244e-05, 5.5763999999999814e-05, 5.391700000000055e-05, 5.382000000000303e-05, 5.386100000000227e-05, 5.5777999999999384e-05, 5.1943999999998214e-05, 5.193000000000211e-05, 5.580600000000199e-05, 5.5902000000000035e-05, 5.383299999999966e-05, 5.094500000000016e-05, 5.48479999999997e-05, 5.286100000000127e-05, 5.479200000000142e-05, 5.000000000000143e-05, 5.290299999999998e-05, 5.293099999999912e-05, 5.48609999999998e-05, 5.280599999999899e-05, 5.5777999999999384e-05, 5.2957999999998784e-05, 5.095800000000025e-05, 5.388900000000141e-05, 5.2957999999998784e-05, 5.477700000000238e-05, 5.099999999999896e-05, 5.095800000000025e-05, 5.101399999999853e-05, 5.48609999999998e-05, 5.5750000000000244e-05, 5.3930000000000644e-05, 5.5736000000000674e-05, 5.388899999999794e-05, 5.195800000000125e-05, 5.102800000000157e-05, 5.002800000000057e-05, 5.093000000000111e-05, 5.484700000000023e-05, 5.1915999999999074e-05, 4.998599999999839e-05, 5.479200000000142e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.487" endtime="20201029 12:43:58.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.482" endtime="20201029 12:43:58.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.494" endtime="20201029 12:43:58.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.492" endtime="20201029 12:43:58.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.491" endtime="20201029 12:43:58.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.130" endtime="20201029 12:43:58.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.129" endtime="20201029 12:43:58.515"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.523" endtime="20201029 12:43:58.543"></status>
</kw>
<msg timestamp="20201029 12:43:58.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.522" endtime="20201029 12:43:58.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.544" endtime="20201029 12:43:58.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.546" endtime="20201029 12:43:58.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.519" endtime="20201029 12:43:58.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.517" endtime="20201029 12:43:58.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.555" endtime="20201029 12:43:58.841"></status>
</kw>
<msg timestamp="20201029 12:43:58.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.554" endtime="20201029 12:43:58.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.845" endtime="20201029 12:43:58.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.853" endtime="20201029 12:43:58.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.551" endtime="20201029 12:43:58.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.550" endtime="20201029 12:43:58.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.859" level="INFO">${RESULT} = [{'diff': 5.6679999999999925e-05}, {'diff': 5.002800000000057e-05}, {'diff': 4.998599999999839e-05}, {'diff': 5.2929999999999644e-05}, {'diff': 5.28470000000017e-05}, {'diff': 5.0929999999997644e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:58.856" endtime="20201029 12:43:58.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.864" level="INFO">${ACCURACY} = {'diff': [5.6679999999999925e-05, 5.002800000000057e-05, 4.998599999999839e-05, 5.2929999999999644e-05, 5.28470000000017e-05, 5.0929999999997644e-05, 5.483300000000066e-05, 5.095800000000025e-05, 5.48...</msg>
<status status="PASS" starttime="20201029 12:43:58.860" endtime="20201029 12:43:58.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.869" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.868" endtime="20201029 12:43:58.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.871" level="INFO">VALUE: [5.6679999999999925e-05, 5.002800000000057e-05, 4.998599999999839e-05, 5.2929999999999644e-05, 5.28470000000017e-05, 5.0929999999997644e-05, 5.483300000000066e-05, 5.095800000000025e-05, 5.483300000000066e-05, 5.095800000000025e-05, 5.4735999999999674e-05, 5.098599999999939e-05, 5.38470000000027e-05, 5.290299999999998e-05, 5.191699999999855e-05, 5.4749999999999244e-05, 5.484700000000023e-05, 5.094500000000016e-05, 5.662500000000112e-05, 5.188899999999941e-05, 4.998599999999839e-05, 5.5791999999998954e-05, 5.5777999999999384e-05, 5.388900000000141e-05, 5.095899999999973e-05, 5.28470000000017e-05, 4.997199999999882e-05, 5.579200000000242e-05, 5.2930000000003113e-05, 5.475000000000271e-05, 5.2901999999997035e-05, 5.4749999999999244e-05, 5.283399999999813e-05, 5.093099999999712e-05, 5.1957999999997784e-05, 5.4749999999999244e-05, 5.5791999999998954e-05, 5.383299999999966e-05, 5.5791999999998954e-05, 5.477699999999891e-05, 5.5736000000000674e-05, 5.482000000000056e-05, 5.090300000000145e-05, 5.294400000000268e-05, 5.583400000000113e-05, 4.995899999999873e-05, 5.487499999999937e-05, 5.093000000000111e-05, 5.5777999999999384e-05, 5.283299999999866e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.870" endtime="20201029 12:43:58.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.865" endtime="20201029 12:43:58.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.876" endtime="20201029 12:43:58.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.875" endtime="20201029 12:43:58.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.874" endtime="20201029 12:43:58.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.516" endtime="20201029 12:43:58.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.515" endtime="20201029 12:43:58.897"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.905" endtime="20201029 12:43:58.928"></status>
</kw>
<msg timestamp="20201029 12:43:58.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.904" endtime="20201029 12:43:58.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.930" endtime="20201029 12:43:58.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.932" endtime="20201029 12:43:58.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.901" endtime="20201029 12:43:58.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.899" endtime="20201029 12:43:58.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.941" endtime="20201029 12:43:59.227"></status>
</kw>
<msg timestamp="20201029 12:43:59.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024626653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.940" endtime="20201029 12:43:59.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024586167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024626653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.231" endtime="20201029 12:43:59.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.239" endtime="20201029 12:43:59.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.937" endtime="20201029 12:43:59.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.935" endtime="20201029 12:43:59.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.246" level="INFO">${RESULT} = [{'diff': 4.04859999999993e-05}, {'diff': 5.095800000000025e-05}, {'diff': 5.183399999999713e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.38609999999988e-05}, {'diff': 5.281899999999909e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:59.243" endtime="20201029 12:43:59.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.250" level="INFO">${ACCURACY} = {'diff': [4.04859999999993e-05, 5.095800000000025e-05, 5.183399999999713e-05, 5.4749999999999244e-05, 5.38609999999988e-05, 5.281899999999909e-05, 5.286100000000127e-05, 5.193000000000211e-05, 4.99860...</msg>
<status status="PASS" starttime="20201029 12:43:59.247" endtime="20201029 12:43:59.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.254" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.253" endtime="20201029 12:43:59.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.257" level="INFO">VALUE: [4.04859999999993e-05, 5.095800000000025e-05, 5.183399999999713e-05, 5.4749999999999244e-05, 5.38609999999988e-05, 5.281899999999909e-05, 5.286100000000127e-05, 5.193000000000211e-05, 4.998600000000186e-05, 5.102699999999863e-05, 5.6666000000000355e-05, 5.198600000000039e-05, 5.379200000000042e-05, 5.091700000000102e-05, 5.1915999999999074e-05, 5.008299999999938e-05, 5.377699999999791e-05, 5.376400000000128e-05, 5.5735999999997204e-05, 5.002800000000057e-05, 5.187499999999984e-05, 5.48609999999998e-05, 5.5722000000001104e-05, 5.1957999999997784e-05, 5.283300000000213e-05, 5.0014000000001e-05, 5.294499999999869e-05, 5.000000000000143e-05, 5.5763999999999814e-05, 5.4763999999998814e-05, 5.097199999999982e-05, 5.002800000000057e-05, 5.383299999999966e-05, 5.577800000000285e-05, 5.5722000000001104e-05, 5.094500000000016e-05, 5.4749999999999244e-05, 5.5665999999999355e-05, 5.187499999999984e-05, 5.290299999999998e-05, 5.5693999999998495e-05, 5.5736000000000674e-05, 5.008299999999938e-05, 5.5693999999998495e-05, 5.4777999999998384e-05, 5.098599999999939e-05, 5.28609999999978e-05, 5.477800000000185e-05, 5.288900000000041e-05, 5.5735999999997204e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.255" endtime="20201029 12:43:59.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.251" endtime="20201029 12:43:59.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.262" endtime="20201029 12:43:59.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.260" endtime="20201029 12:43:59.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.259" endtime="20201029 12:43:59.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.898" endtime="20201029 12:43:59.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.897" endtime="20201029 12:43:59.283"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.291" endtime="20201029 12:43:59.310"></status>
</kw>
<msg timestamp="20201029 12:43:59.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.290" endtime="20201029 12:43:59.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.311" endtime="20201029 12:43:59.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.314" endtime="20201029 12:43:59.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.287" endtime="20201029 12:43:59.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.285" endtime="20201029 12:43:59.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.323" endtime="20201029 12:43:59.608"></status>
</kw>
<msg timestamp="20201029 12:43:59.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020819958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020880542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.321" endtime="20201029 12:43:59.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020819958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020880542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.612" endtime="20201029 12:43:59.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.621" endtime="20201029 12:43:59.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.319" endtime="20201029 12:43:59.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.317" endtime="20201029 12:43:59.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.629" level="INFO">${RESULT} = [{'diff': 6.0583999999998944e-05}, {'diff': 5.191699999999855e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.5722000000001104e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:59.625" endtime="20201029 12:43:59.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.635" level="INFO">${ACCURACY} = {'diff': [6.0583999999998944e-05, 5.191699999999855e-05, 5.387499999999837e-05, 5.568100000000187e-05, 5.190299999999898e-05, 5.5722000000001104e-05, 5.380599999999999e-05, 5.476400000000228e-05, 5.57...</msg>
<status status="PASS" starttime="20201029 12:43:59.631" endtime="20201029 12:43:59.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.640" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.639" endtime="20201029 12:43:59.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.644" level="INFO">VALUE: [6.0583999999998944e-05, 5.191699999999855e-05, 5.387499999999837e-05, 5.568100000000187e-05, 5.190299999999898e-05, 5.5722000000001104e-05, 5.380599999999999e-05, 5.476400000000228e-05, 5.579099999999948e-05, 5.094400000000068e-05, 4.9973000000001766e-05, 5.099999999999896e-05, 5.286100000000127e-05, 5.093100000000059e-05, 5.5763999999999814e-05, 5.1943999999998214e-05, 5.188899999999941e-05, 5.00270000000011e-05, 5.3777999999997383e-05, 5.28479999999977e-05, 5.48609999999998e-05, 5.283399999999813e-05, 5.5750000000000244e-05, 5.097199999999982e-05, 5.5693999999998495e-05, 5.480500000000152e-05, 5.5736000000000674e-05, 5.290299999999998e-05, 5.5708000000001534e-05, 5.476299999999934e-05, 5.379200000000042e-05, 5.5721999999997635e-05, 5.287500000000084e-05, 5.482000000000056e-05, 5.570899999999754e-05, 5.1929999999998644e-05, 5.291699999999955e-05, 5.002800000000057e-05, 5.199999999999996e-05, 5.095899999999973e-05, 5.290299999999998e-05, 5.2916000000000074e-05, 5.094400000000068e-05, 5.381899999999662e-05, 5.098599999999939e-05, 5.659700000000198e-05, 4.995800000000272e-05, 5.380599999999999e-05, 5.5750000000000244e-05, 5.583400000000113e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.642" endtime="20201029 12:43:59.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.636" endtime="20201029 12:43:59.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.651" endtime="20201029 12:43:59.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.649" endtime="20201029 12:43:59.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.647" endtime="20201029 12:43:59.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.284" endtime="20201029 12:43:59.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.283" endtime="20201029 12:43:59.672"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.681" endtime="20201029 12:43:59.705"></status>
</kw>
<msg timestamp="20201029 12:43:59.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.679" endtime="20201029 12:43:59.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.706" endtime="20201029 12:43:59.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.708" endtime="20201029 12:43:59.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.677" endtime="20201029 12:43:59.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.675" endtime="20201029 12:43:59.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.718" endtime="20201029 12:44:00.006"></status>
</kw>
<msg timestamp="20201029 12:44:00.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:59.717" endtime="20201029 12:44:00.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023071, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:00.010" endtime="20201029 12:44:00.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.018" endtime="20201029 12:44:00.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.714" endtime="20201029 12:44:00.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.712" endtime="20201029 12:44:00.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.025" level="INFO">${RESULT} = [{'diff': 4.3332999999999566e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.384699999999923e-05}, {'diff': 5.1901999999999504e-05}, {'diff': 5.002800000000057e-05}, {'diff': 5.094400000000068e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:00.021" endtime="20201029 12:44:00.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.030" level="INFO">${ACCURACY} = {'diff': [4.3332999999999566e-05, 5.4722000000000104e-05, 5.384699999999923e-05, 5.1901999999999504e-05, 5.002800000000057e-05, 5.094400000000068e-05, 5.291699999999955e-05, 5.384800000000217e-05, 5.2...</msg>
<status status="PASS" starttime="20201029 12:44:00.026" endtime="20201029 12:44:00.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.034" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.033" endtime="20201029 12:44:00.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.037" level="INFO">VALUE: [4.3332999999999566e-05, 5.4722000000000104e-05, 5.384699999999923e-05, 5.1901999999999504e-05, 5.002800000000057e-05, 5.094400000000068e-05, 5.291699999999955e-05, 5.384800000000217e-05, 5.28340000000016e-05, 5.481900000000109e-05, 5.191700000000202e-05, 5.288900000000041e-05, 5.293099999999912e-05, 5.572300000000058e-05, 5.483300000000066e-05, 5.4708000000000534e-05, 5.2902000000000504e-05, 5.4694000000000964e-05, 5.483300000000066e-05, 4.997200000000229e-05, 5.387499999999837e-05, 5.5750000000000244e-05, 5.5777999999999384e-05, 5.3749999999998244e-05, 4.997199999999882e-05, 5.10279999999981e-05, 5.380599999999999e-05, 5.481899999999762e-05, 5.476400000000228e-05, 5.195900000000073e-05, 5.184699999999723e-05, 5.099999999999896e-05, 5.479100000000195e-05, 4.995899999999873e-05, 5.195800000000125e-05, 5.5736000000000674e-05, 5.283299999999866e-05, 5.195800000000125e-05, 5.666699999999983e-05, 5.5680000000002394e-05, 5.2957999999998784e-05, 5.28470000000017e-05, 5.293099999999912e-05, 5.28609999999978e-05, 5.197200000000082e-05, 5.568100000000187e-05, 5.201399999999953e-05, 5.091600000000154e-05, 5.101399999999853e-05, 5.084800000000264e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.035" endtime="20201029 12:44:00.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.031" endtime="20201029 12:44:00.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.042" endtime="20201029 12:44:00.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.040" endtime="20201029 12:44:00.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.039" endtime="20201029 12:44:00.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.673" endtime="20201029 12:44:00.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.673" endtime="20201029 12:44:00.063"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.071" endtime="20201029 12:44:00.094"></status>
</kw>
<msg timestamp="20201029 12:44:00.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.070" endtime="20201029 12:44:00.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.096" endtime="20201029 12:44:00.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.098" endtime="20201029 12:44:00.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.067" endtime="20201029 12:44:00.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.065" endtime="20201029 12:44:00.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.107" endtime="20201029 12:44:00.395"></status>
</kw>
<msg timestamp="20201029 12:44:00.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.106" endtime="20201029 12:44:00.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024325181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024371375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.399" endtime="20201029 12:44:00.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.407" endtime="20201029 12:44:00.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.103" endtime="20201029 12:44:00.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.102" endtime="20201029 12:44:00.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.414" level="INFO">${RESULT} = [{'diff': 4.61939999999994e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.4763999999998814e-05}, {'diff': 5.2902000000000504e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.099999999999896e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:00.411" endtime="20201029 12:44:00.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.418" level="INFO">${ACCURACY} = {'diff': [4.61939999999994e-05, 5.5777999999999384e-05, 5.4763999999998814e-05, 5.2902000000000504e-05, 5.201399999999953e-05, 5.099999999999896e-05, 5.293100000000259e-05, 5.10279999999981e-05, 5.572...</msg>
<status status="PASS" starttime="20201029 12:44:00.415" endtime="20201029 12:44:00.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.422" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.421" endtime="20201029 12:44:00.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.425" level="INFO">VALUE: [4.61939999999994e-05, 5.5777999999999384e-05, 5.4763999999998814e-05, 5.2902000000000504e-05, 5.201399999999953e-05, 5.099999999999896e-05, 5.293100000000259e-05, 5.10279999999981e-05, 5.5722000000001104e-05, 5.5763999999999814e-05, 5.5777999999999384e-05, 5.004200000000014e-05, 5.095800000000025e-05, 5.101399999999853e-05, 5.580600000000199e-05, 5.5721999999997635e-05, 5.195800000000125e-05, 5.100000000000243e-05, 5.4735999999999674e-05, 5.190300000000245e-05, 5.2929999999999644e-05, 5.379100000000095e-05, 5.288900000000041e-05, 5.3916000000001074e-05, 5.479200000000142e-05, 5.101399999999853e-05, 5.387500000000184e-05, 5.10279999999981e-05, 5.38340000000026e-05, 5.102699999999863e-05, 5.2957999999998784e-05, 5.670900000000201e-05, 5.5777999999999384e-05, 5.1971999999997354e-05, 5.19730000000003e-05, 5.483399999999666e-05, 5.2943999999999214e-05, 4.995799999999925e-05, 5.098599999999939e-05, 5.195800000000125e-05, 5.102800000000157e-05, 5.186100000000027e-05, 5.5777999999999384e-05, 5.193100000000159e-05, 5.100000000000243e-05, 5.380599999999999e-05, 5.386199999999827e-05, 5.101399999999853e-05, 5.665300000000026e-05, 5.097200000000329e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.423" endtime="20201029 12:44:00.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.419" endtime="20201029 12:44:00.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.430" endtime="20201029 12:44:00.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.428" endtime="20201029 12:44:00.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.427" endtime="20201029 12:44:00.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.064" endtime="20201029 12:44:00.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.063" endtime="20201029 12:44:00.450"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.459" endtime="20201029 12:44:00.481"></status>
</kw>
<msg timestamp="20201029 12:44:00.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.457" endtime="20201029 12:44:00.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.483" endtime="20201029 12:44:00.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.485" endtime="20201029 12:44:00.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.455" endtime="20201029 12:44:00.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.453" endtime="20201029 12:44:00.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.494" endtime="20201029 12:44:00.780"></status>
</kw>
<msg timestamp="20201029 12:44:00.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023725611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023767986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.492" endtime="20201029 12:44:00.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023725611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023767986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.784" endtime="20201029 12:44:00.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.793" endtime="20201029 12:44:00.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.490" endtime="20201029 12:44:00.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.488" endtime="20201029 12:44:00.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.799" level="INFO">${RESULT} = [{'diff': 4.2375000000000745e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.190300000000245e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.001399999999753e-05}, {'diff': 5.6679999999999925e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:00.796" endtime="20201029 12:44:00.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.803" level="INFO">${ACCURACY} = {'diff': [4.2375000000000745e-05, 5.383299999999966e-05, 5.190300000000245e-05, 5.5722000000001104e-05, 5.001399999999753e-05, 5.6679999999999925e-05, 5.09729999999993e-05, 5.6722000000002104e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 12:44:00.800" endtime="20201029 12:44:00.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.807" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.806" endtime="20201029 12:44:00.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.810" level="INFO">VALUE: [4.2375000000000745e-05, 5.383299999999966e-05, 5.190300000000245e-05, 5.5722000000001104e-05, 5.001399999999753e-05, 5.6679999999999925e-05, 5.09729999999993e-05, 5.6722000000002104e-05, 5.379100000000095e-05, 5.4791999999997953e-05, 5.2887999999997465e-05, 5.290299999999998e-05, 5.5750000000000244e-05, 5.388900000000141e-05, 4.995899999999873e-05, 5.095899999999973e-05, 5.287500000000084e-05, 5.287499999999737e-05, 5.001399999999753e-05, 5.666699999999983e-05, 5.5750000000000244e-05, 5.098599999999939e-05, 5.097199999999982e-05, 5.097199999999982e-05, 5.288900000000041e-05, 5.095899999999973e-05, 5.479200000000142e-05, 5.381999999999956e-05, 5.194499999999769e-05, 5.283299999999866e-05, 5.195800000000125e-05, 5.2902000000000504e-05, 5.193000000000211e-05, 5.290299999999998e-05, 5.097199999999982e-05, 5.386100000000227e-05, 4.905600000000218e-05, 5.1915999999999074e-05, 5.288900000000041e-05, 5.483300000000066e-05, 5.190299999999898e-05, 5.5693999999998495e-05, 5.577699999999991e-05, 5.476400000000228e-05, 5.097199999999982e-05, 5.670899999999854e-05, 5.483300000000066e-05, 5.384699999999923e-05, 5.662500000000112e-05, 5.5763999999999814e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.809" endtime="20201029 12:44:00.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.804" endtime="20201029 12:44:00.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.816" endtime="20201029 12:44:00.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.814" endtime="20201029 12:44:00.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.813" endtime="20201029 12:44:00.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.451" endtime="20201029 12:44:00.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.451" endtime="20201029 12:44:00.837"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.845" endtime="20201029 12:44:00.868"></status>
</kw>
<msg timestamp="20201029 12:44:00.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.844" endtime="20201029 12:44:00.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.869" endtime="20201029 12:44:00.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.872" endtime="20201029 12:44:00.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.841" endtime="20201029 12:44:00.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.839" endtime="20201029 12:44:00.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.880" endtime="20201029 12:44:01.166"></status>
</kw>
<msg timestamp="20201029 12:44:01.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024267986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024323736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.879" endtime="20201029 12:44:01.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024267986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024323736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.171" endtime="20201029 12:44:01.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.179" endtime="20201029 12:44:01.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.876" endtime="20201029 12:44:01.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.875" endtime="20201029 12:44:01.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.185" level="INFO">${RESULT} = [{'diff': 5.5750000000000244e-05}, {'diff': 5.376400000000128e-05}, {'diff': 5.480600000000099e-05}, {'diff': 5.4763999999998814e-05}, {'diff': 5.0014000000001e-05}, {'diff': 5.570900000000101e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:01.182" endtime="20201029 12:44:01.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.193" level="INFO">${ACCURACY} = {'diff': [5.5750000000000244e-05, 5.376400000000128e-05, 5.480600000000099e-05, 5.4763999999998814e-05, 5.0014000000001e-05, 5.570900000000101e-05, 5.38340000000026e-05, 5.5707999999998065e-05, 5.2889...</msg>
<status status="PASS" starttime="20201029 12:44:01.186" endtime="20201029 12:44:01.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.197" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.196" endtime="20201029 12:44:01.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.200" level="INFO">VALUE: [5.5750000000000244e-05, 5.376400000000128e-05, 5.480600000000099e-05, 5.4763999999998814e-05, 5.0014000000001e-05, 5.570900000000101e-05, 5.38340000000026e-05, 5.5707999999998065e-05, 5.288900000000041e-05, 5.286100000000127e-05, 5.188899999999941e-05, 5.098599999999939e-05, 5.193100000000159e-05, 4.998600000000186e-05, 5.5735999999997204e-05, 5.1943999999998214e-05, 5.093099999999712e-05, 5.4791999999997953e-05, 5.2916000000000074e-05, 5.283300000000213e-05, 5.0957999999996784e-05, 5.572300000000058e-05, 5.66809999999994e-05, 5.388900000000141e-05, 5.187499999999984e-05, 5.1971999999997354e-05, 5.476299999999934e-05, 5.005599999999971e-05, 5.5736000000000674e-05, 5.284699999999823e-05, 5.5805999999998523e-05, 5.190299999999898e-05, 5.2929999999999644e-05, 5.4763999999998814e-05, 5.094500000000016e-05, 5.0943999999997214e-05, 5.283299999999866e-05, 5.4749999999999244e-05, 5.4735999999999674e-05, 5.5777999999999384e-05, 5.002800000000057e-05, 5.101399999999853e-05, 5.5736000000000674e-05, 5.384699999999923e-05, 4.998600000000186e-05, 5.293099999999912e-05, 5.379199999999695e-05, 5.288900000000041e-05, 5.676299999999787e-05, 5.094400000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.198" endtime="20201029 12:44:01.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.194" endtime="20201029 12:44:01.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.205" endtime="20201029 12:44:01.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.203" endtime="20201029 12:44:01.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.202" endtime="20201029 12:44:01.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.837" endtime="20201029 12:44:01.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.837" endtime="20201029 12:44:01.225"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.234" endtime="20201029 12:44:01.254"></status>
</kw>
<msg timestamp="20201029 12:44:01.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.232" endtime="20201029 12:44:01.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.256" endtime="20201029 12:44:01.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.258" endtime="20201029 12:44:01.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.230" endtime="20201029 12:44:01.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.228" endtime="20201029 12:44:01.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.267" endtime="20201029 12:44:01.556"></status>
</kw>
<msg timestamp="20201029 12:44:01.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.266" endtime="20201029 12:44:01.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022397389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022437917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.560" endtime="20201029 12:44:01.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.568" endtime="20201029 12:44:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.263" endtime="20201029 12:44:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.261" endtime="20201029 12:44:01.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.575" level="INFO">${RESULT} = [{'diff': 4.052800000000148e-05}, {'diff': 5.384699999999923e-05}, {'diff': 5.673699999999768e-05}, {'diff': 5.4722000000000104e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.287500000000084e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:01.572" endtime="20201029 12:44:01.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.579" level="INFO">${ACCURACY} = {'diff': [4.052800000000148e-05, 5.384699999999923e-05, 5.673699999999768e-05, 5.4722000000000104e-05, 5.4749999999999244e-05, 5.287500000000084e-05, 5.293100000000259e-05, 5.093100000000059e-05, 5.19...</msg>
<status status="PASS" starttime="20201029 12:44:01.576" endtime="20201029 12:44:01.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.583" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.582" endtime="20201029 12:44:01.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.586" level="INFO">VALUE: [4.052800000000148e-05, 5.384699999999923e-05, 5.673699999999768e-05, 5.4722000000000104e-05, 5.4749999999999244e-05, 5.287500000000084e-05, 5.293100000000259e-05, 5.093100000000059e-05, 5.190299999999898e-05, 5.097199999999982e-05, 5.183399999999713e-05, 5.376400000000128e-05, 5.6750000000001244e-05, 4.995799999999925e-05, 5.286100000000127e-05, 5.195900000000073e-05, 5.4749999999999244e-05, 5.188900000000288e-05, 5.095800000000025e-05, 5.4749999999999244e-05, 5.4722000000000104e-05, 5.5750000000000244e-05, 5.186100000000027e-05, 5.5693999999998495e-05, 5.4722000000000104e-05, 5.190299999999898e-05, 5.569500000000144e-05, 5.5763999999999814e-05, 5.2957999999998784e-05, 5.090300000000145e-05, 5.18470000000007e-05, 5.5750000000000244e-05, 5.100000000000243e-05, 5.097199999999982e-05, 5.281999999999856e-05, 5.381900000000009e-05, 5.5791999999998954e-05, 5.4735999999999674e-05, 5.093099999999712e-05, 5.191700000000202e-05, 5.000000000000143e-05, 5.195900000000073e-05, 5.1915999999999074e-05, 5.476299999999934e-05, 5.5721999999997635e-05, 5.001399999999753e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.4722000000000104e-05, 5.479200000000142e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.585" endtime="20201029 12:44:01.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.580" endtime="20201029 12:44:01.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.591" endtime="20201029 12:44:01.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.589" endtime="20201029 12:44:01.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.588" endtime="20201029 12:44:01.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.226" endtime="20201029 12:44:01.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.226" endtime="20201029 12:44:01.611"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.620" endtime="20201029 12:44:01.645"></status>
</kw>
<msg timestamp="20201029 12:44:01.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.619" endtime="20201029 12:44:01.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.647" endtime="20201029 12:44:01.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.649" endtime="20201029 12:44:01.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.616" endtime="20201029 12:44:01.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.614" endtime="20201029 12:44:01.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.658" endtime="20201029 12:44:01.943"></status>
</kw>
<msg timestamp="20201029 12:44:01.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023208389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.657" endtime="20201029 12:44:01.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023208389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.948" endtime="20201029 12:44:01.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.956" endtime="20201029 12:44:01.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.654" endtime="20201029 12:44:01.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.653" endtime="20201029 12:44:01.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.962" level="INFO">${RESULT} = [{'diff': 8.456999999999909e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.255499999999805e-05}, {'diff': 8.347199999999763e-05}, {'diff': 8.065299999999997e-05}, {'diff': 8.251399999999881e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:01.959" endtime="20201029 12:44:01.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.966" level="INFO">${ACCURACY} = {'diff': [8.456999999999909e-05, 8.248599999999967e-05, 8.255499999999805e-05, 8.347199999999763e-05, 8.065299999999997e-05, 8.251399999999881e-05, 8.162499999999837e-05, 8.732000000000184e-05, 8.3486...</msg>
<status status="PASS" starttime="20201029 12:44:01.963" endtime="20201029 12:44:01.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.971" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.970" endtime="20201029 12:44:01.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.973" level="INFO">VALUE: [8.456999999999909e-05, 8.248599999999967e-05, 8.255499999999805e-05, 8.347199999999763e-05, 8.065299999999997e-05, 8.251399999999881e-05, 8.162499999999837e-05, 8.732000000000184e-05, 8.348600000000067e-05, 8.545800000000006e-05, 8.543099999999693e-05, 8.065299999999997e-05, 8.444399999999949e-05, 8.15840000000026e-05, 8.444399999999949e-05, 8.44859999999982e-05, 8.351399999999981e-05, 8.155599999999999e-05, 8.451400000000081e-05, 8.352800000000285e-05, 8.350000000000024e-05, 8.638900000000269e-05, 8.44720000000021e-05, 8.634799999999998e-05, 8.255600000000099e-05, 8.06109999999978e-05, 8.636100000000008e-05, 8.254200000000142e-05, 8.448600000000167e-05, 8.061199999999727e-05, 8.350000000000024e-05, 8.636100000000008e-05, 8.244400000000096e-05, 8.26109999999998e-05, 8.438900000000069e-05, 8.05970000000017e-05, 8.544400000000049e-05, 8.347199999999763e-05, 8.055599999999899e-05, 8.631900000000137e-05, 8.056899999999909e-05, 8.26109999999998e-05, 8.638899999999922e-05, 8.348700000000014e-05, 8.26529999999985e-05, 8.344399999999849e-05, 8.248599999999967e-05, 8.433299999999894e-05, 8.644399999999802e-05, 8.156900000000009e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.972" endtime="20201029 12:44:01.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.967" endtime="20201029 12:44:01.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.979" endtime="20201029 12:44:01.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.977" endtime="20201029 12:44:01.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.976" endtime="20201029 12:44:01.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.612" endtime="20201029 12:44:01.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.612" endtime="20201029 12:44:02.000"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.008" endtime="20201029 12:44:02.030"></status>
</kw>
<msg timestamp="20201029 12:44:02.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.007" endtime="20201029 12:44:02.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.031" endtime="20201029 12:44:02.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.034" endtime="20201029 12:44:02.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.004" endtime="20201029 12:44:02.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.002" endtime="20201029 12:44:02.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.043" endtime="20201029 12:44:02.327"></status>
</kw>
<msg timestamp="20201029 12:44:02.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.041" endtime="20201029 12:44:02.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.331" endtime="20201029 12:44:02.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.340" endtime="20201029 12:44:02.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.039" endtime="20201029 12:44:02.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.037" endtime="20201029 12:44:02.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.346" level="INFO">${RESULT} = [{'diff': 8.058399999999813e-05}, {'diff': 8.15840000000026e-05}, {'diff': 8.450000000000124e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.538900000000169e-05}, {'diff': 8.637499999999965e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:02.343" endtime="20201029 12:44:02.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.351" level="INFO">${ACCURACY} = {'diff': [8.058399999999813e-05, 8.15840000000026e-05, 8.450000000000124e-05, 8.433299999999894e-05, 8.538900000000169e-05, 8.637499999999965e-05, 8.251399999999881e-05, 8.531900000000037e-05, 8.34720...</msg>
<status status="PASS" starttime="20201029 12:44:02.347" endtime="20201029 12:44:02.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.356" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.355" endtime="20201029 12:44:02.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.358" level="INFO">VALUE: [8.058399999999813e-05, 8.15840000000026e-05, 8.450000000000124e-05, 8.433299999999894e-05, 8.538900000000169e-05, 8.637499999999965e-05, 8.251399999999881e-05, 8.531900000000037e-05, 8.34720000000011e-05, 8.245800000000053e-05, 8.634799999999998e-05, 8.151399999999781e-05, 8.623599999999995e-05, 8.159699999999923e-05, 8.237499999999912e-05, 8.545800000000006e-05, 8.154200000000042e-05, 8.434700000000198e-05, 8.538899999999822e-05, 8.244400000000096e-05, 8.062500000000083e-05, 8.243000000000139e-05, 8.255599999999752e-05, 8.440199999999731e-05, 8.727799999999966e-05, 8.066600000000007e-05, 8.52920000000007e-05, 8.450000000000124e-05, 8.434799999999798e-05, 8.44720000000021e-05, 8.344499999999797e-05, 8.156900000000009e-05, 8.241699999999783e-05, 8.544400000000049e-05, 8.441699999999983e-05, 8.438799999999774e-05, 8.248599999999967e-05, 8.538900000000169e-05, 8.541699999999736e-05, 8.152799999999738e-05, 8.248599999999967e-05, 8.159699999999923e-05, 8.15979999999987e-05, 8.447199999999863e-05, 8.350000000000024e-05, 8.345899999999754e-05, 8.443100000000286e-05, 8.636100000000008e-05, 8.622200000000038e-05, 8.351399999999981e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.357" endtime="20201029 12:44:02.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.352" endtime="20201029 12:44:02.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.363" endtime="20201029 12:44:02.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.361" endtime="20201029 12:44:02.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.360" endtime="20201029 12:44:02.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.001" endtime="20201029 12:44:02.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.000" endtime="20201029 12:44:02.384"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.392" endtime="20201029 12:44:02.416"></status>
</kw>
<msg timestamp="20201029 12:44:02.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.391" endtime="20201029 12:44:02.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.418" endtime="20201029 12:44:02.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.420" endtime="20201029 12:44:02.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.388" endtime="20201029 12:44:02.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.386" endtime="20201029 12:44:02.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.429" endtime="20201029 12:44:02.715"></status>
</kw>
<msg timestamp="20201029 12:44:02.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.428" endtime="20201029 12:44:02.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024530042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024625097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.720" endtime="20201029 12:44:02.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.728" endtime="20201029 12:44:02.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.425" endtime="20201029 12:44:02.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.423" endtime="20201029 12:44:02.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.734" level="INFO">${RESULT} = [{'diff': 9.505500000000014e-05}, {'diff': 8.441600000000035e-05}, {'diff': 8.067999999999964e-05}, {'diff': 8.348600000000067e-05}, {'diff': 8.343100000000186e-05}, {'diff': 8.076400000000053e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:02.731" endtime="20201029 12:44:02.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.738" level="INFO">${ACCURACY} = {'diff': [9.505500000000014e-05, 8.441600000000035e-05, 8.067999999999964e-05, 8.348600000000067e-05, 8.343100000000186e-05, 8.076400000000053e-05, 8.630499999999833e-05, 8.636100000000008e-05, 8.1542...</msg>
<status status="PASS" starttime="20201029 12:44:02.735" endtime="20201029 12:44:02.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.743" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.742" endtime="20201029 12:44:02.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.745" level="INFO">VALUE: [9.505500000000014e-05, 8.441600000000035e-05, 8.067999999999964e-05, 8.348600000000067e-05, 8.343100000000186e-05, 8.076400000000053e-05, 8.630499999999833e-05, 8.636100000000008e-05, 8.154200000000042e-05, 8.16109999999988e-05, 8.533299999999994e-05, 8.070799999999878e-05, 8.26390000000024e-05, 8.626400000000256e-05, 8.547300000000257e-05, 8.244500000000043e-05, 8.347300000000057e-05, 8.538799999999874e-05, 8.537499999999865e-05, 8.440300000000026e-05, 8.066700000000301e-05, 8.251400000000228e-05, 8.259700000000023e-05, 8.351399999999981e-05, 8.252800000000185e-05, 8.058300000000213e-05, 8.547199999999963e-05, 8.63470000000005e-05, 8.448600000000167e-05, 8.63470000000005e-05, 8.540300000000126e-05, 8.537499999999865e-05, 8.343000000000239e-05, 8.062500000000083e-05, 8.540299999999779e-05, 8.538899999999822e-05, 8.640299999999879e-05, 8.252700000000238e-05, 8.351300000000034e-05, 8.156999999999956e-05, 8.64310000000014e-05, 8.534799999999898e-05, 8.448600000000167e-05, 8.545899999999954e-05, 8.151400000000128e-05, 8.538900000000169e-05, 8.062500000000083e-05, 8.158299999999966e-05, 8.149999999999824e-05, 8.16390000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.744" endtime="20201029 12:44:02.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.739" endtime="20201029 12:44:02.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.750" endtime="20201029 12:44:02.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.749" endtime="20201029 12:44:02.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.748" endtime="20201029 12:44:02.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.385" endtime="20201029 12:44:02.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.384" endtime="20201029 12:44:02.771"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.780" endtime="20201029 12:44:02.808"></status>
</kw>
<msg timestamp="20201029 12:44:02.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.778" endtime="20201029 12:44:02.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.809" endtime="20201029 12:44:02.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.811" endtime="20201029 12:44:02.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.776" endtime="20201029 12:44:02.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.774" endtime="20201029 12:44:02.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.820" endtime="20201029 12:44:03.107"></status>
</kw>
<msg timestamp="20201029 12:44:03.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.819" endtime="20201029 12:44:03.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024117458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024204792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.112" endtime="20201029 12:44:03.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.120" endtime="20201029 12:44:03.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.816" endtime="20201029 12:44:03.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.815" endtime="20201029 12:44:03.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.126" level="INFO">${RESULT} = [{'diff': 8.733399999999794e-05}, {'diff': 8.244500000000043e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.73470000000015e-05}, {'diff': 8.338899999999969e-05}, {'diff': 8.638899999999922e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:03.123" endtime="20201029 12:44:03.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.130" level="INFO">${ACCURACY} = {'diff': [8.733399999999794e-05, 8.244500000000043e-05, 8.249999999999924e-05, 8.73470000000015e-05, 8.338899999999969e-05, 8.638899999999922e-05, 8.537499999999865e-05, 8.2459e-05, 8.254200000000142e...</msg>
<status status="PASS" starttime="20201029 12:44:03.127" endtime="20201029 12:44:03.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.135" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.134" endtime="20201029 12:44:03.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.137" level="INFO">VALUE: [8.733399999999794e-05, 8.244500000000043e-05, 8.249999999999924e-05, 8.73470000000015e-05, 8.338899999999969e-05, 8.638899999999922e-05, 8.537499999999865e-05, 8.2459e-05, 8.254200000000142e-05, 8.531999999999984e-05, 8.733299999999847e-05, 8.448600000000167e-05, 8.337499999999665e-05, 8.627699999999919e-05, 8.633300000000094e-05, 8.154100000000095e-05, 8.252800000000185e-05, 8.536099999999908e-05, 8.154099999999748e-05, 8.337500000000012e-05, 8.251299999999934e-05, 8.150000000000171e-05, 8.344400000000196e-05, 8.245800000000053e-05, 8.633400000000041e-05, 8.255599999999752e-05, 8.340300000000272e-05, 8.34309999999984e-05, 8.442999999999992e-05, 8.154200000000042e-05, 8.34170000000023e-05, 8.640299999999879e-05, 8.531900000000037e-05, 8.637499999999965e-05, 8.06109999999978e-05, 8.723600000000095e-05, 8.1458999999999e-05, 8.158299999999966e-05, 8.149999999999824e-05, 8.640199999999931e-05, 8.541600000000135e-05, 8.245800000000053e-05, 8.538900000000169e-05, 8.720899999999782e-05, 8.442999999999992e-05, 8.438900000000069e-05, 8.152800000000085e-05, 8.34859999999972e-05, 8.727699999999672e-05, 8.337500000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.136" endtime="20201029 12:44:03.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.131" endtime="20201029 12:44:03.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.143" endtime="20201029 12:44:03.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.142" endtime="20201029 12:44:03.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.140" endtime="20201029 12:44:03.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.772" endtime="20201029 12:44:03.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.771" endtime="20201029 12:44:03.164"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.172" endtime="20201029 12:44:03.195"></status>
</kw>
<msg timestamp="20201029 12:44:03.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.171" endtime="20201029 12:44:03.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.196" endtime="20201029 12:44:03.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.199" endtime="20201029 12:44:03.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.168" endtime="20201029 12:44:03.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.166" endtime="20201029 12:44:03.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.208" endtime="20201029 12:44:03.492"></status>
</kw>
<msg timestamp="20201029 12:44:03.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.206" endtime="20201029 12:44:03.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.496" endtime="20201029 12:44:03.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.504" endtime="20201029 12:44:03.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.204" endtime="20201029 12:44:03.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.202" endtime="20201029 12:44:03.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.511" level="INFO">${RESULT} = [{'diff': 9.304099999999857e-05}, {'diff': 8.733300000000194e-05}, {'diff': 8.148600000000214e-05}, {'diff': 8.158399999999913e-05}, {'diff': 8.244399999999749e-05}, {'diff': 8.541699999999736e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:03.507" endtime="20201029 12:44:03.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.516" level="INFO">${ACCURACY} = {'diff': [9.304099999999857e-05, 8.733300000000194e-05, 8.148600000000214e-05, 8.158399999999913e-05, 8.244399999999749e-05, 8.541699999999736e-05, 8.341699999999883e-05, 8.727799999999966e-05, 8.5360...</msg>
<status status="PASS" starttime="20201029 12:44:03.512" endtime="20201029 12:44:03.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.520" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.519" endtime="20201029 12:44:03.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.523" level="INFO">VALUE: [9.304099999999857e-05, 8.733300000000194e-05, 8.148600000000214e-05, 8.158399999999913e-05, 8.244399999999749e-05, 8.541699999999736e-05, 8.341699999999883e-05, 8.727799999999966e-05, 8.536099999999908e-05, 8.34720000000011e-05, 8.441699999999983e-05, 8.244400000000096e-05, 8.072199999999835e-05, 8.350000000000024e-05, 8.155599999999999e-05, 8.343100000000186e-05, 8.06390000000004e-05, 8.158299999999966e-05, 8.344399999999849e-05, 8.723600000000095e-05, 8.16109999999988e-05, 8.538899999999822e-05, 8.254200000000142e-05, 8.530600000000027e-05, 8.352799999999938e-05, 8.633300000000094e-05, 8.152800000000085e-05, 8.248599999999967e-05, 8.531999999999984e-05, 8.14719999999991e-05, 8.254200000000142e-05, 8.531900000000037e-05, 8.351399999999981e-05, 8.055499999999952e-05, 8.254200000000142e-05, 8.350000000000024e-05, 8.441699999999983e-05, 8.15269999999979e-05, 8.345800000000153e-05, 8.627700000000266e-05, 8.44720000000021e-05, 8.630600000000127e-05, 8.636100000000008e-05, 8.143099999999986e-05, 8.44859999999982e-05, 8.343000000000239e-05, 8.156999999999956e-05, 8.441600000000035e-05, 8.165300000000097e-05, 8.351399999999981e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.521" endtime="20201029 12:44:03.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.517" endtime="20201029 12:44:03.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.528" endtime="20201029 12:44:03.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.526" endtime="20201029 12:44:03.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.525" endtime="20201029 12:44:03.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.165" endtime="20201029 12:44:03.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.164" endtime="20201029 12:44:03.548"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.557" endtime="20201029 12:44:03.576"></status>
</kw>
<msg timestamp="20201029 12:44:03.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.556" endtime="20201029 12:44:03.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.578" endtime="20201029 12:44:03.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.580" endtime="20201029 12:44:03.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.553" endtime="20201029 12:44:03.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.551" endtime="20201029 12:44:03.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.589" endtime="20201029 12:44:03.876"></status>
</kw>
<msg timestamp="20201029 12:44:03.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.588" endtime="20201029 12:44:03.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.880" endtime="20201029 12:44:03.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.888" endtime="20201029 12:44:03.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.585" endtime="20201029 12:44:03.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.584" endtime="20201029 12:44:03.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.895" level="INFO">${RESULT} = [{'diff': 8.919500000000025e-05}, {'diff': 8.165300000000097e-05}, {'diff': 8.451400000000081e-05}, {'diff': 8.438799999999774e-05}, {'diff': 8.536099999999908e-05}, {'diff': 8.643099999999793e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:03.892" endtime="20201029 12:44:03.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.899" level="INFO">${ACCURACY} = {'diff': [8.919500000000025e-05, 8.165300000000097e-05, 8.451400000000081e-05, 8.438799999999774e-05, 8.536099999999908e-05, 8.643099999999793e-05, 8.3459000000001e-05, 8.445800000000253e-05, 8.626399...</msg>
<status status="PASS" starttime="20201029 12:44:03.896" endtime="20201029 12:44:03.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.904" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.903" endtime="20201029 12:44:03.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.906" level="INFO">VALUE: [8.919500000000025e-05, 8.165300000000097e-05, 8.451400000000081e-05, 8.438799999999774e-05, 8.536099999999908e-05, 8.643099999999793e-05, 8.3459000000001e-05, 8.445800000000253e-05, 8.626399999999909e-05, 8.350000000000024e-05, 8.447199999999863e-05, 8.440300000000026e-05, 8.356999999999809e-05, 8.438900000000069e-05, 8.541700000000083e-05, 8.724999999999705e-05, 8.154200000000042e-05, 8.449999999999777e-05, 8.729199999999923e-05, 8.158299999999966e-05, 8.444399999999949e-05, 8.062499999999737e-05, 8.627799999999866e-05, 8.449999999999777e-05, 8.15970000000027e-05, 8.536100000000255e-05, 8.26109999999998e-05, 8.438899999999722e-05, 8.343000000000239e-05, 8.16109999999988e-05, 8.540300000000126e-05, 8.637499999999965e-05, 8.344400000000196e-05, 8.258300000000066e-05, 8.340199999999978e-05, 8.356899999999862e-05, 8.249999999999924e-05, 8.541700000000083e-05, 8.244400000000096e-05, 8.070799999999878e-05, 8.356899999999862e-05, 8.248599999999967e-05, 8.25979999999997e-05, 8.441699999999983e-05, 8.24720000000001e-05, 8.16109999999988e-05, 8.249999999999924e-05, 8.355499999999905e-05, 8.350000000000024e-05, 8.538899999999822e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.905" endtime="20201029 12:44:03.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.900" endtime="20201029 12:44:03.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.911" endtime="20201029 12:44:03.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.909" endtime="20201029 12:44:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.908" endtime="20201029 12:44:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.549" endtime="20201029 12:44:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.549" endtime="20201029 12:44:03.932"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.940" endtime="20201029 12:44:03.963"></status>
</kw>
<msg timestamp="20201029 12:44:03.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.939" endtime="20201029 12:44:03.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.965" endtime="20201029 12:44:03.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.967" endtime="20201029 12:44:03.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.936" endtime="20201029 12:44:03.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.934" endtime="20201029 12:44:03.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.976" endtime="20201029 12:44:04.263"></status>
</kw>
<msg timestamp="20201029 12:44:04.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024078181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024163597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.975" endtime="20201029 12:44:04.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024078181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024163597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.267" endtime="20201029 12:44:04.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.275" endtime="20201029 12:44:04.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.972" endtime="20201029 12:44:04.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.970" endtime="20201029 12:44:04.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.281" level="INFO">${RESULT} = [{'diff': 8.541599999999788e-05}, {'diff': 8.148600000000214e-05}, {'diff': 8.259700000000023e-05}, {'diff': 8.627799999999866e-05}, {'diff': 8.63059999999978e-05}, {'diff': 8.058399999999813e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:04.278" endtime="20201029 12:44:04.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.286" level="INFO">${ACCURACY} = {'diff': [8.541599999999788e-05, 8.148600000000214e-05, 8.259700000000023e-05, 8.627799999999866e-05, 8.63059999999978e-05, 8.058399999999813e-05, 8.155599999999999e-05, 8.358300000000166e-05, 8.43340...</msg>
<status status="PASS" starttime="20201029 12:44:04.282" endtime="20201029 12:44:04.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.290" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.289" endtime="20201029 12:44:04.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.292" level="INFO">VALUE: [8.541599999999788e-05, 8.148600000000214e-05, 8.259700000000023e-05, 8.627799999999866e-05, 8.63059999999978e-05, 8.058399999999813e-05, 8.155599999999999e-05, 8.358300000000166e-05, 8.433400000000188e-05, 8.257000000000056e-05, 8.338899999999969e-05, 8.056999999999856e-05, 8.06390000000004e-05, 8.350000000000024e-05, 7.96389999999994e-05, 8.165199999999803e-05, 8.245799999999706e-05, 8.254199999999795e-05, 8.248599999999967e-05, 8.348600000000067e-05, 8.340299999999926e-05, 8.352699999999991e-05, 8.241699999999783e-05, 8.155599999999999e-05, 8.338899999999969e-05, 8.536099999999908e-05, 8.538899999999822e-05, 8.15970000000027e-05, 8.434700000000198e-05, 8.625000000000299e-05, 8.251399999999881e-05, 8.722200000000138e-05, 8.538899999999822e-05, 8.352799999999938e-05, 8.444500000000243e-05, 8.341699999999883e-05, 8.254099999999848e-05, 8.356999999999809e-05, 8.445800000000253e-05, 8.536099999999908e-05, 8.629199999999823e-05, 8.632000000000084e-05, 8.540299999999779e-05, 8.434799999999798e-05, 8.16390000000014e-05, 8.256900000000109e-05, 8.437499999999765e-05, 8.627799999999866e-05, 8.633300000000094e-05, 8.445799999999906e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.291" endtime="20201029 12:44:04.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.286" endtime="20201029 12:44:04.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.298" endtime="20201029 12:44:04.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.297" endtime="20201029 12:44:04.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.295" endtime="20201029 12:44:04.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.933" endtime="20201029 12:44:04.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.932" endtime="20201029 12:44:04.319"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.330" endtime="20201029 12:44:04.351"></status>
</kw>
<msg timestamp="20201029 12:44:04.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.326" endtime="20201029 12:44:04.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.353" endtime="20201029 12:44:04.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.356" endtime="20201029 12:44:04.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.324" endtime="20201029 12:44:04.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.321" endtime="20201029 12:44:04.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.366" endtime="20201029 12:44:04.652"></status>
</kw>
<msg timestamp="20201029 12:44:04.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023538208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.364" endtime="20201029 12:44:04.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023538208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023621597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.656" endtime="20201029 12:44:04.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.664" endtime="20201029 12:44:04.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.360" endtime="20201029 12:44:04.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.359" endtime="20201029 12:44:04.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.671" level="INFO">${RESULT} = [{'diff': 8.338899999999969e-05}, {'diff': 8.14719999999991e-05}, {'diff': 8.347199999999763e-05}, {'diff': 8.629099999999876e-05}, {'diff': 8.062500000000083e-05}, {'diff': 8.440300000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:04.667" endtime="20201029 12:44:04.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.678" level="INFO">${ACCURACY} = {'diff': [8.338899999999969e-05, 8.14719999999991e-05, 8.347199999999763e-05, 8.629099999999876e-05, 8.062500000000083e-05, 8.440300000000026e-05, 8.341699999999883e-05, 8.263899999999894e-05, 8.05979...</msg>
<status status="PASS" starttime="20201029 12:44:04.672" endtime="20201029 12:44:04.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.683" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.682" endtime="20201029 12:44:04.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.685" level="INFO">VALUE: [8.338899999999969e-05, 8.14719999999991e-05, 8.347199999999763e-05, 8.629099999999876e-05, 8.062500000000083e-05, 8.440300000000026e-05, 8.341699999999883e-05, 8.263899999999894e-05, 8.05979999999977e-05, 8.05840000000016e-05, 8.527800000000113e-05, 8.161199999999827e-05, 8.34309999999984e-05, 8.626400000000256e-05, 8.438899999999722e-05, 8.162499999999837e-05, 8.436099999999808e-05, 8.736100000000108e-05, 8.150000000000171e-05, 8.638900000000269e-05, 8.244400000000096e-05, 8.544400000000049e-05, 8.445799999999906e-05, 8.350000000000024e-05, 8.252799999999838e-05, 8.53050000000008e-05, 8.644399999999802e-05, 8.061100000000126e-05, 8.348600000000067e-05, 8.537500000000212e-05, 8.3459000000001e-05, 8.341699999999883e-05, 8.63470000000005e-05, 8.640299999999879e-05, 8.155499999999705e-05, 7.966700000000201e-05, 8.538899999999822e-05, 8.722200000000138e-05, 8.627799999999866e-05, 8.162499999999837e-05, 8.340299999999926e-05, 8.545899999999954e-05, 8.350000000000024e-05, 8.340199999999978e-05, 8.444499999999897e-05, 8.442999999999992e-05, 8.065299999999997e-05, 8.151400000000128e-05, 8.444499999999897e-05, 8.251399999999881e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.684" endtime="20201029 12:44:04.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.679" endtime="20201029 12:44:04.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.690" endtime="20201029 12:44:04.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.688" endtime="20201029 12:44:04.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.687" endtime="20201029 12:44:04.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.320" endtime="20201029 12:44:04.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.319" endtime="20201029 12:44:04.711"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.719" endtime="20201029 12:44:04.743"></status>
</kw>
<msg timestamp="20201029 12:44:04.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.718" endtime="20201029 12:44:04.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.744" endtime="20201029 12:44:04.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.747" endtime="20201029 12:44:04.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.715" endtime="20201029 12:44:04.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.713" endtime="20201029 12:44:04.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.755" endtime="20201029 12:44:05.043"></status>
</kw>
<msg timestamp="20201029 12:44:05.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023715528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.754" endtime="20201029 12:44:05.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023715528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.047" endtime="20201029 12:44:05.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.056" endtime="20201029 12:44:05.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.751" endtime="20201029 12:44:05.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.750" endtime="20201029 12:44:05.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.062" level="INFO">${RESULT} = [{'diff': 9.491600000000044e-05}, {'diff': 8.069499999999868e-05}, {'diff': 8.347199999999763e-05}, {'diff': 8.541700000000083e-05}, {'diff': 8.538900000000169e-05}, {'diff': 8.636099999999661e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:05.059" endtime="20201029 12:44:05.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.066" level="INFO">${ACCURACY} = {'diff': [9.491600000000044e-05, 8.069499999999868e-05, 8.347199999999763e-05, 8.541700000000083e-05, 8.538900000000169e-05, 8.636099999999661e-05, 8.056999999999856e-05, 8.637499999999965e-05, 8.1625...</msg>
<status status="PASS" starttime="20201029 12:44:05.063" endtime="20201029 12:44:05.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.071" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.070" endtime="20201029 12:44:05.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.073" level="INFO">VALUE: [9.491600000000044e-05, 8.069499999999868e-05, 8.347199999999763e-05, 8.541700000000083e-05, 8.538900000000169e-05, 8.636099999999661e-05, 8.056999999999856e-05, 8.637499999999965e-05, 8.162500000000183e-05, 8.350000000000024e-05, 8.3459000000001e-05, 8.64310000000014e-05, 8.52920000000007e-05, 8.54310000000004e-05, 8.736100000000108e-05, 8.354200000000242e-05, 8.165300000000097e-05, 8.633300000000094e-05, 8.165300000000097e-05, 8.248599999999967e-05, 8.166700000000054e-05, 8.355500000000252e-05, 8.442999999999992e-05, 8.537500000000212e-05, 8.262499999999937e-05, 8.344400000000196e-05, 8.169400000000021e-05, 8.259700000000023e-05, 8.340300000000272e-05, 8.642999999999845e-05, 8.06390000000004e-05, 8.727700000000019e-05, 8.440200000000078e-05, 8.736100000000108e-05, 8.440200000000078e-05, 8.531900000000037e-05, 8.159699999999923e-05, 8.455500000000005e-05, 8.347300000000057e-05, 8.258400000000013e-05, 8.540300000000126e-05, 8.258299999999719e-05, 8.445899999999854e-05, 8.638899999999922e-05, 8.444399999999949e-05, 8.638899999999922e-05, 8.727799999999966e-05, 8.552800000000138e-05, 8.156900000000009e-05, 8.159699999999923e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.072" endtime="20201029 12:44:05.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.067" endtime="20201029 12:44:05.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.085" endtime="20201029 12:44:05.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.083" endtime="20201029 12:44:05.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.082" endtime="20201029 12:44:05.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.712" endtime="20201029 12:44:05.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.711" endtime="20201029 12:44:05.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.350" endtime="20201029 12:44:05.105"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:26.273" endtime="20201029 12:44:05.106" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.112" endtime="20201029 12:44:05.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.111" endtime="20201029 12:44:05.133"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.146" endtime="20201029 12:44:05.165"></status>
</kw>
<msg timestamp="20201029 12:44:05.166" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.145" endtime="20201029 12:44:05.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.167" endtime="20201029 12:44:05.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.171" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:05.169" endtime="20201029 12:44:05.172"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:05.142" endtime="20201029 12:44:05.172"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:05.140" endtime="20201029 12:44:05.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.138" endtime="20201029 12:44:05.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:05.177" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:05.176" endtime="20201029 12:44:05.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.174" endtime="20201029 12:44:05.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.137" endtime="20201029 12:44:05.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.136" endtime="20201029 12:44:05.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.179" endtime="20201029 12:44:05.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.135" endtime="20201029 12:44:05.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.133" endtime="20201029 12:44:05.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.110" endtime="20201029 12:44:05.181"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.190" endtime="20201029 12:44:05.210"></status>
</kw>
<msg timestamp="20201029 12:44:05.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.189" endtime="20201029 12:44:05.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.211" endtime="20201029 12:44:05.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.214" endtime="20201029 12:44:05.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.186" endtime="20201029 12:44:05.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.184" endtime="20201029 12:44:05.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.223" endtime="20201029 12:44:05.509"></status>
</kw>
<msg timestamp="20201029 12:44:05.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073455153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073463833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.222" endtime="20201029 12:44:05.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073455153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073463833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.513" endtime="20201029 12:44:05.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.521" endtime="20201029 12:44:05.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.219" endtime="20201029 12:44:05.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.217" endtime="20201029 12:44:05.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.528" level="INFO">${RESULT} = [{'diff': 8.680000000010901e-06}, {'diff': 8.679999999997023e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.693999999989654e-06}, {'diff': 8.708999999995637e-06}, {'diff': 8.735999999995303e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:05.525" endtime="20201029 12:44:05.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.532" level="INFO">${ACCURACY} = {'diff': [8.680000000010901e-06, 8.679999999997023e-06, 8.707999999996163e-06, 8.693999999989654e-06, 8.708999999995637e-06, 8.735999999995303e-06, 8.694000000003532e-06, 8.694000000003532e-06, 8.6670...</msg>
<status status="PASS" starttime="20201029 12:44:05.529" endtime="20201029 12:44:05.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.536" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.535" endtime="20201029 12:44:05.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.539" level="INFO">VALUE: [8.680000000010901e-06, 8.679999999997023e-06, 8.707999999996163e-06, 8.693999999989654e-06, 8.708999999995637e-06, 8.735999999995303e-06, 8.694000000003532e-06, 8.694000000003532e-06, 8.667000000003866e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.708000000010041e-06, 8.722000000002672e-06, 8.693999999989654e-06, 8.707999999996163e-06, 8.749999999987934e-06, 8.667000000003866e-06, 8.679999999997023e-06, 8.763999999994443e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.680999999996497e-06, 8.651999999997884e-06, 8.694000000003532e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.694000000003532e-06, 8.708000000010041e-06, 8.708999999995637e-06, 8.694999999989128e-06, 8.695000000003006e-06, 8.666999999989988e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.722000000002672e-06, 8.708999999995637e-06, 8.638999999990848e-06, 8.680000000010901e-06, 8.695000000003006e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.695000000003006e-06]</msg>
<status status="PASS" starttime="20201029 12:44:05.537" endtime="20201029 12:44:05.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.533" endtime="20201029 12:44:05.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.543" endtime="20201029 12:44:05.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.541" endtime="20201029 12:44:05.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.540" endtime="20201029 12:44:05.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.183" endtime="20201029 12:44:05.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.182" endtime="20201029 12:44:05.564"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.573" endtime="20201029 12:44:05.591"></status>
</kw>
<msg timestamp="20201029 12:44:05.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.572" endtime="20201029 12:44:05.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.593" endtime="20201029 12:44:05.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.595" endtime="20201029 12:44:05.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.568" endtime="20201029 12:44:05.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.566" endtime="20201029 12:44:05.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.604" endtime="20201029 12:44:05.890"></status>
</kw>
<msg timestamp="20201029 12:44:05.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024700472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024709181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.603" endtime="20201029 12:44:05.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024700472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024709181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.895" endtime="20201029 12:44:05.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.903" endtime="20201029 12:44:05.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.600" endtime="20201029 12:44:05.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.598" endtime="20201029 12:44:05.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.909" level="INFO">${RESULT} = [{'diff': 8.708999999999106e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.708999999999106e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:05.906" endtime="20201029 12:44:05.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.913" level="INFO">${ACCURACY} = {'diff': [8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.6949...</msg>
<status status="PASS" starttime="20201029 12:44:05.910" endtime="20201029 12:44:05.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.919" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.917" endtime="20201029 12:44:05.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.921" level="INFO">VALUE: [8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.665999999997454e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.651999999997884e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.777000000001478e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201029 12:44:05.920" endtime="20201029 12:44:05.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.914" endtime="20201029 12:44:05.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.926" endtime="20201029 12:44:05.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.924" endtime="20201029 12:44:05.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.923" endtime="20201029 12:44:05.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.565" endtime="20201029 12:44:05.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.564" endtime="20201029 12:44:05.946"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.955" endtime="20201029 12:44:05.976"></status>
</kw>
<msg timestamp="20201029 12:44:05.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.954" endtime="20201029 12:44:05.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.977" endtime="20201029 12:44:05.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.980" endtime="20201029 12:44:05.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.951" endtime="20201029 12:44:05.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.949" endtime="20201029 12:44:05.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.989" endtime="20201029 12:44:06.274"></status>
</kw>
<msg timestamp="20201029 12:44:06.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023997181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.987" endtime="20201029 12:44:06.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023997181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.278" endtime="20201029 12:44:06.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.288" endtime="20201029 12:44:06.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.985" endtime="20201029 12:44:06.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.983" endtime="20201029 12:44:06.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.298" level="INFO">${RESULT} = [{'diff': 8.624999999998217e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.638999999997787e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:06.293" endtime="20201029 12:44:06.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.305" level="INFO">${ACCURACY} = {'diff': [8.624999999998217e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.610999999998648e-06, 8.639000000001257e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 12:44:06.299" endtime="20201029 12:44:06.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.311" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.310" endtime="20201029 12:44:06.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.315" level="INFO">VALUE: [8.624999999998217e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.610999999998648e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.762999999998439e-06, 8.736000000002242e-06, 8.666999999996927e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.750000000001812e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.723000000002146e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.679999999997023e-06, 8.610999999998648e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201029 12:44:06.313" endtime="20201029 12:44:06.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.306" endtime="20201029 12:44:06.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.321" endtime="20201029 12:44:06.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.319" endtime="20201029 12:44:06.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.318" endtime="20201029 12:44:06.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.947" endtime="20201029 12:44:06.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.947" endtime="20201029 12:44:06.342"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.350" endtime="20201029 12:44:06.366"></status>
</kw>
<msg timestamp="20201029 12:44:06.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.349" endtime="20201029 12:44:06.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.367" endtime="20201029 12:44:06.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.370" endtime="20201029 12:44:06.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.346" endtime="20201029 12:44:06.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.344" endtime="20201029 12:44:06.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.379" endtime="20201029 12:44:06.664"></status>
</kw>
<msg timestamp="20201029 12:44:06.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020653486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.377" endtime="20201029 12:44:06.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020653486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.669" endtime="20201029 12:44:06.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.677" endtime="20201029 12:44:06.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.375" endtime="20201029 12:44:06.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.373" endtime="20201029 12:44:06.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.684" level="INFO">${RESULT} = [{'diff': 8.597000000002547e-06}, {'diff': 8.652999999997357e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.764000000001382e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:06.680" endtime="20201029 12:44:06.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.688" level="INFO">${ACCURACY} = {'diff': [8.597000000002547e-06, 8.652999999997357e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.6949...</msg>
<status status="PASS" starttime="20201029 12:44:06.685" endtime="20201029 12:44:06.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.692" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.691" endtime="20201029 12:44:06.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.695" level="INFO">VALUE: [8.597000000002547e-06, 8.652999999997357e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.763000000001908e-06, 8.708000000003102e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.722999999998676e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.723000000002146e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201029 12:44:06.693" endtime="20201029 12:44:06.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.689" endtime="20201029 12:44:06.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.700" endtime="20201029 12:44:06.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.698" endtime="20201029 12:44:06.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.697" endtime="20201029 12:44:06.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.343" endtime="20201029 12:44:06.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.342" endtime="20201029 12:44:06.720"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.729" endtime="20201029 12:44:06.751"></status>
</kw>
<msg timestamp="20201029 12:44:06.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.728" endtime="20201029 12:44:06.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.752" endtime="20201029 12:44:06.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.755" endtime="20201029 12:44:06.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.725" endtime="20201029 12:44:06.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.723" endtime="20201029 12:44:06.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.764" endtime="20201029 12:44:07.053"></status>
</kw>
<msg timestamp="20201029 12:44:07.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023564361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023573056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.762" endtime="20201029 12:44:07.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023564361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023573056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.057" endtime="20201029 12:44:07.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.065" endtime="20201029 12:44:07.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.760" endtime="20201029 12:44:07.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.758" endtime="20201029 12:44:07.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.071" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:07.068" endtime="20201029 12:44:07.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.076" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.6250...</msg>
<status status="PASS" starttime="20201029 12:44:07.072" endtime="20201029 12:44:07.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.080" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.079" endtime="20201029 12:44:07.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.083" level="INFO">VALUE: [8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.625000000001687e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.707999999999633e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201029 12:44:07.081" endtime="20201029 12:44:07.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.077" endtime="20201029 12:44:07.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.089" endtime="20201029 12:44:07.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.087" endtime="20201029 12:44:07.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.086" endtime="20201029 12:44:07.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.721" endtime="20201029 12:44:07.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.721" endtime="20201029 12:44:07.109"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.118" endtime="20201029 12:44:07.137"></status>
</kw>
<msg timestamp="20201029 12:44:07.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.116" endtime="20201029 12:44:07.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.140" endtime="20201029 12:44:07.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.145" endtime="20201029 12:44:07.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.114" endtime="20201029 12:44:07.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.112" endtime="20201029 12:44:07.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.164" endtime="20201029 12:44:07.457"></status>
</kw>
<msg timestamp="20201029 12:44:07.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021590875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.161" endtime="20201029 12:44:07.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021582181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021590875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.461" endtime="20201029 12:44:07.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.469" endtime="20201029 12:44:07.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.156" endtime="20201029 12:44:07.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.152" endtime="20201029 12:44:07.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.476" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:07.473" endtime="20201029 12:44:07.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.481" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.7370...</msg>
<status status="PASS" starttime="20201029 12:44:07.477" endtime="20201029 12:44:07.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.486" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.485" endtime="20201029 12:44:07.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.488" level="INFO">VALUE: [8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.737000000001716e-06, 8.680999999999967e-06, 8.693999999996593e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.610999999998648e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.695000000003006e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201029 12:44:07.487" endtime="20201029 12:44:07.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.482" endtime="20201029 12:44:07.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.493" endtime="20201029 12:44:07.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.492" endtime="20201029 12:44:07.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.491" endtime="20201029 12:44:07.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.110" endtime="20201029 12:44:07.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.110" endtime="20201029 12:44:07.514"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.523" endtime="20201029 12:44:07.542"></status>
</kw>
<msg timestamp="20201029 12:44:07.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.521" endtime="20201029 12:44:07.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.543" endtime="20201029 12:44:07.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.546" endtime="20201029 12:44:07.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.519" endtime="20201029 12:44:07.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.516" endtime="20201029 12:44:07.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.555" endtime="20201029 12:44:07.842"></status>
</kw>
<msg timestamp="20201029 12:44:07.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023813375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023822139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.553" endtime="20201029 12:44:07.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023813375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023822139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.847" endtime="20201029 12:44:07.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.856" endtime="20201029 12:44:07.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.551" endtime="20201029 12:44:07.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.549" endtime="20201029 12:44:07.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.865" level="INFO">${RESULT} = [{'diff': 8.763999999997912e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.709000000002576e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:07.861" endtime="20201029 12:44:07.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.870" level="INFO">${ACCURACY} = {'diff': [8.763999999997912e-06, 8.680000000000493e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.7079...</msg>
<status status="PASS" starttime="20201029 12:44:07.866" endtime="20201029 12:44:07.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.875" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.874" endtime="20201029 12:44:07.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.880" level="INFO">VALUE: [8.763999999997912e-06, 8.680000000000493e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.624999999998217e-06, 8.694000000000063e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.722999999998676e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201029 12:44:07.877" endtime="20201029 12:44:07.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.871" endtime="20201029 12:44:07.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.885" endtime="20201029 12:44:07.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.884" endtime="20201029 12:44:07.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.883" endtime="20201029 12:44:07.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.515" endtime="20201029 12:44:07.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.514" endtime="20201029 12:44:07.906"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.915" endtime="20201029 12:44:07.938"></status>
</kw>
<msg timestamp="20201029 12:44:07.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.913" endtime="20201029 12:44:07.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.939" endtime="20201029 12:44:07.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.942" endtime="20201029 12:44:07.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.911" endtime="20201029 12:44:07.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.909" endtime="20201029 12:44:07.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.951" endtime="20201029 12:44:08.237"></status>
</kw>
<msg timestamp="20201029 12:44:08.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023505472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.949" endtime="20201029 12:44:08.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023505472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.241" endtime="20201029 12:44:08.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.249" endtime="20201029 12:44:08.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.947" endtime="20201029 12:44:08.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.945" endtime="20201029 12:44:08.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.256" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:08.253" endtime="20201029 12:44:08.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.261" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.6800...</msg>
<status status="PASS" starttime="20201029 12:44:08.257" endtime="20201029 12:44:08.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.265" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.264" endtime="20201029 12:44:08.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.268" level="INFO">VALUE: [8.694999999999536e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.806000000000092e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 12:44:08.266" endtime="20201029 12:44:08.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.261" endtime="20201029 12:44:08.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.274" endtime="20201029 12:44:08.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.272" endtime="20201029 12:44:08.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.271" endtime="20201029 12:44:08.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.907" endtime="20201029 12:44:08.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.907" endtime="20201029 12:44:08.295"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.304" endtime="20201029 12:44:08.320"></status>
</kw>
<msg timestamp="20201029 12:44:08.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.302" endtime="20201029 12:44:08.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.321" endtime="20201029 12:44:08.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.324" endtime="20201029 12:44:08.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.299" endtime="20201029 12:44:08.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.297" endtime="20201029 12:44:08.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.333" endtime="20201029 12:44:08.621"></status>
</kw>
<msg timestamp="20201029 12:44:08.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.332" endtime="20201029 12:44:08.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.625" endtime="20201029 12:44:08.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.635" endtime="20201029 12:44:08.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.329" endtime="20201029 12:44:08.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.327" endtime="20201029 12:44:08.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.648" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.624999999998217e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:08.641" endtime="20201029 12:44:08.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.659" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.7219...</msg>
<status status="PASS" starttime="20201029 12:44:08.650" endtime="20201029 12:44:08.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.668" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.666" endtime="20201029 12:44:08.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.673" level="INFO">VALUE: [8.667000000000397e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.804999999997148e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.666999999996927e-06]</msg>
<status status="PASS" starttime="20201029 12:44:08.670" endtime="20201029 12:44:08.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.660" endtime="20201029 12:44:08.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.683" endtime="20201029 12:44:08.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.680" endtime="20201029 12:44:08.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.678" endtime="20201029 12:44:08.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.295" endtime="20201029 12:44:08.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.295" endtime="20201029 12:44:08.708"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.725" endtime="20201029 12:44:08.741"></status>
</kw>
<msg timestamp="20201029 12:44:08.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.722" endtime="20201029 12:44:08.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.743" endtime="20201029 12:44:08.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.745" endtime="20201029 12:44:08.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.717" endtime="20201029 12:44:08.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.713" endtime="20201029 12:44:08.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.754" endtime="20201029 12:44:09.041"></status>
</kw>
<msg timestamp="20201029 12:44:09.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034050917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034059625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.753" endtime="20201029 12:44:09.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034050917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034059625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.045" endtime="20201029 12:44:09.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.053" endtime="20201029 12:44:09.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.750" endtime="20201029 12:44:09.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.748" endtime="20201029 12:44:09.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.060" level="INFO">${RESULT} = [{'diff': 8.708000000003102e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.721999999995733e-06}, {'diff': 8.667000000003866e-06}, {'diff': 8.694000000003532e-06}, {'diff': 8.610999999998648e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:09.057" endtime="20201029 12:44:09.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.064" level="INFO">${ACCURACY} = {'diff': [8.708000000003102e-06, 8.707999999996163e-06, 8.721999999995733e-06, 8.667000000003866e-06, 8.694000000003532e-06, 8.610999999998648e-06, 8.694999999996067e-06, 8.708000000003102e-06, 8.6950...</msg>
<status status="PASS" starttime="20201029 12:44:09.061" endtime="20201029 12:44:09.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.070" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.068" endtime="20201029 12:44:09.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.073" level="INFO">VALUE: [8.708000000003102e-06, 8.707999999996163e-06, 8.721999999995733e-06, 8.667000000003866e-06, 8.694000000003532e-06, 8.610999999998648e-06, 8.694999999996067e-06, 8.708000000003102e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.693999999996593e-06, 8.695000000003006e-06, 8.667000000003866e-06, 8.681000000003436e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.721999999995733e-06, 8.708999999995637e-06, 8.694000000003532e-06, 8.665999999997454e-06, 8.707999999996163e-06, 8.680000000003962e-06, 8.694000000003532e-06, 8.750000000001812e-06, 8.709000000002576e-06, 8.694999999996067e-06, 8.680999999996497e-06, 8.708000000003102e-06, 8.695000000003006e-06, 8.722000000002672e-06, 8.749999999994873e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.610999999998648e-06, 8.680999999996497e-06, 8.681000000003436e-06, 8.707999999996163e-06, 8.737000000001716e-06, 8.652999999997357e-06, 8.693999999996593e-06, 8.707999999996163e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.666999999996927e-06, 8.665999999997454e-06, 8.694000000003532e-06, 8.681000000003436e-06, 8.764000000001382e-06, 8.666000000004392e-06]</msg>
<status status="PASS" starttime="20201029 12:44:09.071" endtime="20201029 12:44:09.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.065" endtime="20201029 12:44:09.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.080" endtime="20201029 12:44:09.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.078" endtime="20201029 12:44:09.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.076" endtime="20201029 12:44:09.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.710" endtime="20201029 12:44:09.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.708" endtime="20201029 12:44:09.102"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.110" endtime="20201029 12:44:09.129"></status>
</kw>
<msg timestamp="20201029 12:44:09.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.109" endtime="20201029 12:44:09.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.131" endtime="20201029 12:44:09.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.133" endtime="20201029 12:44:09.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.106" endtime="20201029 12:44:09.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.104" endtime="20201029 12:44:09.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.142" endtime="20201029 12:44:09.427"></status>
</kw>
<msg timestamp="20201029 12:44:09.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024330639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.141" endtime="20201029 12:44:09.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024330639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024339333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.431" endtime="20201029 12:44:09.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.440" endtime="20201029 12:44:09.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.138" endtime="20201029 12:44:09.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.137" endtime="20201029 12:44:09.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.446" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.652999999997357e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.667000000000397e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:09.443" endtime="20201029 12:44:09.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.450" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.7220...</msg>
<status status="PASS" starttime="20201029 12:44:09.447" endtime="20201029 12:44:09.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.455" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.454" endtime="20201029 12:44:09.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.457" level="INFO">VALUE: [8.694000000000063e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.763000000001908e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 12:44:09.456" endtime="20201029 12:44:09.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.451" endtime="20201029 12:44:09.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.463" endtime="20201029 12:44:09.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.461" endtime="20201029 12:44:09.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.460" endtime="20201029 12:44:09.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.103" endtime="20201029 12:44:09.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.102" endtime="20201029 12:44:09.484"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.492" endtime="20201029 12:44:09.511"></status>
</kw>
<msg timestamp="20201029 12:44:09.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.491" endtime="20201029 12:44:09.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.513" endtime="20201029 12:44:09.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.515" endtime="20201029 12:44:09.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.488" endtime="20201029 12:44:09.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.486" endtime="20201029 12:44:09.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.525" endtime="20201029 12:44:09.810"></status>
</kw>
<msg timestamp="20201029 12:44:09.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023547931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023556639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.523" endtime="20201029 12:44:09.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023547931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023556639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.815" endtime="20201029 12:44:09.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.823" endtime="20201029 12:44:09.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.520" endtime="20201029 12:44:09.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.518" endtime="20201029 12:44:09.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.829" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.737000000001716e-06}, {'diff': 8.749999999998342e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:09.826" endtime="20201029 12:44:09.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.834" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.6670...</msg>
<status status="PASS" starttime="20201029 12:44:09.830" endtime="20201029 12:44:09.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.839" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.838" endtime="20201029 12:44:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.841" level="INFO">VALUE: [8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.737000000001716e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.693999999996593e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.695000000003006e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201029 12:44:09.840" endtime="20201029 12:44:09.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.835" endtime="20201029 12:44:09.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.846" endtime="20201029 12:44:09.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.844" endtime="20201029 12:44:09.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.843" endtime="20201029 12:44:09.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.485" endtime="20201029 12:44:09.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.484" endtime="20201029 12:44:09.867"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.879" endtime="20201029 12:44:09.897"></status>
</kw>
<msg timestamp="20201029 12:44:09.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.877" endtime="20201029 12:44:09.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.899" endtime="20201029 12:44:09.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.901" endtime="20201029 12:44:09.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.874" endtime="20201029 12:44:09.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.871" endtime="20201029 12:44:09.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.910" endtime="20201029 12:44:10.197"></status>
</kw>
<msg timestamp="20201029 12:44:10.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027486931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027495611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.909" endtime="20201029 12:44:10.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027486931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027495611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.201" endtime="20201029 12:44:10.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.210" endtime="20201029 12:44:10.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.906" endtime="20201029 12:44:10.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.904" endtime="20201029 12:44:10.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.216" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.665999999997454e-06}, {'diff': 8.680000000000493e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:10.213" endtime="20201029 12:44:10.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.220" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.6800...</msg>
<status status="PASS" starttime="20201029 12:44:10.217" endtime="20201029 12:44:10.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.225" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.224" endtime="20201029 12:44:10.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.227" level="INFO">VALUE: [8.680000000000493e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.736000000002242e-06, 8.653000000000827e-06, 8.723000000002146e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.625000000001687e-06, 8.721999999999203e-06, 8.777999999997482e-06, 8.638999999997787e-06, 8.638999999997787e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.708999999999106e-06]</msg>
<status status="PASS" starttime="20201029 12:44:10.226" endtime="20201029 12:44:10.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.221" endtime="20201029 12:44:10.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.236" endtime="20201029 12:44:10.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.235" endtime="20201029 12:44:10.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.233" endtime="20201029 12:44:10.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.869" endtime="20201029 12:44:10.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.868" endtime="20201029 12:44:10.257"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.265" endtime="20201029 12:44:10.286"></status>
</kw>
<msg timestamp="20201029 12:44:10.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.264" endtime="20201029 12:44:10.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.288" endtime="20201029 12:44:10.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.290" endtime="20201029 12:44:10.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.261" endtime="20201029 12:44:10.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.259" endtime="20201029 12:44:10.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.299" endtime="20201029 12:44:10.584"></status>
</kw>
<msg timestamp="20201029 12:44:10.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024141986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024150681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.298" endtime="20201029 12:44:10.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024141986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024150681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.588" endtime="20201029 12:44:10.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.596" endtime="20201029 12:44:10.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.295" endtime="20201029 12:44:10.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.293" endtime="20201029 12:44:10.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.603" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.651999999997884e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:10.599" endtime="20201029 12:44:10.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.607" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.651999999997884e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.7500...</msg>
<status status="PASS" starttime="20201029 12:44:10.604" endtime="20201029 12:44:10.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.611" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.610" endtime="20201029 12:44:10.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.613" level="INFO">VALUE: [8.694999999999536e-06, 8.651999999997884e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.680999999999967e-06, 8.624999999998217e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.708000000003102e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.638999999997787e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201029 12:44:10.612" endtime="20201029 12:44:10.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.607" endtime="20201029 12:44:10.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.619" endtime="20201029 12:44:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.618" endtime="20201029 12:44:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.617" endtime="20201029 12:44:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.258" endtime="20201029 12:44:10.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.257" endtime="20201029 12:44:10.640"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.648" endtime="20201029 12:44:10.666"></status>
</kw>
<msg timestamp="20201029 12:44:10.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.647" endtime="20201029 12:44:10.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.668" endtime="20201029 12:44:10.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.670" endtime="20201029 12:44:10.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.644" endtime="20201029 12:44:10.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.642" endtime="20201029 12:44:10.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.679" endtime="20201029 12:44:10.967"></status>
</kw>
<msg timestamp="20201029 12:44:10.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.678" endtime="20201029 12:44:10.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.971" endtime="20201029 12:44:10.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.980" endtime="20201029 12:44:10.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.675" endtime="20201029 12:44:10.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.674" endtime="20201029 12:44:10.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.986" level="INFO">${RESULT} = [{'diff': 8.653000000000827e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:10.983" endtime="20201029 12:44:10.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.991" level="INFO">${ACCURACY} = {'diff': [8.653000000000827e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.6949...</msg>
<status status="PASS" starttime="20201029 12:44:10.987" endtime="20201029 12:44:10.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.995" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.994" endtime="20201029 12:44:10.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.998" level="INFO">VALUE: [8.653000000000827e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.652000000001353e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.709000000002576e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.791999999997052e-06, 8.638000000001783e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.681000000003436e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 12:44:10.996" endtime="20201029 12:44:10.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.992" endtime="20201029 12:44:10.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.003" endtime="20201029 12:44:11.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.001" endtime="20201029 12:44:11.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.000" endtime="20201029 12:44:11.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.641" endtime="20201029 12:44:11.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.640" endtime="20201029 12:44:11.024"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.032" endtime="20201029 12:44:11.051"></status>
</kw>
<msg timestamp="20201029 12:44:11.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.031" endtime="20201029 12:44:11.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.053" endtime="20201029 12:44:11.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.055" endtime="20201029 12:44:11.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.028" endtime="20201029 12:44:11.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.026" endtime="20201029 12:44:11.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.064" endtime="20201029 12:44:11.351"></status>
</kw>
<msg timestamp="20201029 12:44:11.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021039319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.063" endtime="20201029 12:44:11.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021039319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.355" endtime="20201029 12:44:11.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.363" endtime="20201029 12:44:11.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.060" endtime="20201029 12:44:11.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.058" endtime="20201029 12:44:11.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.370" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:11.367" endtime="20201029 12:44:11.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.374" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.737000000001716e-06, 8.707999999999633e-06, 8.7359...</msg>
<status status="PASS" starttime="20201029 12:44:11.371" endtime="20201029 12:44:11.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.378" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.377" endtime="20201029 12:44:11.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.381" level="INFO">VALUE: [8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.737000000001716e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.596999999999078e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.709000000002576e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.777000000001478e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201029 12:44:11.379" endtime="20201029 12:44:11.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.375" endtime="20201029 12:44:11.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.386" endtime="20201029 12:44:11.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.384" endtime="20201029 12:44:11.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.383" endtime="20201029 12:44:11.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.025" endtime="20201029 12:44:11.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.024" endtime="20201029 12:44:11.406"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.415" endtime="20201029 12:44:11.435"></status>
</kw>
<msg timestamp="20201029 12:44:11.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.414" endtime="20201029 12:44:11.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.436" endtime="20201029 12:44:11.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.439" endtime="20201029 12:44:11.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.411" endtime="20201029 12:44:11.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.409" endtime="20201029 12:44:11.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.447" endtime="20201029 12:44:11.733"></status>
</kw>
<msg timestamp="20201029 12:44:11.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025029722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.446" endtime="20201029 12:44:11.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025029722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025038444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.737" endtime="20201029 12:44:11.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.745" endtime="20201029 12:44:11.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.443" endtime="20201029 12:44:11.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.442" endtime="20201029 12:44:11.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.751" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.665999999997454e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:11.748" endtime="20201029 12:44:11.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.755" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.722000000002672e-06, 8.666000000000923e-06, 8.665999999997454e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.7359...</msg>
<status status="PASS" starttime="20201029 12:44:11.752" endtime="20201029 12:44:11.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.760" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.759" endtime="20201029 12:44:11.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.762" level="INFO">VALUE: [8.721999999999203e-06, 8.722000000002672e-06, 8.666000000000923e-06, 8.665999999997454e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.763999999997912e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.693999999996593e-06, 8.722000000002672e-06, 8.709000000002576e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.749999999998342e-06, 8.709000000002576e-06, 8.61200000000159e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.721999999999203e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.721999999999203e-06]</msg>
<status status="PASS" starttime="20201029 12:44:11.761" endtime="20201029 12:44:11.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.756" endtime="20201029 12:44:11.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.768" endtime="20201029 12:44:11.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.766" endtime="20201029 12:44:11.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.765" endtime="20201029 12:44:11.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.407" endtime="20201029 12:44:11.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.407" endtime="20201029 12:44:11.789"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.797" endtime="20201029 12:44:11.816"></status>
</kw>
<msg timestamp="20201029 12:44:11.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.796" endtime="20201029 12:44:11.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.818" endtime="20201029 12:44:11.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.820" endtime="20201029 12:44:11.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.793" endtime="20201029 12:44:11.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.791" endtime="20201029 12:44:11.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.829" endtime="20201029 12:44:12.116"></status>
</kw>
<msg timestamp="20201029 12:44:12.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024751028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.827" endtime="20201029 12:44:12.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024751028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.120" endtime="20201029 12:44:12.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.128" endtime="20201029 12:44:12.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.825" endtime="20201029 12:44:12.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.823" endtime="20201029 12:44:12.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.135" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.763999999997912e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.131" endtime="20201029 12:44:12.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.140" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.6940...</msg>
<status status="PASS" starttime="20201029 12:44:12.136" endtime="20201029 12:44:12.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.144" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.143" endtime="20201029 12:44:12.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.146" level="INFO">VALUE: [8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.763999999997912e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.665999999997454e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.776999999998009e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.652000000001353e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 12:44:12.145" endtime="20201029 12:44:12.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.140" endtime="20201029 12:44:12.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.151" endtime="20201029 12:44:12.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.150" endtime="20201029 12:44:12.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.149" endtime="20201029 12:44:12.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.789" endtime="20201029 12:44:12.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.789" endtime="20201029 12:44:12.172"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.181" endtime="20201029 12:44:12.203"></status>
</kw>
<msg timestamp="20201029 12:44:12.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.179" endtime="20201029 12:44:12.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.205" endtime="20201029 12:44:12.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.207" endtime="20201029 12:44:12.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.177" endtime="20201029 12:44:12.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.175" endtime="20201029 12:44:12.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.216" endtime="20201029 12:44:12.503"></status>
</kw>
<msg timestamp="20201029 12:44:12.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023002236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.215" endtime="20201029 12:44:12.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023002236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.507" endtime="20201029 12:44:12.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.515" endtime="20201029 12:44:12.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.212" endtime="20201029 12:44:12.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.210" endtime="20201029 12:44:12.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.522" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.518" endtime="20201029 12:44:12.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.526" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.7219...</msg>
<status status="PASS" starttime="20201029 12:44:12.523" endtime="20201029 12:44:12.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.530" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.529" endtime="20201029 12:44:12.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.533" level="INFO">VALUE: [8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.709000000002576e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.693999999996593e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.695000000003006e-06]</msg>
<status status="PASS" starttime="20201029 12:44:12.531" endtime="20201029 12:44:12.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.527" endtime="20201029 12:44:12.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.537" endtime="20201029 12:44:12.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.536" endtime="20201029 12:44:12.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.535" endtime="20201029 12:44:12.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.173" endtime="20201029 12:44:12.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.172" endtime="20201029 12:44:12.558"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.567" endtime="20201029 12:44:12.585"></status>
</kw>
<msg timestamp="20201029 12:44:12.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.565" endtime="20201029 12:44:12.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.587" endtime="20201029 12:44:12.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.589" endtime="20201029 12:44:12.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.563" endtime="20201029 12:44:12.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.561" endtime="20201029 12:44:12.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.598" endtime="20201029 12:44:12.884"></status>
</kw>
<msg timestamp="20201029 12:44:12.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023766375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023775056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.597" endtime="20201029 12:44:12.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023766375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023775056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.888" endtime="20201029 12:44:12.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.897" endtime="20201029 12:44:12.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.594" endtime="20201029 12:44:12.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.593" endtime="20201029 12:44:12.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.903" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.638999999997787e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.639000000001257e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:12.900" endtime="20201029 12:44:12.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.907" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.763999999997912e-06, 8.638999999997787e-06, 8.722000000002672e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.6670...</msg>
<status status="PASS" starttime="20201029 12:44:12.904" endtime="20201029 12:44:12.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.912" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.911" endtime="20201029 12:44:12.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.914" level="INFO">VALUE: [8.680999999999967e-06, 8.763999999997912e-06, 8.638999999997787e-06, 8.722000000002672e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.693999999996593e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.777999999997482e-06, 8.708999999999106e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 12:44:12.913" endtime="20201029 12:44:12.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.908" endtime="20201029 12:44:12.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.921" endtime="20201029 12:44:12.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.919" endtime="20201029 12:44:12.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.918" endtime="20201029 12:44:12.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.559" endtime="20201029 12:44:12.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.559" endtime="20201029 12:44:12.941"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.950" endtime="20201029 12:44:12.967"></status>
</kw>
<msg timestamp="20201029 12:44:12.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.949" endtime="20201029 12:44:12.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.968" endtime="20201029 12:44:12.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.971" endtime="20201029 12:44:12.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.946" endtime="20201029 12:44:12.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.944" endtime="20201029 12:44:12.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.980" endtime="20201029 12:44:13.266"></status>
</kw>
<msg timestamp="20201029 12:44:13.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.978" endtime="20201029 12:44:13.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.270" endtime="20201029 12:44:13.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.278" endtime="20201029 12:44:13.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.976" endtime="20201029 12:44:13.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.974" endtime="20201029 12:44:13.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.285" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:13.281" endtime="20201029 12:44:13.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.290" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.7360...</msg>
<status status="PASS" starttime="20201029 12:44:13.286" endtime="20201029 12:44:13.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.294" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.293" endtime="20201029 12:44:13.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.296" level="INFO">VALUE: [8.667000000000397e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.778000000000952e-06, 8.749999999998342e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.709000000002576e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.735999999998773e-06, 8.736999999998246e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201029 12:44:13.295" endtime="20201029 12:44:13.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.290" endtime="20201029 12:44:13.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.301" endtime="20201029 12:44:13.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.300" endtime="20201029 12:44:13.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.299" endtime="20201029 12:44:13.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.942" endtime="20201029 12:44:13.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.942" endtime="20201029 12:44:13.322"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.331" endtime="20201029 12:44:13.349"></status>
</kw>
<msg timestamp="20201029 12:44:13.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.329" endtime="20201029 12:44:13.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.350" endtime="20201029 12:44:13.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.353" endtime="20201029 12:44:13.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.327" endtime="20201029 12:44:13.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.325" endtime="20201029 12:44:13.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.362" endtime="20201029 12:44:13.648"></status>
</kw>
<msg timestamp="20201029 12:44:13.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023528278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023536986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.360" endtime="20201029 12:44:13.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023528278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023536986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.652" endtime="20201029 12:44:13.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.660" endtime="20201029 12:44:13.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.358" endtime="20201029 12:44:13.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.356" endtime="20201029 12:44:13.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.666" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:13.663" endtime="20201029 12:44:13.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.671" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 12:44:13.667" endtime="20201029 12:44:13.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.675" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.674" endtime="20201029 12:44:13.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.677" level="INFO">VALUE: [8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.637999999998314e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 12:44:13.676" endtime="20201029 12:44:13.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.671" endtime="20201029 12:44:13.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.682" endtime="20201029 12:44:13.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.681" endtime="20201029 12:44:13.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.680" endtime="20201029 12:44:13.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.323" endtime="20201029 12:44:13.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.322" endtime="20201029 12:44:13.703"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.712" endtime="20201029 12:44:13.731"></status>
</kw>
<msg timestamp="20201029 12:44:13.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.710" endtime="20201029 12:44:13.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.733" endtime="20201029 12:44:13.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.735" endtime="20201029 12:44:13.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.708" endtime="20201029 12:44:13.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.706" endtime="20201029 12:44:13.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.744" endtime="20201029 12:44:14.029"></status>
</kw>
<msg timestamp="20201029 12:44:14.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024294597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.743" endtime="20201029 12:44:14.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024294597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.033" endtime="20201029 12:44:14.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.041" endtime="20201029 12:44:14.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.740" endtime="20201029 12:44:14.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.738" endtime="20201029 12:44:14.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.048" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.624999999998217e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.045" endtime="20201029 12:44:14.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.052" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.624999999998217e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.7229...</msg>
<status status="PASS" starttime="20201029 12:44:14.049" endtime="20201029 12:44:14.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.056" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.055" endtime="20201029 12:44:14.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.059" level="INFO">VALUE: [8.694000000000063e-06, 8.624999999998217e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.777999999997482e-06, 8.680000000000493e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.611000000002117e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.681000000003436e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201029 12:44:14.058" endtime="20201029 12:44:14.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.053" endtime="20201029 12:44:14.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.065" endtime="20201029 12:44:14.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.063" endtime="20201029 12:44:14.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.062" endtime="20201029 12:44:14.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.704" endtime="20201029 12:44:14.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.704" endtime="20201029 12:44:14.085"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.094" endtime="20201029 12:44:14.113"></status>
</kw>
<msg timestamp="20201029 12:44:14.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.092" endtime="20201029 12:44:14.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.114" endtime="20201029 12:44:14.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.117" endtime="20201029 12:44:14.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.090" endtime="20201029 12:44:14.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.088" endtime="20201029 12:44:14.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.126" endtime="20201029 12:44:14.411"></status>
</kw>
<msg timestamp="20201029 12:44:14.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023834611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023843292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.124" endtime="20201029 12:44:14.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023834611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023843292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.416" endtime="20201029 12:44:14.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.424" endtime="20201029 12:44:14.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.121" endtime="20201029 12:44:14.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.120" endtime="20201029 12:44:14.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.430" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.427" endtime="20201029 12:44:14.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.435" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.6800...</msg>
<status status="PASS" starttime="20201029 12:44:14.431" endtime="20201029 12:44:14.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.439" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.438" endtime="20201029 12:44:14.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.442" level="INFO">VALUE: [8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.722999999998676e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.652999999997357e-06]</msg>
<status status="PASS" starttime="20201029 12:44:14.440" endtime="20201029 12:44:14.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.436" endtime="20201029 12:44:14.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.447" endtime="20201029 12:44:14.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.445" endtime="20201029 12:44:14.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.444" endtime="20201029 12:44:14.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.086" endtime="20201029 12:44:14.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.086" endtime="20201029 12:44:14.468"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.476" endtime="20201029 12:44:14.496"></status>
</kw>
<msg timestamp="20201029 12:44:14.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.475" endtime="20201029 12:44:14.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.497" endtime="20201029 12:44:14.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.500" endtime="20201029 12:44:14.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.472" endtime="20201029 12:44:14.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.470" endtime="20201029 12:44:14.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.509" endtime="20201029 12:44:14.794"></status>
</kw>
<msg timestamp="20201029 12:44:14.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023433625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.507" endtime="20201029 12:44:14.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023433625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.799" endtime="20201029 12:44:14.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.809" endtime="20201029 12:44:14.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.505" endtime="20201029 12:44:14.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.503" endtime="20201029 12:44:14.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.818" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.667000000000397e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.814" endtime="20201029 12:44:14.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.824" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.7079...</msg>
<status status="PASS" starttime="20201029 12:44:14.820" endtime="20201029 12:44:14.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.830" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.829" endtime="20201029 12:44:14.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.833" level="INFO">VALUE: [8.721999999999203e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.709000000002576e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.665999999997454e-06]</msg>
<status status="PASS" starttime="20201029 12:44:14.831" endtime="20201029 12:44:14.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.826" endtime="20201029 12:44:14.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.838" endtime="20201029 12:44:14.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.836" endtime="20201029 12:44:14.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.835" endtime="20201029 12:44:14.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.469" endtime="20201029 12:44:14.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.468" endtime="20201029 12:44:14.859"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.867" endtime="20201029 12:44:14.886"></status>
</kw>
<msg timestamp="20201029 12:44:14.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.866" endtime="20201029 12:44:14.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.887" endtime="20201029 12:44:14.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.890" endtime="20201029 12:44:14.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.863" endtime="20201029 12:44:14.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.861" endtime="20201029 12:44:14.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.899" endtime="20201029 12:44:15.183"></status>
</kw>
<msg timestamp="20201029 12:44:15.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.898" endtime="20201029 12:44:15.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024506861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024515556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.188" endtime="20201029 12:44:15.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.196" endtime="20201029 12:44:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.895" endtime="20201029 12:44:15.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.893" endtime="20201029 12:44:15.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.202" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.695000000003006e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:15.199" endtime="20201029 12:44:15.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.206" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.7219...</msg>
<status status="PASS" starttime="20201029 12:44:15.203" endtime="20201029 12:44:15.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.211" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.210" endtime="20201029 12:44:15.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.213" level="INFO">VALUE: [8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.736999999998246e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.723000000002146e-06, 8.708000000003102e-06, 8.708999999999106e-06, 8.778000000000952e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201029 12:44:15.212" endtime="20201029 12:44:15.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.207" endtime="20201029 12:44:15.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.219" endtime="20201029 12:44:15.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.217" endtime="20201029 12:44:15.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.216" endtime="20201029 12:44:15.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.860" endtime="20201029 12:44:15.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.859" endtime="20201029 12:44:15.240"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.248" endtime="20201029 12:44:15.266"></status>
</kw>
<msg timestamp="20201029 12:44:15.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.247" endtime="20201029 12:44:15.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.267" endtime="20201029 12:44:15.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.270" endtime="20201029 12:44:15.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.244" endtime="20201029 12:44:15.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.242" endtime="20201029 12:44:15.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.279" endtime="20201029 12:44:15.564"></status>
</kw>
<msg timestamp="20201029 12:44:15.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.277" endtime="20201029 12:44:15.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.569" endtime="20201029 12:44:15.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.577" endtime="20201029 12:44:15.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.275" endtime="20201029 12:44:15.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.273" endtime="20201029 12:44:15.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.583" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.763000000001908e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:15.580" endtime="20201029 12:44:15.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.588" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.763000000001908e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.6530...</msg>
<status status="PASS" starttime="20201029 12:44:15.584" endtime="20201029 12:44:15.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.593" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.591" endtime="20201029 12:44:15.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.595" level="INFO">VALUE: [8.667000000000397e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.763000000001908e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.736000000002242e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.625000000001687e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.681000000003436e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.611000000002117e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.764000000001382e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201029 12:44:15.594" endtime="20201029 12:44:15.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.589" endtime="20201029 12:44:15.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.605" endtime="20201029 12:44:15.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.604" endtime="20201029 12:44:15.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.603" endtime="20201029 12:44:15.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.240" endtime="20201029 12:44:15.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.240" endtime="20201029 12:44:15.626"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.635" endtime="20201029 12:44:15.650"></status>
</kw>
<msg timestamp="20201029 12:44:15.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.633" endtime="20201029 12:44:15.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.652" endtime="20201029 12:44:15.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.654" endtime="20201029 12:44:15.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.630" endtime="20201029 12:44:15.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.628" endtime="20201029 12:44:15.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.663" endtime="20201029 12:44:15.949"></status>
</kw>
<msg timestamp="20201029 12:44:15.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020569639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.662" endtime="20201029 12:44:15.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020569639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.953" endtime="20201029 12:44:15.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.961" endtime="20201029 12:44:15.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.659" endtime="20201029 12:44:15.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.657" endtime="20201029 12:44:15.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.968" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:15.965" endtime="20201029 12:44:15.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.973" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 12:44:15.969" endtime="20201029 12:44:15.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.977" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.976" endtime="20201029 12:44:15.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.980" level="INFO">VALUE: [8.707999999999633e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.596999999999078e-06, 8.694000000000063e-06, 8.624999999998217e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201029 12:44:15.978" endtime="20201029 12:44:15.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.974" endtime="20201029 12:44:15.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.985" endtime="20201029 12:44:16.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.983" endtime="20201029 12:44:16.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.982" endtime="20201029 12:44:16.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.627" endtime="20201029 12:44:16.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.626" endtime="20201029 12:44:16.006"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.014" endtime="20201029 12:44:16.032"></status>
</kw>
<msg timestamp="20201029 12:44:16.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.013" endtime="20201029 12:44:16.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.033" endtime="20201029 12:44:16.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.036" endtime="20201029 12:44:16.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.010" endtime="20201029 12:44:16.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.008" endtime="20201029 12:44:16.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.045" endtime="20201029 12:44:16.331"></status>
</kw>
<msg timestamp="20201029 12:44:16.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022955778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:16.043" endtime="20201029 12:44:16.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022955778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:16.335" endtime="20201029 12:44:16.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.344" endtime="20201029 12:44:16.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.040" endtime="20201029 12:44:16.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.039" endtime="20201029 12:44:16.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.350" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.679999999997023e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:16.347" endtime="20201029 12:44:16.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.354" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 8.708000000003102e-06, 8.735999999998773e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.6669...</msg>
<status status="PASS" starttime="20201029 12:44:16.351" endtime="20201029 12:44:16.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.359" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.358" endtime="20201029 12:44:16.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.361" level="INFO">VALUE: [8.721999999999203e-06, 8.708000000003102e-06, 8.735999999998773e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.679999999997023e-06, 8.722000000002672e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.597999999998551e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.792000000000522e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201029 12:44:16.360" endtime="20201029 12:44:16.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.355" endtime="20201029 12:44:16.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.367" endtime="20201029 12:44:16.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.365" endtime="20201029 12:44:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.364" endtime="20201029 12:44:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.006" endtime="20201029 12:44:16.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.006" endtime="20201029 12:44:16.388"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.396" endtime="20201029 12:44:16.418"></status>
</kw>
<msg timestamp="20201029 12:44:16.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.395" endtime="20201029 12:44:16.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.419" endtime="20201029 12:44:16.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.422" endtime="20201029 12:44:16.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.392" endtime="20201029 12:44:16.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.390" endtime="20201029 12:44:16.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.431" endtime="20201029 12:44:16.716"></status>
</kw>
<msg timestamp="20201029 12:44:16.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.429" endtime="20201029 12:44:16.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022676583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.720" endtime="20201029 12:44:16.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.728" endtime="20201029 12:44:16.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.427" endtime="20201029 12:44:16.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.425" endtime="20201029 12:44:16.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.735" level="INFO">${RESULT} = [{'diff': 8.708999999999106e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.679999999997023e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:16.732" endtime="20201029 12:44:16.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.740" level="INFO">${ACCURACY} = {'diff': [8.708999999999106e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.610999999998648e-06, 8.721999999999203e-06, 8.6800...</msg>
<status status="PASS" starttime="20201029 12:44:16.736" endtime="20201029 12:44:16.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.744" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.743" endtime="20201029 12:44:16.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.747" level="INFO">VALUE: [8.708999999999106e-06, 8.750000000001812e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.610999999998648e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.750000000001812e-06, 8.721999999999203e-06, 8.792000000000522e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.625000000001687e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.735999999998773e-06, 8.736000000002242e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.665999999997454e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201029 12:44:16.745" endtime="20201029 12:44:16.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.741" endtime="20201029 12:44:16.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.752" endtime="20201029 12:44:16.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.750" endtime="20201029 12:44:16.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.749" endtime="20201029 12:44:16.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.388" endtime="20201029 12:44:16.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.388" endtime="20201029 12:44:16.773"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.781" endtime="20201029 12:44:16.803"></status>
</kw>
<msg timestamp="20201029 12:44:16.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.780" endtime="20201029 12:44:16.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.804" endtime="20201029 12:44:16.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.807" endtime="20201029 12:44:16.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.777" endtime="20201029 12:44:16.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.775" endtime="20201029 12:44:16.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.816" endtime="20201029 12:44:17.102"></status>
</kw>
<msg timestamp="20201029 12:44:17.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.814" endtime="20201029 12:44:17.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.106" endtime="20201029 12:44:17.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.115" endtime="20201029 12:44:17.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.812" endtime="20201029 12:44:17.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.810" endtime="20201029 12:44:17.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.121" level="INFO">${RESULT} = [{'diff': 9.570000000000412e-06}, {'diff': 2.2083999999998605e-05}, {'diff': 2.3957999999997537e-05}, {'diff': 2.3958000000001006e-05}, {'diff': 2.587500000000159e-05}, {'diff': 2.393099999999787e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:17.118" endtime="20201029 12:44:17.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.125" level="INFO">${ACCURACY} = {'diff': [9.570000000000412e-06, 2.2083999999998605e-05, 2.3957999999997537e-05, 2.3958000000001006e-05, 2.587500000000159e-05, 2.393099999999787e-05, 2.3930000000001866e-05, 2.1112000000000214e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:17.122" endtime="20201029 12:44:17.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.130" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.129" endtime="20201029 12:44:17.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.132" level="INFO">VALUE: [9.570000000000412e-06, 2.2083999999998605e-05, 2.3957999999997537e-05, 2.3958000000001006e-05, 2.587500000000159e-05, 2.393099999999787e-05, 2.3930000000001866e-05, 2.1112000000000214e-05, 2.5860999999998552e-05, 2.108299999999813e-05, 2.304100000000142e-05, 2.4929999999999397e-05, 2.4915999999999827e-05, 2.587500000000159e-05, 2.4986000000001146e-05, 2.590300000000073e-05, 2.1070000000001504e-05, 2.205499999999999e-05, 2.0070000000000504e-05, 2.013899999999888e-05, 2.4986000000001146e-05, 2.2084000000002074e-05, 2.497300000000105e-05, 2.493100000000234e-05, 2.113899999999988e-05, 2.4929999999999397e-05, 2.488900000000016e-05, 2.1179999999999116e-05, 2.112500000000031e-05, 2.206900000000303e-05, 2.10830000000016e-05, 2.2041999999999895e-05, 2.1138000000000406e-05, 2.3986000000000146e-05, 2.49169999999993e-05, 2.6806000000000746e-05, 2.397300000000005e-05, 2.013899999999888e-05, 2.5847999999998456e-05, 2.3957999999997537e-05, 2.4944000000002436e-05, 2.5846999999998982e-05, 2.5846999999998982e-05, 2.3972000000000576e-05, 2.397300000000005e-05, 2.4958000000002006e-05, 2.391700000000177e-05, 2.6819000000000842e-05, 2.395900000000048e-05, 2.3000000000002185e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.131" endtime="20201029 12:44:17.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.126" endtime="20201029 12:44:17.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.137" endtime="20201029 12:44:17.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.136" endtime="20201029 12:44:17.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.134" endtime="20201029 12:44:17.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.774" endtime="20201029 12:44:17.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.773" endtime="20201029 12:44:17.158"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.166" endtime="20201029 12:44:17.184"></status>
</kw>
<msg timestamp="20201029 12:44:17.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.165" endtime="20201029 12:44:17.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.186" endtime="20201029 12:44:17.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.188" endtime="20201029 12:44:17.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.162" endtime="20201029 12:44:17.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.160" endtime="20201029 12:44:17.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.197" endtime="20201029 12:44:17.483"></status>
</kw>
<msg timestamp="20201029 12:44:17.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021105431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021118875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.196" endtime="20201029 12:44:17.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021105431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021118875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.487" endtime="20201029 12:44:17.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.496" endtime="20201029 12:44:17.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.193" endtime="20201029 12:44:17.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.191" endtime="20201029 12:44:17.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.502" level="INFO">${RESULT} = [{'diff': 1.3443999999997874e-05}, {'diff': 2.493100000000234e-05}, {'diff': 2.0151999999998976e-05}, {'diff': 2.486100000000102e-05}, {'diff': 2.584700000000245e-05}, {'diff': 2.5860999999998552e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:17.499" endtime="20201029 12:44:17.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.506" level="INFO">${ACCURACY} = {'diff': [1.3443999999997874e-05, 2.493100000000234e-05, 2.0151999999998976e-05, 2.486100000000102e-05, 2.584700000000245e-05, 2.5860999999998552e-05, 2.2027999999996856e-05, 2.1138000000000406e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:17.503" endtime="20201029 12:44:17.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.511" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.510" endtime="20201029 12:44:17.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.513" level="INFO">VALUE: [1.3443999999997874e-05, 2.493100000000234e-05, 2.0151999999998976e-05, 2.486100000000102e-05, 2.584700000000245e-05, 2.5860999999998552e-05, 2.2027999999996856e-05, 2.1138000000000406e-05, 2.3999999999999716e-05, 2.013899999999888e-05, 2.3986000000000146e-05, 2.108299999999813e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.490299999999973e-05, 2.1055999999998465e-05, 2.1151999999999976e-05, 2.3929999999998397e-05, 2.3972000000000576e-05, 2.3999999999999716e-05, 2.10969999999977e-05, 2.2944000000000436e-05, 2.2985999999999146e-05, 2.0235999999999865e-05, 2.112500000000031e-05, 2.587500000000159e-05, 2.493099999999887e-05, 2.305500000000099e-05, 2.494499999999844e-05, 2.304100000000142e-05, 2.5860999999998552e-05, 2.3014000000001755e-05, 2.198699999999762e-05, 2.2986000000002615e-05, 2.6846999999999982e-05, 2.3056000000000465e-05, 2.211099999999827e-05, 2.106899999999856e-05, 2.6819999999996846e-05, 2.2028000000000325e-05, 2.394499999999744e-05, 2.2069999999999035e-05, 2.495899999999801e-05, 2.2971999999999576e-05, 2.2041999999999895e-05, 2.0208000000000725e-05, 2.113899999999988e-05, 2.012500000000278e-05, 2.394499999999744e-05, 2.488900000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.512" endtime="20201029 12:44:17.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.507" endtime="20201029 12:44:17.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.519" endtime="20201029 12:44:17.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.517" endtime="20201029 12:44:17.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.516" endtime="20201029 12:44:17.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.159" endtime="20201029 12:44:17.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.158" endtime="20201029 12:44:17.540"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.548" endtime="20201029 12:44:17.567"></status>
</kw>
<msg timestamp="20201029 12:44:17.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.547" endtime="20201029 12:44:17.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.569" endtime="20201029 12:44:17.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.571" endtime="20201029 12:44:17.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.544" endtime="20201029 12:44:17.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.542" endtime="20201029 12:44:17.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.580" endtime="20201029 12:44:17.865"></status>
</kw>
<msg timestamp="20201029 12:44:17.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0210225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021035028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:17.579" endtime="20201029 12:44:17.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0210225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021035028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:17.869" endtime="20201029 12:44:17.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.877" endtime="20201029 12:44:17.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.576" endtime="20201029 12:44:17.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.574" endtime="20201029 12:44:17.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.884" level="INFO">${RESULT} = [{'diff': 1.2528000000001233e-05}, {'diff': 2.6846999999999982e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.495900000000148e-05}, {'diff': 2.4040999999998952e-05}, {'diff': 2.590300000000073e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:17.881" endtime="20201029 12:44:17.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.889" level="INFO">${ACCURACY} = {'diff': [1.2528000000001233e-05, 2.6846999999999982e-05, 2.488900000000016e-05, 2.495900000000148e-05, 2.4040999999998952e-05, 2.590300000000073e-05, 2.20969999999987e-05, 2.4902000000000257e-05, 2.6...</msg>
<status status="PASS" starttime="20201029 12:44:17.885" endtime="20201029 12:44:17.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.893" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.892" endtime="20201029 12:44:17.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.896" level="INFO">VALUE: [1.2528000000001233e-05, 2.6846999999999982e-05, 2.488900000000016e-05, 2.495900000000148e-05, 2.4040999999998952e-05, 2.590300000000073e-05, 2.20969999999987e-05, 2.4902000000000257e-05, 2.6805000000001272e-05, 2.3028000000001325e-05, 2.3014000000001755e-05, 2.015299999999845e-05, 2.209700000000217e-05, 2.488900000000016e-05, 2.209700000000217e-05, 2.3999999999999716e-05, 2.113899999999988e-05, 2.6791000000001702e-05, 2.10969999999977e-05, 2.590300000000073e-05, 2.209700000000217e-05, 2.011099999999974e-05, 2.495899999999801e-05, 2.3929999999998397e-05, 2.2999999999998716e-05, 2.590299999999726e-05, 2.397300000000005e-05, 2.20969999999987e-05, 2.2972000000003046e-05, 2.112500000000031e-05, 2.397300000000005e-05, 2.393100000000134e-05, 2.2971999999999576e-05, 2.20969999999987e-05, 2.113899999999988e-05, 2.3054999999997522e-05, 2.4013999999999286e-05, 2.10830000000016e-05, 2.2999999999998716e-05, 2.2084000000002074e-05, 2.012499999999931e-05, 2.012499999999931e-05, 2.1069999999998035e-05, 2.6861999999999026e-05, 2.590300000000073e-05, 2.211100000000174e-05, 2.5860999999998552e-05, 2.3986000000000146e-05, 2.498700000000062e-05, 2.6846999999999982e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.894" endtime="20201029 12:44:17.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.890" endtime="20201029 12:44:17.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.901" endtime="20201029 12:44:17.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.899" endtime="20201029 12:44:17.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.898" endtime="20201029 12:44:17.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.541" endtime="20201029 12:44:17.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.540" endtime="20201029 12:44:17.922"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.930" endtime="20201029 12:44:17.949"></status>
</kw>
<msg timestamp="20201029 12:44:17.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.929" endtime="20201029 12:44:17.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.951" endtime="20201029 12:44:17.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.953" endtime="20201029 12:44:17.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.926" endtime="20201029 12:44:17.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.924" endtime="20201029 12:44:17.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.962" endtime="20201029 12:44:18.247"></status>
</kw>
<msg timestamp="20201029 12:44:18.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020950736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020981389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.960" endtime="20201029 12:44:18.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020950736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020981389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.252" endtime="20201029 12:44:18.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.260" endtime="20201029 12:44:18.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.958" endtime="20201029 12:44:18.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.956" endtime="20201029 12:44:18.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.266" level="INFO">${RESULT} = [{'diff': 3.065299999999854e-05}, {'diff': 2.486100000000102e-05}, {'diff': 2.6833000000000412e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.4944000000002436e-05}, {'diff': 2.588900000000116e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:18.263" endtime="20201029 12:44:18.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.270" level="INFO">${ACCURACY} = {'diff': [3.065299999999854e-05, 2.486100000000102e-05, 2.6833000000000412e-05, 2.3972000000000576e-05, 2.4944000000002436e-05, 2.588900000000116e-05, 2.5832999999999412e-05, 2.2055999999999465e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:18.267" endtime="20201029 12:44:18.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.275" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.274" endtime="20201029 12:44:18.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.277" level="INFO">VALUE: [3.065299999999854e-05, 2.486100000000102e-05, 2.6833000000000412e-05, 2.3972000000000576e-05, 2.4944000000002436e-05, 2.588900000000116e-05, 2.5832999999999412e-05, 2.2055999999999465e-05, 2.205499999999999e-05, 2.3000000000002185e-05, 2.3999999999999716e-05, 2.59170000000003e-05, 2.013900000000235e-05, 2.6833000000000412e-05, 2.3944000000001436e-05, 2.3027999999997856e-05, 2.6902000000002257e-05, 2.2084000000002074e-05, 2.0137999999999406e-05, 2.6833999999999886e-05, 2.4971999999998107e-05, 2.2083999999998605e-05, 2.493100000000234e-05, 2.6819000000000842e-05, 2.10830000000016e-05, 2.1055999999998465e-05, 2.490299999999973e-05, 2.588900000000116e-05, 2.397300000000005e-05, 2.012499999999931e-05, 2.206899999999956e-05, 2.108299999999813e-05, 2.115299999999945e-05, 2.495899999999801e-05, 2.4986000000001146e-05, 2.591699999999683e-05, 2.109700000000117e-05, 2.2070000000002504e-05, 2.395900000000048e-05, 2.494499999999844e-05, 2.586100000000202e-05, 2.4902000000000257e-05, 2.2985999999999146e-05, 2.306900000000056e-05, 2.497299999999758e-05, 2.2084000000002074e-05, 2.395900000000048e-05, 2.1084000000001074e-05, 2.2999999999998716e-05, 2.208299999999913e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.276" endtime="20201029 12:44:18.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.271" endtime="20201029 12:44:18.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.282" endtime="20201029 12:44:18.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.280" endtime="20201029 12:44:18.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.279" endtime="20201029 12:44:18.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.923" endtime="20201029 12:44:18.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.922" endtime="20201029 12:44:18.303"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.311" endtime="20201029 12:44:18.336"></status>
</kw>
<msg timestamp="20201029 12:44:18.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.310" endtime="20201029 12:44:18.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.337" endtime="20201029 12:44:18.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.340" endtime="20201029 12:44:18.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.307" endtime="20201029 12:44:18.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.305" endtime="20201029 12:44:18.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.348" endtime="20201029 12:44:18.634"></status>
</kw>
<msg timestamp="20201029 12:44:18.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026615389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026634528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.347" endtime="20201029 12:44:18.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026615389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026634528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.638" endtime="20201029 12:44:18.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.646" endtime="20201029 12:44:18.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.344" endtime="20201029 12:44:18.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.343" endtime="20201029 12:44:18.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.653" level="INFO">${RESULT} = [{'diff': 1.913900000000135e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.394500000000091e-05}, {'diff': 2.012500000000278e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:18.649" endtime="20201029 12:44:18.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.657" level="INFO">${ACCURACY} = {'diff': [1.913900000000135e-05, 2.5860999999998552e-05, 2.113899999999988e-05, 2.2041999999999895e-05, 2.394500000000091e-05, 2.012500000000278e-05, 2.5013999999996817e-05, 2.20969999999987e-05, 2.20...</msg>
<status status="PASS" starttime="20201029 12:44:18.654" endtime="20201029 12:44:18.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.661" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.660" endtime="20201029 12:44:18.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.664" level="INFO">VALUE: [1.913900000000135e-05, 2.5860999999998552e-05, 2.113899999999988e-05, 2.2041999999999895e-05, 2.394500000000091e-05, 2.012500000000278e-05, 2.5013999999996817e-05, 2.20969999999987e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.3986000000000146e-05, 2.206900000000303e-05, 2.3986000000000146e-05, 2.3042000000000895e-05, 2.3943999999997967e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.5874999999998122e-05, 2.594499999999944e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.587500000000159e-05, 2.118100000000206e-05, 2.4929999999999397e-05, 2.588900000000116e-05, 2.0151999999998976e-05, 2.3986000000000146e-05, 2.112500000000031e-05, 2.3972000000000576e-05, 2.4986000000001146e-05, 2.5846999999998982e-05, 2.3028000000001325e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.106899999999856e-05, 2.5874999999998122e-05, 2.2083999999998605e-05, 2.2055999999999465e-05, 2.009700000000017e-05, 2.206899999999956e-05, 2.59170000000003e-05, 2.487499999999712e-05, 2.5846999999998982e-05, 2.113900000000335e-05, 2.493100000000234e-05, 2.3014000000001755e-05, 2.10830000000016e-05, 2.6860999999999552e-05, 2.3999999999999716e-05, 2.588899999999769e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.662" endtime="20201029 12:44:18.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.658" endtime="20201029 12:44:18.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.669" endtime="20201029 12:44:18.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.668" endtime="20201029 12:44:18.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.667" endtime="20201029 12:44:18.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.304" endtime="20201029 12:44:18.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.303" endtime="20201029 12:44:18.690"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.698" endtime="20201029 12:44:18.717"></status>
</kw>
<msg timestamp="20201029 12:44:18.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.697" endtime="20201029 12:44:18.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.719" endtime="20201029 12:44:18.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.721" endtime="20201029 12:44:18.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.694" endtime="20201029 12:44:18.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.692" endtime="20201029 12:44:18.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.730" endtime="20201029 12:44:19.016"></status>
</kw>
<msg timestamp="20201029 12:44:19.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021330694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.729" endtime="20201029 12:44:19.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021330694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.020" endtime="20201029 12:44:19.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.028" endtime="20201029 12:44:19.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.726" endtime="20201029 12:44:19.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.724" endtime="20201029 12:44:19.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.035" level="INFO">${RESULT} = [{'diff': 3.7360999999999644e-05}, {'diff': 2.109700000000117e-05}, {'diff': 2.5861999999998025e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.494500000000191e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:19.032" endtime="20201029 12:44:19.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.040" level="INFO">${ACCURACY} = {'diff': [3.7360999999999644e-05, 2.109700000000117e-05, 2.5861999999998025e-05, 2.204100000000042e-05, 2.112500000000031e-05, 2.494500000000191e-05, 2.013900000000235e-05, 2.3958000000001006e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:44:19.036" endtime="20201029 12:44:19.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.044" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.043" endtime="20201029 12:44:19.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.047" level="INFO">VALUE: [3.7360999999999644e-05, 2.109700000000117e-05, 2.5861999999998025e-05, 2.204100000000042e-05, 2.112500000000031e-05, 2.494500000000191e-05, 2.013900000000235e-05, 2.3958000000001006e-05, 2.2069999999999035e-05, 2.016699999999802e-05, 2.5985999999998677e-05, 2.10969999999977e-05, 2.3972000000000576e-05, 2.584700000000245e-05, 2.0152000000002446e-05, 2.3999999999999716e-05, 2.395900000000048e-05, 2.3972000000000576e-05, 2.013899999999888e-05, 2.206899999999956e-05, 2.6819000000000842e-05, 2.488900000000016e-05, 2.3972000000000576e-05, 2.015299999999845e-05, 2.30969999999997e-05, 2.1055999999998465e-05, 2.013899999999888e-05, 2.3013999999998286e-05, 2.2069999999999035e-05, 2.012500000000278e-05, 2.202700000000085e-05, 2.6833999999999886e-05, 2.398699999999962e-05, 2.3972000000000576e-05, 2.2999999999998716e-05, 2.6860999999999552e-05, 2.016699999999802e-05, 2.112500000000031e-05, 2.394499999999744e-05, 2.104099999999942e-05, 2.588900000000116e-05, 2.3986000000000146e-05, 2.009700000000017e-05, 2.394500000000091e-05, 2.3958000000001006e-05, 2.204100000000042e-05, 2.3068999999997092e-05, 2.3042000000000895e-05, 2.2985999999999146e-05, 2.4902000000000257e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.045" endtime="20201029 12:44:19.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.041" endtime="20201029 12:44:19.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.052" endtime="20201029 12:44:19.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.050" endtime="20201029 12:44:19.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.049" endtime="20201029 12:44:19.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.691" endtime="20201029 12:44:19.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.690" endtime="20201029 12:44:19.073"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.085" endtime="20201029 12:44:19.105"></status>
</kw>
<msg timestamp="20201029 12:44:19.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.083" endtime="20201029 12:44:19.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.110" endtime="20201029 12:44:19.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.120" endtime="20201029 12:44:19.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.079" endtime="20201029 12:44:19.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.077" endtime="20201029 12:44:19.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.149" endtime="20201029 12:44:19.457"></status>
</kw>
<msg timestamp="20201029 12:44:19.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025561972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025580264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.146" endtime="20201029 12:44:19.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025561972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025580264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.461" endtime="20201029 12:44:19.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.469" endtime="20201029 12:44:19.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.139" endtime="20201029 12:44:19.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.133" endtime="20201029 12:44:19.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.476" level="INFO">${RESULT} = [{'diff': 1.8291999999999614e-05}, {'diff': 2.488900000000016e-05}, {'diff': 2.493100000000234e-05}, {'diff': 2.4944000000002436e-05}, {'diff': 2.4915999999999827e-05}, {'diff': 2.5832999999999412e-05...</msg>
<status status="PASS" starttime="20201029 12:44:19.473" endtime="20201029 12:44:19.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.481" level="INFO">${ACCURACY} = {'diff': [1.8291999999999614e-05, 2.488900000000016e-05, 2.493100000000234e-05, 2.4944000000002436e-05, 2.4915999999999827e-05, 2.5832999999999412e-05, 2.202700000000085e-05, 2.490299999999973e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:19.477" endtime="20201029 12:44:19.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.485" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.484" endtime="20201029 12:44:19.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.488" level="INFO">VALUE: [1.8291999999999614e-05, 2.488900000000016e-05, 2.493100000000234e-05, 2.4944000000002436e-05, 2.4915999999999827e-05, 2.5832999999999412e-05, 2.202700000000085e-05, 2.490299999999973e-05, 2.49169999999993e-05, 2.5832999999999412e-05, 2.2055999999999465e-05, 2.1207999999998256e-05, 2.013899999999888e-05, 2.3028000000001325e-05, 2.5862000000001495e-05, 2.013899999999888e-05, 2.111099999999727e-05, 2.3054999999997522e-05, 2.3000000000002185e-05, 2.113899999999988e-05, 2.397300000000005e-05, 2.491700000000277e-05, 2.5916000000000827e-05, 2.2041999999999895e-05, 2.0193999999997686e-05, 2.495900000000148e-05, 2.4902000000000257e-05, 2.013899999999888e-05, 2.49169999999993e-05, 2.6819000000000842e-05, 2.106899999999856e-05, 2.2028000000000325e-05, 2.0165999999998546e-05, 2.5916000000000827e-05, 2.587500000000159e-05, 2.4902000000000257e-05, 2.2055999999999465e-05, 2.3986000000000146e-05, 2.302700000000185e-05, 2.3027999999997856e-05, 2.2069999999999035e-05, 2.2041999999999895e-05, 2.016699999999802e-05, 2.393099999999787e-05, 2.39169999999983e-05, 2.20969999999987e-05, 2.2999999999998716e-05, 2.6833000000000412e-05, 2.5832999999999412e-05, 2.3027999999997856e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.486" endtime="20201029 12:44:19.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.481" endtime="20201029 12:44:19.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.493" endtime="20201029 12:44:19.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.491" endtime="20201029 12:44:19.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.490" endtime="20201029 12:44:19.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.075" endtime="20201029 12:44:19.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.074" endtime="20201029 12:44:19.514"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.523" endtime="20201029 12:44:19.548"></status>
</kw>
<msg timestamp="20201029 12:44:19.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.521" endtime="20201029 12:44:19.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.549" endtime="20201029 12:44:19.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.552" endtime="20201029 12:44:19.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.519" endtime="20201029 12:44:19.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.516" endtime="20201029 12:44:19.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.562" endtime="20201029 12:44:19.848"></status>
</kw>
<msg timestamp="20201029 12:44:19.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026441944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026464972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.560" endtime="20201029 12:44:19.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026441944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026464972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.852" endtime="20201029 12:44:19.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.861" endtime="20201029 12:44:19.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.557" endtime="20201029 12:44:19.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.555" endtime="20201029 12:44:19.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.868" level="INFO">${RESULT} = [{'diff': 2.3028000000001325e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.3097999999999175e-05}, {'diff': 2.306900000000056e-05}, {'diff': 2.4972000000001576e-05}, {'diff': 2.204100000000042e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:19.864" endtime="20201029 12:44:19.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.872" level="INFO">${ACCURACY} = {'diff': [2.3028000000001325e-05, 2.59170000000003e-05, 2.3097999999999175e-05, 2.306900000000056e-05, 2.4972000000001576e-05, 2.204100000000042e-05, 2.113899999999988e-05, 2.4943999999998967e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:44:19.869" endtime="20201029 12:44:19.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.877" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.876" endtime="20201029 12:44:19.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.879" level="INFO">VALUE: [2.3028000000001325e-05, 2.59170000000003e-05, 2.3097999999999175e-05, 2.306900000000056e-05, 2.4972000000001576e-05, 2.204100000000042e-05, 2.113899999999988e-05, 2.4943999999998967e-05, 2.211100000000174e-05, 2.4971999999998107e-05, 2.4929999999999397e-05, 2.588899999999769e-05, 2.3014000000001755e-05, 2.212500000000131e-05, 2.5902000000001257e-05, 2.209700000000217e-05, 2.298699999999862e-05, 2.4014000000002755e-05, 2.2999999999998716e-05, 2.5862000000001495e-05, 2.015299999999845e-05, 2.59170000000003e-05, 2.111100000000074e-05, 2.20830000000026e-05, 2.305500000000099e-05, 2.0179999999998116e-05, 2.588900000000116e-05, 2.3972000000000576e-05, 2.111100000000074e-05, 2.2971999999999576e-05, 2.113899999999988e-05, 2.686100000000302e-05, 2.4944000000002436e-05, 2.6874999999999122e-05, 2.10830000000016e-05, 2.395900000000048e-05, 2.2985999999999146e-05, 2.4040999999998952e-05, 2.590300000000073e-05, 2.204100000000042e-05, 2.2028000000000325e-05, 2.2069999999999035e-05, 2.4012999999999812e-05, 2.4944000000002436e-05, 2.3999999999999716e-05, 2.3040999999997952e-05, 2.2999999999998716e-05, 2.686100000000302e-05, 2.494500000000191e-05, 2.2999999999998716e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.878" endtime="20201029 12:44:19.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.873" endtime="20201029 12:44:19.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.885" endtime="20201029 12:44:19.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.884" endtime="20201029 12:44:19.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.883" endtime="20201029 12:44:19.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.515" endtime="20201029 12:44:19.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.514" endtime="20201029 12:44:19.906"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.915" endtime="20201029 12:44:19.933"></status>
</kw>
<msg timestamp="20201029 12:44:19.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.914" endtime="20201029 12:44:19.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.935" endtime="20201029 12:44:19.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.938" endtime="20201029 12:44:19.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.911" endtime="20201029 12:44:19.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.909" endtime="20201029 12:44:19.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.947" endtime="20201029 12:44:20.232"></status>
</kw>
<msg timestamp="20201029 12:44:20.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020875625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.945" endtime="20201029 12:44:20.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020875625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020886167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.237" endtime="20201029 12:44:20.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.245" endtime="20201029 12:44:20.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.943" endtime="20201029 12:44:20.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.941" endtime="20201029 12:44:20.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.252" level="INFO">${RESULT} = [{'diff': 1.0542000000002272e-05}, {'diff': 2.013899999999888e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.302700000000185e-05}, {'diff': 2.305500000000099e-05}, {'diff': 2.59170000000003e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:20.248" endtime="20201029 12:44:20.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.257" level="INFO">${ACCURACY} = {'diff': [1.0542000000002272e-05, 2.013899999999888e-05, 2.3042000000000895e-05, 2.302700000000185e-05, 2.305500000000099e-05, 2.59170000000003e-05, 2.3958000000001006e-05, 2.106900000000203e-05, 2.29...</msg>
<status status="PASS" starttime="20201029 12:44:20.253" endtime="20201029 12:44:20.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.262" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.261" endtime="20201029 12:44:20.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.264" level="INFO">VALUE: [1.0542000000002272e-05, 2.013899999999888e-05, 2.3042000000000895e-05, 2.302700000000185e-05, 2.305500000000099e-05, 2.59170000000003e-05, 2.3958000000001006e-05, 2.106900000000203e-05, 2.2971999999999576e-05, 2.3972000000000576e-05, 2.2041999999999895e-05, 2.5832999999999412e-05, 2.013899999999888e-05, 2.587500000000159e-05, 2.4971999999998107e-05, 2.4972000000001576e-05, 2.106899999999856e-05, 2.488900000000016e-05, 2.3999999999999716e-05, 2.394500000000091e-05, 2.5846999999998982e-05, 2.20830000000026e-05, 2.305500000000099e-05, 2.1070000000001504e-05, 2.3943999999997967e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.493100000000234e-05, 2.2028000000000325e-05, 2.015300000000192e-05, 2.6846999999999982e-05, 2.013900000000235e-05, 2.3958000000001006e-05, 2.0194000000001155e-05, 2.5902000000001257e-05, 2.5860999999998552e-05, 2.588900000000116e-05, 2.0166000000002016e-05, 2.6805000000001272e-05, 2.112500000000031e-05, 2.495900000000148e-05, 2.0166000000002016e-05, 2.113899999999988e-05, 2.3986000000000146e-05, 2.3042000000000895e-05, 2.5874999999998122e-05, 2.5804999999996803e-05, 2.3958000000001006e-05, 2.5860999999998552e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.263" endtime="20201029 12:44:20.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.258" endtime="20201029 12:44:20.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.270" endtime="20201029 12:44:20.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.268" endtime="20201029 12:44:20.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.267" endtime="20201029 12:44:20.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.907" endtime="20201029 12:44:20.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.907" endtime="20201029 12:44:20.290"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.299" endtime="20201029 12:44:20.320"></status>
</kw>
<msg timestamp="20201029 12:44:20.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.298" endtime="20201029 12:44:20.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.322" endtime="20201029 12:44:20.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.324" endtime="20201029 12:44:20.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.295" endtime="20201029 12:44:20.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.293" endtime="20201029 12:44:20.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.334" endtime="20201029 12:44:20.619"></status>
</kw>
<msg timestamp="20201029 12:44:20.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.332" endtime="20201029 12:44:20.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.624" endtime="20201029 12:44:20.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.632" endtime="20201029 12:44:20.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.329" endtime="20201029 12:44:20.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.328" endtime="20201029 12:44:20.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.639" level="INFO">${RESULT} = [{'diff': 1.4402000000000165e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.4902000000000257e-05}, {'diff': 2.5861999999998025e-05}, {'diff': 2.4986000000001146e-05}, {'diff': 2.3042000000000895e-05...</msg>
<status status="PASS" starttime="20201029 12:44:20.636" endtime="20201029 12:44:20.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.643" level="INFO">${ACCURACY} = {'diff': [1.4402000000000165e-05, 2.10969999999977e-05, 2.4902000000000257e-05, 2.5861999999998025e-05, 2.4986000000001146e-05, 2.3042000000000895e-05, 2.5846999999998982e-05, 2.3972000000000576e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:20.640" endtime="20201029 12:44:20.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.648" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.647" endtime="20201029 12:44:20.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.651" level="INFO">VALUE: [1.4402000000000165e-05, 2.10969999999977e-05, 2.4902000000000257e-05, 2.5861999999998025e-05, 2.4986000000001146e-05, 2.3042000000000895e-05, 2.5846999999998982e-05, 2.3972000000000576e-05, 2.2929999999997397e-05, 2.5862000000001495e-05, 2.590300000000073e-05, 2.495899999999801e-05, 2.588900000000116e-05, 2.5902000000001257e-05, 2.4860999999997552e-05, 2.205499999999999e-05, 2.306900000000056e-05, 2.302700000000185e-05, 2.49169999999993e-05, 2.5846999999998982e-05, 2.116699999999902e-05, 2.012499999999931e-05, 2.2985999999999146e-05, 2.3000000000002185e-05, 2.584700000000245e-05, 2.587500000000159e-05, 2.4014000000002755e-05, 2.20969999999987e-05, 2.2041999999999895e-05, 2.5957999999999537e-05, 2.4902000000000257e-05, 2.4902000000000257e-05, 2.204100000000042e-05, 2.3958000000001006e-05, 2.1112000000000214e-05, 2.394500000000091e-05, 2.3028000000001325e-05, 2.5860999999998552e-05, 2.205499999999999e-05, 2.10969999999977e-05, 2.6846999999999982e-05, 2.4915999999999827e-05, 2.209700000000217e-05, 2.5902000000001257e-05, 2.012500000000278e-05, 2.016699999999802e-05, 2.2055999999999465e-05, 2.494499999999844e-05, 2.6806000000000746e-05, 2.1084000000001074e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.649" endtime="20201029 12:44:20.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.644" endtime="20201029 12:44:20.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.660" endtime="20201029 12:44:20.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.659" endtime="20201029 12:44:20.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.658" endtime="20201029 12:44:20.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.291" endtime="20201029 12:44:20.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.291" endtime="20201029 12:44:20.681"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.690" endtime="20201029 12:44:20.714"></status>
</kw>
<msg timestamp="20201029 12:44:20.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.689" endtime="20201029 12:44:20.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.715" endtime="20201029 12:44:20.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.718" endtime="20201029 12:44:20.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.686" endtime="20201029 12:44:20.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.684" endtime="20201029 12:44:20.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.727" endtime="20201029 12:44:21.014"></status>
</kw>
<msg timestamp="20201029 12:44:21.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024744486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.726" endtime="20201029 12:44:21.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024714861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024744486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.019" endtime="20201029 12:44:21.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.027" endtime="20201029 12:44:21.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.723" endtime="20201029 12:44:21.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.721" endtime="20201029 12:44:21.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.034" level="INFO">${RESULT} = [{'diff': 2.9624999999998403e-05}, {'diff': 2.013899999999888e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.491700000000277e-05...</msg>
<status status="PASS" starttime="20201029 12:44:21.031" endtime="20201029 12:44:21.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.039" level="INFO">${ACCURACY} = {'diff': [2.9624999999998403e-05, 2.013899999999888e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.3000000000002185e-05, 2.491700000000277e-05, 2.0179999999998116e-05, 2.593099999999987e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:21.035" endtime="20201029 12:44:21.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.044" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.043" endtime="20201029 12:44:21.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.047" level="INFO">VALUE: [2.9624999999998403e-05, 2.013899999999888e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.3000000000002185e-05, 2.491700000000277e-05, 2.0179999999998116e-05, 2.593099999999987e-05, 2.3930000000001866e-05, 2.3944000000001436e-05, 2.39169999999983e-05, 2.2971999999999576e-05, 2.112500000000031e-05, 2.588900000000116e-05, 2.5846999999998982e-05, 2.6832999999996943e-05, 2.4027999999998856e-05, 2.3056000000000465e-05, 2.583300000000288e-05, 2.3013999999998286e-05, 2.4972000000001576e-05, 2.2958000000000006e-05, 2.5832999999999412e-05, 2.3013999999998286e-05, 2.4957999999998537e-05, 2.2084000000002074e-05, 2.10969999999977e-05, 2.3957999999997537e-05, 2.209700000000217e-05, 2.4957999999998537e-05, 2.108299999999813e-05, 2.106899999999856e-05, 2.5972000000002576e-05, 2.0222000000000295e-05, 2.1056000000001934e-05, 2.10969999999977e-05, 2.012499999999931e-05, 2.488900000000016e-05, 2.304100000000142e-05, 2.016699999999802e-05, 2.4862000000000495e-05, 2.012499999999931e-05, 2.4943999999998967e-05, 2.593099999999987e-05, 2.2999999999998716e-05, 2.490299999999973e-05, 2.5929999999996928e-05, 2.587500000000159e-05, 2.0084000000000074e-05, 2.3957999999997537e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.045" endtime="20201029 12:44:21.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.040" endtime="20201029 12:44:21.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.053" endtime="20201029 12:44:21.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.051" endtime="20201029 12:44:21.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.050" endtime="20201029 12:44:21.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.682" endtime="20201029 12:44:21.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.681" endtime="20201029 12:44:21.074"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.083" endtime="20201029 12:44:21.103"></status>
</kw>
<msg timestamp="20201029 12:44:21.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.081" endtime="20201029 12:44:21.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.105" endtime="20201029 12:44:21.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.107" endtime="20201029 12:44:21.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.079" endtime="20201029 12:44:21.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.077" endtime="20201029 12:44:21.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.117" endtime="20201029 12:44:21.402"></status>
</kw>
<msg timestamp="20201029 12:44:21.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023611958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.115" endtime="20201029 12:44:21.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023611958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.406" endtime="20201029 12:44:21.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.415" endtime="20201029 12:44:21.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.113" endtime="20201029 12:44:21.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.111" endtime="20201029 12:44:21.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.421" level="INFO">${RESULT} = [{'diff': 8.723000000002146e-06}, {'diff': 2.495900000000148e-05}, {'diff': 2.495900000000148e-05}, {'diff': 2.106900000000203e-05}, {'diff': 2.3943999999997967e-05}, {'diff': 2.105499999999899e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:21.418" endtime="20201029 12:44:21.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.426" level="INFO">${ACCURACY} = {'diff': [8.723000000002146e-06, 2.495900000000148e-05, 2.495900000000148e-05, 2.106900000000203e-05, 2.3943999999997967e-05, 2.105499999999899e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 12:44:21.422" endtime="20201029 12:44:21.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.431" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.430" endtime="20201029 12:44:21.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.434" level="INFO">VALUE: [8.723000000002146e-06, 2.495900000000148e-05, 2.495900000000148e-05, 2.106900000000203e-05, 2.3943999999997967e-05, 2.105499999999899e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.3986000000000146e-05, 2.113899999999988e-05, 2.3013999999998286e-05, 2.4915999999999827e-05, 2.6847999999999456e-05, 2.015300000000192e-05, 2.49169999999993e-05, 2.209700000000217e-05, 2.5902000000001257e-05, 2.3000000000002185e-05, 2.208299999999913e-05, 2.3042000000000895e-05, 2.204100000000042e-05, 2.6832999999996943e-05, 2.2055999999999465e-05, 2.590300000000073e-05, 2.2041999999999895e-05, 2.395900000000048e-05, 2.5846999999998982e-05, 2.2915999999997827e-05, 2.6860999999999552e-05, 2.5929999999996928e-05, 2.106900000000203e-05, 2.6750000000002466e-05, 2.113899999999988e-05, 2.6791999999997707e-05, 2.2013999999997286e-05, 2.584700000000245e-05, 2.2041999999999895e-05, 2.3958000000001006e-05, 2.3028000000001325e-05, 2.3013999999998286e-05, 2.490299999999973e-05, 2.20969999999987e-05, 2.0165999999998546e-05, 2.495899999999801e-05, 2.2985999999999146e-05, 2.013900000000235e-05, 2.3042000000000895e-05, 2.6860999999999552e-05, 2.308300000000013e-05, 2.305500000000099e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.432" endtime="20201029 12:44:21.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.427" endtime="20201029 12:44:21.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.439" endtime="20201029 12:44:21.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.437" endtime="20201029 12:44:21.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.436" endtime="20201029 12:44:21.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.075" endtime="20201029 12:44:21.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.074" endtime="20201029 12:44:21.460"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.469" endtime="20201029 12:44:21.491"></status>
</kw>
<msg timestamp="20201029 12:44:21.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.467" endtime="20201029 12:44:21.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.493" endtime="20201029 12:44:21.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.495" endtime="20201029 12:44:21.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.465" endtime="20201029 12:44:21.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.463" endtime="20201029 12:44:21.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.505" endtime="20201029 12:44:21.792"></status>
</kw>
<msg timestamp="20201029 12:44:21.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024691917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.503" endtime="20201029 12:44:21.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024691917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024726431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.796" endtime="20201029 12:44:21.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.805" endtime="20201029 12:44:21.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.500" endtime="20201029 12:44:21.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.499" endtime="20201029 12:44:21.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.811" level="INFO">${RESULT} = [{'diff': 3.451399999999938e-05}, {'diff': 2.6820000000000316e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.6805000000001272e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.3028000000001325e-05...</msg>
<status status="PASS" starttime="20201029 12:44:21.808" endtime="20201029 12:44:21.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.816" level="INFO">${ACCURACY} = {'diff': [3.451399999999938e-05, 2.6820000000000316e-05, 2.204100000000042e-05, 2.6805000000001272e-05, 2.2985999999999146e-05, 2.3028000000001325e-05, 2.3028000000001325e-05, 2.311099999999927e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:21.813" endtime="20201029 12:44:21.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.820" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.819" endtime="20201029 12:44:21.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.823" level="INFO">VALUE: [3.451399999999938e-05, 2.6820000000000316e-05, 2.204100000000042e-05, 2.6805000000001272e-05, 2.2985999999999146e-05, 2.3028000000001325e-05, 2.3028000000001325e-05, 2.311099999999927e-05, 2.3999999999999716e-05, 2.3957999999997537e-05, 2.3013999999998286e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2.016700000000149e-05, 2.011099999999974e-05, 2.3027999999997856e-05, 2.113899999999988e-05, 2.3986000000000146e-05, 2.493099999999887e-05, 2.013899999999888e-05, 2.111100000000074e-05, 2.498700000000062e-05, 2.3986000000000146e-05, 2.304100000000142e-05, 2.2055999999999465e-05, 2.112500000000031e-05, 2.111100000000074e-05, 2.4915999999999827e-05, 2.2098000000001644e-05, 2.311100000000274e-05, 2.3972000000000576e-05, 2.593099999999987e-05, 2.113899999999988e-05, 2.4929999999999397e-05, 2.2041999999999895e-05, 2.590299999999726e-05, 2.494500000000191e-05, 2.490299999999973e-05, 2.106899999999856e-05, 2.2084000000002074e-05, 2.3999999999999716e-05, 2.3013999999998286e-05, 2.586100000000202e-05, 2.497300000000105e-05, 2.5916000000000827e-05, 2.20830000000026e-05, 2.590300000000073e-05, 2.40970000000007e-05, 2.2070000000002504e-05, 2.10969999999977e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.822" endtime="20201029 12:44:21.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.817" endtime="20201029 12:44:21.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.828" endtime="20201029 12:44:21.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.827" endtime="20201029 12:44:21.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.825" endtime="20201029 12:44:21.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.461" endtime="20201029 12:44:21.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.460" endtime="20201029 12:44:21.849"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.858" endtime="20201029 12:44:21.883"></status>
</kw>
<msg timestamp="20201029 12:44:21.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.856" endtime="20201029 12:44:21.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.885" endtime="20201029 12:44:21.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.887" endtime="20201029 12:44:21.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.854" endtime="20201029 12:44:21.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.852" endtime="20201029 12:44:21.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.897" endtime="20201029 12:44:22.183"></status>
</kw>
<msg timestamp="20201029 12:44:22.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027398444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027418583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.895" endtime="20201029 12:44:22.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027398444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027418583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.187" endtime="20201029 12:44:22.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.196" endtime="20201029 12:44:22.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.892" endtime="20201029 12:44:22.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.891" endtime="20201029 12:44:22.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.202" level="INFO">${RESULT} = [{'diff': 2.013899999999888e-05}, {'diff': 2.4013999999999286e-05}, {'diff': 2.3986000000000146e-05}, {'diff': 2.2070000000002504e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.3014000000001755e-05...</msg>
<status status="PASS" starttime="20201029 12:44:22.199" endtime="20201029 12:44:22.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.207" level="INFO">${ACCURACY} = {'diff': [2.013899999999888e-05, 2.4013999999999286e-05, 2.3986000000000146e-05, 2.2070000000002504e-05, 2.113899999999988e-05, 2.3014000000001755e-05, 2.4986000000001146e-05, 2.4972000000001576e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:22.203" endtime="20201029 12:44:22.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.211" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.210" endtime="20201029 12:44:22.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.214" level="INFO">VALUE: [2.013899999999888e-05, 2.4013999999999286e-05, 2.3986000000000146e-05, 2.2070000000002504e-05, 2.113899999999988e-05, 2.3014000000001755e-05, 2.4986000000001146e-05, 2.4972000000001576e-05, 2.111100000000074e-05, 2.311099999999927e-05, 2.113899999999988e-05, 2.109700000000117e-05, 2.2026999999997382e-05, 2.115299999999945e-05, 2.115299999999945e-05, 2.4972000000001576e-05, 2.3027999999997856e-05, 2.2028000000000325e-05, 2.4930000000002867e-05, 2.304100000000142e-05, 2.3999999999999716e-05, 2.494499999999844e-05, 2.4013999999999286e-05, 2.10830000000016e-05, 2.105499999999899e-05, 2.3972000000000576e-05, 2.112500000000031e-05, 2.015300000000192e-05, 2.3986000000000146e-05, 2.394500000000091e-05, 2.393100000000134e-05, 2.3042000000000895e-05, 2.3056000000000465e-05, 2.013900000000235e-05, 2.106899999999856e-05, 2.4944000000002436e-05, 2.2999999999998716e-05, 2.3999999999999716e-05, 2.4013999999999286e-05, 2.695900000000001e-05, 2.49169999999993e-05, 2.018099999999759e-05, 2.211100000000174e-05, 2.108299999999813e-05, 2.6820000000000316e-05, 2.1070000000001504e-05, 2.111100000000074e-05, 2.4930000000002867e-05, 2.112500000000031e-05, 2.013899999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.212" endtime="20201029 12:44:22.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.207" endtime="20201029 12:44:22.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.220" endtime="20201029 12:44:22.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.218" endtime="20201029 12:44:22.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.217" endtime="20201029 12:44:22.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.850" endtime="20201029 12:44:22.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.849" endtime="20201029 12:44:22.241"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.250" endtime="20201029 12:44:22.270"></status>
</kw>
<msg timestamp="20201029 12:44:22.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.248" endtime="20201029 12:44:22.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.271" endtime="20201029 12:44:22.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.274" endtime="20201029 12:44:22.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.246" endtime="20201029 12:44:22.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.243" endtime="20201029 12:44:22.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.283" endtime="20201029 12:44:22.568"></status>
</kw>
<msg timestamp="20201029 12:44:22.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02248075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:22.282" endtime="20201029 12:44:22.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02248075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:22.573" endtime="20201029 12:44:22.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.581" endtime="20201029 12:44:22.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.279" endtime="20201029 12:44:22.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.277" endtime="20201029 12:44:22.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.588" level="INFO">${RESULT} = [{'diff': 2.7806000000001746e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.4888000000000687e-05}, {'diff': 2.2972000000003046e-05}, {'diff': 2.4972000000001576e-05}, {'diff': 2.4000000000003185e-0...</msg>
<status status="PASS" starttime="20201029 12:44:22.585" endtime="20201029 12:44:22.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.593" level="INFO">${ACCURACY} = {'diff': [2.7806000000001746e-05, 2.111100000000074e-05, 2.4888000000000687e-05, 2.2972000000003046e-05, 2.4972000000001576e-05, 2.4000000000003185e-05, 2.011100000000321e-05, 2.2985999999999146e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:22.589" endtime="20201029 12:44:22.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.598" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.597" endtime="20201029 12:44:22.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.601" level="INFO">VALUE: [2.7806000000001746e-05, 2.111100000000074e-05, 2.4888000000000687e-05, 2.2972000000003046e-05, 2.4972000000001576e-05, 2.4000000000003185e-05, 2.011100000000321e-05, 2.2985999999999146e-05, 2.211100000000174e-05, 2.208299999999913e-05, 2.106900000000203e-05, 2.2069999999999035e-05, 2.4014000000002755e-05, 2.305500000000099e-05, 2.3040999999997952e-05, 2.2040999999996952e-05, 2.113899999999988e-05, 2.493099999999887e-05, 2.109700000000117e-05, 2.395900000000048e-05, 2.584700000000245e-05, 2.2028000000000325e-05, 2.3014000000001755e-05, 2.5014000000000286e-05, 2.388899999999916e-05, 2.011099999999974e-05, 2.111099999999727e-05, 2.112500000000031e-05, 2.490299999999973e-05, 2.3972000000000576e-05, 2.587500000000159e-05, 2.395899999999701e-05, 2.490299999999973e-05, 2.295899999999948e-05, 2.588899999999769e-05, 2.395900000000048e-05, 2.587500000000159e-05, 2.5832999999999412e-05, 2.588899999999769e-05, 2.5916000000000827e-05, 2.209700000000217e-05, 2.2028000000000325e-05, 2.3999999999999716e-05, 2.4957999999998537e-05, 2.108299999999813e-05, 2.2040999999996952e-05, 2.5027999999999856e-05, 2.493099999999887e-05, 2.486100000000102e-05, 2.3943999999997967e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.599" endtime="20201029 12:44:22.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.594" endtime="20201029 12:44:22.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.606" endtime="20201029 12:44:22.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.604" endtime="20201029 12:44:22.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.603" endtime="20201029 12:44:22.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.242" endtime="20201029 12:44:22.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.241" endtime="20201029 12:44:22.627"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.636" endtime="20201029 12:44:22.656"></status>
</kw>
<msg timestamp="20201029 12:44:22.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.634" endtime="20201029 12:44:22.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.658" endtime="20201029 12:44:22.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.660" endtime="20201029 12:44:22.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.631" endtime="20201029 12:44:22.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.629" endtime="20201029 12:44:22.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.670" endtime="20201029 12:44:22.955"></status>
</kw>
<msg timestamp="20201029 12:44:22.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023509417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.668" endtime="20201029 12:44:22.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023509417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.960" endtime="20201029 12:44:22.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.968" endtime="20201029 12:44:22.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.665" endtime="20201029 12:44:22.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.664" endtime="20201029 12:44:22.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.975" level="INFO">${RESULT} = [{'diff': 1.534699999999889e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.3957999999997537e-05}, {'diff': 2.5818999999999842e-05}, {'diff': 2.6819000000000842e-05}, {'diff': 2.586100000000202e-05...</msg>
<status status="PASS" starttime="20201029 12:44:22.972" endtime="20201029 12:44:22.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.979" level="INFO">${ACCURACY} = {'diff': [1.534699999999889e-05, 2.3027999999997856e-05, 2.3957999999997537e-05, 2.5818999999999842e-05, 2.6819000000000842e-05, 2.586100000000202e-05, 2.3958000000001006e-05, 2.2069999999999035e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:22.976" endtime="20201029 12:44:22.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.984" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.983" endtime="20201029 12:44:22.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.987" level="INFO">VALUE: [1.534699999999889e-05, 2.3027999999997856e-05, 2.3957999999997537e-05, 2.5818999999999842e-05, 2.6819000000000842e-05, 2.586100000000202e-05, 2.3958000000001006e-05, 2.2069999999999035e-05, 2.2098000000001644e-05, 2.2083999999998605e-05, 2.2958000000000006e-05, 2.493099999999887e-05, 2.4013999999999286e-05, 2.116699999999902e-05, 2.3000000000002185e-05, 2.012499999999931e-05, 2.2985999999999146e-05, 2.49169999999993e-05, 2.4958000000002006e-05, 2.3999999999999716e-05, 2.2040999999996952e-05, 2.4887999999997218e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.2985999999999146e-05, 2.3042000000000895e-05, 2.20969999999987e-05, 2.3957999999997537e-05, 2.015300000000192e-05, 2.3014000000001755e-05, 2.3054999999997522e-05, 2.5887999999998218e-05, 2.4929999999999397e-05, 2.2028000000000325e-05, 2.109700000000117e-05, 2.3972000000000576e-05, 2.3972000000000576e-05, 2.3027999999997856e-05, 2.586100000000202e-05, 2.3056000000000465e-05, 2.4042000000001895e-05, 2.015299999999845e-05, 2.3986000000000146e-05, 2.6846999999999982e-05, 2.395900000000048e-05, 2.487500000000059e-05, 2.113899999999988e-05, 2.015300000000192e-05, 2.6804999999997803e-05, 2.295899999999948e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.985" endtime="20201029 12:44:22.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.980" endtime="20201029 12:44:22.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.992" endtime="20201029 12:44:23.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.990" endtime="20201029 12:44:23.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.989" endtime="20201029 12:44:23.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.628" endtime="20201029 12:44:23.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.627" endtime="20201029 12:44:23.013"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.022" endtime="20201029 12:44:23.043"></status>
</kw>
<msg timestamp="20201029 12:44:23.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.020" endtime="20201029 12:44:23.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.044" endtime="20201029 12:44:23.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.047" endtime="20201029 12:44:23.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.018" endtime="20201029 12:44:23.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.016" endtime="20201029 12:44:23.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.056" endtime="20201029 12:44:23.343"></status>
</kw>
<msg timestamp="20201029 12:44:23.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024155514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.055" endtime="20201029 12:44:23.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024155514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024172833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.347" endtime="20201029 12:44:23.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.356" endtime="20201029 12:44:23.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.052" endtime="20201029 12:44:23.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.050" endtime="20201029 12:44:23.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.363" level="INFO">${RESULT} = [{'diff': 1.731900000000175e-05}, {'diff': 2.0152000000002446e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.5943999999999967e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:23.359" endtime="20201029 12:44:23.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.367" level="INFO">${ACCURACY} = {'diff': [1.731900000000175e-05, 2.0152000000002446e-05, 2.2985999999999146e-05, 2.4943999999998967e-05, 2.20969999999987e-05, 2.5943999999999967e-05, 2.10969999999977e-05, 2.497300000000105e-05, 2.20...</msg>
<status status="PASS" starttime="20201029 12:44:23.364" endtime="20201029 12:44:23.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.372" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.370" endtime="20201029 12:44:23.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.374" level="INFO">VALUE: [1.731900000000175e-05, 2.0152000000002446e-05, 2.2985999999999146e-05, 2.4943999999998967e-05, 2.20969999999987e-05, 2.5943999999999967e-05, 2.10969999999977e-05, 2.497300000000105e-05, 2.206899999999956e-05, 2.6860999999999552e-05, 2.4929999999999397e-05, 2.5848000000001925e-05, 2.3957999999997537e-05, 2.3986000000000146e-05, 2.4027999999998856e-05, 2.016699999999802e-05, 2.593099999999987e-05, 2.3042000000000895e-05, 2.59170000000003e-05, 2.2985999999999146e-05, 2.2958000000000006e-05, 2.2084000000002074e-05, 2.2098000000001644e-05, 2.3041999999997426e-05, 2.5916000000000827e-05, 2.2028000000000325e-05, 2.293099999999687e-05, 2.112500000000031e-05, 2.20830000000026e-05, 2.3986000000000146e-05, 2.588900000000116e-05, 2.5916000000000827e-05, 2.2041999999999895e-05, 2.6860999999999552e-05, 2.3986000000000146e-05, 2.113899999999988e-05, 2.013899999999888e-05, 2.3042000000000895e-05, 2.4000000000003185e-05, 2.5791000000000702e-05, 2.6833000000000412e-05, 2.105499999999899e-05, 2.211100000000174e-05, 2.20969999999987e-05, 2.5929999999996928e-05, 2.1098000000000644e-05, 2.3083999999999605e-05, 2.3014000000001755e-05, 2.3000000000002185e-05, 2.3083999999999605e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.373" endtime="20201029 12:44:23.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.368" endtime="20201029 12:44:23.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.380" endtime="20201029 12:44:23.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.379" endtime="20201029 12:44:23.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.377" endtime="20201029 12:44:23.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.014" endtime="20201029 12:44:23.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.013" endtime="20201029 12:44:23.401"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.410" endtime="20201029 12:44:23.429"></status>
</kw>
<msg timestamp="20201029 12:44:23.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.408" endtime="20201029 12:44:23.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.431" endtime="20201029 12:44:23.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.434" endtime="20201029 12:44:23.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.406" endtime="20201029 12:44:23.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.404" endtime="20201029 12:44:23.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.443" endtime="20201029 12:44:23.729"></status>
</kw>
<msg timestamp="20201029 12:44:23.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.442" endtime="20201029 12:44:23.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022867319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.733" endtime="20201029 12:44:23.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.741" endtime="20201029 12:44:23.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.439" endtime="20201029 12:44:23.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.437" endtime="20201029 12:44:23.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.748" level="INFO">${RESULT} = [{'diff': 1.8222000000001765e-05}, {'diff': 2.012499999999931e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.3986000000000146e-05}, {'diff': 2.586100000000202e-05}, {'diff': 2.109700000000117e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:23.745" endtime="20201029 12:44:23.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.754" level="INFO">${ACCURACY} = {'diff': [1.8222000000001765e-05, 2.012499999999931e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.586100000000202e-05, 2.109700000000117e-05, 2.205499999999999e-05, 2.1986000000001615e-05, 2.0...</msg>
<status status="PASS" starttime="20201029 12:44:23.749" endtime="20201029 12:44:23.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.758" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.757" endtime="20201029 12:44:23.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.761" level="INFO">VALUE: [1.8222000000001765e-05, 2.012499999999931e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.586100000000202e-05, 2.109700000000117e-05, 2.205499999999999e-05, 2.1986000000001615e-05, 2.013899999999888e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.211099999999827e-05, 2.3999999999999716e-05, 2.587500000000159e-05, 2.2985999999999146e-05, 2.204100000000042e-05, 2.1138000000000406e-05, 2.5833999999998886e-05, 2.394499999999744e-05, 2.112499999999684e-05, 2.3999999999999716e-05, 2.4985999999997677e-05, 2.111099999999727e-05, 2.590299999999726e-05, 2.495900000000148e-05, 2.587500000000159e-05, 2.012499999999931e-05, 2.2083999999998605e-05, 2.20969999999987e-05, 2.206899999999956e-05, 2.391700000000177e-05, 2.0151999999998976e-05, 2.011099999999974e-05, 2.3028000000001325e-05, 2.593099999999987e-05, 2.6806000000000746e-05, 2.106900000000203e-05, 2.388899999999916e-05, 2.10830000000016e-05, 2.3971999999997107e-05, 2.113899999999988e-05, 2.4943999999998967e-05, 2.108299999999813e-05, 2.10969999999977e-05, 2.493099999999887e-05, 2.490299999999973e-05, 2.5943999999999967e-05, 2.298700000000209e-05, 2.106899999999856e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.759" endtime="20201029 12:44:23.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.755" endtime="20201029 12:44:23.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.766" endtime="20201029 12:44:23.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.765" endtime="20201029 12:44:23.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.763" endtime="20201029 12:44:23.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.402" endtime="20201029 12:44:23.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.401" endtime="20201029 12:44:23.787"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.796" endtime="20201029 12:44:23.818"></status>
</kw>
<msg timestamp="20201029 12:44:23.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.794" endtime="20201029 12:44:23.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.820" endtime="20201029 12:44:23.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.823" endtime="20201029 12:44:23.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.792" endtime="20201029 12:44:23.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.789" endtime="20201029 12:44:23.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.832" endtime="20201029 12:44:24.118"></status>
</kw>
<msg timestamp="20201029 12:44:24.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.830" endtime="20201029 12:44:24.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023697847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.123" endtime="20201029 12:44:24.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.131" endtime="20201029 12:44:24.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.828" endtime="20201029 12:44:24.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.826" endtime="20201029 12:44:24.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.138" level="INFO">${RESULT} = [{'diff': 2.588900000000116e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.4999999999997247e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.490299999999973e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:24.135" endtime="20201029 12:44:24.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.142" level="INFO">${ACCURACY} = {'diff': [2.588900000000116e-05, 2.2028000000000325e-05, 2.590300000000073e-05, 2.4999999999997247e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.6860999999999552e-05, 2.3070000000000035e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:24.139" endtime="20201029 12:44:24.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.147" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.146" endtime="20201029 12:44:24.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.150" level="INFO">VALUE: [2.588900000000116e-05, 2.2028000000000325e-05, 2.590300000000073e-05, 2.4999999999997247e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.6860999999999552e-05, 2.3070000000000035e-05, 2.4027999999998856e-05, 2.304100000000142e-05, 2.393099999999787e-05, 2.6806000000000746e-05, 2.4972000000001576e-05, 2.2070000000002504e-05, 2.3958000000001006e-05, 2.205499999999999e-05, 2.3042000000000895e-05, 2.3055999999996996e-05, 2.5833999999998886e-05, 2.011099999999974e-05, 2.015300000000192e-05, 2.4014000000002755e-05, 2.584700000000245e-05, 2.2027999999996856e-05, 2.013900000000235e-05, 2.111100000000074e-05, 2.2028000000000325e-05, 2.3971999999997107e-05, 2.4943999999998967e-05, 2.3999999999999716e-05, 2.1166000000003016e-05, 2.3958000000001006e-05, 2.2985999999999146e-05, 2.588900000000116e-05, 2.4915999999999827e-05, 2.5818999999999842e-05, 2.590300000000073e-05, 2.4972000000001576e-05, 2.395900000000048e-05, 2.586100000000202e-05, 2.206900000000303e-05, 2.2084000000002074e-05, 2.587500000000159e-05, 2.20969999999987e-05, 2.6833999999999886e-05, 2.3000000000002185e-05, 2.111100000000074e-05, 2.3028000000001325e-05, 2.2028000000000325e-05, 2.2971999999999576e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.148" endtime="20201029 12:44:24.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.143" endtime="20201029 12:44:24.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.155" endtime="20201029 12:44:24.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.153" endtime="20201029 12:44:24.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.152" endtime="20201029 12:44:24.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.788" endtime="20201029 12:44:24.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.787" endtime="20201029 12:44:24.176"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.185" endtime="20201029 12:44:24.204"></status>
</kw>
<msg timestamp="20201029 12:44:24.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.183" endtime="20201029 12:44:24.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.206" endtime="20201029 12:44:24.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.208" endtime="20201029 12:44:24.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.181" endtime="20201029 12:44:24.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.178" endtime="20201029 12:44:24.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.218" endtime="20201029 12:44:24.503"></status>
</kw>
<msg timestamp="20201029 12:44:24.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.216" endtime="20201029 12:44:24.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.507" endtime="20201029 12:44:24.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.516" endtime="20201029 12:44:24.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.213" endtime="20201029 12:44:24.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.211" endtime="20201029 12:44:24.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.523" level="INFO">${RESULT} = [{'diff': 1.2444000000000344e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.3944000000001436e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.398699999999962e-05}, {'diff': 2.016700000000149e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:24.519" endtime="20201029 12:44:24.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.527" level="INFO">${ACCURACY} = {'diff': [1.2444000000000344e-05, 2.208299999999913e-05, 2.3944000000001436e-05, 2.5860999999998552e-05, 2.398699999999962e-05, 2.016700000000149e-05, 2.6778000000001606e-05, 2.594499999999944e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:24.524" endtime="20201029 12:44:24.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.532" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.531" endtime="20201029 12:44:24.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.534" level="INFO">VALUE: [1.2444000000000344e-05, 2.208299999999913e-05, 2.3944000000001436e-05, 2.5860999999998552e-05, 2.398699999999962e-05, 2.016700000000149e-05, 2.6778000000001606e-05, 2.594499999999944e-05, 2.294499999999991e-05, 2.2055999999999465e-05, 2.6874999999999122e-05, 2.018100000000106e-05, 2.112500000000031e-05, 2.5832999999999412e-05, 2.10830000000016e-05, 2.2985999999999146e-05, 2.208299999999913e-05, 2.4943999999998967e-05, 2.2985999999999146e-05, 2.1098000000000644e-05, 2.587500000000159e-05, 2.49169999999993e-05, 2.0179999999998116e-05, 2.395900000000048e-05, 2.3958000000001006e-05, 2.5846999999998982e-05, 2.205499999999999e-05, 2.113899999999988e-05, 2.2069999999999035e-05, 2.108299999999813e-05, 2.1138000000000406e-05, 2.3056000000000465e-05, 2.2040999999996952e-05, 2.395900000000048e-05, 2.49169999999993e-05, 2.111100000000074e-05, 2.6860999999999552e-05, 2.3013999999998286e-05, 2.106900000000203e-05, 2.0137999999999406e-05, 2.113899999999988e-05, 2.6860999999999552e-05, 2.3972000000000576e-05, 2.4915999999999827e-05, 2.109700000000117e-05, 2.3972000000000576e-05, 2.211099999999827e-05, 2.20969999999987e-05, 2.106899999999856e-05, 2.2028000000000325e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.533" endtime="20201029 12:44:24.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.528" endtime="20201029 12:44:24.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.540" endtime="20201029 12:44:24.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.539" endtime="20201029 12:44:24.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.538" endtime="20201029 12:44:24.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.177" endtime="20201029 12:44:24.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.176" endtime="20201029 12:44:24.561"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.570" endtime="20201029 12:44:24.591"></status>
</kw>
<msg timestamp="20201029 12:44:24.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.569" endtime="20201029 12:44:24.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.592" endtime="20201029 12:44:24.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.595" endtime="20201029 12:44:24.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.566" endtime="20201029 12:44:24.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.564" endtime="20201029 12:44:24.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.605" endtime="20201029 12:44:24.892"></status>
</kw>
<msg timestamp="20201029 12:44:24.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023253333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.603" endtime="20201029 12:44:24.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023253333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.897" endtime="20201029 12:44:24.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.905" endtime="20201029 12:44:24.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.600" endtime="20201029 12:44:24.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.598" endtime="20201029 12:44:24.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.912" level="INFO">${RESULT} = [{'diff': 2.6846999999999982e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.487500000000059e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.498700000000062e-05...</msg>
<status status="PASS" starttime="20201029 12:44:24.908" endtime="20201029 12:44:24.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.917" level="INFO">${ACCURACY} = {'diff': [2.6846999999999982e-05, 2.3999999999999716e-05, 2.2028000000000325e-05, 2.487500000000059e-05, 2.3056000000000465e-05, 2.498700000000062e-05, 2.2070000000002504e-05, 2.495900000000148e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:24.913" endtime="20201029 12:44:24.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.922" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.921" endtime="20201029 12:44:24.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.924" level="INFO">VALUE: [2.6846999999999982e-05, 2.3999999999999716e-05, 2.2028000000000325e-05, 2.487500000000059e-05, 2.3056000000000465e-05, 2.498700000000062e-05, 2.2070000000002504e-05, 2.495900000000148e-05, 2.112500000000031e-05, 2.202700000000085e-05, 2.491700000000277e-05, 2.3000000000002185e-05, 2.588900000000116e-05, 2.013899999999888e-05, 2.49169999999993e-05, 2.0041999999997895e-05, 2.687500000000259e-05, 2.208299999999913e-05, 2.59170000000003e-05, 2.594499999999944e-05, 2.2985999999999146e-05, 2.2971999999999576e-05, 2.2098000000001644e-05, 2.59170000000003e-05, 2.3056000000000465e-05, 2.3986000000000146e-05, 2.3083999999999605e-05, 2.013899999999888e-05, 2.494499999999844e-05, 2.2083999999998605e-05, 2.2028000000000325e-05, 1.918100000000006e-05, 2.588899999999769e-05, 2.1056000000001934e-05, 2.106899999999856e-05, 2.487500000000059e-05, 2.590300000000073e-05, 2.3999999999999716e-05, 2.1069999999998035e-05, 2.3972000000000576e-05, 2.2028000000000325e-05, 2.111100000000074e-05, 2.394500000000091e-05, 2.006899999999756e-05, 2.5930000000000397e-05, 2.306900000000056e-05, 2.206899999999956e-05, 2.3986000000000146e-05, 2.0249999999999435e-05, 2.3986000000000146e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.923" endtime="20201029 12:44:24.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.918" endtime="20201029 12:44:24.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.929" endtime="20201029 12:44:24.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.928" endtime="20201029 12:44:24.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.927" endtime="20201029 12:44:24.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.562" endtime="20201029 12:44:24.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.561" endtime="20201029 12:44:24.950"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.959" endtime="20201029 12:44:24.979"></status>
</kw>
<msg timestamp="20201029 12:44:24.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.958" endtime="20201029 12:44:24.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.981" endtime="20201029 12:44:24.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.984" endtime="20201029 12:44:24.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.955" endtime="20201029 12:44:24.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.953" endtime="20201029 12:44:24.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.993" endtime="20201029 12:44:25.283"></status>
</kw>
<msg timestamp="20201029 12:44:25.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021012097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.991" endtime="20201029 12:44:25.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021012097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.288" endtime="20201029 12:44:25.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.296" endtime="20201029 12:44:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.989" endtime="20201029 12:44:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.987" endtime="20201029 12:44:25.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.303" level="INFO">${RESULT} = [{'diff': 2.012499999999931e-05}, {'diff': 2.297299999999905e-05}, {'diff': 2.3056000000000465e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.49169999999993e-05}, {'diff': 2.4042000000001895e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:25.300" endtime="20201029 12:44:25.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.307" level="INFO">${ACCURACY} = {'diff': [2.012499999999931e-05, 2.297299999999905e-05, 2.3056000000000465e-05, 2.205499999999999e-05, 2.49169999999993e-05, 2.4042000000001895e-05, 2.2069999999999035e-05, 2.5847999999998456e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:44:25.304" endtime="20201029 12:44:25.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.312" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.311" endtime="20201029 12:44:25.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.315" level="INFO">VALUE: [2.012499999999931e-05, 2.297299999999905e-05, 2.3056000000000465e-05, 2.205499999999999e-05, 2.49169999999993e-05, 2.4042000000001895e-05, 2.2069999999999035e-05, 2.5847999999998456e-05, 2.294499999999991e-05, 2.3972000000000576e-05, 2.012499999999931e-05, 2.4026999999999382e-05, 2.2137999999997937e-05, 2.5860999999998552e-05, 2.493099999999887e-05, 2.109700000000117e-05, 2.5846999999998982e-05, 2.0194000000001155e-05, 2.6888999999998692e-05, 2.3930000000001866e-05, 2.111100000000074e-05, 2.5027000000000382e-05, 2.5000000000000716e-05, 2.3013999999998286e-05, 2.209700000000217e-05, 2.012499999999931e-05, 2.013899999999888e-05, 2.4027999999998856e-05, 2.019499999999716e-05, 2.6833000000000412e-05, 2.5819999999999316e-05, 2.115299999999945e-05, 2.3999999999999716e-05, 2.109700000000117e-05, 2.111100000000074e-05, 2.3972000000000576e-05, 2.109700000000117e-05, 2.4957999999998537e-05, 2.3070000000000035e-05, 2.6805000000001272e-05, 2.1098000000000644e-05, 2.59170000000003e-05, 2.112500000000031e-05, 2.4902000000000257e-05, 2.2985999999999146e-05, 2.3958000000001006e-05, 2.2056000000002934e-05, 2.304100000000142e-05, 2.113899999999988e-05, 2.0165999999998546e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.313" endtime="20201029 12:44:25.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.308" endtime="20201029 12:44:25.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.320" endtime="20201029 12:44:25.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.318" endtime="20201029 12:44:25.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.317" endtime="20201029 12:44:25.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.951" endtime="20201029 12:44:25.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.951" endtime="20201029 12:44:25.341"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.350" endtime="20201029 12:44:25.374"></status>
</kw>
<msg timestamp="20201029 12:44:25.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.348" endtime="20201029 12:44:25.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.375" endtime="20201029 12:44:25.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.378" endtime="20201029 12:44:25.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.345" endtime="20201029 12:44:25.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.343" endtime="20201029 12:44:25.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.387" endtime="20201029 12:44:25.675"></status>
</kw>
<msg timestamp="20201029 12:44:25.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027468597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027477319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.386" endtime="20201029 12:44:25.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027468597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027477319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.679" endtime="20201029 12:44:25.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.687" endtime="20201029 12:44:25.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.383" endtime="20201029 12:44:25.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.381" endtime="20201029 12:44:25.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.694" level="INFO">${RESULT} = [{'diff': 8.721999999999203e-06}, {'diff': 2.4944000000002436e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.39169999999983e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.588900000000116e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:25.691" endtime="20201029 12:44:25.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.698" level="INFO">${ACCURACY} = {'diff': [8.721999999999203e-06, 2.4944000000002436e-05, 2.3972000000000576e-05, 2.39169999999983e-05, 2.5860999999998552e-05, 2.588900000000116e-05, 2.49169999999993e-05, 2.1098000000000644e-05, 2.49...</msg>
<status status="PASS" starttime="20201029 12:44:25.695" endtime="20201029 12:44:25.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.703" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.702" endtime="20201029 12:44:25.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.706" level="INFO">VALUE: [8.721999999999203e-06, 2.4944000000002436e-05, 2.3972000000000576e-05, 2.39169999999983e-05, 2.5860999999998552e-05, 2.588900000000116e-05, 2.49169999999993e-05, 2.1098000000000644e-05, 2.4902000000000257e-05, 2.3986000000000146e-05, 2.397300000000005e-05, 2.488900000000016e-05, 2.4986000000001146e-05, 2.016699999999802e-05, 2.397300000000005e-05, 2.5862000000001495e-05, 2.586100000000202e-05, 2.6874999999999122e-05, 2.206899999999956e-05, 2.5846999999998982e-05, 2.3957999999997537e-05, 2.488900000000016e-05, 2.013900000000235e-05, 2.015299999999845e-05, 2.4902000000000257e-05, 2.497300000000105e-05, 2.587500000000159e-05, 2.013899999999888e-05, 2.013899999999888e-05, 2.115299999999945e-05, 2.3971999999997107e-05, 2.5861999999998025e-05, 2.108299999999813e-05, 2.4972000000001576e-05, 2.395900000000048e-05, 2.6763999999998567e-05, 2.587500000000159e-05, 2.2069999999999035e-05, 2.3958000000001006e-05, 2.393099999999787e-05, 2.013899999999888e-05, 2.3915999999998827e-05, 2.012500000000278e-05, 2.205499999999999e-05, 2.3958000000001006e-05, 2.012499999999931e-05, 2.4929999999999397e-05, 2.3000000000002185e-05, 2.5874999999998122e-05, 2.1084000000001074e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.704" endtime="20201029 12:44:25.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.699" endtime="20201029 12:44:25.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.718" endtime="20201029 12:44:25.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.716" endtime="20201029 12:44:25.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.715" endtime="20201029 12:44:25.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.342" endtime="20201029 12:44:25.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.341" endtime="20201029 12:44:25.739"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.748" endtime="20201029 12:44:25.765"></status>
</kw>
<msg timestamp="20201029 12:44:25.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.746" endtime="20201029 12:44:25.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.767" endtime="20201029 12:44:25.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.770" endtime="20201029 12:44:25.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.743" endtime="20201029 12:44:25.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.741" endtime="20201029 12:44:25.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.779" endtime="20201029 12:44:26.067"></status>
</kw>
<msg timestamp="20201029 12:44:26.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021297056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021318139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.777" endtime="20201029 12:44:26.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021297056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021318139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.071" endtime="20201029 12:44:26.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.079" endtime="20201029 12:44:26.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.775" endtime="20201029 12:44:26.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.773" endtime="20201029 12:44:26.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.086" level="INFO">${RESULT} = [{'diff': 2.108299999999813e-05}, {'diff': 2.211100000000174e-05}, {'diff': 2.108299999999813e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.205499999999999e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.083" endtime="20201029 12:44:26.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.091" level="INFO">${ACCURACY} = {'diff': [2.108299999999813e-05, 2.211100000000174e-05, 2.108299999999813e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.6874999999999122e-05, 2.4943999999998967e-05, 2.20...</msg>
<status status="PASS" starttime="20201029 12:44:26.087" endtime="20201029 12:44:26.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.096" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.095" endtime="20201029 12:44:26.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.099" level="INFO">VALUE: [2.108299999999813e-05, 2.211100000000174e-05, 2.108299999999813e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.6874999999999122e-05, 2.4943999999998967e-05, 2.204100000000042e-05, 2.111100000000074e-05, 2.4028000000002325e-05, 2.2083999999998605e-05, 2.5832999999999412e-05, 2.2971999999999576e-05, 2.109700000000117e-05, 2.1180000000002586e-05, 2.588899999999769e-05, 2.2985999999999146e-05, 2.0151999999998976e-05, 2.2012999999997812e-05, 2.1083999999997605e-05, 2.015299999999845e-05, 2.2999999999998716e-05, 2.5860999999998552e-05, 2.5819999999999316e-05, 2.6777000000002132e-05, 2.3986000000000146e-05, 2.590300000000073e-05, 2.211099999999827e-05, 2.209700000000217e-05, 2.6833000000000412e-05, 2.015299999999845e-05, 2.2985999999999146e-05, 2.6820000000000316e-05, 2.116699999999902e-05, 2.690299999999826e-05, 2.588899999999769e-05, 2.493099999999887e-05, 2.1084000000001074e-05, 2.3986000000000146e-05, 2.3042000000000895e-05, 2.111099999999727e-05, 2.49169999999993e-05, 2.2999999999998716e-05, 2.491700000000277e-05, 2.109700000000117e-05, 2.590299999999726e-05, 2.3042000000000895e-05, 2.2041999999999895e-05, 2.106899999999856e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.097" endtime="20201029 12:44:26.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.092" endtime="20201029 12:44:26.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.104" endtime="20201029 12:44:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.102" endtime="20201029 12:44:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.101" endtime="20201029 12:44:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.740" endtime="20201029 12:44:26.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.739" endtime="20201029 12:44:26.125"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.134" endtime="20201029 12:44:26.153"></status>
</kw>
<msg timestamp="20201029 12:44:26.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.132" endtime="20201029 12:44:26.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.155" endtime="20201029 12:44:26.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.158" endtime="20201029 12:44:26.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.130" endtime="20201029 12:44:26.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.127" endtime="20201029 12:44:26.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.167" endtime="20201029 12:44:26.455"></status>
</kw>
<msg timestamp="20201029 12:44:26.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.165" endtime="20201029 12:44:26.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022007833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.459" endtime="20201029 12:44:26.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.467" endtime="20201029 12:44:26.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.163" endtime="20201029 12:44:26.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.161" endtime="20201029 12:44:26.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.474" level="INFO">${RESULT} = [{'diff': 1.92089999999992e-05}, {'diff': 2.016700000000149e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.494499999999844e-05}, {'diff': 2.304100000000142e-05}, {'diff': 2.6874999999999122e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.471" endtime="20201029 12:44:26.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.478" level="INFO">${ACCURACY} = {'diff': [1.92089999999992e-05, 2.016700000000149e-05, 2.113899999999988e-05, 2.494499999999844e-05, 2.304100000000142e-05, 2.6874999999999122e-05, 2.20830000000026e-05, 2.112500000000031e-05, 2.30420...</msg>
<status status="PASS" starttime="20201029 12:44:26.475" endtime="20201029 12:44:26.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.483" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.482" endtime="20201029 12:44:26.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.486" level="INFO">VALUE: [1.92089999999992e-05, 2.016700000000149e-05, 2.113899999999988e-05, 2.494499999999844e-05, 2.304100000000142e-05, 2.6874999999999122e-05, 2.20830000000026e-05, 2.112500000000031e-05, 2.3042000000000895e-05, 2.3943999999997967e-05, 2.2985999999999146e-05, 2.393100000000134e-05, 2.109700000000117e-05, 2.019500000000063e-05, 2.106899999999856e-05, 2.4957999999998537e-05, 2.5901999999997788e-05, 2.587500000000159e-05, 2.1112000000000214e-05, 2.3972000000000576e-05, 2.112500000000031e-05, 2.3999999999999716e-05, 2.488900000000016e-05, 2.301300000000228e-05, 2.209700000000217e-05, 2.0235999999999865e-05, 2.3027999999997856e-05, 2.2041999999999895e-05, 2.111099999999727e-05, 2.4972000000001576e-05, 2.2986000000002615e-05, 2.5846999999998982e-05, 2.2055999999999465e-05, 2.1165999999999546e-05, 2.586100000000202e-05, 2.3958000000001006e-05, 2.493099999999887e-05, 2.2041999999999895e-05, 2.2070000000002504e-05, 2.588900000000116e-05, 2.011099999999974e-05, 2.2028000000000325e-05, 2.3013999999998286e-05, 2.593099999999987e-05, 2.108299999999813e-05, 2.588900000000116e-05, 2.3042000000000895e-05, 2.584700000000245e-05, 2.208299999999913e-05, 2.4013999999999286e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.484" endtime="20201029 12:44:26.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.479" endtime="20201029 12:44:26.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.491" endtime="20201029 12:44:26.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.489" endtime="20201029 12:44:26.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.488" endtime="20201029 12:44:26.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.126" endtime="20201029 12:44:26.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.125" endtime="20201029 12:44:26.512"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.521" endtime="20201029 12:44:26.540"></status>
</kw>
<msg timestamp="20201029 12:44:26.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.519" endtime="20201029 12:44:26.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.542" endtime="20201029 12:44:26.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.544" endtime="20201029 12:44:26.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.516" endtime="20201029 12:44:26.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.514" endtime="20201029 12:44:26.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.554" endtime="20201029 12:44:26.840"></status>
</kw>
<msg timestamp="20201029 12:44:26.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.552" endtime="20201029 12:44:26.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.845" endtime="20201029 12:44:26.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.853" endtime="20201029 12:44:26.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.549" endtime="20201029 12:44:26.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.548" endtime="20201029 12:44:26.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.860" level="INFO">${RESULT} = [{'diff': 2.8833999999998416e-05}, {'diff': 2.015299999999845e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2027999999996856e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.2985999999999146e-05...</msg>
<status status="PASS" starttime="20201029 12:44:26.857" endtime="20201029 12:44:26.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.864" level="INFO">${ACCURACY} = {'diff': [2.8833999999998416e-05, 2.015299999999845e-05, 2.205499999999999e-05, 2.2027999999996856e-05, 2.2069999999999035e-05, 2.2985999999999146e-05, 2.1985999999998146e-05, 2.112500000000031e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:44:26.861" endtime="20201029 12:44:26.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.869" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.868" endtime="20201029 12:44:26.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.872" level="INFO">VALUE: [2.8833999999998416e-05, 2.015299999999845e-05, 2.205499999999999e-05, 2.2027999999996856e-05, 2.2069999999999035e-05, 2.2985999999999146e-05, 2.1985999999998146e-05, 2.112500000000031e-05, 2.588900000000116e-05, 2.3014000000001755e-05, 2.1180000000002586e-05, 2.498699999999715e-05, 2.013899999999888e-05, 2.1084000000001074e-05, 2.3999999999999716e-05, 2.4943999999998967e-05, 2.587500000000159e-05, 2.587500000000159e-05, 2.5902000000001257e-05, 2.5999999999998247e-05, 2.205499999999999e-05, 2.5860999999998552e-05, 2.584700000000245e-05, 2.2972000000003046e-05, 2.590300000000073e-05, 2.4014000000002755e-05, 2.488900000000016e-05, 2.3944000000001436e-05, 2.59170000000003e-05, 2.4957999999998537e-05, 2.106899999999856e-05, 2.1069999999998035e-05, 2.0165999999998546e-05, 2.5957999999999537e-05, 2.3013999999998286e-05, 2.3014000000001755e-05, 2.3972000000000576e-05, 2.59170000000003e-05, 2.39169999999983e-05, 2.4943999999998967e-05, 2.3041999999997426e-05, 2.016699999999802e-05, 2.6805000000001272e-05, 2.490299999999973e-05, 2.011099999999974e-05, 2.586100000000202e-05, 2.49169999999993e-05, 2.018100000000106e-05, 2.395900000000048e-05, 2.5874999999998122e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.870" endtime="20201029 12:44:26.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.865" endtime="20201029 12:44:26.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.879" endtime="20201029 12:44:26.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.878" endtime="20201029 12:44:26.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.876" endtime="20201029 12:44:26.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.513" endtime="20201029 12:44:26.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.512" endtime="20201029 12:44:26.900"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.909" endtime="20201029 12:44:26.932"></status>
</kw>
<msg timestamp="20201029 12:44:26.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.908" endtime="20201029 12:44:26.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.934" endtime="20201029 12:44:26.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.936" endtime="20201029 12:44:26.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.905" endtime="20201029 12:44:26.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.903" endtime="20201029 12:44:26.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.946" endtime="20201029 12:44:27.232"></status>
</kw>
<msg timestamp="20201029 12:44:27.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025265514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025275125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.944" endtime="20201029 12:44:27.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025265514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025275125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.236" endtime="20201029 12:44:27.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.244" endtime="20201029 12:44:27.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.941" endtime="20201029 12:44:27.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.939" endtime="20201029 12:44:27.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.251" level="INFO">${RESULT} = [{'diff': 9.610999999999648e-06}, {'diff': 2.2069999999999035e-05}, {'diff': 2.0165999999998546e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.6833999999999886e-05}, {'diff': 2.009700000000017e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:27.248" endtime="20201029 12:44:27.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.256" level="INFO">${ACCURACY} = {'diff': [9.610999999999648e-06, 2.2069999999999035e-05, 2.0165999999998546e-05, 2.59170000000003e-05, 2.6833999999999886e-05, 2.009700000000017e-05, 2.306900000000056e-05, 2.3042000000000895e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:44:27.252" endtime="20201029 12:44:27.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.261" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.260" endtime="20201029 12:44:27.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.264" level="INFO">VALUE: [9.610999999999648e-06, 2.2069999999999035e-05, 2.0165999999998546e-05, 2.59170000000003e-05, 2.6833999999999886e-05, 2.009700000000017e-05, 2.306900000000056e-05, 2.3042000000000895e-05, 2.2083999999998605e-05, 2.4958000000002006e-05, 2.584700000000245e-05, 2.1069999999998035e-05, 2.493099999999887e-05, 2.4957999999998537e-05, 2.4027999999998856e-05, 2.3014000000001755e-05, 2.488900000000016e-05, 2.205499999999999e-05, 2.59170000000003e-05, 2.3999999999999716e-05, 2.111099999999727e-05, 2.3042000000000895e-05, 2.3999999999999716e-05, 2.013900000000235e-05, 2.6820000000000316e-05, 2.3958000000001006e-05, 2.4944000000002436e-05, 2.205499999999999e-05, 2.59170000000003e-05, 2.6874999999999122e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.111100000000074e-05, 2.211100000000174e-05, 2.5847999999998456e-05, 2.009700000000017e-05, 2.304100000000142e-05, 2.3028000000001325e-05, 2.305500000000099e-05, 2.2069999999999035e-05, 2.3012999999998812e-05, 2.488900000000016e-05, 2.6860999999999552e-05, 2.111099999999727e-05, 2.5972000000002576e-05, 2.3027999999997856e-05, 2.206899999999956e-05, 2.5902000000001257e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.262" endtime="20201029 12:44:27.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.257" endtime="20201029 12:44:27.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.269" endtime="20201029 12:44:27.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.267" endtime="20201029 12:44:27.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.266" endtime="20201029 12:44:27.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.901" endtime="20201029 12:44:27.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.901" endtime="20201029 12:44:27.290"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.299" endtime="20201029 12:44:27.318"></status>
</kw>
<msg timestamp="20201029 12:44:27.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.297" endtime="20201029 12:44:27.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.320" endtime="20201029 12:44:27.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.322" endtime="20201029 12:44:27.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.295" endtime="20201029 12:44:27.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.292" endtime="20201029 12:44:27.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.332" endtime="20201029 12:44:27.619"></status>
</kw>
<msg timestamp="20201029 12:44:27.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.330" endtime="20201029 12:44:27.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.623" endtime="20201029 12:44:27.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.632" endtime="20201029 12:44:27.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.328" endtime="20201029 12:44:27.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.326" endtime="20201029 12:44:27.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.639" level="INFO">${RESULT} = [{'diff': 3.447200000000067e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.5846999999998982e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:27.635" endtime="20201029 12:44:27.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.643" level="INFO">${ACCURACY} = {'diff': [3.447200000000067e-05, 2.5860999999998552e-05, 2.2985999999999146e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.5846999999998982e-05, 2.394500000000091e-05, 2.587500000000159e-05, 2.39...</msg>
<status status="PASS" starttime="20201029 12:44:27.640" endtime="20201029 12:44:27.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.647" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.646" endtime="20201029 12:44:27.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.650" level="INFO">VALUE: [3.447200000000067e-05, 2.5860999999998552e-05, 2.2985999999999146e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.5846999999998982e-05, 2.394500000000091e-05, 2.587500000000159e-05, 2.3972000000000576e-05, 2.015300000000192e-05, 2.3972000000000576e-05, 2.015300000000192e-05, 2.013900000000235e-05, 2.6776999999998663e-05, 2.490299999999973e-05, 2.4013999999999286e-05, 2.590299999999726e-05, 2.3958000000001006e-05, 2.6833000000000412e-05, 2.4930000000002867e-05, 2.488900000000016e-05, 2.2111999999997745e-05, 2.4014000000002755e-05, 2.486100000000102e-05, 2.206899999999956e-05, 2.6806000000000746e-05, 2.587500000000159e-05, 2.3999999999999716e-05, 2.5930000000000397e-05, 2.493100000000234e-05, 2.2986000000002615e-05, 2.49169999999993e-05, 2.4986000000001146e-05, 2.6806000000000746e-05, 2.011099999999974e-05, 2.106899999999856e-05, 2.106899999999856e-05, 2.018100000000106e-05, 2.4985999999997677e-05, 2.3999999999999716e-05, 2.211099999999827e-05, 2.588900000000116e-05, 2.012499999999931e-05, 2.494499999999844e-05, 2.3056000000000465e-05, 2.1084000000001074e-05, 2.2055999999999465e-05, 2.4888000000000687e-05, 2.10830000000016e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.649" endtime="20201029 12:44:27.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.644" endtime="20201029 12:44:27.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.655" endtime="20201029 12:44:27.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.654" endtime="20201029 12:44:27.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.652" endtime="20201029 12:44:27.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.291" endtime="20201029 12:44:27.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.290" endtime="20201029 12:44:27.676"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.685" endtime="20201029 12:44:27.705"></status>
</kw>
<msg timestamp="20201029 12:44:27.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.684" endtime="20201029 12:44:27.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.707" endtime="20201029 12:44:27.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.709" endtime="20201029 12:44:27.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.681" endtime="20201029 12:44:27.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.679" endtime="20201029 12:44:27.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.718" endtime="20201029 12:44:28.004"></status>
</kw>
<msg timestamp="20201029 12:44:28.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023140556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.717" endtime="20201029 12:44:28.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023140556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023152097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.009" endtime="20201029 12:44:28.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.017" endtime="20201029 12:44:28.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.714" endtime="20201029 12:44:28.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.712" endtime="20201029 12:44:28.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.024" level="INFO">${RESULT} = [{'diff': 1.1541000000000329e-05}, {'diff': 2.49169999999993e-05}, {'diff': 2.584700000000245e-05}, {'diff': 2.395900000000048e-05}, {'diff': 2.593099999999987e-05}, {'diff': 2.106899999999856e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:28.021" endtime="20201029 12:44:28.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.028" level="INFO">${ACCURACY} = {'diff': [1.1541000000000329e-05, 2.49169999999993e-05, 2.584700000000245e-05, 2.395900000000048e-05, 2.593099999999987e-05, 2.106899999999856e-05, 2.490299999999973e-05, 2.016699999999802e-05, 2.1111...</msg>
<status status="PASS" starttime="20201029 12:44:28.025" endtime="20201029 12:44:28.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.033" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.032" endtime="20201029 12:44:28.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.035" level="INFO">VALUE: [1.1541000000000329e-05, 2.49169999999993e-05, 2.584700000000245e-05, 2.395900000000048e-05, 2.593099999999987e-05, 2.106899999999856e-05, 2.490299999999973e-05, 2.016699999999802e-05, 2.111100000000074e-05, 2.5915999999997358e-05, 2.4957999999998537e-05, 2.49169999999993e-05, 2.2041999999999895e-05, 2.206900000000303e-05, 2.3986000000000146e-05, 2.106899999999856e-05, 2.011100000000321e-05, 2.495899999999801e-05, 2.3999999999999716e-05, 2.109700000000117e-05, 2.2013999999997286e-05, 2.6887999999999218e-05, 2.5846999999998982e-05, 2.2014000000000755e-05, 2.394500000000091e-05, 2.394500000000091e-05, 2.590300000000073e-05, 2.206899999999956e-05, 2.3014000000001755e-05, 2.105500000000246e-05, 2.49169999999993e-05, 2.4957999999998537e-05, 2.206900000000303e-05, 2.305500000000099e-05, 2.113899999999988e-05, 2.586100000000202e-05, 2.3929999999998397e-05, 2.015299999999845e-05, 2.5957999999999537e-05, 2.112500000000031e-05, 2.112500000000031e-05, 2.584700000000245e-05, 2.013900000000235e-05, 2.6888999999998692e-05, 2.0180000000001586e-05, 2.5846999999998982e-05, 2.106900000000203e-05, 2.013899999999888e-05, 2.1999999999997716e-05, 2.1013999999999755e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.034" endtime="20201029 12:44:28.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.029" endtime="20201029 12:44:28.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.042" endtime="20201029 12:44:28.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.040" endtime="20201029 12:44:28.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.039" endtime="20201029 12:44:28.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.677" endtime="20201029 12:44:28.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.676" endtime="20201029 12:44:28.063"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.071" endtime="20201029 12:44:28.093"></status>
</kw>
<msg timestamp="20201029 12:44:28.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.070" endtime="20201029 12:44:28.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.095" endtime="20201029 12:44:28.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.097" endtime="20201029 12:44:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.067" endtime="20201029 12:44:28.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.065" endtime="20201029 12:44:28.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.107" endtime="20201029 12:44:28.392"></status>
</kw>
<msg timestamp="20201029 12:44:28.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.105" endtime="20201029 12:44:28.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023580611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.396" endtime="20201029 12:44:28.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.405" endtime="20201029 12:44:28.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.102" endtime="20201029 12:44:28.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.100" endtime="20201029 12:44:28.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.411" level="INFO">${RESULT} = [{'diff': 3.645799999999963e-05}, {'diff': 2.1165999999999546e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.495899999999801e-05}, {'diff': 2.011099999999974e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:28.408" endtime="20201029 12:44:28.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.416" level="INFO">${ACCURACY} = {'diff': [3.645799999999963e-05, 2.1165999999999546e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.495899999999801e-05, 2.011099999999974e-05, 2.5860999999998552e-05, 2.590300000000073e-05, 2.495...</msg>
<status status="PASS" starttime="20201029 12:44:28.412" endtime="20201029 12:44:28.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.421" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.420" endtime="20201029 12:44:28.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.424" level="INFO">VALUE: [3.645799999999963e-05, 2.1165999999999546e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.495899999999801e-05, 2.011099999999974e-05, 2.5860999999998552e-05, 2.590300000000073e-05, 2.4958000000002006e-05, 2.0193999999997686e-05, 2.590300000000073e-05, 2.2985999999999146e-05, 2.490299999999973e-05, 2.2069999999999035e-05, 2.3986000000000146e-05, 2.018100000000106e-05, 2.204100000000042e-05, 2.2985999999999146e-05, 2.1084000000001074e-05, 2.1151999999999976e-05, 2.588899999999769e-05, 2.6820000000000316e-05, 2.5846999999998982e-05, 2.211100000000174e-05, 2.306900000000056e-05, 2.2041999999999895e-05, 2.2985999999999146e-05, 2.016699999999802e-05, 2.397300000000005e-05, 2.115300000000292e-05, 2.2055999999999465e-05, 2.2999999999998716e-05, 2.394500000000091e-05, 2.6874999999999122e-05, 2.0166000000002016e-05, 2.1151999999999976e-05, 2.2055999999999465e-05, 2.012499999999931e-05, 2.5834000000002355e-05, 2.495900000000148e-05, 2.59170000000003e-05, 2.3999999999999716e-05, 2.2041999999999895e-05, 2.3056000000000465e-05, 2.2098000000001644e-05, 2.1971999999998576e-05, 2.6820000000000316e-05, 2.0179999999998116e-05, 2.490299999999973e-05, 2.4027999999998856e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.422" endtime="20201029 12:44:28.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.417" endtime="20201029 12:44:28.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.429" endtime="20201029 12:44:28.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.427" endtime="20201029 12:44:28.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.426" endtime="20201029 12:44:28.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.063" endtime="20201029 12:44:28.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.063" endtime="20201029 12:44:28.450"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.459" endtime="20201029 12:44:28.479"></status>
</kw>
<msg timestamp="20201029 12:44:28.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.457" endtime="20201029 12:44:28.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.481" endtime="20201029 12:44:28.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.484" endtime="20201029 12:44:28.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.454" endtime="20201029 12:44:28.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.452" endtime="20201029 12:44:28.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.493" endtime="20201029 12:44:28.780"></status>
</kw>
<msg timestamp="20201029 12:44:28.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.491" endtime="20201029 12:44:28.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023186556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023196167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.785" endtime="20201029 12:44:28.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.793" endtime="20201029 12:44:28.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.489" endtime="20201029 12:44:28.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.487" endtime="20201029 12:44:28.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.800" level="INFO">${RESULT} = [{'diff': 9.610999999999648e-06}, {'diff': 2.4902000000000257e-05}, {'diff': 2.3014000000001755e-05}, {'diff': 2.3055999999996996e-05}, {'diff': 2.106900000000203e-05}, {'diff': 2.0165999999998546e-05...</msg>
<status status="PASS" starttime="20201029 12:44:28.797" endtime="20201029 12:44:28.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.804" level="INFO">${ACCURACY} = {'diff': [9.610999999999648e-06, 2.4902000000000257e-05, 2.3014000000001755e-05, 2.3055999999996996e-05, 2.106900000000203e-05, 2.0165999999998546e-05, 2.3957999999997537e-05, 2.3958000000001006e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:28.801" endtime="20201029 12:44:28.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.809" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.808" endtime="20201029 12:44:28.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.811" level="INFO">VALUE: [9.610999999999648e-06, 2.4902000000000257e-05, 2.3014000000001755e-05, 2.3055999999996996e-05, 2.106900000000203e-05, 2.0165999999998546e-05, 2.3957999999997537e-05, 2.3958000000001006e-05, 2.302700000000185e-05, 2.5888000000001687e-05, 2.393100000000134e-05, 2.012499999999931e-05, 2.112500000000031e-05, 2.590300000000073e-05, 2.1013999999999755e-05, 2.2958000000000006e-05, 2.0180000000001586e-05, 2.3999999999999716e-05, 2.204100000000042e-05, 2.2014000000000755e-05, 2.20969999999987e-05, 2.5833999999998886e-05, 2.394499999999744e-05, 2.488900000000016e-05, 2.3985999999996677e-05, 2.4972000000001576e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.6763000000002563e-05, 2.587500000000159e-05, 2.4957999999998537e-05, 2.4972000000001576e-05, 2.490299999999973e-05, 2.394500000000091e-05, 2.2985999999999146e-05, 2.20969999999987e-05, 2.10969999999977e-05, 2.012500000000278e-05, 2.5791999999996706e-05, 2.487500000000059e-05, 2.208299999999913e-05, 2.5874999999998122e-05, 2.488900000000016e-05, 2.6847999999999456e-05, 2.206899999999956e-05, 2.4958000000002006e-05, 2.2055999999999465e-05, 2.386100000000002e-05, 2.211099999999827e-05, 2.02090000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.810" endtime="20201029 12:44:28.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.805" endtime="20201029 12:44:28.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.817" endtime="20201029 12:44:28.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.815" endtime="20201029 12:44:28.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.814" endtime="20201029 12:44:28.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.451" endtime="20201029 12:44:28.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.450" endtime="20201029 12:44:28.837"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.846" endtime="20201029 12:44:28.872"></status>
</kw>
<msg timestamp="20201029 12:44:28.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.845" endtime="20201029 12:44:28.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.873" endtime="20201029 12:44:28.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.876" endtime="20201029 12:44:28.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.842" endtime="20201029 12:44:28.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.840" endtime="20201029 12:44:28.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.885" endtime="20201029 12:44:29.172"></status>
</kw>
<msg timestamp="20201029 12:44:29.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027386236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027444625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.884" endtime="20201029 12:44:29.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027386236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027444625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.177" endtime="20201029 12:44:29.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.185" endtime="20201029 12:44:29.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.881" endtime="20201029 12:44:29.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.879" endtime="20201029 12:44:29.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.192" level="INFO">${RESULT} = [{'diff': 5.838899999999897e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.172200000000057e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.189" endtime="20201029 12:44:29.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.196" level="INFO">${ACCURACY} = {'diff': [5.838899999999897e-05, 5.6514000000000564e-05, 5.261100000000102e-05, 5.26669999999993e-05, 5.262500000000059e-05, 5.172200000000057e-05, 5.276400000000028e-05, 5.5458000000001284e-05, 5.650...</msg>
<status status="PASS" starttime="20201029 12:44:29.193" endtime="20201029 12:44:29.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.201" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.200" endtime="20201029 12:44:29.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.203" level="INFO">VALUE: [5.838899999999897e-05, 5.6514000000000564e-05, 5.261100000000102e-05, 5.26669999999993e-05, 5.262500000000059e-05, 5.172200000000057e-05, 5.276400000000028e-05, 5.5458000000001284e-05, 5.6500000000000994e-05, 5.084799999999917e-05, 5.262500000000059e-05, 5.173600000000014e-05, 4.979199999999989e-05, 5.547300000000033e-05, 5.358399999999888e-05, 5.643100000000262e-05, 5.6514000000000564e-05, 5.6443999999999245e-05, 5.457000000000031e-05, 5.263900000000016e-05, 5.644499999999872e-05, 5.6541999999999704e-05, 5.451299999999909e-05, 5.372200000000257e-05, 5.647299999999786e-05, 5.265299999999973e-05, 5.5499999999999994e-05, 5.6513999999997094e-05, 5.4652000000002254e-05, 5.455600000000074e-05, 5.641699999999958e-05, 5.658300000000241e-05, 5.163899999999916e-05, 5.7471999999999385e-05, 5.254200000000264e-05, 5.557000000000131e-05, 5.640300000000001e-05, 5.641699999999958e-05, 5.082000000000003e-05, 5.640300000000001e-05, 5.552699999999966e-05, 5.259699999999798e-05, 5.365300000000073e-05, 5.545900000000076e-05, 5.647299999999786e-05, 5.462500000000259e-05, 5.6444000000002714e-05, 5.451400000000203e-05, 5.654100000000023e-05, 5.256999999999831e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.202" endtime="20201029 12:44:29.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.197" endtime="20201029 12:44:29.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.255" endtime="20201029 12:44:29.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.254" endtime="20201029 12:44:29.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.252" endtime="20201029 12:44:29.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.838" endtime="20201029 12:44:29.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.838" endtime="20201029 12:44:29.276"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.285" endtime="20201029 12:44:29.305"></status>
</kw>
<msg timestamp="20201029 12:44:29.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.283" endtime="20201029 12:44:29.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.307" endtime="20201029 12:44:29.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.309" endtime="20201029 12:44:29.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.281" endtime="20201029 12:44:29.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.279" endtime="20201029 12:44:29.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.319" endtime="20201029 12:44:29.605"></status>
</kw>
<msg timestamp="20201029 12:44:29.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020731917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020791319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.317" endtime="20201029 12:44:29.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020731917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020791319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.610" endtime="20201029 12:44:29.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.618" endtime="20201029 12:44:29.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.314" endtime="20201029 12:44:29.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.313" endtime="20201029 12:44:29.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.625" level="INFO">${RESULT} = [{'diff': 5.9402000000000066e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.5513999999999564e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.16669999999983e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.621" endtime="20201029 12:44:29.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.630" level="INFO">${ACCURACY} = {'diff': [5.9402000000000066e-05, 5.638900000000044e-05, 5.55549999999988e-05, 5.5513999999999564e-05, 5.365300000000073e-05, 5.16669999999983e-05, 5.741700000000058e-05, 5.557000000000131e-05, 5.3555...</msg>
<status status="PASS" starttime="20201029 12:44:29.627" endtime="20201029 12:44:29.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.634" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.633" endtime="20201029 12:44:29.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.637" level="INFO">VALUE: [5.9402000000000066e-05, 5.638900000000044e-05, 5.55549999999988e-05, 5.5513999999999564e-05, 5.365300000000073e-05, 5.16669999999983e-05, 5.741700000000058e-05, 5.557000000000131e-05, 5.355599999999974e-05, 5.45280000000016e-05, 5.5499999999999994e-05, 5.559700000000098e-05, 5.355500000000027e-05, 5.738899999999797e-05, 5.452699999999866e-05, 5.2735999999997674e-05, 5.452700000000213e-05, 5.5499999999999994e-05, 5.075000000000218e-05, 5.259800000000092e-05, 5.644499999999872e-05, 5.0708e-05, 5.361099999999855e-05, 5.259799999999745e-05, 5.072199999999957e-05, 5.273699999999715e-05, 5.6416000000000105e-05, 5.552699999999966e-05, 5.6500000000000994e-05, 5.163900000000263e-05, 5.1637999999999684e-05, 5.45280000000016e-05, 5.169400000000143e-05, 5.459699999999998e-05, 5.4458000000000284e-05, 5.263900000000016e-05, 5.5527999999999134e-05, 5.738900000000144e-05, 5.5513999999999564e-05, 5.363900000000116e-05, 5.458300000000041e-05, 5.359799999999845e-05, 5.361099999999855e-05, 5.363900000000116e-05, 5.261100000000102e-05, 5.265299999999973e-05, 5.272300000000105e-05, 5.545900000000076e-05, 5.358400000000235e-05, 5.5513999999999564e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.636" endtime="20201029 12:44:29.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.631" endtime="20201029 12:44:29.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.642" endtime="20201029 12:44:29.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.641" endtime="20201029 12:44:29.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.639" endtime="20201029 12:44:29.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.277" endtime="20201029 12:44:29.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.276" endtime="20201029 12:44:29.663"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.672" endtime="20201029 12:44:29.695"></status>
</kw>
<msg timestamp="20201029 12:44:29.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.670" endtime="20201029 12:44:29.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.697" endtime="20201029 12:44:29.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.699" endtime="20201029 12:44:29.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.668" endtime="20201029 12:44:29.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.666" endtime="20201029 12:44:29.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.709" endtime="20201029 12:44:29.994"></status>
</kw>
<msg timestamp="20201029 12:44:29.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025700431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025741639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.707" endtime="20201029 12:44:29.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025700431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025741639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.999" endtime="20201029 12:44:30.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.007" endtime="20201029 12:44:30.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.704" endtime="20201029 12:44:30.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.703" endtime="20201029 12:44:30.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.014" level="INFO">${RESULT} = [{'diff': 4.120800000000091e-05}, {'diff': 5.469500000000044e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.1665999999998824e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.6429999999999675e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:30.011" endtime="20201029 12:44:30.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.018" level="INFO">${ACCURACY} = {'diff': [4.120800000000091e-05, 5.469500000000044e-05, 5.5486000000000424e-05, 5.1665999999998824e-05, 5.459699999999998e-05, 5.6429999999999675e-05, 5.350000000000146e-05, 5.173600000000014e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 12:44:30.015" endtime="20201029 12:44:30.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.023" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.022" endtime="20201029 12:44:30.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.026" level="INFO">VALUE: [4.120800000000091e-05, 5.469500000000044e-05, 5.5486000000000424e-05, 5.1665999999998824e-05, 5.459699999999998e-05, 5.6429999999999675e-05, 5.350000000000146e-05, 5.173600000000014e-05, 5.643100000000262e-05, 5.174999999999971e-05, 5.640300000000001e-05, 5.450000000000246e-05, 5.172200000000057e-05, 5.45280000000016e-05, 5.647300000000133e-05, 5.641699999999958e-05, 5.5443999999998245e-05, 5.163900000000263e-05, 5.3666000000000824e-05, 5.163899999999916e-05, 5.641699999999958e-05, 5.16669999999983e-05, 5.547300000000033e-05, 5.270900000000148e-05, 5.45280000000016e-05, 5.169400000000143e-05, 5.6500000000000994e-05, 5.4527999999998134e-05, 5.0708e-05, 5.641699999999958e-05, 5.644499999999872e-05, 5.6443999999999245e-05, 5.452699999999866e-05, 5.6528000000000134e-05, 5.6402000000000535e-05, 4.981899999999956e-05, 5.26669999999993e-05, 5.455500000000127e-05, 5.262500000000059e-05, 5.451400000000203e-05, 5.6500000000000994e-05, 5.26669999999993e-05, 5.459699999999998e-05, 5.2693999999998964e-05, 5.174999999999971e-05, 5.355500000000027e-05, 5.1651999999999254e-05, 5.6528000000000134e-05, 5.16530000000022e-05, 5.159699999999698e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.024" endtime="20201029 12:44:30.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.019" endtime="20201029 12:44:30.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.032" endtime="20201029 12:44:30.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.030" endtime="20201029 12:44:30.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.029" endtime="20201029 12:44:30.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.664" endtime="20201029 12:44:30.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.663" endtime="20201029 12:44:30.053"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.061" endtime="20201029 12:44:30.083"></status>
</kw>
<msg timestamp="20201029 12:44:30.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.060" endtime="20201029 12:44:30.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.085" endtime="20201029 12:44:30.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.087" endtime="20201029 12:44:30.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.057" endtime="20201029 12:44:30.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.055" endtime="20201029 12:44:30.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.097" endtime="20201029 12:44:30.383"></status>
</kw>
<msg timestamp="20201029 12:44:30.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.095" endtime="20201029 12:44:30.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023123833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.387" endtime="20201029 12:44:30.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.396" endtime="20201029 12:44:30.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.092" endtime="20201029 12:44:30.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.090" endtime="20201029 12:44:30.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.402" level="INFO">${RESULT} = [{'diff': 5.5499999999999994e-05}, {'diff': 5.456899999999737e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.6457999999998815e-05}, {'diff': 5.5471999999997385e-05}, {'diff': 5.079200000000089e-05...</msg>
<status status="PASS" starttime="20201029 12:44:30.399" endtime="20201029 12:44:30.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.407" level="INFO">${ACCURACY} = {'diff': [5.5499999999999994e-05, 5.456899999999737e-05, 5.6472000000001854e-05, 5.6457999999998815e-05, 5.5471999999997385e-05, 5.079200000000089e-05, 5.7457999999999815e-05, 5.068100000000034e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:30.403" endtime="20201029 12:44:30.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.412" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.411" endtime="20201029 12:44:30.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.415" level="INFO">VALUE: [5.5499999999999994e-05, 5.456899999999737e-05, 5.6472000000001854e-05, 5.6457999999998815e-05, 5.5471999999997385e-05, 5.079200000000089e-05, 5.7457999999999815e-05, 5.068100000000034e-05, 5.6500000000000994e-05, 5.361100000000202e-05, 5.644500000000219e-05, 5.076400000000175e-05, 5.0709000000002946e-05, 5.362499999999812e-05, 5.354200000000017e-05, 5.172300000000005e-05, 5.5527999999999134e-05, 5.5444000000001714e-05, 5.361099999999855e-05, 5.559700000000098e-05, 5.069499999999991e-05, 5.458300000000041e-05, 5.2708000000002e-05, 5.072199999999957e-05, 5.743100000000015e-05, 5.070899999999948e-05, 5.6499999999997524e-05, 5.6541999999999704e-05, 5.359700000000245e-05, 5.172300000000005e-05, 5.455600000000074e-05, 5.2665999999999824e-05, 5.269500000000191e-05, 5.355599999999974e-05, 5.362500000000159e-05, 5.459699999999998e-05, 5.1666000000002293e-05, 5.556899999999837e-05, 5.261100000000102e-05, 5.6500000000000994e-05, 5.0665999999997824e-05, 5.077800000000132e-05, 5.741700000000058e-05, 5.077800000000132e-05, 5.26669999999993e-05, 5.268100000000234e-05, 5.159700000000045e-05, 5.266700000000277e-05, 5.265299999999973e-05, 5.173699999999962e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.413" endtime="20201029 12:44:30.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.408" endtime="20201029 12:44:30.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.420" endtime="20201029 12:44:30.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.418" endtime="20201029 12:44:30.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.417" endtime="20201029 12:44:30.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.053" endtime="20201029 12:44:30.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.053" endtime="20201029 12:44:30.441"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.450" endtime="20201029 12:44:30.470"></status>
</kw>
<msg timestamp="20201029 12:44:30.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.448" endtime="20201029 12:44:30.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.471" endtime="20201029 12:44:30.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.474" endtime="20201029 12:44:30.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.445" endtime="20201029 12:44:30.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.443" endtime="20201029 12:44:30.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.483" endtime="20201029 12:44:30.770"></status>
</kw>
<msg timestamp="20201029 12:44:30.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.482" endtime="20201029 12:44:30.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021751319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021818319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.774" endtime="20201029 12:44:30.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.783" endtime="20201029 12:44:30.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.479" endtime="20201029 12:44:30.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.477" endtime="20201029 12:44:30.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.790" level="INFO">${RESULT} = [{'diff': 6.699999999999762e-05}, {'diff': 5.076300000000228e-05}, {'diff': 5.077799999999785e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.268100000000234e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:30.786" endtime="20201029 12:44:30.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.794" level="INFO">${ACCURACY} = {'diff': [6.699999999999762e-05, 5.076300000000228e-05, 5.077799999999785e-05, 5.740300000000101e-05, 5.265299999999973e-05, 5.268100000000234e-05, 5.356899999999984e-05, 5.459699999999998e-05, 5.3568...</msg>
<status status="PASS" starttime="20201029 12:44:30.791" endtime="20201029 12:44:30.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.799" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.798" endtime="20201029 12:44:30.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.801" level="INFO">VALUE: [6.699999999999762e-05, 5.076300000000228e-05, 5.077799999999785e-05, 5.740300000000101e-05, 5.265299999999973e-05, 5.268100000000234e-05, 5.356899999999984e-05, 5.459699999999998e-05, 5.356899999999984e-05, 5.5443999999998245e-05, 5.26669999999993e-05, 5.2693999999998964e-05, 5.263900000000016e-05, 5.6485999999997955e-05, 5.643099999999915e-05, 5.2708000000002e-05, 5.643100000000262e-05, 5.355599999999974e-05, 5.359799999999845e-05, 5.165299999999873e-05, 5.459699999999998e-05, 5.258299999999841e-05, 5.172200000000057e-05, 5.465299999999826e-05, 5.5486000000000424e-05, 5.2721999999998104e-05, 5.741700000000058e-05, 5.456900000000084e-05, 5.6416000000000105e-05, 5.180500000000199e-05, 5.161100000000002e-05, 5.456900000000084e-05, 5.643099999999915e-05, 5.363900000000116e-05, 5.069499999999991e-05, 5.273600000000114e-05, 5.174999999999971e-05, 5.5444000000001714e-05, 5.7500000000001994e-05, 5.166700000000177e-05, 5.457000000000031e-05, 5.0708e-05, 5.557000000000131e-05, 5.077800000000132e-05, 5.6429999999999675e-05, 5.4485999999999424e-05, 5.358399999999888e-05, 5.738900000000144e-05, 5.554200000000217e-05, 5.259700000000145e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.800" endtime="20201029 12:44:30.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.795" endtime="20201029 12:44:30.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.811" endtime="20201029 12:44:30.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.809" endtime="20201029 12:44:30.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.808" endtime="20201029 12:44:30.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.442" endtime="20201029 12:44:30.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.441" endtime="20201029 12:44:30.832"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.841" endtime="20201029 12:44:30.861"></status>
</kw>
<msg timestamp="20201029 12:44:30.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.839" endtime="20201029 12:44:30.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.863" endtime="20201029 12:44:30.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.865" endtime="20201029 12:44:30.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.836" endtime="20201029 12:44:30.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.834" endtime="20201029 12:44:30.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.875" endtime="20201029 12:44:31.161"></status>
</kw>
<msg timestamp="20201029 12:44:31.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.873" endtime="20201029 12:44:31.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022770514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.165" endtime="20201029 12:44:31.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.173" endtime="20201029 12:44:31.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.870" endtime="20201029 12:44:31.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.869" endtime="20201029 12:44:31.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.180" level="INFO">${RESULT} = [{'diff': 4.120799999999744e-05}, {'diff': 5.269400000000243e-05}, {'diff': 5.0709000000002946e-05}, {'diff': 5.6569999999998843e-05}, {'diff': 5.355599999999974e-05}, {'diff': 5.461099999999955e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:31.177" endtime="20201029 12:44:31.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.185" level="INFO">${ACCURACY} = {'diff': [4.120799999999744e-05, 5.269400000000243e-05, 5.0709000000002946e-05, 5.6569999999998843e-05, 5.355599999999974e-05, 5.461099999999955e-05, 5.5444000000001714e-05, 5.174999999999971e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 12:44:31.181" endtime="20201029 12:44:31.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.190" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.189" endtime="20201029 12:44:31.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.194" level="INFO">VALUE: [4.120799999999744e-05, 5.269400000000243e-05, 5.0709000000002946e-05, 5.6569999999998843e-05, 5.355599999999974e-05, 5.461099999999955e-05, 5.5444000000001714e-05, 5.174999999999971e-05, 5.3651999999997785e-05, 5.256900000000231e-05, 5.6500000000000994e-05, 5.1637999999999684e-05, 5.269499999999844e-05, 5.3693999999999964e-05, 5.261099999999755e-05, 5.461099999999955e-05, 5.462499999999912e-05, 5.544499999999772e-05, 5.073600000000261e-05, 5.5555999999998273e-05, 5.543100000000162e-05, 5.081900000000056e-05, 5.079100000000142e-05, 5.263900000000016e-05, 5.5541999999998704e-05, 5.257000000000178e-05, 5.5541999999998704e-05, 5.259699999999798e-05, 5.077800000000132e-05, 5.165299999999873e-05, 5.558400000000088e-05, 5.452700000000213e-05, 5.2693999999998964e-05, 5.168000000000186e-05, 5.561100000000055e-05, 5.076400000000175e-05, 5.6541999999999704e-05, 5.165299999999873e-05, 5.5486000000000424e-05, 5.556900000000184e-05, 5.452699999999866e-05, 5.173600000000014e-05, 5.644500000000219e-05, 5.461099999999955e-05, 5.162499999999959e-05, 5.463899999999869e-05, 5.068000000000086e-05, 5.363900000000116e-05, 5.6541999999999704e-05, 5.258299999999841e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.191" endtime="20201029 12:44:31.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.186" endtime="20201029 12:44:31.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.199" endtime="20201029 12:44:31.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.198" endtime="20201029 12:44:31.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.197" endtime="20201029 12:44:31.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.833" endtime="20201029 12:44:31.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.832" endtime="20201029 12:44:31.220"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.229" endtime="20201029 12:44:31.253"></status>
</kw>
<msg timestamp="20201029 12:44:31.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.228" endtime="20201029 12:44:31.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.254" endtime="20201029 12:44:31.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.257" endtime="20201029 12:44:31.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.225" endtime="20201029 12:44:31.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.223" endtime="20201029 12:44:31.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.266" endtime="20201029 12:44:31.552"></status>
</kw>
<msg timestamp="20201029 12:44:31.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02087075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020914847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:31.265" endtime="20201029 12:44:31.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02087075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020914847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:31.557" endtime="20201029 12:44:31.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.565" endtime="20201029 12:44:31.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.262" endtime="20201029 12:44:31.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.260" endtime="20201029 12:44:31.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.572" level="INFO">${RESULT} = [{'diff': 4.4096999999999886e-05}, {'diff': 5.259699999999798e-05}, {'diff': 5.176399999999928e-05}, {'diff': 5.45410000000017e-05}, {'diff': 5.36670000000003e-05}, {'diff': 5.5430000000002144e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:31.568" endtime="20201029 12:44:31.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.577" level="INFO">${ACCURACY} = {'diff': [4.4096999999999886e-05, 5.259699999999798e-05, 5.176399999999928e-05, 5.45410000000017e-05, 5.36670000000003e-05, 5.5430000000002144e-05, 5.163899999999916e-05, 5.369499999999944e-05, 5.4513...</msg>
<status status="PASS" starttime="20201029 12:44:31.573" endtime="20201029 12:44:31.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.582" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.581" endtime="20201029 12:44:31.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.584" level="INFO">VALUE: [4.4096999999999886e-05, 5.259699999999798e-05, 5.176399999999928e-05, 5.45410000000017e-05, 5.36670000000003e-05, 5.5430000000002144e-05, 5.163899999999916e-05, 5.369499999999944e-05, 5.4513999999998564e-05, 5.077799999999785e-05, 5.6486000000001424e-05, 5.3721999999999104e-05, 5.0693999999996964e-05, 5.459799999999945e-05, 5.355599999999974e-05, 5.2721999999998104e-05, 5.5472000000000854e-05, 5.16669999999983e-05, 5.174999999999971e-05, 5.6429999999999675e-05, 5.176399999999928e-05, 5.6388000000000965e-05, 5.2680000000002863e-05, 5.354200000000017e-05, 5.641699999999958e-05, 5.3680000000000394e-05, 5.255600000000221e-05, 5.556899999999837e-05, 5.63480000000012e-05, 5.6500000000000994e-05, 5.641699999999958e-05, 5.558299999999794e-05, 5.354099999999723e-05, 5.6485999999997955e-05, 5.356899999999984e-05, 5.2679999999999394e-05, 5.262499999999712e-05, 5.2679999999999394e-05, 5.172200000000057e-05, 5.4513999999998564e-05, 5.080600000000046e-05, 5.641699999999958e-05, 5.558300000000141e-05, 5.455600000000074e-05, 5.261099999999755e-05, 5.363900000000116e-05, 5.256899999999884e-05, 5.5527999999999134e-05, 5.077799999999785e-05, 5.45280000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.583" endtime="20201029 12:44:31.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.578" endtime="20201029 12:44:31.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.589" endtime="20201029 12:44:31.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.588" endtime="20201029 12:44:31.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.587" endtime="20201029 12:44:31.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.221" endtime="20201029 12:44:31.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.221" endtime="20201029 12:44:31.610"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.619" endtime="20201029 12:44:31.640"></status>
</kw>
<msg timestamp="20201029 12:44:31.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.618" endtime="20201029 12:44:31.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.641" endtime="20201029 12:44:31.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.644" endtime="20201029 12:44:31.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.615" endtime="20201029 12:44:31.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.613" endtime="20201029 12:44:31.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.653" endtime="20201029 12:44:31.940"></status>
</kw>
<msg timestamp="20201029 12:44:31.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.651" endtime="20201029 12:44:31.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.944" endtime="20201029 12:44:31.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.953" endtime="20201029 12:44:31.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.649" endtime="20201029 12:44:31.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.647" endtime="20201029 12:44:31.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.959" level="INFO">${RESULT} = [{'diff': 5.173600000000014e-05}, {'diff': 5.172200000000057e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.6443999999999245e-05}, {'diff': 5.362499999999812e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:31.956" endtime="20201029 12:44:31.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.964" level="INFO">${ACCURACY} = {'diff': [5.173600000000014e-05, 5.172200000000057e-05, 5.262500000000059e-05, 5.362500000000159e-05, 5.6443999999999245e-05, 5.362499999999812e-05, 5.5499999999999994e-05, 5.6514000000000564e-05, 5.1...</msg>
<status status="PASS" starttime="20201029 12:44:31.960" endtime="20201029 12:44:31.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.968" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.967" endtime="20201029 12:44:31.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.971" level="INFO">VALUE: [5.173600000000014e-05, 5.172200000000057e-05, 5.262500000000059e-05, 5.362500000000159e-05, 5.6443999999999245e-05, 5.362499999999812e-05, 5.5499999999999994e-05, 5.6514000000000564e-05, 5.168099999999787e-05, 5.465299999999826e-05, 5.543100000000162e-05, 5.26669999999993e-05, 5.645899999999829e-05, 5.5527999999999134e-05, 5.447299999999933e-05, 5.172200000000057e-05, 5.3680000000000394e-05, 5.356899999999984e-05, 5.6499999999997524e-05, 5.079200000000089e-05, 5.06530000000012e-05, 5.3638000000001684e-05, 5.4513999999998564e-05, 5.077700000000185e-05, 5.6541999999999704e-05, 5.069400000000043e-05, 5.4513999999998564e-05, 5.5513999999999564e-05, 5.5443999999998245e-05, 5.1708000000001e-05, 5.3652000000001254e-05, 5.5499999999999994e-05, 5.6429999999999675e-05, 5.077700000000185e-05, 5.73749999999984e-05, 5.2693999999998964e-05, 5.5555999999998273e-05, 5.358399999999888e-05, 5.362500000000159e-05, 5.4485999999999424e-05, 5.459699999999998e-05, 5.161100000000002e-05, 5.076400000000175e-05, 5.163899999999916e-05, 5.268099999999887e-05, 5.076399999999828e-05, 5.63749999999974e-05, 5.076400000000175e-05, 5.272200000000157e-05, 5.557000000000131e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.969" endtime="20201029 12:44:31.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.965" endtime="20201029 12:44:31.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.976" endtime="20201029 12:44:31.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.975" endtime="20201029 12:44:31.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.973" endtime="20201029 12:44:31.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.611" endtime="20201029 12:44:31.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.611" endtime="20201029 12:44:31.997"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.006" endtime="20201029 12:44:32.026"></status>
</kw>
<msg timestamp="20201029 12:44:32.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.005" endtime="20201029 12:44:32.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.028" endtime="20201029 12:44:32.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.030" endtime="20201029 12:44:32.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.002" endtime="20201029 12:44:32.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.000" endtime="20201029 12:44:32.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.040" endtime="20201029 12:44:32.325"></status>
</kw>
<msg timestamp="20201029 12:44:32.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:32.038" endtime="20201029 12:44:32.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:32.329" endtime="20201029 12:44:32.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.338" endtime="20201029 12:44:32.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.035" endtime="20201029 12:44:32.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.034" endtime="20201029 12:44:32.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.345" level="INFO">${RESULT} = [{'diff': 6.501400000000213e-05}, {'diff': 5.0709000000002946e-05}, {'diff': 5.456900000000084e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.1708000000001e-05}, {'diff': 5.072199999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:32.341" endtime="20201029 12:44:32.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.349" level="INFO">${ACCURACY} = {'diff': [6.501400000000213e-05, 5.0709000000002946e-05, 5.456900000000084e-05, 5.265299999999973e-05, 5.1708000000001e-05, 5.072199999999957e-05, 5.262500000000059e-05, 5.263900000000016e-05, 5.55550...</msg>
<status status="PASS" starttime="20201029 12:44:32.346" endtime="20201029 12:44:32.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.354" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.353" endtime="20201029 12:44:32.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.357" level="INFO">VALUE: [6.501400000000213e-05, 5.0709000000002946e-05, 5.456900000000084e-05, 5.265299999999973e-05, 5.1708000000001e-05, 5.072199999999957e-05, 5.262500000000059e-05, 5.263900000000016e-05, 5.555500000000227e-05, 5.743100000000015e-05, 5.262500000000059e-05, 5.461100000000302e-05, 5.6500000000000994e-05, 5.076399999999828e-05, 5.176299999999981e-05, 5.172200000000057e-05, 5.4499999999998994e-05, 5.558400000000088e-05, 5.1652000000002724e-05, 5.258400000000135e-05, 5.36670000000003e-05, 5.2652000000000254e-05, 5.740299999999754e-05, 5.170900000000048e-05, 5.459699999999998e-05, 5.558300000000141e-05, 5.352700000000113e-05, 5.456900000000084e-05, 5.076400000000175e-05, 5.5541999999998704e-05, 5.362500000000159e-05, 5.265299999999973e-05, 5.461099999999955e-05, 5.36670000000003e-05, 5.172200000000057e-05, 5.174999999999971e-05, 5.45549999999978e-05, 5.361099999999855e-05, 5.359800000000192e-05, 5.169500000000091e-05, 5.45280000000016e-05, 5.166700000000177e-05, 5.6541999999999704e-05, 5.45410000000017e-05, 5.26669999999993e-05, 5.655600000000274e-05, 5.1665999999998824e-05, 5.455500000000127e-05, 5.369500000000291e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.355" endtime="20201029 12:44:32.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.350" endtime="20201029 12:44:32.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.362" endtime="20201029 12:44:32.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.361" endtime="20201029 12:44:32.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.359" endtime="20201029 12:44:32.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.998" endtime="20201029 12:44:32.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.997" endtime="20201029 12:44:32.383"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.392" endtime="20201029 12:44:32.415"></status>
</kw>
<msg timestamp="20201029 12:44:32.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.390" endtime="20201029 12:44:32.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.417" endtime="20201029 12:44:32.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.419" endtime="20201029 12:44:32.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.388" endtime="20201029 12:44:32.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.386" endtime="20201029 12:44:32.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.429" endtime="20201029 12:44:32.715"></status>
</kw>
<msg timestamp="20201029 12:44:32.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023598014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.427" endtime="20201029 12:44:32.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023598014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023651569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.719" endtime="20201029 12:44:32.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.727" endtime="20201029 12:44:32.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.424" endtime="20201029 12:44:32.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.422" endtime="20201029 12:44:32.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.734" level="INFO">${RESULT} = [{'diff': 5.355500000000027e-05}, {'diff': 5.45280000000016e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.165299999999873e-05}, {'diff': 5.180500000000199e-05}, {'diff': 5.073599999999914e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:32.731" endtime="20201029 12:44:32.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.741" level="INFO">${ACCURACY} = {'diff': [5.355500000000027e-05, 5.45280000000016e-05, 5.462499999999912e-05, 5.165299999999873e-05, 5.180500000000199e-05, 5.073599999999914e-05, 5.4513999999998564e-05, 5.259699999999798e-05, 5.2611...</msg>
<status status="PASS" starttime="20201029 12:44:32.735" endtime="20201029 12:44:32.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.746" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.745" endtime="20201029 12:44:32.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.749" level="INFO">VALUE: [5.355500000000027e-05, 5.45280000000016e-05, 5.462499999999912e-05, 5.165299999999873e-05, 5.180500000000199e-05, 5.073599999999914e-05, 5.4513999999998564e-05, 5.259699999999798e-05, 5.261100000000102e-05, 5.169499999999744e-05, 5.365300000000073e-05, 5.5416000000002574e-05, 5.461099999999955e-05, 5.070899999999948e-05, 5.365300000000073e-05, 5.163899999999916e-05, 5.459699999999998e-05, 5.45410000000017e-05, 5.3485999999998424e-05, 5.651299999999762e-05, 5.259699999999798e-05, 5.356899999999984e-05, 5.6514000000000564e-05, 5.6429999999999675e-05, 5.262500000000059e-05, 5.558400000000088e-05, 5.6528000000000134e-05, 5.547300000000033e-05, 5.461099999999955e-05, 5.543099999999815e-05, 5.5472000000000854e-05, 5.1708000000001e-05, 5.45280000000016e-05, 5.26669999999993e-05, 5.6416000000000105e-05, 5.261100000000102e-05, 5.358299999999941e-05, 5.163899999999916e-05, 5.168000000000186e-05, 5.361099999999855e-05, 5.168100000000134e-05, 5.076400000000175e-05, 5.361099999999855e-05, 5.265299999999973e-05, 5.173600000000014e-05, 5.258300000000188e-05, 5.351400000000103e-05, 5.173600000000014e-05, 5.4485999999999424e-05, 5.069499999999991e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.747" endtime="20201029 12:44:32.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.742" endtime="20201029 12:44:32.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.754" endtime="20201029 12:44:32.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.752" endtime="20201029 12:44:32.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.751" endtime="20201029 12:44:32.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.384" endtime="20201029 12:44:32.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.383" endtime="20201029 12:44:32.775"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.784" endtime="20201029 12:44:32.806"></status>
</kw>
<msg timestamp="20201029 12:44:32.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.782" endtime="20201029 12:44:32.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.807" endtime="20201029 12:44:32.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.810" endtime="20201029 12:44:32.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.779" endtime="20201029 12:44:32.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.777" endtime="20201029 12:44:32.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.819" endtime="20201029 12:44:33.107"></status>
</kw>
<msg timestamp="20201029 12:44:33.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024054042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.818" endtime="20201029 12:44:33.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023987056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024054042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.111" endtime="20201029 12:44:33.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.119" endtime="20201029 12:44:33.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.815" endtime="20201029 12:44:33.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.813" endtime="20201029 12:44:33.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.126" level="INFO">${RESULT} = [{'diff': 6.698600000000152e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.2652000000000254e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.556999999999784e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:33.123" endtime="20201029 12:44:33.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.130" level="INFO">${ACCURACY} = {'diff': [6.698600000000152e-05, 5.072199999999957e-05, 5.174999999999971e-05, 5.2652000000000254e-05, 5.263900000000016e-05, 5.556999999999784e-05, 5.176399999999928e-05, 5.2652000000000254e-05, 5.46...</msg>
<status status="PASS" starttime="20201029 12:44:33.127" endtime="20201029 12:44:33.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.135" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.134" endtime="20201029 12:44:33.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.137" level="INFO">VALUE: [6.698600000000152e-05, 5.072199999999957e-05, 5.174999999999971e-05, 5.2652000000000254e-05, 5.263900000000016e-05, 5.556999999999784e-05, 5.176399999999928e-05, 5.2652000000000254e-05, 5.462500000000259e-05, 5.462499999999912e-05, 5.265299999999973e-05, 5.5541999999998704e-05, 5.46670000000013e-05, 5.36670000000003e-05, 5.2679999999999394e-05, 5.172200000000057e-05, 5.356899999999984e-05, 5.176399999999928e-05, 5.173600000000014e-05, 5.1708000000001e-05, 5.361099999999855e-05, 5.173600000000014e-05, 5.552699999999966e-05, 5.459699999999998e-05, 5.174999999999971e-05, 5.558400000000088e-05, 5.068100000000034e-05, 5.269500000000191e-05, 5.55549999999988e-05, 5.262500000000059e-05, 5.6485999999997955e-05, 5.645899999999829e-05, 5.5499999999999994e-05, 5.457000000000031e-05, 5.3666000000000824e-05, 5.7513999999998094e-05, 5.265299999999973e-05, 5.459799999999945e-05, 5.166700000000177e-05, 5.076399999999828e-05, 5.272300000000105e-05, 5.070899999999948e-05, 5.459699999999998e-05, 5.076400000000175e-05, 5.261099999999755e-05, 5.365300000000073e-05, 5.074999999999871e-05, 5.557000000000131e-05, 5.561100000000055e-05, 5.4513999999998564e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.136" endtime="20201029 12:44:33.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.131" endtime="20201029 12:44:33.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.143" endtime="20201029 12:44:33.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.141" endtime="20201029 12:44:33.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.140" endtime="20201029 12:44:33.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.776" endtime="20201029 12:44:33.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.775" endtime="20201029 12:44:33.164"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.172" endtime="20201029 12:44:33.192"></status>
</kw>
<msg timestamp="20201029 12:44:33.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.171" endtime="20201029 12:44:33.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.194" endtime="20201029 12:44:33.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.196" endtime="20201029 12:44:33.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.168" endtime="20201029 12:44:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.166" endtime="20201029 12:44:33.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.206" endtime="20201029 12:44:33.491"></status>
</kw>
<msg timestamp="20201029 12:44:33.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.204" endtime="20201029 12:44:33.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.495" endtime="20201029 12:44:33.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.503" endtime="20201029 12:44:33.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.201" endtime="20201029 12:44:33.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.200" endtime="20201029 12:44:33.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.510" level="INFO">${RESULT} = [{'diff': 4.980599999999946e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.7443999999996775e-05}, {'diff': 5.1707999999997534e-05}, {'diff': 5.168099999999787e-05}, {'diff': 5.172200000000057e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:33.507" endtime="20201029 12:44:33.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.514" level="INFO">${ACCURACY} = {'diff': [4.980599999999946e-05, 5.361099999999855e-05, 5.7443999999996775e-05, 5.1707999999997534e-05, 5.168099999999787e-05, 5.172200000000057e-05, 5.0708e-05, 5.263900000000016e-05, 5.0792000000000...</msg>
<status status="PASS" starttime="20201029 12:44:33.511" endtime="20201029 12:44:33.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.519" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.518" endtime="20201029 12:44:33.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.522" level="INFO">VALUE: [4.980599999999946e-05, 5.361099999999855e-05, 5.7443999999996775e-05, 5.1707999999997534e-05, 5.168099999999787e-05, 5.172200000000057e-05, 5.0708e-05, 5.263900000000016e-05, 5.079200000000089e-05, 5.6499999999997524e-05, 5.074999999999871e-05, 5.5541999999998704e-05, 5.356899999999984e-05, 5.258300000000188e-05, 5.5513999999999564e-05, 5.168100000000134e-05, 5.2665999999999824e-05, 5.262500000000059e-05, 5.072200000000304e-05, 5.0679999999997394e-05, 5.1679999999998394e-05, 5.1651999999999254e-05, 5.552699999999966e-05, 5.172300000000005e-05, 5.452700000000213e-05, 5.5444000000001714e-05, 5.6486000000001424e-05, 5.6457999999998815e-05, 5.5527999999999134e-05, 5.077699999999838e-05, 5.643099999999915e-05, 5.458299999999694e-05, 5.362500000000159e-05, 5.640300000000001e-05, 5.6500000000000994e-05, 5.262500000000059e-05, 5.1637999999999684e-05, 5.358299999999941e-05, 5.6416000000000105e-05, 5.647299999999786e-05, 5.5486000000000424e-05, 5.6443999999999245e-05, 5.459699999999998e-05, 5.356999999999931e-05, 5.637500000000087e-05, 5.741700000000058e-05, 5.5527999999999134e-05, 5.163899999999916e-05, 5.073599999999914e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.520" endtime="20201029 12:44:33.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.515" endtime="20201029 12:44:33.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.528" endtime="20201029 12:44:33.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.526" endtime="20201029 12:44:33.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.525" endtime="20201029 12:44:33.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.164" endtime="20201029 12:44:33.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.164" endtime="20201029 12:44:33.548"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.557" endtime="20201029 12:44:33.579"></status>
</kw>
<msg timestamp="20201029 12:44:33.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.556" endtime="20201029 12:44:33.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.581" endtime="20201029 12:44:33.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.583" endtime="20201029 12:44:33.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.553" endtime="20201029 12:44:33.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.551" endtime="20201029 12:44:33.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.593" endtime="20201029 12:44:33.880"></status>
</kw>
<msg timestamp="20201029 12:44:33.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023784889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.591" endtime="20201029 12:44:33.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023784889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023853722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.884" endtime="20201029 12:44:33.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.893" endtime="20201029 12:44:33.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.588" endtime="20201029 12:44:33.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.586" endtime="20201029 12:44:33.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.899" level="INFO">${RESULT} = [{'diff': 6.883300000000078e-05}, {'diff': 5.361200000000149e-05}, {'diff': 5.744499999999972e-05}, {'diff': 5.5443999999998245e-05}, {'diff': 5.740300000000101e-05}, {'diff': 5.5513999999999564e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:33.896" endtime="20201029 12:44:33.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.904" level="INFO">${ACCURACY} = {'diff': [6.883300000000078e-05, 5.361200000000149e-05, 5.744499999999972e-05, 5.5443999999998245e-05, 5.740300000000101e-05, 5.5513999999999564e-05, 5.55549999999988e-05, 5.262500000000059e-05, 5.363...</msg>
<status status="PASS" starttime="20201029 12:44:33.900" endtime="20201029 12:44:33.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.909" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.908" endtime="20201029 12:44:33.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.912" level="INFO">VALUE: [6.883300000000078e-05, 5.361200000000149e-05, 5.744499999999972e-05, 5.5443999999998245e-05, 5.740300000000101e-05, 5.5513999999999564e-05, 5.55549999999988e-05, 5.262500000000059e-05, 5.363900000000116e-05, 5.5499999999999994e-05, 5.361100000000202e-05, 5.55280000000026e-05, 5.081900000000056e-05, 5.163899999999916e-05, 5.169500000000091e-05, 5.5527999999999134e-05, 5.5499999999999994e-05, 5.258399999999788e-05, 5.556899999999837e-05, 5.461099999999955e-05, 5.069499999999991e-05, 5.454200000000117e-05, 5.0708e-05, 5.5499999999999994e-05, 5.26669999999993e-05, 5.6471999999998385e-05, 5.5513999999999564e-05, 5.456899999999737e-05, 5.074999999999871e-05, 5.361100000000202e-05, 5.361099999999855e-05, 5.262500000000059e-05, 5.262500000000059e-05, 5.163899999999916e-05, 5.456900000000084e-05, 5.6541999999999704e-05, 5.5458000000001284e-05, 5.354200000000017e-05, 5.2721999999998104e-05, 5.174999999999971e-05, 5.6485999999997955e-05, 5.6486000000001424e-05, 5.177799999999885e-05, 5.1679999999998394e-05, 5.7444000000000245e-05, 5.075000000000218e-05, 5.359700000000245e-05, 5.5513999999999564e-05, 5.261099999999755e-05, 5.363900000000116e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.910" endtime="20201029 12:44:33.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.905" endtime="20201029 12:44:33.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.917" endtime="20201029 12:44:33.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.915" endtime="20201029 12:44:33.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.914" endtime="20201029 12:44:33.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.549" endtime="20201029 12:44:33.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.549" endtime="20201029 12:44:33.938"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.947" endtime="20201029 12:44:33.966"></status>
</kw>
<msg timestamp="20201029 12:44:33.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.945" endtime="20201029 12:44:33.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.967" endtime="20201029 12:44:33.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.970" endtime="20201029 12:44:33.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.942" endtime="20201029 12:44:33.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.940" endtime="20201029 12:44:33.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.979" endtime="20201029 12:44:34.266"></status>
</kw>
<msg timestamp="20201029 12:44:34.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.978" endtime="20201029 12:44:34.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021433181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021480097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.270" endtime="20201029 12:44:34.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.279" endtime="20201029 12:44:34.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.975" endtime="20201029 12:44:34.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.973" endtime="20201029 12:44:34.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.286" level="INFO">${RESULT} = [{'diff': 4.691600000000101e-05}, {'diff': 5.644500000000219e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.5527999999999134e-05}, {'diff': 5.6471999999998385e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:34.282" endtime="20201029 12:44:34.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.290" level="INFO">${ACCURACY} = {'diff': [4.691600000000101e-05, 5.644500000000219e-05, 5.6500000000000994e-05, 5.354200000000017e-05, 5.5527999999999134e-05, 5.6471999999998385e-05, 5.4499999999998994e-05, 5.5443999999998245e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:34.287" endtime="20201029 12:44:34.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.295" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.294" endtime="20201029 12:44:34.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.297" level="INFO">VALUE: [4.691600000000101e-05, 5.644500000000219e-05, 5.6500000000000994e-05, 5.354200000000017e-05, 5.5527999999999134e-05, 5.6471999999998385e-05, 5.4499999999998994e-05, 5.5443999999998245e-05, 5.077800000000132e-05, 5.5541999999998704e-05, 5.356999999999931e-05, 5.743100000000015e-05, 5.451300000000256e-05, 5.454200000000117e-05, 5.074999999999871e-05, 5.262500000000059e-05, 5.166700000000177e-05, 5.6472000000001854e-05, 5.075000000000218e-05, 5.355599999999974e-05, 5.165299999999873e-05, 5.5472000000000854e-05, 5.263900000000016e-05, 5.7457999999999815e-05, 5.165299999999873e-05, 5.359800000000192e-05, 5.456899999999737e-05, 5.738900000000144e-05, 5.170900000000048e-05, 5.6485999999997955e-05, 5.5458000000001284e-05, 5.172200000000057e-05, 5.459799999999945e-05, 5.7444000000000245e-05, 5.455500000000127e-05, 5.4527999999998134e-05, 5.362500000000159e-05, 5.651300000000109e-05, 5.559699999999751e-05, 5.7430000000000675e-05, 5.172200000000057e-05, 5.162499999999959e-05, 5.451400000000203e-05, 5.6485999999997955e-05, 5.5513999999999564e-05, 5.363900000000116e-05, 5.6443999999999245e-05, 5.5486000000000424e-05, 5.456899999999737e-05, 5.645899999999829e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.296" endtime="20201029 12:44:34.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.291" endtime="20201029 12:44:34.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.303" endtime="20201029 12:44:34.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.301" endtime="20201029 12:44:34.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.300" endtime="20201029 12:44:34.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.939" endtime="20201029 12:44:34.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.938" endtime="20201029 12:44:34.323"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.332" endtime="20201029 12:44:34.352"></status>
</kw>
<msg timestamp="20201029 12:44:34.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.331" endtime="20201029 12:44:34.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.354" endtime="20201029 12:44:34.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.356" endtime="20201029 12:44:34.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.328" endtime="20201029 12:44:34.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.326" endtime="20201029 12:44:34.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.366" endtime="20201029 12:44:34.651"></status>
</kw>
<msg timestamp="20201029 12:44:34.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.364" endtime="20201029 12:44:34.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.655" endtime="20201029 12:44:34.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.664" endtime="20201029 12:44:34.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.361" endtime="20201029 12:44:34.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.360" endtime="20201029 12:44:34.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.671" level="INFO">${RESULT} = [{'diff': 6.888899999999906e-05}, {'diff': 5.555600000000174e-05}, {'diff': 5.168000000000186e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.736099999999883e-05}, {'diff': 5.177799999999885e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:34.667" endtime="20201029 12:44:34.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.675" level="INFO">${ACCURACY} = {'diff': [6.888899999999906e-05, 5.555600000000174e-05, 5.168000000000186e-05, 5.363900000000116e-05, 5.736099999999883e-05, 5.177799999999885e-05, 5.362499999999812e-05, 5.457000000000031e-05, 5.2695...</msg>
<status status="PASS" starttime="20201029 12:44:34.672" endtime="20201029 12:44:34.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.680" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.678" endtime="20201029 12:44:34.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.682" level="INFO">VALUE: [6.888899999999906e-05, 5.555600000000174e-05, 5.168000000000186e-05, 5.363900000000116e-05, 5.736099999999883e-05, 5.177799999999885e-05, 5.362499999999812e-05, 5.457000000000031e-05, 5.269500000000191e-05, 5.172200000000057e-05, 5.077799999999785e-05, 5.162499999999959e-05, 5.262499999999712e-05, 5.458300000000041e-05, 5.4499999999998994e-05, 5.073599999999914e-05, 5.358299999999941e-05, 5.355599999999974e-05, 5.355500000000027e-05, 5.1693999999997964e-05, 5.45280000000016e-05, 5.070899999999948e-05, 5.361099999999855e-05, 5.259700000000145e-05, 5.2652000000000254e-05, 5.268099999999887e-05, 5.361100000000202e-05, 5.361100000000202e-05, 5.6457999999998815e-05, 5.263899999999669e-05, 5.4499999999998994e-05, 5.6485999999997955e-05, 5.741700000000058e-05, 5.169400000000143e-05, 5.362500000000159e-05, 5.641699999999958e-05, 5.263900000000016e-05, 5.079100000000142e-05, 5.361099999999855e-05, 5.5444000000001714e-05, 5.6486000000001424e-05, 4.977699999999738e-05, 5.643100000000262e-05, 5.369500000000291e-05, 5.5499999999999994e-05, 5.261100000000102e-05, 5.751299999999862e-05, 5.5499999999999994e-05, 5.165299999999873e-05, 5.26669999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.681" endtime="20201029 12:44:34.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.676" endtime="20201029 12:44:34.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.688" endtime="20201029 12:44:34.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.687" endtime="20201029 12:44:34.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.685" endtime="20201029 12:44:34.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.324" endtime="20201029 12:44:34.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.324" endtime="20201029 12:44:34.709"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.719" endtime="20201029 12:44:34.740"></status>
</kw>
<msg timestamp="20201029 12:44:34.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.717" endtime="20201029 12:44:34.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.742" endtime="20201029 12:44:34.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.745" endtime="20201029 12:44:34.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.714" endtime="20201029 12:44:34.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.712" endtime="20201029 12:44:34.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.754" endtime="20201029 12:44:35.039"></status>
</kw>
<msg timestamp="20201029 12:44:35.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023732764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.752" endtime="20201029 12:44:35.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023732764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.043" endtime="20201029 12:44:35.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.052" endtime="20201029 12:44:35.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.750" endtime="20201029 12:44:35.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.748" endtime="20201029 12:44:35.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.059" level="INFO">${RESULT} = [{'diff': 4.979199999999989e-05}, {'diff': 5.361100000000202e-05}, {'diff': 5.552699999999966e-05}, {'diff': 5.5513999999999564e-05}, {'diff': 5.168100000000134e-05}, {'diff': 5.6499999999997524e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:35.055" endtime="20201029 12:44:35.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.064" level="INFO">${ACCURACY} = {'diff': [4.979199999999989e-05, 5.361100000000202e-05, 5.552699999999966e-05, 5.5513999999999564e-05, 5.168100000000134e-05, 5.6499999999997524e-05, 5.556999999999784e-05, 5.6443999999999245e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 12:44:35.060" endtime="20201029 12:44:35.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.068" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.067" endtime="20201029 12:44:35.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.071" level="INFO">VALUE: [4.979199999999989e-05, 5.361100000000202e-05, 5.552699999999966e-05, 5.5513999999999564e-05, 5.168100000000134e-05, 5.6499999999997524e-05, 5.556999999999784e-05, 5.6443999999999245e-05, 5.458300000000041e-05, 5.6429999999999675e-05, 5.55549999999988e-05, 5.172200000000057e-05, 5.361200000000149e-05, 5.170900000000048e-05, 5.2652000000000254e-05, 5.363900000000116e-05, 5.076400000000175e-05, 5.7457999999999815e-05, 5.073599999999914e-05, 5.559699999999751e-05, 5.256899999999884e-05, 5.361100000000202e-05, 5.072199999999957e-05, 5.356899999999984e-05, 5.457000000000031e-05, 5.55549999999988e-05, 5.356899999999984e-05, 5.5527999999999134e-05, 5.36670000000003e-05, 5.7430000000000675e-05, 5.555600000000174e-05, 5.262500000000059e-05, 5.3666000000000824e-05, 5.54869999999999e-05, 5.456900000000084e-05, 5.16669999999983e-05, 5.162499999999959e-05, 5.455600000000074e-05, 5.16530000000022e-05, 5.5458000000001284e-05, 5.073600000000261e-05, 5.6472000000001854e-05, 5.268100000000234e-05, 5.455600000000074e-05, 5.459699999999998e-05, 5.644499999999872e-05, 5.356899999999984e-05, 5.268100000000234e-05, 5.1721999999997104e-05, 5.647300000000133e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.069" endtime="20201029 12:44:35.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.065" endtime="20201029 12:44:35.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.076" endtime="20201029 12:44:35.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.075" endtime="20201029 12:44:35.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.073" endtime="20201029 12:44:35.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.710" endtime="20201029 12:44:35.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.709" endtime="20201029 12:44:35.097"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.106" endtime="20201029 12:44:35.127"></status>
</kw>
<msg timestamp="20201029 12:44:35.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.104" endtime="20201029 12:44:35.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.128" endtime="20201029 12:44:35.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.131" endtime="20201029 12:44:35.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.102" endtime="20201029 12:44:35.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.099" endtime="20201029 12:44:35.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.140" endtime="20201029 12:44:35.427"></status>
</kw>
<msg timestamp="20201029 12:44:35.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02268025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:35.139" endtime="20201029 12:44:35.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02268025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:35.431" endtime="20201029 12:44:35.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.440" endtime="20201029 12:44:35.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.136" endtime="20201029 12:44:35.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.134" endtime="20201029 12:44:35.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.447" level="INFO">${RESULT} = [{'diff': 4.119400000000134e-05}, {'diff': 5.557000000000131e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.168099999999787e-05}, {'diff': 5.2679999999999394e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:35.444" endtime="20201029 12:44:35.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.451" level="INFO">${ACCURACY} = {'diff': [4.119400000000134e-05, 5.557000000000131e-05, 5.261100000000102e-05, 5.361099999999855e-05, 5.168099999999787e-05, 5.2679999999999394e-05, 5.361100000000202e-05, 5.1708000000001e-05, 5.17499...</msg>
<status status="PASS" starttime="20201029 12:44:35.448" endtime="20201029 12:44:35.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.456" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.455" endtime="20201029 12:44:35.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.458" level="INFO">VALUE: [4.119400000000134e-05, 5.557000000000131e-05, 5.261100000000102e-05, 5.361099999999855e-05, 5.168099999999787e-05, 5.2679999999999394e-05, 5.361100000000202e-05, 5.1708000000001e-05, 5.174999999999971e-05, 5.4527999999998134e-05, 5.266700000000277e-05, 5.175000000000318e-05, 5.356899999999984e-05, 5.36670000000003e-05, 5.6528000000000134e-05, 5.640300000000001e-05, 5.365299999999726e-05, 5.459699999999998e-05, 5.16669999999983e-05, 5.265299999999973e-05, 5.462499999999912e-05, 5.3652000000001254e-05, 5.461099999999955e-05, 5.359700000000245e-05, 5.462500000000259e-05, 5.554200000000217e-05, 5.068100000000034e-05, 5.456900000000084e-05, 5.166700000000177e-05, 5.170899999999701e-05, 5.6541999999999704e-05, 5.2707999999998534e-05, 5.4513999999998564e-05, 5.169400000000143e-05, 5.6514000000000564e-05, 5.462499999999912e-05, 5.6541999999999704e-05, 5.075000000000218e-05, 5.362500000000159e-05, 5.7471999999999385e-05, 5.459799999999945e-05, 5.6471999999998385e-05, 5.363900000000116e-05, 5.365299999999726e-05, 5.558299999999794e-05, 5.358399999999888e-05, 5.26669999999993e-05, 5.463900000000216e-05, 5.45280000000016e-05, 5.6500000000000994e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.457" endtime="20201029 12:44:35.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.452" endtime="20201029 12:44:35.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.464" endtime="20201029 12:44:35.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.462" endtime="20201029 12:44:35.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.461" endtime="20201029 12:44:35.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.098" endtime="20201029 12:44:35.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.097" endtime="20201029 12:44:35.484"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.493" endtime="20201029 12:44:35.514"></status>
</kw>
<msg timestamp="20201029 12:44:35.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.492" endtime="20201029 12:44:35.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.515" endtime="20201029 12:44:35.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.518" endtime="20201029 12:44:35.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.489" endtime="20201029 12:44:35.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.487" endtime="20201029 12:44:35.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.527" endtime="20201029 12:44:35.813"></status>
</kw>
<msg timestamp="20201029 12:44:35.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.525" endtime="20201029 12:44:35.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.817" endtime="20201029 12:44:35.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.826" endtime="20201029 12:44:35.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.523" endtime="20201029 12:44:35.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.521" endtime="20201029 12:44:35.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.833" level="INFO">${RESULT} = [{'diff': 4.2166999999999205e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.6416000000000105e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.44730000000028e-05}, {'diff': 5.265299999999973e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:35.829" endtime="20201029 12:44:35.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.837" level="INFO">${ACCURACY} = {'diff': [4.2166999999999205e-05, 5.162499999999959e-05, 5.6416000000000105e-05, 5.462499999999912e-05, 5.44730000000028e-05, 5.265299999999973e-05, 5.452700000000213e-05, 5.068100000000034e-05, 5.076...</msg>
<status status="PASS" starttime="20201029 12:44:35.834" endtime="20201029 12:44:35.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.842" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.840" endtime="20201029 12:44:35.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.845" level="INFO">VALUE: [4.2166999999999205e-05, 5.162499999999959e-05, 5.6416000000000105e-05, 5.462499999999912e-05, 5.44730000000028e-05, 5.265299999999973e-05, 5.452700000000213e-05, 5.068100000000034e-05, 5.076400000000175e-05, 5.16530000000022e-05, 5.365300000000073e-05, 5.454200000000117e-05, 5.463900000000216e-05, 5.358299999999941e-05, 5.268099999999887e-05, 5.259700000000145e-05, 5.1637999999999684e-05, 5.361099999999855e-05, 5.256899999999884e-05, 5.5555999999998273e-05, 5.552699999999966e-05, 5.459699999999998e-05, 5.4471999999999854e-05, 5.068100000000034e-05, 5.7471999999999385e-05, 5.6443999999999245e-05, 5.077700000000185e-05, 5.069400000000043e-05, 5.259699999999798e-05, 5.461100000000302e-05, 5.356999999999931e-05, 5.165299999999873e-05, 5.459699999999998e-05, 5.641700000000305e-05, 5.4485999999999424e-05, 5.363900000000116e-05, 5.4471999999999854e-05, 5.45280000000016e-05, 5.076400000000175e-05, 5.450000000000246e-05, 5.4499999999998994e-05, 5.3666000000000824e-05, 5.455600000000074e-05, 5.5486000000000424e-05, 5.6472000000001854e-05, 5.166700000000177e-05, 5.6541999999999704e-05, 5.177800000000232e-05, 5.4499999999998994e-05, 5.554200000000217e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.843" endtime="20201029 12:44:35.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.838" endtime="20201029 12:44:35.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.855" endtime="20201029 12:44:35.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.853" endtime="20201029 12:44:35.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.852" endtime="20201029 12:44:35.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.485" endtime="20201029 12:44:35.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.485" endtime="20201029 12:44:35.875"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.884" endtime="20201029 12:44:35.905"></status>
</kw>
<msg timestamp="20201029 12:44:35.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.883" endtime="20201029 12:44:35.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.907" endtime="20201029 12:44:35.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.909" endtime="20201029 12:44:35.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.880" endtime="20201029 12:44:35.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.878" endtime="20201029 12:44:35.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.919" endtime="20201029 12:44:36.204"></status>
</kw>
<msg timestamp="20201029 12:44:36.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.917" endtime="20201029 12:44:36.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022886153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.209" endtime="20201029 12:44:36.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.217" endtime="20201029 12:44:36.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.915" endtime="20201029 12:44:36.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.913" endtime="20201029 12:44:36.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.224" level="INFO">${RESULT} = [{'diff': 6.0249999999997805e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.555600000000174e-05}, {'diff': 5.644499999999872e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:36.221" endtime="20201029 12:44:36.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.231" level="INFO">${ACCURACY} = {'diff': [6.0249999999997805e-05, 5.076400000000175e-05, 5.5458000000001284e-05, 5.262500000000059e-05, 5.555600000000174e-05, 5.644499999999872e-05, 5.641699999999958e-05, 5.4541999999997703e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 12:44:36.225" endtime="20201029 12:44:36.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.236" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.235" endtime="20201029 12:44:36.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.239" level="INFO">VALUE: [6.0249999999997805e-05, 5.076400000000175e-05, 5.5458000000001284e-05, 5.262500000000059e-05, 5.555600000000174e-05, 5.644499999999872e-05, 5.641699999999958e-05, 5.4541999999997703e-05, 5.5527999999999134e-05, 5.4513999999998564e-05, 5.268099999999887e-05, 5.5499999999999994e-05, 5.457000000000031e-05, 5.458399999999988e-05, 5.358300000000288e-05, 5.457000000000031e-05, 5.5485999999996954e-05, 5.458299999999694e-05, 5.168099999999787e-05, 5.172200000000057e-05, 5.16669999999983e-05, 5.557000000000131e-05, 5.640300000000001e-05, 5.6429999999999675e-05, 5.359799999999845e-05, 5.161100000000002e-05, 5.743100000000015e-05, 5.1665999999998824e-05, 5.454200000000117e-05, 5.2652000000000254e-05, 5.070899999999948e-05, 5.2679999999999394e-05, 5.259699999999798e-05, 5.26530000000032e-05, 5.656900000000284e-05, 5.1708000000001e-05, 5.5527999999999134e-05, 5.6499999999997524e-05, 5.362500000000159e-05, 5.068100000000034e-05, 5.255499999999927e-05, 5.6485999999997955e-05, 5.555500000000227e-05, 5.083300000000013e-05, 5.269499999999844e-05, 5.1708000000001e-05, 5.6499999999997524e-05, 5.643099999999915e-05, 5.269500000000191e-05, 5.26669999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.237" endtime="20201029 12:44:36.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.232" endtime="20201029 12:44:36.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.244" endtime="20201029 12:44:36.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.242" endtime="20201029 12:44:36.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.241" endtime="20201029 12:44:36.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.876" endtime="20201029 12:44:36.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.876" endtime="20201029 12:44:36.265"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.275" endtime="20201029 12:44:36.297"></status>
</kw>
<msg timestamp="20201029 12:44:36.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.273" endtime="20201029 12:44:36.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.298" endtime="20201029 12:44:36.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.301" endtime="20201029 12:44:36.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.270" endtime="20201029 12:44:36.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.268" endtime="20201029 12:44:36.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.310" endtime="20201029 12:44:36.597"></status>
</kw>
<msg timestamp="20201029 12:44:36.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025426083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.309" endtime="20201029 12:44:36.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025364778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025426083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.601" endtime="20201029 12:44:36.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.609" endtime="20201029 12:44:36.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.306" endtime="20201029 12:44:36.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.304" endtime="20201029 12:44:36.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.616" level="INFO">${RESULT} = [{'diff': 6.130499999999761e-05}, {'diff': 5.359700000000245e-05}, {'diff': 5.554099999999923e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.169500000000091e-05}, {'diff': 5.066600000000129e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:36.613" endtime="20201029 12:44:36.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.620" level="INFO">${ACCURACY} = {'diff': [6.130499999999761e-05, 5.359700000000245e-05, 5.554099999999923e-05, 5.362499999999812e-05, 5.169500000000091e-05, 5.066600000000129e-05, 5.258299999999841e-05, 5.454200000000117e-05, 5.3624...</msg>
<status status="PASS" starttime="20201029 12:44:36.617" endtime="20201029 12:44:36.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.625" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.624" endtime="20201029 12:44:36.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.628" level="INFO">VALUE: [6.130499999999761e-05, 5.359700000000245e-05, 5.554099999999923e-05, 5.362499999999812e-05, 5.169500000000091e-05, 5.066600000000129e-05, 5.258299999999841e-05, 5.454200000000117e-05, 5.362499999999812e-05, 5.455600000000074e-05, 5.268099999999887e-05, 5.0708e-05, 5.072199999999957e-05, 5.73749999999984e-05, 5.5472000000000854e-05, 5.073599999999914e-05, 5.554099999999923e-05, 5.451400000000203e-05, 5.265299999999973e-05, 5.4637999999999215e-05, 5.6416000000000105e-05, 5.5486000000000424e-05, 5.2679999999999394e-05, 5.354200000000017e-05, 5.551300000000009e-05, 5.2721999999998104e-05, 5.452699999999866e-05, 5.5527999999999134e-05, 5.559700000000098e-05, 5.7430000000000675e-05, 5.7443999999996775e-05, 5.4527999999998134e-05, 5.6471999999998385e-05, 5.35280000000006e-05, 5.1665999999998824e-05, 5.459699999999998e-05, 5.5555999999998273e-05, 5.068000000000086e-05, 5.45410000000017e-05, 5.169500000000091e-05, 5.074999999999871e-05, 5.455500000000127e-05, 5.265299999999973e-05, 5.5513999999999564e-05, 5.361099999999855e-05, 5.7485999999998955e-05, 5.5486000000000424e-05, 5.16669999999983e-05, 5.262500000000059e-05, 5.361099999999855e-05]</msg>
<status status="PASS" starttime="20201029 12:44:36.626" endtime="20201029 12:44:36.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.621" endtime="20201029 12:44:36.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.633" endtime="20201029 12:44:36.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.631" endtime="20201029 12:44:36.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.630" endtime="20201029 12:44:36.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.266" endtime="20201029 12:44:36.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.265" endtime="20201029 12:44:36.654"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.663" endtime="20201029 12:44:36.684"></status>
</kw>
<msg timestamp="20201029 12:44:36.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.661" endtime="20201029 12:44:36.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.686" endtime="20201029 12:44:36.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.689" endtime="20201029 12:44:36.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.658" endtime="20201029 12:44:36.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.656" endtime="20201029 12:44:36.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.698" endtime="20201029 12:44:36.984"></status>
</kw>
<msg timestamp="20201029 12:44:36.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.696" endtime="20201029 12:44:36.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.988" endtime="20201029 12:44:36.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.997" endtime="20201029 12:44:36.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.694" endtime="20201029 12:44:36.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.692" endtime="20201029 12:44:36.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.003" level="INFO">${RESULT} = [{'diff': 6.415300000000082e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.079200000000089e-05}, {'diff': 5.261200000000049e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:37.000" endtime="20201029 12:44:37.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.008" level="INFO">${ACCURACY} = {'diff': [6.415300000000082e-05, 5.363900000000116e-05, 5.354200000000017e-05, 5.5486000000000424e-05, 5.079200000000089e-05, 5.261200000000049e-05, 5.072299999999905e-05, 5.4513999999998564e-05, 5.45...</msg>
<status status="PASS" starttime="20201029 12:44:37.005" endtime="20201029 12:44:37.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.013" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.011" endtime="20201029 12:44:37.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.015" level="INFO">VALUE: [6.415300000000082e-05, 5.363900000000116e-05, 5.354200000000017e-05, 5.5486000000000424e-05, 5.079200000000089e-05, 5.261200000000049e-05, 5.072299999999905e-05, 5.4513999999998564e-05, 5.4513999999998564e-05, 5.362500000000159e-05, 5.168100000000134e-05, 5.6485999999997955e-05, 5.072199999999957e-05, 5.263900000000016e-05, 5.458399999999988e-05, 5.359700000000245e-05, 5.258299999999841e-05, 5.455600000000074e-05, 5.356999999999931e-05, 5.076400000000175e-05, 5.5499999999999994e-05, 5.5486000000000424e-05, 5.6485999999997955e-05, 5.1666000000002293e-05, 5.256899999999884e-05, 5.5555999999998273e-05, 5.45549999999978e-05, 5.269400000000243e-05, 5.6457999999998815e-05, 5.261100000000102e-05, 5.076399999999828e-05, 5.2708000000002e-05, 5.079200000000089e-05, 5.5499999999999994e-05, 5.6541999999999704e-05, 5.358299999999941e-05, 5.1708000000001e-05, 5.263900000000016e-05, 5.363900000000116e-05, 5.166700000000177e-05, 5.457000000000031e-05, 5.1665999999998824e-05, 5.174999999999971e-05, 5.358299999999941e-05, 5.272300000000105e-05, 5.072199999999957e-05, 5.070899999999948e-05, 5.26669999999993e-05, 5.6485999999997955e-05, 5.5513999999999564e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.014" endtime="20201029 12:44:37.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.009" endtime="20201029 12:44:37.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.021" endtime="20201029 12:44:37.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.020" endtime="20201029 12:44:37.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.018" endtime="20201029 12:44:37.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.655" endtime="20201029 12:44:37.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.654" endtime="20201029 12:44:37.042"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.051" endtime="20201029 12:44:37.071"></status>
</kw>
<msg timestamp="20201029 12:44:37.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.049" endtime="20201029 12:44:37.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.073" endtime="20201029 12:44:37.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.075" endtime="20201029 12:44:37.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.047" endtime="20201029 12:44:37.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.045" endtime="20201029 12:44:37.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.085" endtime="20201029 12:44:37.371"></status>
</kw>
<msg timestamp="20201029 12:44:37.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.083" endtime="20201029 12:44:37.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021990444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.375" endtime="20201029 12:44:37.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.384" endtime="20201029 12:44:37.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.080" endtime="20201029 12:44:37.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.079" endtime="20201029 12:44:37.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.390" level="INFO">${RESULT} = [{'diff': 4.11660000000022e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.45549999999978e-05}, {'diff': 5.547300000000033e-05}, {'diff': 5.161199999999949e-05}, {'diff': 5.5513999999999564e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:37.387" endtime="20201029 12:44:37.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.396" level="INFO">${ACCURACY} = {'diff': [4.11660000000022e-05, 5.55549999999988e-05, 5.45549999999978e-05, 5.547300000000033e-05, 5.161199999999949e-05, 5.5513999999999564e-05, 5.5499999999999994e-05, 5.072299999999905e-05, 5.07229...</msg>
<status status="PASS" starttime="20201029 12:44:37.392" endtime="20201029 12:44:37.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.400" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.399" endtime="20201029 12:44:37.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.403" level="INFO">VALUE: [4.11660000000022e-05, 5.55549999999988e-05, 5.45549999999978e-05, 5.547300000000033e-05, 5.161199999999949e-05, 5.5513999999999564e-05, 5.5499999999999994e-05, 5.072299999999905e-05, 5.072299999999905e-05, 5.6500000000000994e-05, 5.355599999999974e-05, 5.454099999999823e-05, 5.363900000000116e-05, 5.073599999999914e-05, 5.7444000000000245e-05, 5.068099999999687e-05, 5.455600000000074e-05, 5.5499999999999994e-05, 5.5513999999999564e-05, 5.173600000000014e-05, 5.2665999999999824e-05, 5.359699999999898e-05, 5.5527999999999134e-05, 5.262500000000059e-05, 5.068000000000086e-05, 5.454200000000117e-05, 5.554099999999923e-05, 5.169500000000091e-05, 5.2665999999999824e-05, 5.168000000000186e-05, 5.645900000000176e-05, 5.733299999999969e-05, 5.451400000000203e-05, 5.174999999999971e-05, 5.7415999999997636e-05, 5.458399999999988e-05, 5.069400000000043e-05, 5.552699999999966e-05, 5.2665999999999824e-05, 5.073599999999914e-05, 5.359699999999898e-05, 5.365300000000073e-05, 5.176399999999928e-05, 5.351400000000103e-05, 5.265299999999973e-05, 5.6457999999998815e-05, 5.072199999999957e-05, 5.740299999999754e-05, 5.6486000000001424e-05, 5.638900000000044e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.401" endtime="20201029 12:44:37.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.397" endtime="20201029 12:44:37.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.408" endtime="20201029 12:44:37.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.407" endtime="20201029 12:44:37.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.405" endtime="20201029 12:44:37.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.043" endtime="20201029 12:44:37.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.042" endtime="20201029 12:44:37.429"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.438" endtime="20201029 12:44:37.458"></status>
</kw>
<msg timestamp="20201029 12:44:37.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.436" endtime="20201029 12:44:37.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.459" endtime="20201029 12:44:37.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.462" endtime="20201029 12:44:37.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.434" endtime="20201029 12:44:37.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.431" endtime="20201029 12:44:37.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.471" endtime="20201029 12:44:37.758"></status>
</kw>
<msg timestamp="20201029 12:44:37.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:37.470" endtime="20201029 12:44:37.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:37.762" endtime="20201029 12:44:37.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.771" endtime="20201029 12:44:37.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.467" endtime="20201029 12:44:37.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.465" endtime="20201029 12:44:37.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.778" level="INFO">${RESULT} = [{'diff': 6.0291999999999984e-05}, {'diff': 5.356900000000331e-05}, {'diff': 5.6443999999999245e-05}, {'diff': 5.080600000000046e-05}, {'diff': 5.737500000000187e-05}, {'diff': 5.261100000000102e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:37.774" endtime="20201029 12:44:37.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.782" level="INFO">${ACCURACY} = {'diff': [6.0291999999999984e-05, 5.356900000000331e-05, 5.6443999999999245e-05, 5.080600000000046e-05, 5.737500000000187e-05, 5.261100000000102e-05, 5.361099999999855e-05, 5.265299999999973e-05, 5.07...</msg>
<status status="PASS" starttime="20201029 12:44:37.779" endtime="20201029 12:44:37.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.786" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.785" endtime="20201029 12:44:37.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.789" level="INFO">VALUE: [6.0291999999999984e-05, 5.356900000000331e-05, 5.6443999999999245e-05, 5.080600000000046e-05, 5.737500000000187e-05, 5.261100000000102e-05, 5.361099999999855e-05, 5.265299999999973e-05, 5.075000000000218e-05, 5.261100000000102e-05, 5.265299999999973e-05, 5.36670000000003e-05, 5.362499999999812e-05, 5.076400000000175e-05, 5.365300000000073e-05, 5.172200000000057e-05, 5.262500000000059e-05, 5.4458000000000284e-05, 5.263900000000016e-05, 5.0708e-05, 5.36670000000003e-05, 5.163899999999916e-05, 5.26669999999993e-05, 5.262500000000059e-05, 5.358300000000288e-05, 5.455600000000074e-05, 5.734799999999873e-05, 5.1707999999997534e-05, 5.177699999999938e-05, 5.172200000000057e-05, 5.262500000000059e-05, 5.743100000000015e-05, 5.075000000000218e-05, 5.4485999999999424e-05, 5.459699999999998e-05, 5.5499999999999994e-05, 5.455600000000074e-05, 5.7430000000000675e-05, 5.5527999999999134e-05, 5.361099999999855e-05, 5.454200000000117e-05, 5.5486000000000424e-05, 5.5458000000001284e-05, 5.1708000000001e-05, 5.645900000000176e-05, 5.265299999999973e-05, 5.0708e-05, 5.6514000000000564e-05, 5.556900000000184e-05, 5.361099999999855e-05]</msg>
<status status="PASS" starttime="20201029 12:44:37.787" endtime="20201029 12:44:37.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.783" endtime="20201029 12:44:37.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.794" endtime="20201029 12:44:37.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.793" endtime="20201029 12:44:37.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.791" endtime="20201029 12:44:37.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.430" endtime="20201029 12:44:37.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.429" endtime="20201029 12:44:37.815"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.824" endtime="20201029 12:44:37.844"></status>
</kw>
<msg timestamp="20201029 12:44:37.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.822" endtime="20201029 12:44:37.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.846" endtime="20201029 12:44:37.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.849" endtime="20201029 12:44:37.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.820" endtime="20201029 12:44:37.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.818" endtime="20201029 12:44:37.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.858" endtime="20201029 12:44:38.145"></status>
</kw>
<msg timestamp="20201029 12:44:38.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.856" endtime="20201029 12:44:38.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.149" endtime="20201029 12:44:38.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.157" endtime="20201029 12:44:38.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.854" endtime="20201029 12:44:38.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.852" endtime="20201029 12:44:38.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.164" level="INFO">${RESULT} = [{'diff': 4.405499999999771e-05}, {'diff': 5.45280000000016e-05}, {'diff': 5.3693999999999964e-05}, {'diff': 5.258300000000188e-05}, {'diff': 5.452700000000213e-05}, {'diff': 5.076399999999828e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:38.161" endtime="20201029 12:44:38.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.169" level="INFO">${ACCURACY} = {'diff': [4.405499999999771e-05, 5.45280000000016e-05, 5.3693999999999964e-05, 5.258300000000188e-05, 5.452700000000213e-05, 5.076399999999828e-05, 5.6458000000002284e-05, 5.552699999999966e-05, 5.643...</msg>
<status status="PASS" starttime="20201029 12:44:38.165" endtime="20201029 12:44:38.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.173" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.172" endtime="20201029 12:44:38.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.176" level="INFO">VALUE: [4.405499999999771e-05, 5.45280000000016e-05, 5.3693999999999964e-05, 5.258300000000188e-05, 5.452700000000213e-05, 5.076399999999828e-05, 5.6458000000002284e-05, 5.552699999999966e-05, 5.6430000000003144e-05, 5.6486000000001424e-05, 5.361099999999855e-05, 5.363899999999769e-05, 5.166700000000177e-05, 5.1666000000002293e-05, 5.077800000000132e-05, 5.168099999999787e-05, 5.554200000000217e-05, 5.6458000000002284e-05, 4.977799999999685e-05, 5.452700000000213e-05, 5.169500000000091e-05, 5.5513999999999564e-05, 5.258299999999841e-05, 5.166700000000177e-05, 5.269500000000191e-05, 5.263900000000016e-05, 5.361099999999855e-05, 5.459699999999998e-05, 5.45410000000017e-05, 5.1679999999998394e-05, 5.637500000000087e-05, 5.4485999999999424e-05, 5.1693999999997964e-05, 5.066600000000129e-05, 5.552699999999966e-05, 5.654100000000023e-05, 5.5486000000000424e-05, 5.5457999999997815e-05, 5.4513999999998564e-05, 5.5513999999999564e-05, 5.643099999999915e-05, 5.173600000000014e-05, 5.263900000000016e-05, 5.458399999999988e-05, 5.176399999999928e-05, 5.5513999999999564e-05, 5.174999999999971e-05, 5.740300000000101e-05, 5.5499999999999994e-05, 5.262499999999712e-05]</msg>
<status status="PASS" starttime="20201029 12:44:38.174" endtime="20201029 12:44:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.169" endtime="20201029 12:44:38.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.182" endtime="20201029 12:44:38.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.180" endtime="20201029 12:44:38.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.179" endtime="20201029 12:44:38.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.816" endtime="20201029 12:44:38.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.815" endtime="20201029 12:44:38.203"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.212" endtime="20201029 12:44:38.231"></status>
</kw>
<msg timestamp="20201029 12:44:38.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.210" endtime="20201029 12:44:38.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.233" endtime="20201029 12:44:38.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.235" endtime="20201029 12:44:38.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.207" endtime="20201029 12:44:38.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.205" endtime="20201029 12:44:38.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.245" endtime="20201029 12:44:38.530"></status>
</kw>
<msg timestamp="20201029 12:44:38.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.243" endtime="20201029 12:44:38.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.534" endtime="20201029 12:44:38.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.543" endtime="20201029 12:44:38.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.240" endtime="20201029 12:44:38.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.238" endtime="20201029 12:44:38.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.550" level="INFO">${RESULT} = [{'diff': 3.9304999999999896e-05}, {'diff': 5.173600000000014e-05}, {'diff': 5.079100000000142e-05}, {'diff': 5.35549999999968e-05}, {'diff': 5.7457999999999815e-05}, {'diff': 5.363900000000116e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:38.546" endtime="20201029 12:44:38.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.555" level="INFO">${ACCURACY} = {'diff': [3.9304999999999896e-05, 5.173600000000014e-05, 5.079100000000142e-05, 5.35549999999968e-05, 5.7457999999999815e-05, 5.363900000000116e-05, 5.356899999999984e-05, 5.461099999999955e-05, 5.165...</msg>
<status status="PASS" starttime="20201029 12:44:38.551" endtime="20201029 12:44:38.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.560" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.559" endtime="20201029 12:44:38.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.562" level="INFO">VALUE: [3.9304999999999896e-05, 5.173600000000014e-05, 5.079100000000142e-05, 5.35549999999968e-05, 5.7457999999999815e-05, 5.363900000000116e-05, 5.356899999999984e-05, 5.461099999999955e-05, 5.16530000000022e-05, 5.459699999999998e-05, 5.641699999999958e-05, 5.361100000000202e-05, 5.176299999999981e-05, 5.261099999999755e-05, 5.3527999999997133e-05, 5.172200000000057e-05, 5.070899999999948e-05, 5.6514000000000564e-05, 5.259800000000092e-05, 5.4471999999999854e-05, 5.2693999999998964e-05, 5.4499999999998994e-05, 5.555600000000174e-05, 5.254200000000264e-05, 5.461099999999955e-05, 5.156899999999784e-05, 5.076399999999828e-05, 5.45280000000016e-05, 5.174999999999971e-05, 5.068000000000086e-05, 5.452699999999866e-05, 5.5486000000000424e-05, 5.068000000000086e-05, 5.556900000000184e-05, 5.547300000000033e-05, 5.363900000000116e-05, 5.258399999999788e-05, 5.545900000000076e-05, 5.555600000000174e-05, 5.643100000000262e-05, 5.7485999999998955e-05, 5.174999999999971e-05, 5.259699999999798e-05, 5.2679999999999394e-05, 5.5444000000001714e-05, 5.356899999999984e-05, 5.362499999999812e-05, 5.4637999999999215e-05, 5.261100000000102e-05, 5.459699999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:44:38.561" endtime="20201029 12:44:38.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.556" endtime="20201029 12:44:38.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.567" endtime="20201029 12:44:38.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.566" endtime="20201029 12:44:38.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.565" endtime="20201029 12:44:38.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.204" endtime="20201029 12:44:38.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.203" endtime="20201029 12:44:38.588"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.597" endtime="20201029 12:44:38.618"></status>
</kw>
<msg timestamp="20201029 12:44:38.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.596" endtime="20201029 12:44:38.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.619" endtime="20201029 12:44:38.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.622" endtime="20201029 12:44:38.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.593" endtime="20201029 12:44:38.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.591" endtime="20201029 12:44:38.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.631" endtime="20201029 12:44:38.918"></status>
</kw>
<msg timestamp="20201029 12:44:38.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023054764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.630" endtime="20201029 12:44:38.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023054764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.922" endtime="20201029 12:44:38.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.931" endtime="20201029 12:44:38.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.627" endtime="20201029 12:44:38.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.625" endtime="20201029 12:44:38.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.938" level="INFO">${RESULT} = [{'diff': 4.3138999999997596e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.7457999999999815e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.169500000000091e-05...</msg>
<status status="PASS" starttime="20201029 12:44:38.934" endtime="20201029 12:44:38.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.942" level="INFO">${ACCURACY} = {'diff': [4.3138999999997596e-05, 5.459699999999998e-05, 5.7457999999999815e-05, 5.4458000000000284e-05, 5.5486000000000424e-05, 5.169500000000091e-05, 5.26669999999993e-05, 5.645899999999829e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 12:44:38.939" endtime="20201029 12:44:38.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.947" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.945" endtime="20201029 12:44:38.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.949" level="INFO">VALUE: [4.3138999999997596e-05, 5.459699999999998e-05, 5.7457999999999815e-05, 5.4458000000000284e-05, 5.5486000000000424e-05, 5.169500000000091e-05, 5.26669999999993e-05, 5.645899999999829e-05, 5.359699999999898e-05, 5.5541999999998704e-05, 5.263900000000016e-05, 5.459699999999998e-05, 5.4513999999998564e-05, 5.458299999999694e-05, 5.456900000000084e-05, 5.079200000000089e-05, 5.6514000000000564e-05, 5.272200000000157e-05, 5.6528000000000134e-05, 5.265299999999973e-05, 5.461099999999955e-05, 5.173600000000014e-05, 5.65549999999998e-05, 5.168100000000134e-05, 5.555500000000227e-05, 5.173600000000014e-05, 5.169400000000143e-05, 5.5499999999999994e-05, 5.272300000000105e-05, 5.558399999999741e-05, 5.173600000000014e-05, 5.073599999999914e-05, 5.458399999999988e-05, 5.076400000000175e-05, 5.455600000000074e-05, 5.263900000000016e-05, 5.744499999999972e-05, 5.455600000000074e-05, 5.5513999999999564e-05, 5.559700000000098e-05, 5.176399999999928e-05, 5.6486000000001424e-05, 5.455500000000127e-05, 5.559699999999751e-05, 5.355500000000027e-05, 5.645900000000176e-05, 5.461100000000302e-05, 5.172200000000057e-05, 5.072199999999957e-05, 5.55410000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:44:38.948" endtime="20201029 12:44:38.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.943" endtime="20201029 12:44:38.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.954" endtime="20201029 12:44:38.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.953" endtime="20201029 12:44:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.952" endtime="20201029 12:44:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.589" endtime="20201029 12:44:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.589" endtime="20201029 12:44:38.975"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.984" endtime="20201029 12:44:39.005"></status>
</kw>
<msg timestamp="20201029 12:44:39.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.983" endtime="20201029 12:44:39.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.006" endtime="20201029 12:44:39.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.009" endtime="20201029 12:44:39.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.980" endtime="20201029 12:44:39.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.978" endtime="20201029 12:44:39.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.018" endtime="20201029 12:44:39.304"></status>
</kw>
<msg timestamp="20201029 12:44:39.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.017" endtime="20201029 12:44:39.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022876486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.308" endtime="20201029 12:44:39.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.317" endtime="20201029 12:44:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.014" endtime="20201029 12:44:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.012" endtime="20201029 12:44:39.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.324" level="INFO">${RESULT} = [{'diff': 6.323599999999777e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.558299999999794e-05}, {'diff': 5.2708000000002e-05}, {'diff': 5.266700000000277e-05}, {'diff': 5.2693999999998964e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:39.320" endtime="20201029 12:44:39.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.328" level="INFO">${ACCURACY} = {'diff': [6.323599999999777e-05, 5.6528000000000134e-05, 5.558299999999794e-05, 5.2708000000002e-05, 5.266700000000277e-05, 5.2693999999998964e-05, 5.6541999999999704e-05, 5.2707999999998534e-05, 5.55...</msg>
<status status="PASS" starttime="20201029 12:44:39.325" endtime="20201029 12:44:39.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.333" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.332" endtime="20201029 12:44:39.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.336" level="INFO">VALUE: [6.323599999999777e-05, 5.6528000000000134e-05, 5.558299999999794e-05, 5.2708000000002e-05, 5.266700000000277e-05, 5.2693999999998964e-05, 5.6541999999999704e-05, 5.2707999999998534e-05, 5.551400000000303e-05, 5.170899999999701e-05, 5.3652000000001254e-05, 5.172200000000057e-05, 5.454099999999823e-05, 5.459699999999998e-05, 5.175000000000318e-05, 5.262500000000059e-05, 5.6486000000001424e-05, 5.363900000000116e-05, 5.6541999999999704e-05, 5.6514000000000564e-05, 5.166700000000177e-05, 5.1708000000001e-05, 5.079100000000142e-05, 5.4527999999998134e-05, 5.6499999999997524e-05, 5.081900000000056e-05, 5.365300000000073e-05, 5.7485999999998955e-05, 5.55280000000026e-05, 5.363900000000116e-05, 5.263900000000016e-05, 5.174999999999971e-05, 5.363900000000116e-05, 5.173600000000014e-05, 5.074999999999871e-05, 5.161100000000002e-05, 5.074999999999871e-05, 5.172200000000057e-05, 5.077799999999785e-05, 5.2707999999998534e-05, 5.180499999999852e-05, 5.6514000000000564e-05, 5.077699999999838e-05, 5.372299999999858e-05, 5.555600000000174e-05, 5.6457999999998815e-05, 5.1721999999997104e-05, 5.174999999999971e-05, 5.077799999999785e-05, 5.651300000000109e-05]</msg>
<status status="PASS" starttime="20201029 12:44:39.334" endtime="20201029 12:44:39.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.329" endtime="20201029 12:44:39.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.341" endtime="20201029 12:44:39.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.340" endtime="20201029 12:44:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.339" endtime="20201029 12:44:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.976" endtime="20201029 12:44:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.976" endtime="20201029 12:44:39.362"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.371" endtime="20201029 12:44:39.392"></status>
</kw>
<msg timestamp="20201029 12:44:39.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.370" endtime="20201029 12:44:39.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.394" endtime="20201029 12:44:39.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.397" endtime="20201029 12:44:39.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.367" endtime="20201029 12:44:39.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.365" endtime="20201029 12:44:39.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.406" endtime="20201029 12:44:39.692"></status>
</kw>
<msg timestamp="20201029 12:44:39.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.404" endtime="20201029 12:44:39.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.697" endtime="20201029 12:44:39.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.705" endtime="20201029 12:44:39.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.402" endtime="20201029 12:44:39.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.400" endtime="20201029 12:44:39.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.712" level="INFO">${RESULT} = [{'diff': 4.3111000000001926e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.079199999999742e-05}, {'diff': 5.452700000000213e-05}, {'diff': 5.5401999999999535e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:39.708" endtime="20201029 12:44:39.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.719" level="INFO">${ACCURACY} = {'diff': [4.3111000000001926e-05, 5.362499999999812e-05, 5.6500000000000994e-05, 5.079199999999742e-05, 5.452700000000213e-05, 5.5401999999999535e-05, 5.076300000000228e-05, 5.461100000000302e-05, 5.2...</msg>
<status status="PASS" starttime="20201029 12:44:39.713" endtime="20201029 12:44:39.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.724" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.723" endtime="20201029 12:44:39.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.727" level="INFO">VALUE: [4.3111000000001926e-05, 5.362499999999812e-05, 5.6500000000000994e-05, 5.079199999999742e-05, 5.452700000000213e-05, 5.5401999999999535e-05, 5.076300000000228e-05, 5.461100000000302e-05, 5.258299999999841e-05, 5.459699999999998e-05, 5.272200000000157e-05, 5.6457999999998815e-05, 5.363900000000116e-05, 5.174999999999971e-05, 5.261100000000102e-05, 5.65549999999998e-05, 5.36670000000003e-05, 5.6514000000000564e-05, 5.559700000000098e-05, 5.4485999999999424e-05, 5.554200000000217e-05, 5.172300000000005e-05, 5.462500000000259e-05, 5.176400000000275e-05, 5.5485999999996954e-05, 5.269499999999844e-05, 5.5499999999999994e-05, 5.6486000000001424e-05, 5.08469999999997e-05, 5.268100000000234e-05, 5.545900000000076e-05, 5.458300000000041e-05, 5.174999999999971e-05, 5.365300000000073e-05, 5.355599999999974e-05, 5.082000000000003e-05, 5.359700000000245e-05, 5.259699999999798e-05, 5.747299999999886e-05, 5.461100000000302e-05, 5.26669999999993e-05, 5.077800000000132e-05, 5.076400000000175e-05, 5.734699999999926e-05, 5.4527999999998134e-05, 5.173600000000014e-05, 5.6499999999997524e-05, 5.461099999999955e-05, 5.36670000000003e-05, 5.5429999999998675e-05]</msg>
<status status="PASS" starttime="20201029 12:44:39.725" endtime="20201029 12:44:39.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.720" endtime="20201029 12:44:39.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.732" endtime="20201029 12:44:39.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.730" endtime="20201029 12:44:39.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.729" endtime="20201029 12:44:39.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.363" endtime="20201029 12:44:39.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.363" endtime="20201029 12:44:39.753"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.762" endtime="20201029 12:44:39.784"></status>
</kw>
<msg timestamp="20201029 12:44:39.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.761" endtime="20201029 12:44:39.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.786" endtime="20201029 12:44:39.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.788" endtime="20201029 12:44:39.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.758" endtime="20201029 12:44:39.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.756" endtime="20201029 12:44:39.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.798" endtime="20201029 12:44:40.085"></status>
</kw>
<msg timestamp="20201029 12:44:40.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024246194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:39.796" endtime="20201029 12:44:40.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024246194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024296, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:40.090" endtime="20201029 12:44:40.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.098" endtime="20201029 12:44:40.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.794" endtime="20201029 12:44:40.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.792" endtime="20201029 12:44:40.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.105" level="INFO">${RESULT} = [{'diff': 4.980600000000293e-05}, {'diff': 5.462499999999912e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.262499999999712e-05}, {'diff': 5.557000000000131e-05}, {'diff': 5.6472000000001854e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:40.102" endtime="20201029 12:44:40.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.109" level="INFO">${ACCURACY} = {'diff': [4.980600000000293e-05, 5.462499999999912e-05, 5.5499999999999994e-05, 5.262499999999712e-05, 5.557000000000131e-05, 5.6472000000001854e-05, 5.4652000000002254e-05, 5.555600000000174e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 12:44:40.106" endtime="20201029 12:44:40.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.114" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.113" endtime="20201029 12:44:40.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.116" level="INFO">VALUE: [4.980600000000293e-05, 5.462499999999912e-05, 5.5499999999999994e-05, 5.262499999999712e-05, 5.557000000000131e-05, 5.6472000000001854e-05, 5.4652000000002254e-05, 5.555600000000174e-05, 5.070899999999948e-05, 5.6500000000000994e-05, 5.5499999999999994e-05, 5.458399999999988e-05, 5.174999999999971e-05, 5.355599999999974e-05, 5.6486000000001424e-05, 5.6458000000002284e-05, 5.356899999999984e-05, 5.076400000000175e-05, 5.6541999999999704e-05, 5.4527999999998134e-05, 5.558400000000088e-05, 5.554200000000217e-05, 5.461099999999955e-05, 5.168100000000134e-05, 5.359699999999898e-05, 5.176400000000275e-05, 5.072199999999957e-05, 5.1679999999998394e-05, 5.6486000000001424e-05, 5.7402000000001535e-05, 5.074999999999871e-05, 5.174999999999971e-05, 5.5485999999996954e-05, 5.076400000000175e-05, 5.077700000000185e-05, 5.5527999999999134e-05, 5.363899999999769e-05, 5.45280000000016e-05, 5.554099999999923e-05, 5.077800000000132e-05, 5.543099999999815e-05, 5.362500000000159e-05, 5.2679999999999394e-05, 5.365299999999726e-05, 5.166700000000177e-05, 5.456999999999684e-05, 5.268100000000234e-05, 5.256900000000231e-05, 5.172300000000005e-05, 5.55549999999988e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.115" endtime="20201029 12:44:40.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.110" endtime="20201029 12:44:40.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.121" endtime="20201029 12:44:40.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.120" endtime="20201029 12:44:40.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.119" endtime="20201029 12:44:40.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.754" endtime="20201029 12:44:40.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.753" endtime="20201029 12:44:40.142"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.151" endtime="20201029 12:44:40.176"></status>
</kw>
<msg timestamp="20201029 12:44:40.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.150" endtime="20201029 12:44:40.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.177" endtime="20201029 12:44:40.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.180" endtime="20201029 12:44:40.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.147" endtime="20201029 12:44:40.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.145" endtime="20201029 12:44:40.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.189" endtime="20201029 12:44:40.475"></status>
</kw>
<msg timestamp="20201029 12:44:40.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026377986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026438375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.188" endtime="20201029 12:44:40.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026377986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026438375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.479" endtime="20201029 12:44:40.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.488" endtime="20201029 12:44:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.185" endtime="20201029 12:44:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.183" endtime="20201029 12:44:40.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.495" level="INFO">${RESULT} = [{'diff': 6.038900000000097e-05}, {'diff': 5.6541999999999704e-05}, {'diff': 5.558399999999741e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.082000000000003e-05}, {'diff': 5.1708000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:40.491" endtime="20201029 12:44:40.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.499" level="INFO">${ACCURACY} = {'diff': [6.038900000000097e-05, 5.6541999999999704e-05, 5.558399999999741e-05, 5.263900000000016e-05, 5.082000000000003e-05, 5.1708000000001e-05, 5.169500000000091e-05, 5.174999999999971e-05, 5.17079...</msg>
<status status="PASS" starttime="20201029 12:44:40.496" endtime="20201029 12:44:40.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.504" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.503" endtime="20201029 12:44:40.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.506" level="INFO">VALUE: [6.038900000000097e-05, 5.6541999999999704e-05, 5.558399999999741e-05, 5.263900000000016e-05, 5.082000000000003e-05, 5.1708000000001e-05, 5.169500000000091e-05, 5.174999999999971e-05, 5.1707999999997534e-05, 5.073600000000261e-05, 5.173600000000014e-05, 5.087499999999884e-05, 5.069400000000043e-05, 5.6555999999999274e-05, 5.073600000000261e-05, 5.5513999999999564e-05, 5.1707999999997534e-05, 5.355599999999974e-05, 5.6514000000000564e-05, 5.262500000000059e-05, 5.5541999999998704e-05, 5.172200000000057e-05, 5.358299999999941e-05, 5.2693999999998964e-05, 5.6471999999998385e-05, 5.461100000000302e-05, 5.6514000000000564e-05, 5.461099999999955e-05, 5.454200000000117e-05, 5.459699999999998e-05, 5.076400000000175e-05, 5.358299999999941e-05, 5.2638000000000684e-05, 5.174999999999971e-05, 5.362499999999812e-05, 5.069499999999991e-05, 5.461199999999902e-05, 5.079200000000089e-05, 5.738900000000144e-05, 5.2665999999999824e-05, 5.64870000000009e-05, 5.459799999999945e-05, 5.6486000000001424e-05, 5.358299999999941e-05, 5.6569999999998843e-05, 5.3666000000000824e-05, 5.174999999999971e-05, 5.6471999999998385e-05, 5.462499999999912e-05, 5.169400000000143e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.505" endtime="20201029 12:44:40.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.500" endtime="20201029 12:44:40.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.512" endtime="20201029 12:44:40.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.511" endtime="20201029 12:44:40.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.510" endtime="20201029 12:44:40.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.143" endtime="20201029 12:44:40.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.143" endtime="20201029 12:44:40.533"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.542" endtime="20201029 12:44:40.563"></status>
</kw>
<msg timestamp="20201029 12:44:40.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.541" endtime="20201029 12:44:40.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.565" endtime="20201029 12:44:40.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.567" endtime="20201029 12:44:40.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.538" endtime="20201029 12:44:40.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.536" endtime="20201029 12:44:40.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.577" endtime="20201029 12:44:40.862"></status>
</kw>
<msg timestamp="20201029 12:44:40.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022477611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.575" endtime="20201029 12:44:40.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022477611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.866" endtime="20201029 12:44:40.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.874" endtime="20201029 12:44:40.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.572" endtime="20201029 12:44:40.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.570" endtime="20201029 12:44:40.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.881" level="INFO">${RESULT} = [{'diff': 9.668000000000176e-05}, {'diff': 8.513899999999797e-05}, {'diff': 8.509699999999926e-05}, {'diff': 8.709699999999779e-05}, {'diff': 8.51249999999984e-05}, {'diff': 8.140300000000072e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:40.878" endtime="20201029 12:44:40.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.886" level="INFO">${ACCURACY} = {'diff': [9.668000000000176e-05, 8.513899999999797e-05, 8.509699999999926e-05, 8.709699999999779e-05, 8.51249999999984e-05, 8.140300000000072e-05, 8.413899999999697e-05, 8.320900000000075e-05, 8.13470...</msg>
<status status="PASS" starttime="20201029 12:44:40.882" endtime="20201029 12:44:40.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.891" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.890" endtime="20201029 12:44:40.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.894" level="INFO">VALUE: [9.668000000000176e-05, 8.513899999999797e-05, 8.509699999999926e-05, 8.709699999999779e-05, 8.51249999999984e-05, 8.140300000000072e-05, 8.413899999999697e-05, 8.320900000000075e-05, 8.134700000000245e-05, 8.798599999999823e-05, 8.422300000000132e-05, 8.708299999999822e-05, 8.607000000000059e-05, 8.620900000000029e-05, 8.512500000000187e-05, 8.51110000000023e-05, 8.433400000000188e-05, 8.708399999999769e-05, 8.127699999999766e-05, 8.700000000000027e-05, 8.127700000000113e-05, 8.51249999999984e-05, 8.227700000000213e-05, 8.4153e-05, 8.427700000000066e-05, 8.604200000000145e-05, 8.519400000000024e-05, 8.613900000000244e-05, 8.608300000000069e-05, 8.608400000000016e-05, 8.230500000000127e-05, 8.312499999999987e-05, 8.805599999999955e-05, 8.234699999999998e-05, 8.41110000000013e-05, 8.519400000000024e-05, 8.708299999999822e-05, 8.613899999999897e-05, 8.700000000000027e-05, 8.141600000000082e-05, 8.131899999999984e-05, 8.505499999999708e-05, 8.43049999999998e-05, 8.511099999999883e-05, 8.713800000000049e-05, 8.220800000000028e-05, 8.513900000000144e-05, 8.326399999999956e-05, 8.411099999999783e-05, 8.138900000000115e-05]</msg>
<status status="PASS" starttime="20201029 12:44:40.892" endtime="20201029 12:44:40.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.887" endtime="20201029 12:44:40.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.908" endtime="20201029 12:44:40.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.907" endtime="20201029 12:44:40.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.905" endtime="20201029 12:44:40.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.534" endtime="20201029 12:44:40.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.534" endtime="20201029 12:44:40.929"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.938" endtime="20201029 12:44:40.960"></status>
</kw>
<msg timestamp="20201029 12:44:40.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.936" endtime="20201029 12:44:40.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.962" endtime="20201029 12:44:40.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.965" endtime="20201029 12:44:40.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.934" endtime="20201029 12:44:40.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.931" endtime="20201029 12:44:40.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.974" endtime="20201029 12:44:41.261"></status>
</kw>
<msg timestamp="20201029 12:44:41.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023641972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.972" endtime="20201029 12:44:41.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023559667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023641972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.265" endtime="20201029 12:44:41.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.274" endtime="20201029 12:44:41.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.970" endtime="20201029 12:44:41.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.968" endtime="20201029 12:44:41.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.280" level="INFO">${RESULT} = [{'diff': 8.230500000000127e-05}, {'diff': 8.508299999999969e-05}, {'diff': 8.426400000000056e-05}, {'diff': 8.604099999999851e-05}, {'diff': 8.522199999999938e-05}, {'diff': 8.604200000000145e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:41.277" endtime="20201029 12:44:41.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.285" level="INFO">${ACCURACY} = {'diff': [8.230500000000127e-05, 8.508299999999969e-05, 8.426400000000056e-05, 8.604099999999851e-05, 8.522199999999938e-05, 8.604200000000145e-05, 8.313899999999944e-05, 8.802800000000041e-05, 8.3180...</msg>
<status status="PASS" starttime="20201029 12:44:41.281" endtime="20201029 12:44:41.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.289" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.288" endtime="20201029 12:44:41.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.292" level="INFO">VALUE: [8.230500000000127e-05, 8.508299999999969e-05, 8.426400000000056e-05, 8.604099999999851e-05, 8.522199999999938e-05, 8.604200000000145e-05, 8.313899999999944e-05, 8.802800000000041e-05, 8.318099999999815e-05, 8.323600000000042e-05, 8.138900000000115e-05, 8.412500000000087e-05, 8.513899999999797e-05, 8.61249999999994e-05, 8.605499999999808e-05, 8.413799999999749e-05, 8.222299999999932e-05, 8.794399999999952e-05, 8.419500000000218e-05, 8.227799999999813e-05, 8.413900000000044e-05, 8.222199999999985e-05, 8.700000000000027e-05, 8.701399999999984e-05, 8.705600000000202e-05, 8.230600000000074e-05, 8.222199999999985e-05, 8.32780000000026e-05, 8.4153e-05, 8.327799999999913e-05, 8.317999999999867e-05, 8.708399999999769e-05, 8.609700000000026e-05, 8.515299999999754e-05, 8.516700000000058e-05, 8.140300000000072e-05, 8.697199999999766e-05, 8.223599999999942e-05, 8.51249999999984e-05, 8.22919999999977e-05, 8.224999999999899e-05, 8.331899999999837e-05, 8.127699999999766e-05, 8.511099999999883e-05, 8.425000000000099e-05, 8.126399999999756e-05, 8.236199999999902e-05, 8.69860000000007e-05, 8.61660000000021e-05, 8.318000000000214e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.290" endtime="20201029 12:44:41.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.285" endtime="20201029 12:44:41.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.297" endtime="20201029 12:44:41.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.295" endtime="20201029 12:44:41.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.294" endtime="20201029 12:44:41.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.930" endtime="20201029 12:44:41.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.929" endtime="20201029 12:44:41.318"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.327" endtime="20201029 12:44:41.348"></status>
</kw>
<msg timestamp="20201029 12:44:41.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.325" endtime="20201029 12:44:41.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.349" endtime="20201029 12:44:41.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.352" endtime="20201029 12:44:41.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.322" endtime="20201029 12:44:41.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.320" endtime="20201029 12:44:41.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.361" endtime="20201029 12:44:41.648"></status>
</kw>
<msg timestamp="20201029 12:44:41.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.360" endtime="20201029 12:44:41.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.653" endtime="20201029 12:44:41.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.661" endtime="20201029 12:44:41.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.357" endtime="20201029 12:44:41.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.355" endtime="20201029 12:44:41.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.668" level="INFO">${RESULT} = [{'diff': 8.601400000000231e-05}, {'diff': 8.423600000000142e-05}, {'diff': 8.602800000000188e-05}, {'diff': 8.22780000000016e-05}, {'diff': 8.609700000000026e-05}, {'diff': 8.5153000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:44:41.664" endtime="20201029 12:44:41.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.672" level="INFO">${ACCURACY} = {'diff': [8.601400000000231e-05, 8.423600000000142e-05, 8.602800000000188e-05, 8.22780000000016e-05, 8.609700000000026e-05, 8.5153000000001e-05, 8.41660000000001e-05, 8.134699999999898e-05, 8.31950000...</msg>
<status status="PASS" starttime="20201029 12:44:41.669" endtime="20201029 12:44:41.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.677" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.676" endtime="20201029 12:44:41.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.679" level="INFO">VALUE: [8.601400000000231e-05, 8.423600000000142e-05, 8.602800000000188e-05, 8.22780000000016e-05, 8.609700000000026e-05, 8.5153000000001e-05, 8.41660000000001e-05, 8.134699999999898e-05, 8.319500000000118e-05, 8.705600000000202e-05, 8.22919999999977e-05, 8.515200000000153e-05, 8.422199999999838e-05, 8.326399999999956e-05, 8.225000000000246e-05, 8.708400000000116e-05, 8.222299999999932e-05, 8.323600000000042e-05, 8.605600000000102e-05, 8.326399999999956e-05, 8.520799999999981e-05, 8.133399999999888e-05, 8.223600000000289e-05, 8.801400000000084e-05, 8.334700000000098e-05, 8.223600000000289e-05, 8.413900000000044e-05, 8.420900000000175e-05, 8.136100000000202e-05, 8.611099999999983e-05, 8.127700000000113e-05, 8.518100000000015e-05, 8.513899999999797e-05, 8.707000000000159e-05, 8.130599999999974e-05, 8.608299999999722e-05, 8.231900000000084e-05, 8.704099999999951e-05, 8.711099999999736e-05, 8.138899999999769e-05, 8.418099999999915e-05, 8.22910000000017e-05, 8.236199999999902e-05, 8.602800000000188e-05, 8.715299999999954e-05, 8.518000000000067e-05, 8.12910000000007e-05, 8.516700000000058e-05, 8.4153e-05, 8.22910000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.678" endtime="20201029 12:44:41.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.673" endtime="20201029 12:44:41.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.685" endtime="20201029 12:44:41.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.684" endtime="20201029 12:44:41.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.682" endtime="20201029 12:44:41.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.319" endtime="20201029 12:44:41.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.318" endtime="20201029 12:44:41.706"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.715" endtime="20201029 12:44:41.739"></status>
</kw>
<msg timestamp="20201029 12:44:41.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.713" endtime="20201029 12:44:41.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.741" endtime="20201029 12:44:41.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.743" endtime="20201029 12:44:41.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.711" endtime="20201029 12:44:41.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.709" endtime="20201029 12:44:41.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.753" endtime="20201029 12:44:42.039"></status>
</kw>
<msg timestamp="20201029 12:44:42.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025116097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025211875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.751" endtime="20201029 12:44:42.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025116097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025211875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.043" endtime="20201029 12:44:42.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.051" endtime="20201029 12:44:42.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.749" endtime="20201029 12:44:42.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.747" endtime="20201029 12:44:42.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.058" level="INFO">${RESULT} = [{'diff': 9.577800000000122e-05}, {'diff': 8.608300000000069e-05}, {'diff': 8.234799999999945e-05}, {'diff': 8.605499999999808e-05}, {'diff': 8.613899999999897e-05}, {'diff': 8.226399999999856e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:42.055" endtime="20201029 12:44:42.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.063" level="INFO">${ACCURACY} = {'diff': [9.577800000000122e-05, 8.608300000000069e-05, 8.234799999999945e-05, 8.605499999999808e-05, 8.613899999999897e-05, 8.226399999999856e-05, 8.229200000000117e-05, 8.324999999999999e-05, 8.5181...</msg>
<status status="PASS" starttime="20201029 12:44:42.059" endtime="20201029 12:44:42.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.068" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.067" endtime="20201029 12:44:42.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.071" level="INFO">VALUE: [9.577800000000122e-05, 8.608300000000069e-05, 8.234799999999945e-05, 8.605499999999808e-05, 8.613899999999897e-05, 8.226399999999856e-05, 8.229200000000117e-05, 8.324999999999999e-05, 8.518100000000015e-05, 8.327700000000313e-05, 8.609799999999973e-05, 8.607000000000059e-05, 8.611099999999983e-05, 8.520799999999981e-05, 8.331900000000184e-05, 8.416699999999958e-05, 8.230500000000127e-05, 8.525000000000199e-05, 8.322200000000085e-05, 8.143099999999986e-05, 8.131899999999984e-05, 8.522199999999938e-05, 8.22910000000017e-05, 8.22369999999989e-05, 8.144499999999943e-05, 8.606900000000112e-05, 8.524999999999852e-05, 8.616700000000158e-05, 8.230500000000127e-05, 8.227799999999813e-05, 8.522199999999938e-05, 8.129200000000017e-05, 8.41249999999974e-05, 8.137500000000158e-05, 8.324999999999999e-05, 8.605599999999755e-05, 8.232000000000031e-05, 8.422200000000185e-05, 8.5153000000001e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.427700000000066e-05, 8.229200000000117e-05, 8.522200000000285e-05, 8.712499999999693e-05, 8.802800000000041e-05, 8.522199999999938e-05, 8.322300000000032e-05, 8.523699999999843e-05, 8.2152999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.069" endtime="20201029 12:44:42.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.064" endtime="20201029 12:44:42.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.076" endtime="20201029 12:44:42.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.074" endtime="20201029 12:44:42.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.073" endtime="20201029 12:44:42.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.707" endtime="20201029 12:44:42.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.706" endtime="20201029 12:44:42.097"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.106" endtime="20201029 12:44:42.126"></status>
</kw>
<msg timestamp="20201029 12:44:42.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.104" endtime="20201029 12:44:42.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.127" endtime="20201029 12:44:42.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.130" endtime="20201029 12:44:42.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.101" endtime="20201029 12:44:42.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.099" endtime="20201029 12:44:42.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.139" endtime="20201029 12:44:42.427"></status>
</kw>
<msg timestamp="20201029 12:44:42.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021464458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.138" endtime="20201029 12:44:42.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021464458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.431" endtime="20201029 12:44:42.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.439" endtime="20201029 12:44:42.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.135" endtime="20201029 12:44:42.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.133" endtime="20201029 12:44:42.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.446" level="INFO">${RESULT} = [{'diff': 6.99299999999993e-05}, {'diff': 8.708299999999822e-05}, {'diff': 8.420799999999881e-05}, {'diff': 8.236099999999955e-05}, {'diff': 8.129200000000017e-05}, {'diff': 8.216700000000104e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:42.443" endtime="20201029 12:44:42.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.451" level="INFO">${ACCURACY} = {'diff': [6.99299999999993e-05, 8.708299999999822e-05, 8.420799999999881e-05, 8.236099999999955e-05, 8.129200000000017e-05, 8.216700000000104e-05, 8.418099999999915e-05, 8.518000000000067e-05, 8.61249...</msg>
<status status="PASS" starttime="20201029 12:44:42.447" endtime="20201029 12:44:42.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.455" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.454" endtime="20201029 12:44:42.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.458" level="INFO">VALUE: [6.99299999999993e-05, 8.708299999999822e-05, 8.420799999999881e-05, 8.236099999999955e-05, 8.129200000000017e-05, 8.216700000000104e-05, 8.418099999999915e-05, 8.518000000000067e-05, 8.61249999999994e-05, 8.423600000000142e-05, 8.601299999999937e-05, 8.422200000000185e-05, 8.320799999999781e-05, 8.318100000000161e-05, 8.42919999999997e-05, 8.326399999999956e-05, 8.504200000000045e-05, 8.420900000000175e-05, 8.512500000000187e-05, 8.412500000000087e-05, 8.609700000000026e-05, 8.41660000000001e-05, 8.229200000000117e-05, 8.143099999999986e-05, 8.123599999999842e-05, 8.232000000000031e-05, 8.219500000000018e-05, 8.613899999999897e-05, 8.315300000000247e-05, 8.425000000000099e-05, 8.320900000000075e-05, 8.616599999999863e-05, 8.326399999999956e-05, 8.506900000000012e-05, 8.79999999999978e-05, 8.704099999999951e-05, 8.22780000000016e-05, 8.709699999999779e-05, 8.219500000000018e-05, 8.520799999999981e-05, 8.044399999999896e-05, 8.412500000000087e-05, 8.609700000000026e-05, 8.425000000000099e-05, 8.611099999999983e-05, 8.12780000000006e-05, 8.511099999999883e-05, 8.137499999999812e-05, 8.697199999999766e-05, 8.33049999999988e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.456" endtime="20201029 12:44:42.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.451" endtime="20201029 12:44:42.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.463" endtime="20201029 12:44:42.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.461" endtime="20201029 12:44:42.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.460" endtime="20201029 12:44:42.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.098" endtime="20201029 12:44:42.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.097" endtime="20201029 12:44:42.484"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.493" endtime="20201029 12:44:42.517"></status>
</kw>
<msg timestamp="20201029 12:44:42.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.491" endtime="20201029 12:44:42.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.519" endtime="20201029 12:44:42.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.522" endtime="20201029 12:44:42.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.489" endtime="20201029 12:44:42.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.486" endtime="20201029 12:44:42.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.531" endtime="20201029 12:44:42.817"></status>
</kw>
<msg timestamp="20201029 12:44:42.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026086667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026170931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.529" endtime="20201029 12:44:42.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026086667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026170931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.821" endtime="20201029 12:44:42.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.829" endtime="20201029 12:44:42.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.527" endtime="20201029 12:44:42.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.525" endtime="20201029 12:44:42.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.836" level="INFO">${RESULT} = [{'diff': 8.426400000000056e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.422199999999838e-05}, {'diff': 8.330600000000174e-05}, {'diff': 8.505500000000055e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:42.833" endtime="20201029 12:44:42.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.840" level="INFO">${ACCURACY} = {'diff': [8.426400000000056e-05, 8.605600000000102e-05, 8.71250000000004e-05, 8.422199999999838e-05, 8.330600000000174e-05, 8.505500000000055e-05, 8.805599999999955e-05, 8.704199999999898e-05, 8.60699...</msg>
<status status="PASS" starttime="20201029 12:44:42.837" endtime="20201029 12:44:42.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.845" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.844" endtime="20201029 12:44:42.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.848" level="INFO">VALUE: [8.426400000000056e-05, 8.605600000000102e-05, 8.71250000000004e-05, 8.422199999999838e-05, 8.330600000000174e-05, 8.505500000000055e-05, 8.805599999999955e-05, 8.704199999999898e-05, 8.606999999999712e-05, 8.233399999999988e-05, 8.315199999999953e-05, 8.613899999999897e-05, 8.608400000000016e-05, 8.230599999999727e-05, 8.602799999999841e-05, 8.230500000000127e-05, 8.329099999999923e-05, 8.422200000000185e-05, 8.415200000000053e-05, 8.134699999999898e-05, 8.708400000000116e-05, 8.516599999999763e-05, 8.702799999999941e-05, 8.709699999999779e-05, 8.329200000000217e-05, 8.22780000000016e-05, 8.505600000000002e-05, 8.609700000000026e-05, 8.613899999999897e-05, 8.133399999999888e-05, 8.126400000000103e-05, 8.133399999999888e-05, 8.511099999999883e-05, 8.32919999999987e-05, 8.51249999999984e-05, 8.31390000000029e-05, 8.330500000000227e-05, 8.227799999999813e-05, 8.136099999999855e-05, 8.611099999999983e-05, 8.500000000000174e-05, 8.511099999999883e-05, 8.138900000000115e-05, 8.61249999999994e-05, 8.322200000000085e-05, 8.226400000000203e-05, 8.224999999999899e-05, 8.804199999999998e-05, 8.620800000000081e-05, 8.705500000000255e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.846" endtime="20201029 12:44:42.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.841" endtime="20201029 12:44:42.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.854" endtime="20201029 12:44:42.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.852" endtime="20201029 12:44:42.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.851" endtime="20201029 12:44:42.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.485" endtime="20201029 12:44:42.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.484" endtime="20201029 12:44:42.875"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.884" endtime="20201029 12:44:42.908"></status>
</kw>
<msg timestamp="20201029 12:44:42.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.882" endtime="20201029 12:44:42.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.909" endtime="20201029 12:44:42.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.912" endtime="20201029 12:44:42.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.879" endtime="20201029 12:44:42.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.877" endtime="20201029 12:44:42.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.921" endtime="20201029 12:44:43.207"></status>
</kw>
<msg timestamp="20201029 12:44:43.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.920" endtime="20201029 12:44:43.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.211" endtime="20201029 12:44:43.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.220" endtime="20201029 12:44:43.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.917" endtime="20201029 12:44:43.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.915" endtime="20201029 12:44:43.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.226" level="INFO">${RESULT} = [{'diff': 9.858399999999878e-05}, {'diff': 8.61110000000033e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.136099999999855e-05}, {'diff': 8.316699999999858e-05}, {'diff': 8.711100000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:43.223" endtime="20201029 12:44:43.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.234" level="INFO">${ACCURACY} = {'diff': [9.858399999999878e-05, 8.61110000000033e-05, 8.322200000000085e-05, 8.136099999999855e-05, 8.316699999999858e-05, 8.711100000000083e-05, 8.222299999999932e-05, 8.222299999999932e-05, 8.23609...</msg>
<status status="PASS" starttime="20201029 12:44:43.227" endtime="20201029 12:44:43.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.239" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.238" endtime="20201029 12:44:43.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.241" level="INFO">VALUE: [9.858399999999878e-05, 8.61110000000033e-05, 8.322200000000085e-05, 8.136099999999855e-05, 8.316699999999858e-05, 8.711100000000083e-05, 8.222299999999932e-05, 8.222299999999932e-05, 8.236099999999955e-05, 8.609699999999679e-05, 8.130599999999974e-05, 8.707000000000159e-05, 8.320800000000128e-05, 8.324999999999999e-05, 8.605599999999755e-05, 8.805599999999955e-05, 8.418100000000261e-05, 8.037500000000058e-05, 8.519399999999677e-05, 8.22910000000017e-05, 8.4153e-05, 8.518100000000015e-05, 8.413900000000044e-05, 8.222199999999985e-05, 8.136099999999855e-05, 8.5153000000001e-05, 8.704200000000245e-05, 8.227799999999813e-05, 8.709700000000126e-05, 8.227700000000213e-05, 8.319400000000171e-05, 8.513899999999797e-05, 8.801400000000084e-05, 8.222199999999985e-05, 8.231899999999737e-05, 8.323600000000042e-05, 8.123599999999842e-05, 8.708299999999822e-05, 8.217999999999767e-05, 8.705600000000202e-05, 8.233399999999988e-05, 8.711100000000083e-05, 8.605500000000155e-05, 8.709800000000073e-05, 8.411099999999783e-05, 8.708300000000169e-05, 8.4153e-05, 8.609700000000026e-05, 8.32919999999987e-05, 8.125000000000146e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.240" endtime="20201029 12:44:43.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.235" endtime="20201029 12:44:43.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.246" endtime="20201029 12:44:43.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.245" endtime="20201029 12:44:43.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.244" endtime="20201029 12:44:43.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.875" endtime="20201029 12:44:43.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.875" endtime="20201029 12:44:43.267"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.276" endtime="20201029 12:44:43.296"></status>
</kw>
<msg timestamp="20201029 12:44:43.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.275" endtime="20201029 12:44:43.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.297" endtime="20201029 12:44:43.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.300" endtime="20201029 12:44:43.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.272" endtime="20201029 12:44:43.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.270" endtime="20201029 12:44:43.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.309" endtime="20201029 12:44:43.597"></status>
</kw>
<msg timestamp="20201029 12:44:43.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021369139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.308" endtime="20201029 12:44:43.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021369139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021453333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.601" endtime="20201029 12:44:43.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.610" endtime="20201029 12:44:43.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.305" endtime="20201029 12:44:43.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.303" endtime="20201029 12:44:43.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.616" level="INFO">${RESULT} = [{'diff': 8.419400000000271e-05}, {'diff': 8.029199999999917e-05}, {'diff': 8.226399999999856e-05}, {'diff': 8.606900000000112e-05}, {'diff': 8.230600000000074e-05}, {'diff': 8.416700000000304e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:43.613" endtime="20201029 12:44:43.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.621" level="INFO">${ACCURACY} = {'diff': [8.419400000000271e-05, 8.029199999999917e-05, 8.226399999999856e-05, 8.606900000000112e-05, 8.230600000000074e-05, 8.416700000000304e-05, 8.324999999999999e-05, 8.4153e-05, 8.323600000000042...</msg>
<status status="PASS" starttime="20201029 12:44:43.617" endtime="20201029 12:44:43.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.625" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.624" endtime="20201029 12:44:43.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.628" level="INFO">VALUE: [8.419400000000271e-05, 8.029199999999917e-05, 8.226399999999856e-05, 8.606900000000112e-05, 8.230600000000074e-05, 8.416700000000304e-05, 8.324999999999999e-05, 8.4153e-05, 8.323600000000042e-05, 8.418099999999915e-05, 8.420900000000175e-05, 8.327799999999913e-05, 8.694399999999852e-05, 8.143099999999986e-05, 8.708300000000169e-05, 8.316699999999858e-05, 8.70129999999969e-05, 8.126400000000103e-05, 8.326399999999956e-05, 8.41110000000013e-05, 8.413900000000044e-05, 8.5153000000001e-05, 8.230599999999727e-05, 8.316699999999858e-05, 8.320900000000075e-05, 8.233299999999694e-05, 8.126399999999756e-05, 8.136099999999855e-05, 8.22230000000028e-05, 8.137500000000158e-05, 8.791699999999986e-05, 8.509699999999926e-05, 8.132000000000278e-05, 8.219500000000018e-05, 8.608300000000069e-05, 8.424999999999752e-05, 8.409699999999826e-05, 8.230500000000127e-05, 8.323600000000042e-05, 8.236099999999955e-05, 8.602799999999841e-05, 8.520799999999981e-05, 8.223599999999942e-05, 8.705499999999908e-05, 8.419399999999924e-05, 8.704099999999951e-05, 8.705500000000255e-05, 8.413900000000044e-05, 8.23330000000004e-05, 8.700000000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.626" endtime="20201029 12:44:43.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.622" endtime="20201029 12:44:43.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.633" endtime="20201029 12:44:43.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.631" endtime="20201029 12:44:43.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.630" endtime="20201029 12:44:43.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.268" endtime="20201029 12:44:43.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.268" endtime="20201029 12:44:43.654"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.663" endtime="20201029 12:44:43.684"></status>
</kw>
<msg timestamp="20201029 12:44:43.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.661" endtime="20201029 12:44:43.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.685" endtime="20201029 12:44:43.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.688" endtime="20201029 12:44:43.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.658" endtime="20201029 12:44:43.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.656" endtime="20201029 12:44:43.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.697" endtime="20201029 12:44:43.982"></status>
</kw>
<msg timestamp="20201029 12:44:43.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.696" endtime="20201029 12:44:43.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.986" endtime="20201029 12:44:43.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.995" endtime="20201029 12:44:43.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.693" endtime="20201029 12:44:43.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.691" endtime="20201029 12:44:43.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.002" level="INFO">${RESULT} = [{'diff': 7.849999999999871e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.226400000000203e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.418099999999915e-05}, {'diff': 8.422200000000185e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:43.998" endtime="20201029 12:44:44.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.006" level="INFO">${ACCURACY} = {'diff': [7.849999999999871e-05, 8.323600000000042e-05, 8.226400000000203e-05, 8.323600000000042e-05, 8.418099999999915e-05, 8.422200000000185e-05, 8.609700000000026e-05, 8.61249999999994e-05, 8.32779...</msg>
<status status="PASS" starttime="20201029 12:44:44.003" endtime="20201029 12:44:44.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.011" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.010" endtime="20201029 12:44:44.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.013" level="INFO">VALUE: [7.849999999999871e-05, 8.323600000000042e-05, 8.226400000000203e-05, 8.323600000000042e-05, 8.418099999999915e-05, 8.422200000000185e-05, 8.609700000000026e-05, 8.61249999999994e-05, 8.327799999999913e-05, 8.324999999999999e-05, 8.125000000000146e-05, 8.423599999999795e-05, 8.129200000000017e-05, 8.226400000000203e-05, 8.226299999999909e-05, 8.618000000000167e-05, 8.520799999999981e-05, 8.137499999999812e-05, 8.609799999999973e-05, 8.327799999999913e-05, 8.413900000000044e-05, 8.71250000000004e-05, 8.136100000000202e-05, 8.701399999999984e-05, 8.429100000000023e-05, 8.224999999999899e-05, 8.711100000000083e-05, 8.22780000000016e-05, 8.419499999999872e-05, 8.709800000000073e-05, 8.22780000000016e-05, 8.611099999999983e-05, 8.613900000000244e-05, 8.419400000000271e-05, 8.805599999999955e-05, 8.138899999999769e-05, 8.222199999999985e-05, 8.609799999999973e-05, 8.522200000000285e-05, 8.518100000000015e-05, 8.427800000000013e-05, 8.422199999999838e-05, 8.512500000000187e-05, 8.419400000000271e-05, 8.134699999999898e-05, 8.424999999999752e-05, 8.509699999999926e-05, 8.516700000000058e-05, 8.4153e-05, 8.609700000000026e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.012" endtime="20201029 12:44:44.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.007" endtime="20201029 12:44:44.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.019" endtime="20201029 12:44:44.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.018" endtime="20201029 12:44:44.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.016" endtime="20201029 12:44:44.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.655" endtime="20201029 12:44:44.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.654" endtime="20201029 12:44:44.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.182" endtime="20201029 12:44:44.040"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:05.107" endtime="20201029 12:44:44.041" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:24.708" endtime="20201029 12:44:44.044"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.098" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:44:44.106" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:44:45.229" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:44:44.096" endtime="20201029 12:44:45.230"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.232" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:44:45.231" endtime="20201029 12:44:45.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.095" endtime="20201029 12:44:45.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.235" endtime="20201029 12:44:45.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.234" endtime="20201029 12:44:45.423"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.435" endtime="20201029 12:44:45.452"></status>
</kw>
<msg timestamp="20201029 12:44:45.452" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.433" endtime="20201029 12:44:45.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.455" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['IOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.453" endtime="20201029 12:44:45.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.458" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:45.456" endtime="20201029 12:44:45.458"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:45.431" endtime="20201029 12:44:45.459"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:45.429" endtime="20201029 12:44:45.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.427" endtime="20201029 12:44:45.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:45.464" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:45.463" endtime="20201029 12:44:45.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.461" endtime="20201029 12:44:45.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.427" endtime="20201029 12:44:45.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.426" endtime="20201029 12:44:45.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.466" endtime="20201029 12:44:45.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.425" endtime="20201029 12:44:45.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.469" endtime="20201029 12:44:45.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.423" endtime="20201029 12:44:45.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.094" endtime="20201029 12:44:45.471"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.477" endtime="20201029 12:44:45.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.476" endtime="20201029 12:44:45.498"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.511" endtime="20201029 12:44:45.527"></status>
</kw>
<msg timestamp="20201029 12:44:45.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.509" endtime="20201029 12:44:45.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.530" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.528" endtime="20201029 12:44:45.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.534" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:45.531" endtime="20201029 12:44:45.534"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:45.507" endtime="20201029 12:44:45.535"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:45.504" endtime="20201029 12:44:45.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.503" endtime="20201029 12:44:45.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:45.540" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:45.539" endtime="20201029 12:44:45.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.537" endtime="20201029 12:44:45.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.502" endtime="20201029 12:44:45.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.501" endtime="20201029 12:44:45.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.541" endtime="20201029 12:44:45.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.500" endtime="20201029 12:44:45.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.498" endtime="20201029 12:44:45.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.475" endtime="20201029 12:44:45.544"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.553" endtime="20201029 12:44:51.680"></status>
</kw>
<msg timestamp="20201029 12:44:51.681" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.551" endtime="20201029 12:44:51.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.686" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.683" endtime="20201029 12:44:51.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.689" endtime="20201029 12:44:51.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.548" endtime="20201029 12:44:51.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.546" endtime="20201029 12:44:51.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.700" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:44:51.696" endtime="20201029 12:44:51.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.710" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:51.707" endtime="20201029 12:44:51.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.715" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:51.712" endtime="20201029 12:44:51.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.702" endtime="20201029 12:44:51.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.725" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:51.723" endtime="20201029 12:44:51.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.730" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:51.728" endtime="20201029 12:44:51.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.718" endtime="20201029 12:44:51.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.740" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:51.738" endtime="20201029 12:44:51.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.745" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:44:51.742" endtime="20201029 12:44:51.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.733" endtime="20201029 12:44:51.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.761" endtime="20201029 12:44:52.067"></status>
</kw>
<msg timestamp="20201029 12:44:52.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065014694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165043319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.757" endtime="20201029 12:44:52.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065014694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165043319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.071" endtime="20201029 12:44:52.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.080" endtime="20201029 12:44:52.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.752" endtime="20201029 12:44:52.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.748" endtime="20201029 12:44:52.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:52.087" level="INFO">${FILTERED} = [{'diff': 0.100028625}, {'diff': 0.09994136100000003}, {'diff': 0.09997190299999997}, {'diff': 0.099971861}, {'diff': 0.09997182000000004}, {'diff': 0.09997191700000008}, {'diff': 0.09997188800000001}...</msg>
<status status="PASS" starttime="20201029 12:44:52.083" endtime="20201029 12:44:52.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.091" level="INFO">${RESULT} = {'diff': [0.100028625, 0.09994136100000003, 0.09997190299999997, 0.099971861, 0.09997182000000004, 0.09997191700000008, 0.09997188800000001, 0.09997193100000001, 0.099971861, 0.09997190300000003, 0.09...</msg>
<status status="PASS" starttime="20201029 12:44:52.088" endtime="20201029 12:44:52.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.095" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:52.094" endtime="20201029 12:44:52.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.097" level="INFO">VALUE: [0.100028625, 0.09994136100000003, 0.09997190299999997, 0.099971861, 0.09997182000000004, 0.09997191700000008, 0.09997188800000001, 0.09997193100000001, 0.099971861, 0.09997190300000003, 0.0999718329999999, 0.09997193000000015, 0.099971861, 0.09997176299999988, 0.09997195800000003, 0.09997188900000009, 0.09997191599999988, 0.09997184700000017, 0.099971861, 0.09997187500000004, 0.09997191699999997, 0.09997190200000006, 0.09997181999999993, 0.09997191699999997, 0.09997184699999995, 0.09997193099999979, 0.09997183300000012, 0.09997184699999995, 0.09997190200000006, 0.09997193099999979, 0.09997197199999963, 0.09997186100000022, 0.09997184800000003, 0.09997186100000022, 0.09997191699999997, 0.09997194399999998, 0.09997186099999977, 0.09997190300000014, 0.09997187500000004, 0.09997186100000022, 0.09997188900000076, 0.09997188899999987, 0.09997180500000002, 0.09997190300000014, 0.09997190200000006, 0.09997184699999995, 0.09997191699999952, 0.09997191699999952, 0.09997186100000022, 0.09997188899999987, 0.09997184699999995]</msg>
<status status="PASS" starttime="20201029 12:44:52.096" endtime="20201029 12:44:52.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.091" endtime="20201029 12:44:52.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.545" endtime="20201029 12:44:52.099"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:45.472" endtime="20201029 12:44:52.100" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.106" endtime="20201029 12:44:52.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.105" endtime="20201029 12:44:52.126"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.141" endtime="20201029 12:44:52.159"></status>
</kw>
<msg timestamp="20201029 12:44:52.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.139" endtime="20201029 12:44:52.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.160" endtime="20201029 12:44:52.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.165" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:52.163" endtime="20201029 12:44:52.165"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:52.137" endtime="20201029 12:44:52.166"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:52.134" endtime="20201029 12:44:52.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.132" endtime="20201029 12:44:52.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:52.171" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:52.170" endtime="20201029 12:44:52.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.168" endtime="20201029 12:44:52.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.131" endtime="20201029 12:44:52.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.130" endtime="20201029 12:44:52.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.173" endtime="20201029 12:44:52.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.129" endtime="20201029 12:44:52.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.127" endtime="20201029 12:44:52.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.104" endtime="20201029 12:44:52.176"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.184" endtime="20201029 12:44:58.311"></status>
</kw>
<msg timestamp="20201029 12:44:58.312" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.183" endtime="20201029 12:44:58.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.318" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.314" endtime="20201029 12:44:58.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.320" endtime="20201029 12:44:58.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.180" endtime="20201029 12:44:58.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.178" endtime="20201029 12:44:58.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.331" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:44:58.327" endtime="20201029 12:44:58.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.341" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:58.339" endtime="20201029 12:44:58.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.346" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:58.344" endtime="20201029 12:44:58.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.334" endtime="20201029 12:44:58.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.358" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:58.354" endtime="20201029 12:44:58.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.363" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:58.361" endtime="20201029 12:44:58.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.349" endtime="20201029 12:44:58.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.373" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:58.371" endtime="20201029 12:44:58.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.378" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:44:58.376" endtime="20201029 12:44:58.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.366" endtime="20201029 12:44:58.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.395" endtime="20201029 12:44:58.700"></status>
</kw>
<msg timestamp="20201029 12:44:58.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167938306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.391" endtime="20201029 12:44:58.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167938306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.704" endtime="20201029 12:44:58.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.713" endtime="20201029 12:44:58.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.385" endtime="20201029 12:44:58.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.381" endtime="20201029 12:44:58.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:58.719" level="INFO">${FILTERED} = [{'diff': 0.10012023700000001}, {'diff': 0.10006332000000001}, {'diff': 0.09978268100000004}, {'diff': 0.10000242999999998}, {'diff': 0.09997188899999998}, {'diff': 0.099971861}, {'diff': 0.0999718889...</msg>
<status status="PASS" starttime="20201029 12:44:58.716" endtime="20201029 12:44:58.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.723" level="INFO">${RESULT} = {'diff': [0.10012023700000001, 0.10006332000000001, 0.09978268100000004, 0.10000242999999998, 0.09997188899999998, 0.099971861, 0.09997188899999998, 0.09997188899999998, 0.09997187499999993, 0.0999718...</msg>
<status status="PASS" starttime="20201029 12:44:58.720" endtime="20201029 12:44:58.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.728" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:58.727" endtime="20201029 12:44:58.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.731" level="INFO">VALUE: [0.10012023700000001, 0.10006332000000001, 0.09978268100000004, 0.10000242999999998, 0.09997188899999998, 0.099971861, 0.09997188899999998, 0.09997188899999998, 0.09997187499999993, 0.09997188899999998, 0.09997183399999998, 0.09997187500000004, 0.09997194500000006, 0.09997187500000004, 0.09997193100000001, 0.09997187500000004, 0.09997179200000006, 0.09997197199999985, 0.09997190300000014, 0.09997187500000004, 0.0999719859999999, 0.0999718340000002, 0.09997186099999977, 0.09997194499999962, 0.09997186099999977, 0.09997183300000012, 0.09997190300000014, 0.0999719029999997, 0.09997191700000041, 0.09997183399999976, 0.09997194500000006, 0.09997179199999984, 0.09997187500000004, 0.09997190300000014, 0.0999719579999998, 0.09997184699999995, 0.09997186100000022, 0.09997186199999986, 0.09997179199999984, 0.0999719579999998, 0.09997190200000006, 0.09997184699999995, 0.09997186099999933, 0.09997190200000006, 0.09997187500000049, 0.0999719300000006, 0.09997184699999995, 0.09997190300000014, 0.09997194399999998, 0.0999718190000003, 0.09997187500000049]</msg>
<status status="PASS" starttime="20201029 12:44:58.730" endtime="20201029 12:44:58.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.724" endtime="20201029 12:44:58.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.176" endtime="20201029 12:44:58.733"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:52.101" endtime="20201029 12:44:58.733" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.740" endtime="20201029 12:44:58.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.738" endtime="20201029 12:44:58.760"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.774" endtime="20201029 12:44:58.795"></status>
</kw>
<msg timestamp="20201029 12:44:58.796" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.772" endtime="20201029 12:44:58.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.798" endtime="20201029 12:44:58.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.806" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:58.802" endtime="20201029 12:44:58.807"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:58.769" endtime="20201029 12:44:58.808"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:58.767" endtime="20201029 12:44:58.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.765" endtime="20201029 12:44:58.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:58.816" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:58.815" endtime="20201029 12:44:58.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.811" endtime="20201029 12:44:58.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.765" endtime="20201029 12:44:58.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.764" endtime="20201029 12:44:58.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.818" endtime="20201029 12:44:58.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.763" endtime="20201029 12:44:58.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.761" endtime="20201029 12:44:58.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.737" endtime="20201029 12:44:58.823"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.835" endtime="20201029 12:45:04.963"></status>
</kw>
<msg timestamp="20201029 12:45:04.964" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.831" endtime="20201029 12:45:04.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.969" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.966" endtime="20201029 12:45:04.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.971" endtime="20201029 12:45:04.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.828" endtime="20201029 12:45:04.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.826" endtime="20201029 12:45:04.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.991" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:45:04.979" endtime="20201029 12:45:04.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.001" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:04.998" endtime="20201029 12:45:05.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.006" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:05.004" endtime="20201029 12:45:05.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.993" endtime="20201029 12:45:05.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.017" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:05.015" endtime="20201029 12:45:05.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.022" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:05.020" endtime="20201029 12:45:05.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.010" endtime="20201029 12:45:05.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.033" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:05.030" endtime="20201029 12:45:05.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.037" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:45:05.035" endtime="20201029 12:45:05.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.025" endtime="20201029 12:45:05.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.052" endtime="20201029 12:45:05.350"></status>
</kw>
<msg timestamp="20201029 12:45:05.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.086108444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.186302361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.050" endtime="20201029 12:45:05.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.086108444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.186302361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.355" endtime="20201029 12:45:05.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.363" endtime="20201029 12:45:05.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.044" endtime="20201029 12:45:05.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.041" endtime="20201029 12:45:05.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:05.370" level="INFO">${FILTERED} = [{'diff': 0.100193917}, {'diff': 0.10006330500000002}, {'diff': 0.099687472}, {'diff': 0.09997183300000001}, {'diff': 0.099971945}, {'diff': 0.09997190299999992}, {'diff': 0.09997184700000006}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:45:05.366" endtime="20201029 12:45:05.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.375" level="INFO">${RESULT} = {'diff': [0.100193917, 0.10006330500000002, 0.099687472, 0.09997183300000001, 0.099971945, 0.09997190299999992, 0.09997184700000006, 0.09997188899999998, 0.09997187499999993, 0.0999718329999999, 0.099...</msg>
<status status="PASS" starttime="20201029 12:45:05.371" endtime="20201029 12:45:05.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.379" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:05.378" endtime="20201029 12:45:05.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.381" level="INFO">VALUE: [0.100193917, 0.10006330500000002, 0.099687472, 0.09997183300000001, 0.099971945, 0.09997190299999992, 0.09997184700000006, 0.09997188899999998, 0.09997187499999993, 0.0999718329999999, 0.09997199999999995, 0.09997181899999985, 0.099971861, 0.09997188800000001, 0.09997184700000017, 0.09997191699999997, 0.09997187500000004, 0.09997188900000009, 0.09997184699999995, 0.09997184800000025, 0.09997195899999989, 0.0999718340000002, 0.09997187500000004, 0.09997193099999979, 0.09997181999999993, 0.09997187500000004, 0.09997193099999979, 0.09997187500000004, 0.09997187500000004, 0.09997190200000006, 0.09997188900000031, 0.09997186099999977, 0.09997177800000001, 0.09997200000000017, 0.09997184800000003, 0.09997187500000004, 0.09997191699999997, 0.0999718340000002, 0.09997194500000006, 0.09997180600000011, 0.09997198600000079, 0.09997188899999987, 0.09997186100000022, 0.0999718749999996, 0.09997190299999925, 0.09997182000000038, 0.09997191600000033, 0.09997188899999987, 0.09997182000000038, 0.09997188799999979, 0.09997181999999949]</msg>
<status status="PASS" starttime="20201029 12:45:05.380" endtime="20201029 12:45:05.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.376" endtime="20201029 12:45:05.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.824" endtime="20201029 12:45:05.383"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:58.735" endtime="20201029 12:45:05.384" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.390" endtime="20201029 12:45:05.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.389" endtime="20201029 12:45:05.410"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.424" endtime="20201029 12:45:05.442"></status>
</kw>
<msg timestamp="20201029 12:45:05.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.422" endtime="20201029 12:45:05.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.445" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.443" endtime="20201029 12:45:05.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.449" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:05.446" endtime="20201029 12:45:05.449"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:05.420" endtime="20201029 12:45:05.450"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:05.417" endtime="20201029 12:45:05.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.416" endtime="20201029 12:45:05.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:05.455" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:05.454" endtime="20201029 12:45:05.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.452" endtime="20201029 12:45:05.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.415" endtime="20201029 12:45:05.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.414" endtime="20201029 12:45:05.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.457" endtime="20201029 12:45:05.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.413" endtime="20201029 12:45:05.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.411" endtime="20201029 12:45:05.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.388" endtime="20201029 12:45:05.459"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.468" endtime="20201029 12:45:11.593"></status>
</kw>
<msg timestamp="20201029 12:45:11.594" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.466" endtime="20201029 12:45:11.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.600" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.596" endtime="20201029 12:45:11.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.602" endtime="20201029 12:45:11.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.464" endtime="20201029 12:45:11.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.461" endtime="20201029 12:45:11.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.614" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:45:11.609" endtime="20201029 12:45:11.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.623" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:11.621" endtime="20201029 12:45:11.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.628" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:11.626" endtime="20201029 12:45:11.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.616" endtime="20201029 12:45:11.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.638" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:11.636" endtime="20201029 12:45:11.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.643" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:11.640" endtime="20201029 12:45:11.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.631" endtime="20201029 12:45:11.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.653" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:11.651" endtime="20201029 12:45:11.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.658" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:45:11.656" endtime="20201029 12:45:11.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.646" endtime="20201029 12:45:11.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.672" endtime="20201029 12:45:11.968"></status>
</kw>
<msg timestamp="20201029 12:45:11.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067370667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167729264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.670" endtime="20201029 12:45:11.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067370667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167729264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.973" endtime="20201029 12:45:11.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.981" endtime="20201029 12:45:11.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.665" endtime="20201029 12:45:11.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.661" endtime="20201029 12:45:11.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:11.988" level="INFO">${FILTERED} = [{'diff': 0.100358597}, {'diff': 0.100073736}, {'diff': 0.09953006999999997}, {'diff': 0.09997186199999997}, {'diff': 0.09997188900000004}, {'diff': 0.09997190299999992}, {'diff': 0.09997190299999992}...</msg>
<status status="PASS" starttime="20201029 12:45:11.984" endtime="20201029 12:45:11.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.993" level="INFO">${RESULT} = {'diff': [0.100358597, 0.100073736, 0.09953006999999997, 0.09997186199999997, 0.09997188900000004, 0.09997190299999992, 0.09997190299999992, 0.09997177800000001, 0.099972014, 0.09997183400000009, 0.09...</msg>
<status status="PASS" starttime="20201029 12:45:11.989" endtime="20201029 12:45:11.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.998" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:11.997" endtime="20201029 12:45:11.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.001" level="INFO">VALUE: [0.100358597, 0.100073736, 0.09953006999999997, 0.09997186199999997, 0.09997188900000004, 0.09997190299999992, 0.09997190299999992, 0.09997177800000001, 0.099972014, 0.09997183400000009, 0.09997181999999993, 0.09997194499999984, 0.09997179200000006, 0.09997192999999993, 0.09997184699999995, 0.09997193000000015, 0.099971861, 0.09997181899999985, 0.09997190300000014, 0.09997197300000016, 0.09997188899999987, 0.0999718340000002, 0.09997187500000004, 0.09997191699999997, 0.09997190300000014, 0.09997191699999997, 0.0999718190000003, 0.0999719579999998, 0.09997188900000031, 0.0999719029999997, 0.09997190300000014, 0.09997184699999995, 0.09997184699999995, 0.09997186100000022, 0.09997188899999987, 0.09997193000000015, 0.09997190300000014, 0.09997181899999985, 0.09997191599999988, 0.09997186099999977, 0.09997190299999925, 0.0999718749999996, 0.09997190300000014, 0.09997182000000038, 0.09997197299999971, 0.09997182000000038, 0.09997177799999957, 0.09997197199999963, 0.09997180500000002, 0.09997188899999987, 0.09997190200000006]</msg>
<status status="PASS" starttime="20201029 12:45:11.999" endtime="20201029 12:45:12.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.995" endtime="20201029 12:45:12.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.460" endtime="20201029 12:45:12.003"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:05.385" endtime="20201029 12:45:12.003" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:12.010" endtime="20201029 12:45:12.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.008" endtime="20201029 12:45:12.030"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.044" endtime="20201029 12:45:12.064"></status>
</kw>
<msg timestamp="20201029 12:45:12.064" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.043" endtime="20201029 12:45:12.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.066" endtime="20201029 12:45:12.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.070" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:12.068" endtime="20201029 12:45:12.071"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:12.040" endtime="20201029 12:45:12.071"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:12.037" endtime="20201029 12:45:12.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.035" endtime="20201029 12:45:12.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:12.076" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:12.076" endtime="20201029 12:45:12.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.073" endtime="20201029 12:45:12.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.034" endtime="20201029 12:45:12.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.034" endtime="20201029 12:45:12.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.078" endtime="20201029 12:45:12.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.032" endtime="20201029 12:45:12.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.031" endtime="20201029 12:45:12.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.007" endtime="20201029 12:45:12.081"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.090" endtime="20201029 12:45:18.214"></status>
</kw>
<msg timestamp="20201029 12:45:18.215" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.088" endtime="20201029 12:45:18.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.221" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.218" endtime="20201029 12:45:18.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.223" endtime="20201029 12:45:18.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.085" endtime="20201029 12:45:18.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.083" endtime="20201029 12:45:18.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.236" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:45:18.231" endtime="20201029 12:45:18.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.245" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:18.242" endtime="20201029 12:45:18.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.249" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:18.247" endtime="20201029 12:45:18.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.237" endtime="20201029 12:45:18.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.266" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:18.262" endtime="20201029 12:45:18.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.276" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:18.273" endtime="20201029 12:45:18.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.253" endtime="20201029 12:45:18.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.298" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:18.292" endtime="20201029 12:45:18.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.306" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:45:18.301" endtime="20201029 12:45:18.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.281" endtime="20201029 12:45:18.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.323" endtime="20201029 12:45:18.620"></status>
</kw>
<msg timestamp="20201029 12:45:18.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069675014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170211139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.319" endtime="20201029 12:45:18.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069675014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170211139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.624" endtime="20201029 12:45:18.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.632" endtime="20201029 12:45:18.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.313" endtime="20201029 12:45:18.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.310" endtime="20201029 12:45:18.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:18.638" level="INFO">${FILTERED} = [{'diff': 0.10053612500000002}, {'diff': 0.100078361}, {'diff': 0.09935347300000003}, {'diff': 0.099971945}, {'diff': 0.09997183400000004}, {'diff': 0.099971861}, {'diff': 0.09997190299999992}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:45:18.635" endtime="20201029 12:45:18.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.642" level="INFO">${RESULT} = {'diff': [0.10053612500000002, 0.100078361, 0.09935347300000003, 0.099971945, 0.09997183400000004, 0.099971861, 0.09997190299999992, 0.09997181900000007, 0.09997194399999998, 0.09997188900000009, 0.09...</msg>
<status status="PASS" starttime="20201029 12:45:18.639" endtime="20201029 12:45:18.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.646" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:18.645" endtime="20201029 12:45:18.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.649" level="INFO">VALUE: [0.10053612500000002, 0.100078361, 0.09935347300000003, 0.099971945, 0.09997183400000004, 0.099971861, 0.09997190299999992, 0.09997181900000007, 0.09997194399999998, 0.09997188900000009, 0.09997181999999993, 0.09997184800000003, 0.09997191699999997, 0.09997183300000012, 0.099972014, 0.09997180500000002, 0.09997181899999985, 0.09997200000000017, 0.09997188899999987, 0.09997182000000016, 0.09997179199999984, 0.099972014, 0.09997181999999993, 0.09997179199999984, 0.09997200000000017, 0.09997177800000001, 0.0999719579999998, 0.0999718190000003, 0.09997188899999987, 0.09997193000000015, 0.09997177800000001, 0.09997190300000014, 0.09997186099999977, 0.0999718340000002, 0.09997184800000003, 0.09997194500000006, 0.09997191699999997, 0.09997186099999977, 0.09997197200000008, 0.09997179199999984, 0.0999718749999996, 0.09997190300000014, 0.09997183400000065, 0.09997190300000014, 0.09997190300000014, 0.09997186100000022, 0.09997188899999987, 0.09997184699999995, 0.09997180600000011, 0.09997194399999998, 0.09997187500000049]</msg>
<status status="PASS" starttime="20201029 12:45:18.647" endtime="20201029 12:45:18.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.643" endtime="20201029 12:45:18.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.082" endtime="20201029 12:45:18.651"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:12.005" endtime="20201029 12:45:18.652" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.658" endtime="20201029 12:45:18.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.656" endtime="20201029 12:45:18.678"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.691" endtime="20201029 12:45:18.711"></status>
</kw>
<msg timestamp="20201029 12:45:18.711" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.689" endtime="20201029 12:45:18.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.714" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.713" endtime="20201029 12:45:18.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.717" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:18.715" endtime="20201029 12:45:18.717"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:18.687" endtime="20201029 12:45:18.718"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:18.684" endtime="20201029 12:45:18.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.683" endtime="20201029 12:45:18.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:18.722" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:18.722" endtime="20201029 12:45:18.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.720" endtime="20201029 12:45:18.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.682" endtime="20201029 12:45:18.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.681" endtime="20201029 12:45:18.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.724" endtime="20201029 12:45:18.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.680" endtime="20201029 12:45:18.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.679" endtime="20201029 12:45:18.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.655" endtime="20201029 12:45:18.727"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.736" endtime="20201029 12:45:24.860"></status>
</kw>
<msg timestamp="20201029 12:45:24.861" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.733" endtime="20201029 12:45:24.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.867" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.864" endtime="20201029 12:45:24.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.869" endtime="20201029 12:45:24.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.731" endtime="20201029 12:45:24.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.729" endtime="20201029 12:45:24.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:24.880" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:45:24.876" endtime="20201029 12:45:24.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.888" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:24.886" endtime="20201029 12:45:24.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.892" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:24.890" endtime="20201029 12:45:24.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.881" endtime="20201029 12:45:24.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.902" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:24.900" endtime="20201029 12:45:24.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.904" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:24.903" endtime="20201029 12:45:24.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.895" endtime="20201029 12:45:24.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.908" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:24.907" endtime="20201029 12:45:24.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.910" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:45:24.909" endtime="20201029 12:45:24.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.905" endtime="20201029 12:45:24.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.917" endtime="20201029 12:45:25.213"></status>
</kw>
<msg timestamp="20201029 12:45:25.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068309875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169040125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.916" endtime="20201029 12:45:25.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068309875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169040125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.217" endtime="20201029 12:45:25.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.225" endtime="20201029 12:45:25.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.914" endtime="20201029 12:45:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.912" endtime="20201029 12:45:25.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:25.232" level="INFO">${FILTERED} = [{'diff': 0.10073025000000001}, {'diff': 0.10007531899999997}, {'diff': 0.100063389}, {'diff': 0.09908007000000002}, {'diff': 0.09997179200000006}, {'diff': 0.09997184699999995}, {'diff': 0.0999719300...</msg>
<status status="PASS" starttime="20201029 12:45:25.229" endtime="20201029 12:45:25.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.237" level="INFO">${RESULT} = {'diff': [0.10073025000000001, 0.10007531899999997, 0.100063389, 0.09908007000000002, 0.09997179200000006, 0.09997184699999995, 0.09997193000000004, 0.09997193000000004, 0.09997184699999995, 0.0999718...</msg>
<status status="PASS" starttime="20201029 12:45:25.233" endtime="20201029 12:45:25.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.241" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:25.240" endtime="20201029 12:45:25.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.243" level="INFO">VALUE: [0.10073025000000001, 0.10007531899999997, 0.100063389, 0.09908007000000002, 0.09997179200000006, 0.09997184699999995, 0.09997193000000004, 0.09997193000000004, 0.09997184699999995, 0.09997183300000012, 0.09997188899999987, 0.09997180500000002, 0.0999719160000001, 0.09997181999999993, 0.09997195900000011, 0.09997177800000001, 0.09997198600000012, 0.09997184800000003, 0.099971861, 0.09997187499999982, 0.09997190300000014, 0.09997187500000004, 0.09997176400000019, 0.09997197299999971, 0.09997186099999977, 0.09997184699999995, 0.09997179200000028, 0.09997187500000004, 0.09997193099999979, 0.09997188900000031, 0.0999719029999997, 0.09997183399999976, 0.09997179200000028, 0.09997190200000006, 0.09997194399999998, 0.09997179199999984, 0.09997188900000031, 0.09997187500000004, 0.0999718749999996, 0.09997181999999993, 0.09997191700000041, 0.09997191599999944, 0.09997179199999984, 0.09997191700000041, 0.09997184699999995, 0.09997191600000033, 0.09997177800000046, 0.09997201400000044, 0.09997191700000041, 0.09997177799999957, 0.09997188899999987]</msg>
<status status="PASS" starttime="20201029 12:45:25.242" endtime="20201029 12:45:25.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.237" endtime="20201029 12:45:25.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.727" endtime="20201029 12:45:25.245"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:18.653" endtime="20201029 12:45:25.245" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:44:44.053" endtime="20201029 12:45:25.254"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:42:39.741" endtime="20201029 12:45:25.288"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
