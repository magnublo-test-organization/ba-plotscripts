<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:26:31.205" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:26:31.796" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:26:31.805" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:26:32.993" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:26:31.795" endtime="20201030 18:26:32.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:26:32.996" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:26:32.995" endtime="20201030 18:26:32.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:31.793" endtime="20201030 18:26:32.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:32.999" endtime="20201030 18:26:33.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:32.998" endtime="20201030 18:26:33.233"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:33.245" endtime="20201030 18:26:33.263"></status>
</kw>
<msg timestamp="20201030 18:26:33.264" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['7)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:33.244" endtime="20201030 18:26:33.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['7)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:33.265" endtime="20201030 18:26:33.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.270" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:33.268" endtime="20201030 18:26:33.270"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:33.241" endtime="20201030 18:26:33.271"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:33.239" endtime="20201030 18:26:33.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.238" endtime="20201030 18:26:33.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:33.276" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:33.275" endtime="20201030 18:26:33.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.272" endtime="20201030 18:26:33.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.237" endtime="20201030 18:26:33.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.236" endtime="20201030 18:26:33.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:33.278" endtime="20201030 18:26:33.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.235" endtime="20201030 18:26:33.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:33.281" endtime="20201030 18:26:33.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.233" endtime="20201030 18:26:33.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:31.792" endtime="20201030 18:26:33.283"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:33.289" endtime="20201030 18:26:33.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.287" endtime="20201030 18:26:33.309"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:33.323" endtime="20201030 18:26:33.339"></status>
</kw>
<msg timestamp="20201030 18:26:33.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:33.321" endtime="20201030 18:26:33.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:33.340" endtime="20201030 18:26:33.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.345" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:33.343" endtime="20201030 18:26:33.345"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:33.318" endtime="20201030 18:26:33.346"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:33.316" endtime="20201030 18:26:33.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.314" endtime="20201030 18:26:33.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:33.350" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:33.349" endtime="20201030 18:26:33.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.347" endtime="20201030 18:26:33.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.313" endtime="20201030 18:26:33.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.313" endtime="20201030 18:26:33.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:33.352" endtime="20201030 18:26:33.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.311" endtime="20201030 18:26:33.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.310" endtime="20201030 18:26:33.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.286" endtime="20201030 18:26:33.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:33.362" endtime="20201030 18:26:33.378"></status>
</kw>
<msg timestamp="20201030 18:26:33.378" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:33.359" endtime="20201030 18:26:33.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.380" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:33.379" endtime="20201030 18:26:33.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:33.381" endtime="20201030 18:26:33.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.357" endtime="20201030 18:26:33.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.355" endtime="20201030 18:26:33.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.388" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:26:33.387" endtime="20201030 18:26:33.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.390" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:26:33.389" endtime="20201030 18:26:33.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.385" endtime="20201030 18:26:33.391"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:33.283" endtime="20201030 18:26:33.392" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:26:31.331" endtime="20201030 18:26:33.394"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:26:33.445" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:26:33.454" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:26:34.650" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:26:33.444" endtime="20201030 18:26:34.652"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:26:34.657" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:26:34.654" endtime="20201030 18:26:34.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.443" endtime="20201030 18:26:34.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:34.663" endtime="20201030 18:26:34.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:34.660" endtime="20201030 18:26:34.966"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:34.979" endtime="20201030 18:26:34.996"></status>
</kw>
<msg timestamp="20201030 18:26:34.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['o RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:34.977" endtime="20201030 18:26:34.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:34.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['o RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:34.998" endtime="20201030 18:26:35.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.003" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:35.001" endtime="20201030 18:26:35.003"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:34.975" endtime="20201030 18:26:35.004"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:34.972" endtime="20201030 18:26:35.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:34.971" endtime="20201030 18:26:35.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:35.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:35.007" endtime="20201030 18:26:35.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.005" endtime="20201030 18:26:35.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:34.970" endtime="20201030 18:26:35.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:34.970" endtime="20201030 18:26:35.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.010" endtime="20201030 18:26:35.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:34.969" endtime="20201030 18:26:35.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.013" endtime="20201030 18:26:35.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:34.967" endtime="20201030 18:26:35.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:33.441" endtime="20201030 18:26:35.015"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:35.021" endtime="20201030 18:26:35.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.019" endtime="20201030 18:26:35.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.054" endtime="20201030 18:26:35.075"></status>
</kw>
<msg timestamp="20201030 18:26:35.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.053" endtime="20201030 18:26:35.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.077" endtime="20201030 18:26:35.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.082" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:35.080" endtime="20201030 18:26:35.082"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:35.050" endtime="20201030 18:26:35.083"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:35.048" endtime="20201030 18:26:35.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.047" endtime="20201030 18:26:35.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:35.087" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:35.087" endtime="20201030 18:26:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.084" endtime="20201030 18:26:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.046" endtime="20201030 18:26:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.045" endtime="20201030 18:26:35.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.089" endtime="20201030 18:26:35.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.044" endtime="20201030 18:26:35.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.042" endtime="20201030 18:26:35.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.018" endtime="20201030 18:26:35.092"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.100" endtime="20201030 18:26:35.116"></status>
</kw>
<msg timestamp="20201030 18:26:35.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.098" endtime="20201030 18:26:35.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.119" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.117" endtime="20201030 18:26:35.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.120" endtime="20201030 18:26:35.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.096" endtime="20201030 18:26:35.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.094" endtime="20201030 18:26:35.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.129" endtime="20201030 18:26:35.415"></status>
</kw>
<msg timestamp="20201030 18:26:35.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070978847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070979389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:35.127" endtime="20201030 18:26:35.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070978847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070979389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:35.419" endtime="20201030 18:26:35.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.428" endtime="20201030 18:26:35.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.125" endtime="20201030 18:26:35.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.123" endtime="20201030 18:26:35.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:35.455" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:35.431" endtime="20201030 18:26:35.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.456" endtime="20201030 18:26:35.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.461" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:35.460" endtime="20201030 18:26:35.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.465" level="INFO">VALUE: {'eventtime': [0.070978847, 0.070979389, 0.070988472, 0.070989014, 0.070999125, 0.070999597, 0.071009722, 0.071010264, 0.071019542, 0.071020083, 0.07102875, 0.071029236, 0.071039292, 0.071039833, 0.071048611, 0.071049083, 0.071056542, 0.071057083, 0.0710675, 0.071068042, 0.071075972, 0.071076514, 0.071084972, 0.071085458, 0.071095403, 0.071095944, 0.071104625, 0.071105097, 0.071114944, 0.071115486, 0.071125597, 0.071126139, 0.071135639, 0.071136125, 0.071143889, 0.071144431, 0.071153292, 0.071153833, 0.071163861, 0.071164347, 0.071174708, 0.071175194, 0.071183292, 0.071183778, 0.071191222, 0.071191764, 0.071200236, 0.071200778, 0.071208722, 0.071209264, 0.071217319, 0.071217806, 0.071225292, 0.071225778, 0.071235958, 0.0712365, 0.071246944, 0.071247486, 0.071258014, 0.071258556, 0.071267361, 0.071267833, 0.071276014, 0.0712765, 0.071286347, 0.071286833, 0.071294417, 0.071294903, 0.071304736, 0.071305278, 0.071314264, 0.07131475, 0.071324917, 0.071325403, 0.071334764, 0.071335236, 0.071344958, 0.0713455, 0.071353944, 0.071354486, 0.071363458, 0.071364, 0.071373903, 0.071374444, 0.071383694, 0.071384167, 0.071392444, 0.071392931, 0.071403208, 0.07140375, 0.071413361, 0.071413903, 0.071421861, 0.071422347, 0.071432208, 0.07143275, 0.071442861, 0.071443403, 0.071453986, 0.071454458], 'sourcediff': [0, 5.420000000061487e-07, 9.082999999993069e-06, 5.420000000061487e-07, 1.0110999999993209e-05, 4.720000000013602e-07, 1.0124999999999718e-05, 5.420000000061487e-07, 9.278000000001452e-06, 5.409999999927972e-07, 8.667000000003866e-06, 4.859999999939912e-07, 1.005600000000828e-05, 5.409999999927972e-07, 8.778000000000952e-06, 4.720000000013602e-07, 7.459000000001326e-06, 5.409999999927972e-07, 1.0417000000012555e-05, 5.419999999922709e-07, 7.930000000003212e-06, 5.419999999922709e-07, 8.458000000002852e-06, 4.86000000007869e-07, 9.944999999997317e-06, 5.409999999927972e-07, 8.681000000010375e-06, 4.720000000013602e-07, 9.846999999993389e-06, 5.420000000061487e-07, 1.0110999999993209e-05, 5.420000000061487e-07, 9.499999999995623e-06, 4.859999999939912e-07, 7.76400000000732e-06, 5.419999999922709e-07, 8.861000000012775e-06, 5.409999999927972e-07, 1.0027999999995263e-05, 4.86000000007869e-07, 1.0361000000000398e-05, 4.859999999939912e-07, 8.097999999998051e-06, 4.86000000007869e-07, 7.443999999995343e-06, 5.420000000061487e-07, 8.471999999995483e-06, 5.420000000061487e-07, 7.943999999995843e-06, 5.419999999922709e-07, 8.055000000006807e-06, 4.869999999934649e-07, 7.486000000000992e-06, 4.86000000007869e-07, 1.0179999999998524e-05, 5.419999999922709e-07, 1.0444000000012221e-05, 5.419999999922709e-07, 1.0527999999995763e-05, 5.420000000061487e-07, 8.805000000000618e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.86000000007869e-07, 9.846999999993389e-06, 4.859999999939912e-07, 7.58400000000492e-06, 4.86000000007869e-07, 9.83299999998688e-06, 5.420000000061487e-07, 8.986000000002492e-06, 4.859999999939912e-07, 1.0167000000005366e-05, 4.859999999939912e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.722000000003672e-06, 5.420000000061487e-07, 8.443999999996343e-06, 5.419999999922709e-07, 8.972000000009861e-06, 5.419999999922709e-07, 9.903000000005546e-06, 5.409999999927972e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 4.870000000073427e-07, 1.02769999999891e-05, 5.420000000061487e-07, 9.610999999992709e-06, 5.420000000061487e-07, 7.958000000002352e-06, 4.859999999939912e-07, 9.860999999999898e-06, 5.420000000061487e-07, 1.0110999999993209e-05, 5.420000000061487e-07, 1.0582999999994569e-05, 4.720000000013602e-07], 'source_diff': [0, 5.420000000061487e-07, 9.082999999993069e-06, 5.420000000061487e-07, 1.0110999999993209e-05, 4.720000000013602e-07, 1.0124999999999718e-05, 5.420000000061487e-07, 9.278000000001452e-06, 5.409999999927972e-07, 8.667000000003866e-06, 4.859999999939912e-07, 1.005600000000828e-05, 5.409999999927972e-07, 8.778000000000952e-06, 4.720000000013602e-07, 7.459000000001326e-06, 5.409999999927972e-07, 1.0417000000012555e-05, 5.419999999922709e-07, 7.930000000003212e-06, 5.419999999922709e-07, 8.458000000002852e-06, 4.86000000007869e-07, 9.944999999997317e-06, 5.409999999927972e-07, 8.681000000010375e-06, 4.720000000013602e-07, 9.846999999993389e-06, 5.420000000061487e-07, 1.0110999999993209e-05, 5.420000000061487e-07, 9.499999999995623e-06, 4.859999999939912e-07, 7.76400000000732e-06, 5.419999999922709e-07, 8.861000000012775e-06, 5.409999999927972e-07, 1.0027999999995263e-05, 4.86000000007869e-07, 1.0361000000000398e-05, 4.859999999939912e-07, 8.097999999998051e-06, 4.86000000007869e-07, 7.443999999995343e-06, 5.420000000061487e-07, 8.471999999995483e-06, 5.420000000061487e-07, 7.943999999995843e-06, 5.419999999922709e-07, 8.055000000006807e-06, 4.869999999934649e-07, 7.486000000000992e-06, 4.86000000007869e-07, 1.0179999999998524e-05, 5.419999999922709e-07, 1.0444000000012221e-05, 5.419999999922709e-07, 1.0527999999995763e-05, 5.420000000061487e-07, 8.805000000000618e-06, 4.720000000013602e-07, 8.180999999995997e-06, 4.86000000007869e-07, 9.846999999993389e-06, 4.859999999939912e-07, 7.58400000000492e-06, 4.86000000007869e-07, 9.83299999998688e-06, 5.420000000061487e-07, 8.986000000002492e-06, 4.859999999939912e-07, 1.0167000000005366e-05, 4.859999999939912e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.722000000003672e-06, 5.420000000061487e-07, 8.443999999996343e-06, 5.419999999922709e-07, 8.972000000009861e-06, 5.419999999922709e-07, 9.903000000005546e-06, 5.409999999927972e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 4.870000000073427e-07, 1.02769999999891e-05, 5.420000000061487e-07, 9.610999999992709e-06, 5.420000000061487e-07, 7.958000000002352e-06, 4.859999999939912e-07, 9.860999999999898e-06, 5.420000000061487e-07, 1.0110999999993209e-05, 5.420000000061487e-07, 1.0582999999994569e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:35.462" endtime="20201030 18:26:35.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.458" endtime="20201030 18:26:35.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:35.471" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 5.420000000061487e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.409999999927972e-07}, {'diff': 4.859999999939912e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:35.468" endtime="20201030 18:26:35.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:35.476" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.420000000061487e-07, 5.409999999927972e-07, 4.859999999939912e-07, 5.409999999927972e-07, 4.720000000013602e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:26:35.472" endtime="20201030 18:26:35.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.480" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:35.479" endtime="20201030 18:26:35.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.483" level="INFO">VALUE: [5.420000000061487e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.420000000061487e-07, 5.409999999927972e-07, 4.859999999939912e-07, 5.409999999927972e-07, 4.720000000013602e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.86000000007869e-07, 5.409999999927972e-07, 4.720000000013602e-07, 5.420000000061487e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.419999999922709e-07, 5.409999999927972e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.86000000007869e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999922709e-07, 4.869999999934649e-07, 4.86000000007869e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.86000000007869e-07, 5.420000000061487e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999927972e-07, 4.7300000000083386e-07, 4.870000000073427e-07, 5.420000000061487e-07, 5.420000000061487e-07, 4.859999999939912e-07, 5.420000000061487e-07, 5.420000000061487e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:26:35.481" endtime="20201030 18:26:35.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.477" endtime="20201030 18:26:35.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:35.493" endtime="20201030 18:26:35.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.492" endtime="20201030 18:26:35.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.484" endtime="20201030 18:26:35.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.093" endtime="20201030 18:26:35.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.093" endtime="20201030 18:26:35.514"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.522" endtime="20201030 18:26:35.538"></status>
</kw>
<msg timestamp="20201030 18:26:35.539" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.521" endtime="20201030 18:26:35.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.541" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.540" endtime="20201030 18:26:35.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.543" endtime="20201030 18:26:35.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.518" endtime="20201030 18:26:35.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.516" endtime="20201030 18:26:35.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.552" endtime="20201030 18:26:35.835"></status>
</kw>
<msg timestamp="20201030 18:26:35.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020909625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:35.550" endtime="20201030 18:26:35.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020909625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:35.839" endtime="20201030 18:26:35.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.848" endtime="20201030 18:26:35.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.547" endtime="20201030 18:26:35.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.546" endtime="20201030 18:26:35.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:35.875" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:35.851" endtime="20201030 18:26:35.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.876" endtime="20201030 18:26:35.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.881" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:35.880" endtime="20201030 18:26:35.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.885" level="INFO">VALUE: {'eventtime': [0.020909083, 0.020909625, 0.020918389, 0.020918931, 0.020928625, 0.020929167, 0.020936694, 0.020937181, 0.020946403, 0.020946944, 0.020955653, 0.020956125, 0.020963556, 0.020964097, 0.020974208, 0.02097475, 0.020982569, 0.020983111, 0.020992597, 0.020993139, 0.021003458, 0.021004, 0.021012458, 0.021012944, 0.021020736, 0.021021278, 0.021030153, 0.021030694, 0.021040528, 0.021041014, 0.021050319, 0.021050792, 0.021059375, 0.021059917, 0.021068694, 0.021069236, 0.021078847, 0.021079333, 0.021088139, 0.021088681, 0.021096403, 0.021096944, 0.021106014, 0.021106556, 0.021114417, 0.021114889, 0.021124528, 0.021125014, 0.021132569, 0.021133111, 0.021143639, 0.021144181, 0.021153042, 0.021153583, 0.021161111, 0.021161597, 0.021169639, 0.021170111, 0.021180597, 0.021181069, 0.021188806, 0.021189292, 0.021198625, 0.021199167, 0.021208681, 0.021209222, 0.021216861, 0.021217347, 0.021224722, 0.021225264, 0.021234458, 0.021235, 0.021243153, 0.021243694, 0.021252264, 0.021252806, 0.021263236, 0.021263778, 0.021273889, 0.021274375, 0.021282667, 0.021283208, 0.021293111, 0.021293653, 0.021301486, 0.021301972, 0.021310472, 0.021310958, 0.021319153, 0.021319694, 0.021328569, 0.021329111, 0.021337056, 0.021337597, 0.02134775, 0.021348236, 0.021356319, 0.021356861, 0.021366889, 0.021367431], 'sourcediff': [0, 5.420000000026792e-07, 8.763999999997912e-06, 5.420000000026792e-07, 9.693999999997593e-06, 5.419999999992098e-07, 7.527000000000228e-06, 4.870000000004038e-07, 9.221999999999703e-06, 5.409999999997361e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 7.431000000002186e-06, 5.409999999997361e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 7.818999999999188e-06, 5.419999999992098e-07, 9.486000000002992e-06, 5.419999999992098e-07, 1.0318999999998218e-05, 5.419999999992098e-07, 8.458000000002852e-06, 4.859999999974607e-07, 7.792000000002991e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.409999999997361e-07, 9.834000000000231e-06, 4.860000000009301e-07, 9.305000000001118e-06, 4.729999999973644e-07, 8.583000000002977e-06, 5.419999999992098e-07, 8.776999999998009e-06, 5.420000000026792e-07, 9.610999999999648e-06, 4.859999999974607e-07, 8.806000000000092e-06, 5.420000000026792e-07, 7.721999999998203e-06, 5.409999999997361e-07, 9.069999999999911e-06, 5.419999999992098e-07, 7.861000000001367e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.860000000009301e-07, 7.554999999999368e-06, 5.419999999992098e-07, 1.0527999999999232e-05, 5.420000000026792e-07, 8.860999999998898e-06, 5.409999999997361e-07, 7.527999999999702e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 7.737000000000716e-06, 4.859999999974607e-07, 9.333000000000258e-06, 5.420000000026792e-07, 9.513999999998662e-06, 5.409999999997361e-07, 7.639000000000257e-06, 4.860000000009301e-07, 7.375000000000437e-06, 5.419999999992098e-07, 9.194000000000563e-06, 5.419999999992098e-07, 8.153000000000327e-06, 5.409999999997361e-07, 8.569999999999411e-06, 5.419999999992098e-07, 1.0430000000002243e-05, 5.419999999992098e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 8.292000000000022e-06, 5.409999999997361e-07, 9.902999999998607e-06, 5.419999999992098e-07, 7.833000000002227e-06, 4.859999999974607e-07, 8.500000000001562e-06, 4.860000000009301e-07, 8.194999999999036e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.420000000026792e-07, 7.944999999998786e-06, 5.409999999997361e-07, 1.0152999999998857e-05, 4.860000000009301e-07, 8.082999999999008e-06, 5.420000000026792e-07, 1.0027999999998732e-05, 5.419999999992098e-07], 'source_diff': [0, 5.420000000026792e-07, 8.763999999997912e-06, 5.420000000026792e-07, 9.693999999997593e-06, 5.419999999992098e-07, 7.527000000000228e-06, 4.870000000004038e-07, 9.221999999999703e-06, 5.409999999997361e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 7.431000000002186e-06, 5.409999999997361e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 7.818999999999188e-06, 5.419999999992098e-07, 9.486000000002992e-06, 5.419999999992098e-07, 1.0318999999998218e-05, 5.419999999992098e-07, 8.458000000002852e-06, 4.859999999974607e-07, 7.792000000002991e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.409999999997361e-07, 9.834000000000231e-06, 4.860000000009301e-07, 9.305000000001118e-06, 4.729999999973644e-07, 8.583000000002977e-06, 5.419999999992098e-07, 8.776999999998009e-06, 5.420000000026792e-07, 9.610999999999648e-06, 4.859999999974607e-07, 8.806000000000092e-06, 5.420000000026792e-07, 7.721999999998203e-06, 5.409999999997361e-07, 9.069999999999911e-06, 5.419999999992098e-07, 7.861000000001367e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.860000000009301e-07, 7.554999999999368e-06, 5.419999999992098e-07, 1.0527999999999232e-05, 5.420000000026792e-07, 8.860999999998898e-06, 5.409999999997361e-07, 7.527999999999702e-06, 4.860000000009301e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 7.737000000000716e-06, 4.859999999974607e-07, 9.333000000000258e-06, 5.420000000026792e-07, 9.513999999998662e-06, 5.409999999997361e-07, 7.639000000000257e-06, 4.860000000009301e-07, 7.375000000000437e-06, 5.419999999992098e-07, 9.194000000000563e-06, 5.419999999992098e-07, 8.153000000000327e-06, 5.409999999997361e-07, 8.569999999999411e-06, 5.419999999992098e-07, 1.0430000000002243e-05, 5.419999999992098e-07, 1.0111000000000148e-05, 4.860000000009301e-07, 8.292000000000022e-06, 5.409999999997361e-07, 9.902999999998607e-06, 5.419999999992098e-07, 7.833000000002227e-06, 4.859999999974607e-07, 8.500000000001562e-06, 4.860000000009301e-07, 8.194999999999036e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.420000000026792e-07, 7.944999999998786e-06, 5.409999999997361e-07, 1.0152999999998857e-05, 4.860000000009301e-07, 8.082999999999008e-06, 5.420000000026792e-07, 1.0027999999998732e-05, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:35.882" endtime="20201030 18:26:35.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.878" endtime="20201030 18:26:35.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:35.891" level="INFO">${RESULT} = [{'diff': 5.420000000026792e-07}, {'diff': 5.420000000026792e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.870000000004038e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.7199999999789077e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:26:35.887" endtime="20201030 18:26:35.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:35.895" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:26:35.892" endtime="20201030 18:26:35.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.899" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:35.898" endtime="20201030 18:26:35.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.902" level="INFO">VALUE: [5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.729999999973644e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:35.901" endtime="20201030 18:26:35.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.895" endtime="20201030 18:26:35.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:35.906" endtime="20201030 18:26:35.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.905" endtime="20201030 18:26:35.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.904" endtime="20201030 18:26:35.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.515" endtime="20201030 18:26:35.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.515" endtime="20201030 18:26:35.927"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.935" endtime="20201030 18:26:35.950"></status>
</kw>
<msg timestamp="20201030 18:26:35.951" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.933" endtime="20201030 18:26:35.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:35.955" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:35.952" endtime="20201030 18:26:35.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.956" endtime="20201030 18:26:35.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.931" endtime="20201030 18:26:35.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.929" endtime="20201030 18:26:35.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:35.968" endtime="20201030 18:26:36.251"></status>
</kw>
<msg timestamp="20201030 18:26:36.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:35.966" endtime="20201030 18:26:36.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:36.255" endtime="20201030 18:26:36.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.264" endtime="20201030 18:26:36.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.962" endtime="20201030 18:26:36.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.960" endtime="20201030 18:26:36.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:36.317" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:36.267" endtime="20201030 18:26:36.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.319" endtime="20201030 18:26:36.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.329" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:36.327" endtime="20201030 18:26:36.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.338" level="INFO">VALUE: {'eventtime': [0.019945236, 0.019945708, 0.019954194, 0.019954736, 0.019964847, 0.019965389, 0.019975931, 0.019976417, 0.019984389, 0.019984875, 0.019994097, 0.019994639, 0.020003833, 0.020004319, 0.020013444, 0.020013986, 0.020021319, 0.020021806, 0.020032292, 0.020032833, 0.020041431, 0.020041903, 0.020052083, 0.020052625, 0.020062403, 0.020062875, 0.020073222, 0.020073708, 0.020082514, 0.020083056, 0.020092125, 0.020092667, 0.020101319, 0.020101861, 0.020110319, 0.020110861, 0.020118889, 0.020119431, 0.020127986, 0.020128528, 0.020137292, 0.020137833, 0.020146069, 0.020146611, 0.020153917, 0.020154458, 0.02016325, 0.020163722, 0.02017325, 0.020173792, 0.020183903, 0.020184444, 0.020191972, 0.020192458, 0.020202514, 0.020203056, 0.02021275, 0.020213292, 0.020221236, 0.020221722, 0.020231361, 0.020231847, 0.020241833, 0.020242306, 0.020250069, 0.020250611, 0.020258236, 0.020258778, 0.020266208, 0.02026675, 0.020275944, 0.020276486, 0.020284333, 0.020284875, 0.020295319, 0.020295861, 0.020304847, 0.020305389, 0.020315694, 0.020316167, 0.020323986, 0.020324528, 0.020332556, 0.020333097, 0.020343431, 0.020343917, 0.020353764, 0.020354306, 0.020364847, 0.020365319, 0.020374028, 0.020374569, 0.02038375, 0.020384292, 0.020392111, 0.020392653, 0.020402986, 0.020403472, 0.020413667, 0.020414139], 'sourcediff': [0, 4.7199999999789077e-07, 8.486000000001992e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 1.0541999999998802e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.859999999974607e-07, 9.221999999999703e-06, 5.420000000026792e-07, 9.193999999997093e-06, 4.860000000009301e-07, 9.124999999998717e-06, 5.420000000026792e-07, 7.332999999998258e-06, 4.870000000004038e-07, 1.0486000000000523e-05, 5.409999999997361e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 5.420000000026792e-07, 9.777999999998482e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.859999999974607e-07, 8.806000000000092e-06, 5.419999999992098e-07, 9.069000000000438e-06, 5.420000000026792e-07, 8.651999999997884e-06, 5.419999999992098e-07, 8.458000000002852e-06, 5.419999999992098e-07, 8.028000000000202e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.409999999997361e-07, 8.235999999998272e-06, 5.419999999992098e-07, 7.306000000002061e-06, 5.409999999997361e-07, 8.792000000000522e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 7.527999999999702e-06, 4.860000000009301e-07, 1.0056000000001342e-05, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 7.943999999999313e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 9.986000000000023e-06, 4.7300000000083386e-07, 7.762999999997439e-06, 5.420000000026792e-07, 7.624999999997217e-06, 5.420000000026792e-07, 7.429999999999243e-06, 5.419999999992098e-07, 9.194000000000563e-06, 5.419999999992098e-07, 7.847000000001797e-06, 5.419999999992098e-07, 1.0443999999998343e-05, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 1.0304999999998649e-05, 4.7300000000083386e-07, 7.818999999999188e-06, 5.420000000026792e-07, 8.028000000000202e-06, 5.409999999997361e-07, 1.0333999999997262e-05, 4.860000000009301e-07, 9.847000000000328e-06, 5.419999999992098e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 8.708999999999106e-06, 5.409999999997361e-07, 9.181000000000467e-06, 5.419999999992098e-07, 7.819000000002657e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 1.0195000000001037e-05, 4.720000000013602e-07], 'source_diff': [0, 4.7199999999789077e-07, 8.486000000001992e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 1.0541999999998802e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.859999999974607e-07, 9.221999999999703e-06, 5.420000000026792e-07, 9.193999999997093e-06, 4.860000000009301e-07, 9.124999999998717e-06, 5.420000000026792e-07, 7.332999999998258e-06, 4.870000000004038e-07, 1.0486000000000523e-05, 5.409999999997361e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 5.420000000026792e-07, 9.777999999998482e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.859999999974607e-07, 8.806000000000092e-06, 5.419999999992098e-07, 9.069000000000438e-06, 5.420000000026792e-07, 8.651999999997884e-06, 5.419999999992098e-07, 8.458000000002852e-06, 5.419999999992098e-07, 8.028000000000202e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.409999999997361e-07, 8.235999999998272e-06, 5.419999999992098e-07, 7.306000000002061e-06, 5.409999999997361e-07, 8.792000000000522e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07, 7.527999999999702e-06, 4.860000000009301e-07, 1.0056000000001342e-05, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 7.943999999999313e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 9.986000000000023e-06, 4.7300000000083386e-07, 7.762999999997439e-06, 5.420000000026792e-07, 7.624999999997217e-06, 5.420000000026792e-07, 7.429999999999243e-06, 5.419999999992098e-07, 9.194000000000563e-06, 5.419999999992098e-07, 7.847000000001797e-06, 5.419999999992098e-07, 1.0443999999998343e-05, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 1.0304999999998649e-05, 4.7300000000083386e-07, 7.818999999999188e-06, 5.420000000026792e-07, 8.028000000000202e-06, 5.409999999997361e-07, 1.0333999999997262e-05, 4.860000000009301e-07, 9.847000000000328e-06, 5.419999999992098e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 8.708999999999106e-06, 5.409999999997361e-07, 9.181000000000467e-06, 5.419999999992098e-07, 7.819000000002657e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 4.859999999974607e-07, 1.0195000000001037e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:36.331" endtime="20201030 18:26:36.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.323" endtime="20201030 18:26:36.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:36.354" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.420000000026792e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:26:36.345" endtime="20201030 18:26:36.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:36.370" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.870...</msg>
<status status="PASS" starttime="20201030 18:26:36.360" endtime="20201030 18:26:36.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.377" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:36.376" endtime="20201030 18:26:36.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.381" level="INFO">VALUE: [4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.870000000004038e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:26:36.379" endtime="20201030 18:26:36.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.372" endtime="20201030 18:26:36.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:36.386" endtime="20201030 18:26:36.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.385" endtime="20201030 18:26:36.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.383" endtime="20201030 18:26:36.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.928" endtime="20201030 18:26:36.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.927" endtime="20201030 18:26:36.407"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.416" endtime="20201030 18:26:36.433"></status>
</kw>
<msg timestamp="20201030 18:26:36.433" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:36.415" endtime="20201030 18:26:36.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:36.434" endtime="20201030 18:26:36.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.437" endtime="20201030 18:26:36.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.411" endtime="20201030 18:26:36.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.409" endtime="20201030 18:26:36.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.447" endtime="20201030 18:26:36.734"></status>
</kw>
<msg timestamp="20201030 18:26:36.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:36.445" endtime="20201030 18:26:36.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:36.738" endtime="20201030 18:26:36.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.747" endtime="20201030 18:26:36.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.443" endtime="20201030 18:26:36.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.441" endtime="20201030 18:26:36.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:36.776" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:36.751" endtime="20201030 18:26:36.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.777" endtime="20201030 18:26:36.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.782" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:36.781" endtime="20201030 18:26:36.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.786" level="INFO">VALUE: {'eventtime': [0.022370597, 0.022371083, 0.022378486, 0.022378958, 0.022387819, 0.022388292, 0.022398597, 0.022399139, 0.022408306, 0.022408847, 0.022418153, 0.022418639, 0.022428708, 0.022429194, 0.022439792, 0.022440333, 0.022450764, 0.022451306, 0.022460083, 0.022460625, 0.022468056, 0.022468597, 0.022476639, 0.022477181, 0.022487708, 0.02248825, 0.022496194, 0.022496667, 0.022504847, 0.022505389, 0.022513833, 0.022514375, 0.022522625, 0.022523111, 0.022532167, 0.022532639, 0.022543097, 0.022543583, 0.022551764, 0.022552306, 0.022560764, 0.02256125, 0.022571306, 0.022571847, 0.022580194, 0.022580681, 0.022590625, 0.022591167, 0.022600139, 0.022600681, 0.022611042, 0.022611514, 0.0226195, 0.022620042, 0.022627583, 0.022628069, 0.022638139, 0.022638681, 0.022648194, 0.022648736, 0.022658028, 0.022658569, 0.022668806, 0.022669278, 0.022677569, 0.022678111, 0.022685542, 0.022686014, 0.022694514, 0.022695, 0.022703597, 0.022704139, 0.022713625, 0.022714167, 0.022724069, 0.022724611, 0.022735153, 0.022735639, 0.022743819, 0.022744361, 0.022752931, 0.022753403, 0.022761292, 0.022761778, 0.022771097, 0.022771639, 0.02278, 0.022780486, 0.022790764, 0.022791236, 0.022800722, 0.022801194, 0.022809458, 0.022809931, 0.022819194, 0.022819667, 0.022827417, 0.022827958, 0.022835583, 0.022836069], 'sourcediff': [0, 4.860000000009301e-07, 7.402999999999577e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 9.167000000000897e-06, 5.409999999997361e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.0068999999997968e-05, 4.860000000009301e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 1.0431000000001717e-05, 5.419999999992098e-07, 8.776999999998009e-06, 5.420000000026792e-07, 7.430999999998716e-06, 5.409999999997361e-07, 8.041999999999772e-06, 5.419999999992098e-07, 1.0526999999999759e-05, 5.420000000026792e-07, 7.943999999999313e-06, 4.7300000000083386e-07, 8.179999999999993e-06, 5.419999999992098e-07, 8.443999999999813e-06, 5.419999999992098e-07, 8.250000000001312e-06, 4.859999999974607e-07, 9.056000000000342e-06, 4.720000000013602e-07, 1.0458000000001383e-05, 4.859999999974607e-07, 8.180999999999466e-06, 5.420000000026792e-07, 8.457999999999383e-06, 4.860000000009301e-07, 1.0055999999997872e-05, 5.409999999997361e-07, 8.347000000002297e-06, 4.869999999969343e-07, 9.944000000001313e-06, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.540999999999798e-06, 4.860000000009301e-07, 1.0070000000000912e-05, 5.419999999992098e-07, 9.512999999999189e-06, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 8.291000000000548e-06, 5.419999999992098e-07, 7.430999999998716e-06, 4.720000000013602e-07, 8.499999999998092e-06, 4.860000000009301e-07, 8.596999999999078e-06, 5.420000000026792e-07, 9.485999999999523e-06, 5.419999999992098e-07, 9.901999999999134e-06, 5.419999999992098e-07, 1.0542000000002272e-05, 4.859999999974607e-07, 8.179999999999993e-06, 5.420000000026792e-07, 8.569999999999411e-06, 4.7199999999789077e-07, 7.889000000000507e-06, 4.860000000009301e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.361000000001867e-06, 4.859999999974607e-07, 1.0278000000002452e-05, 4.7199999999789077e-07, 9.485999999999523e-06, 4.720000000013602e-07, 8.264000000000882e-06, 4.729999999973644e-07, 9.263000000002408e-06, 4.729999999973644e-07, 7.750000000000812e-06, 5.409999999997361e-07, 7.625000000000687e-06, 4.860000000009301e-07], 'source_diff': [0, 4.860000000009301e-07, 7.402999999999577e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.0304999999998649e-05, 5.419999999992098e-07, 9.167000000000897e-06, 5.409999999997361e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.0068999999997968e-05, 4.860000000009301e-07, 1.0598000000000551e-05, 5.409999999997361e-07, 1.0431000000001717e-05, 5.419999999992098e-07, 8.776999999998009e-06, 5.420000000026792e-07, 7.430999999998716e-06, 5.409999999997361e-07, 8.041999999999772e-06, 5.419999999992098e-07, 1.0526999999999759e-05, 5.420000000026792e-07, 7.943999999999313e-06, 4.7300000000083386e-07, 8.179999999999993e-06, 5.419999999992098e-07, 8.443999999999813e-06, 5.419999999992098e-07, 8.250000000001312e-06, 4.859999999974607e-07, 9.056000000000342e-06, 4.720000000013602e-07, 1.0458000000001383e-05, 4.859999999974607e-07, 8.180999999999466e-06, 5.420000000026792e-07, 8.457999999999383e-06, 4.860000000009301e-07, 1.0055999999997872e-05, 5.409999999997361e-07, 8.347000000002297e-06, 4.869999999969343e-07, 9.944000000001313e-06, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.540999999999798e-06, 4.860000000009301e-07, 1.0070000000000912e-05, 5.419999999992098e-07, 9.512999999999189e-06, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 1.0236999999999746e-05, 4.720000000013602e-07, 8.291000000000548e-06, 5.419999999992098e-07, 7.430999999998716e-06, 4.720000000013602e-07, 8.499999999998092e-06, 4.860000000009301e-07, 8.596999999999078e-06, 5.420000000026792e-07, 9.485999999999523e-06, 5.419999999992098e-07, 9.901999999999134e-06, 5.419999999992098e-07, 1.0542000000002272e-05, 4.859999999974607e-07, 8.179999999999993e-06, 5.420000000026792e-07, 8.569999999999411e-06, 4.7199999999789077e-07, 7.889000000000507e-06, 4.860000000009301e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.361000000001867e-06, 4.859999999974607e-07, 1.0278000000002452e-05, 4.7199999999789077e-07, 9.485999999999523e-06, 4.720000000013602e-07, 8.264000000000882e-06, 4.729999999973644e-07, 9.263000000002408e-06, 4.729999999973644e-07, 7.750000000000812e-06, 5.409999999997361e-07, 7.625000000000687e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:36.783" endtime="20201030 18:26:36.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.779" endtime="20201030 18:26:36.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:36.792" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:26:36.789" endtime="20201030 18:26:36.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:36.797" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:26:36.793" endtime="20201030 18:26:36.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.802" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:36.800" endtime="20201030 18:26:36.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.804" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.869999999969343e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 5.409999999997361e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:26:36.803" endtime="20201030 18:26:36.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.798" endtime="20201030 18:26:36.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:36.809" endtime="20201030 18:26:36.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.807" endtime="20201030 18:26:36.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.806" endtime="20201030 18:26:36.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.408" endtime="20201030 18:26:36.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.407" endtime="20201030 18:26:36.831"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.842" endtime="20201030 18:26:36.861"></status>
</kw>
<msg timestamp="20201030 18:26:36.862" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:36.840" endtime="20201030 18:26:36.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:36.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:36.863" endtime="20201030 18:26:36.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.866" endtime="20201030 18:26:36.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.836" endtime="20201030 18:26:36.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.833" endtime="20201030 18:26:36.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:36.875" endtime="20201030 18:26:37.164"></status>
</kw>
<msg timestamp="20201030 18:26:37.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026907681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026908222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:36.873" endtime="20201030 18:26:37.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026907681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026908222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:37.168" endtime="20201030 18:26:37.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.178" endtime="20201030 18:26:37.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.871" endtime="20201030 18:26:37.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.869" endtime="20201030 18:26:37.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:37.205" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:37.181" endtime="20201030 18:26:37.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.206" endtime="20201030 18:26:37.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.211" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:37.210" endtime="20201030 18:26:37.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.216" level="INFO">VALUE: {'eventtime': [0.026907681, 0.026908222, 0.026917194, 0.026917736, 0.026927861, 0.026928347, 0.026936736, 0.026937278, 0.0269475, 0.026947986, 0.026958042, 0.026958583, 0.026966722, 0.026967264, 0.026975722, 0.026976264, 0.026983708, 0.026984194, 0.026993431, 0.026993972, 0.027001917, 0.027002458, 0.027011556, 0.027012042, 0.027020583, 0.027021056, 0.027030083, 0.027030625, 0.027040319, 0.027040861, 0.027050472, 0.027050958, 0.027060278, 0.027060819, 0.027068764, 0.02706925, 0.027076847, 0.027077319, 0.027086833, 0.027087375, 0.027095833, 0.027096375, 0.027104958, 0.027105444, 0.027114264, 0.027114806, 0.027124417, 0.027124958, 0.027134056, 0.027134597, 0.027142431, 0.027142972, 0.027152167, 0.027152708, 0.027163236, 0.027163778, 0.027174097, 0.027174639, 0.027183861, 0.027184333, 0.027193125, 0.027193611, 0.027203236, 0.027203778, 0.027211208, 0.027211694, 0.027220708, 0.02722125, 0.027229333, 0.027229806, 0.027239458, 0.027239944, 0.027250444, 0.027250931, 0.027260347, 0.027260819, 0.027268861, 0.027269403, 0.027277264, 0.027277736, 0.027286125, 0.027286667, 0.027295222, 0.027295764, 0.027305889, 0.027306375, 0.027316028, 0.0273165, 0.027326028, 0.027326569, 0.027336278, 0.027336764, 0.027345042, 0.027345583, 0.027353444, 0.027353917, 0.027361361, 0.027361903, 0.027369722, 0.027370264], 'sourcediff': [0, 5.409999999997361e-07, 8.971999999999453e-06, 5.420000000026792e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 8.389000000001007e-06, 5.419999999992098e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 1.0056000000001342e-05, 5.409999999997361e-07, 8.138999999997287e-06, 5.420000000026792e-07, 8.457999999999383e-06, 5.419999999992098e-07, 7.443999999998813e-06, 4.860000000009301e-07, 9.236999999998746e-06, 5.410000000032056e-07, 7.944999999998786e-06, 5.409999999997361e-07, 9.097999999999051e-06, 4.860000000009301e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 9.026999999998259e-06, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.320000000000161e-06, 5.409999999997361e-07, 7.944999999998786e-06, 4.860000000009301e-07, 7.597000000001547e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 5.419999999992098e-07, 8.457999999999383e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.860000000009301e-07, 8.819999999999661e-06, 5.420000000026792e-07, 9.610999999999648e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.8340000000017e-06, 5.409999999997361e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 9.221999999999703e-06, 4.720000000013602e-07, 8.791999999997052e-06, 4.860000000009301e-07, 9.624999999999218e-06, 5.420000000026792e-07, 7.429999999999243e-06, 4.860000000009301e-07, 9.013999999998162e-06, 5.419999999992098e-07, 8.083000000002477e-06, 4.729999999973644e-07, 9.652000000002353e-06, 4.859999999974607e-07, 1.0500000000000093e-05, 4.870000000004038e-07, 9.416000000001673e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 5.420000000026792e-07, 7.860999999997897e-06, 4.720000000013602e-07, 8.389000000001007e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 9.652999999998357e-06, 4.720000000013602e-07, 9.527999999998232e-06, 5.409999999997361e-07, 9.709000000000106e-06, 4.860000000009301e-07, 8.278000000000452e-06, 5.409999999997361e-07, 7.861000000001367e-06, 4.729999999973644e-07, 7.444000000002282e-06, 5.419999999992098e-07, 7.818999999999188e-06, 5.419999999992098e-07], 'source_diff': [0, 5.409999999997361e-07, 8.971999999999453e-06, 5.420000000026792e-07, 1.0124999999999718e-05, 4.859999999974607e-07, 8.389000000001007e-06, 5.419999999992098e-07, 1.0222000000000703e-05, 4.860000000009301e-07, 1.0056000000001342e-05, 5.409999999997361e-07, 8.138999999997287e-06, 5.420000000026792e-07, 8.457999999999383e-06, 5.419999999992098e-07, 7.443999999998813e-06, 4.860000000009301e-07, 9.236999999998746e-06, 5.410000000032056e-07, 7.944999999998786e-06, 5.409999999997361e-07, 9.097999999999051e-06, 4.860000000009301e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 9.026999999998259e-06, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 9.610999999999648e-06, 4.860000000009301e-07, 9.320000000000161e-06, 5.409999999997361e-07, 7.944999999998786e-06, 4.860000000009301e-07, 7.597000000001547e-06, 4.7199999999789077e-07, 9.514000000002132e-06, 5.419999999992098e-07, 8.457999999999383e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.860000000009301e-07, 8.819999999999661e-06, 5.420000000026792e-07, 9.610999999999648e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.8340000000017e-06, 5.409999999997361e-07, 9.195000000000036e-06, 5.409999999997361e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 1.0319000000001688e-05, 5.419999999992098e-07, 9.221999999999703e-06, 4.720000000013602e-07, 8.791999999997052e-06, 4.860000000009301e-07, 9.624999999999218e-06, 5.420000000026792e-07, 7.429999999999243e-06, 4.860000000009301e-07, 9.013999999998162e-06, 5.419999999992098e-07, 8.083000000002477e-06, 4.729999999973644e-07, 9.652000000002353e-06, 4.859999999974607e-07, 1.0500000000000093e-05, 4.870000000004038e-07, 9.416000000001673e-06, 4.7199999999789077e-07, 8.041999999999772e-06, 5.420000000026792e-07, 7.860999999997897e-06, 4.720000000013602e-07, 8.389000000001007e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 9.652999999998357e-06, 4.720000000013602e-07, 9.527999999998232e-06, 5.409999999997361e-07, 9.709000000000106e-06, 4.860000000009301e-07, 8.278000000000452e-06, 5.409999999997361e-07, 7.861000000001367e-06, 4.729999999973644e-07, 7.444000000002282e-06, 5.419999999992098e-07, 7.818999999999188e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:37.212" endtime="20201030 18:26:37.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.208" endtime="20201030 18:26:37.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:37.221" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.420000000026792e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:37.218" endtime="20201030 18:26:37.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:37.226" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:26:37.222" endtime="20201030 18:26:37.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.231" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:37.230" endtime="20201030 18:26:37.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.233" level="INFO">VALUE: [5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.410000000032056e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.729999999973644e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:37.232" endtime="20201030 18:26:37.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.227" endtime="20201030 18:26:37.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:37.238" endtime="20201030 18:26:37.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.237" endtime="20201030 18:26:37.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.235" endtime="20201030 18:26:37.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.832" endtime="20201030 18:26:37.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:36.831" endtime="20201030 18:26:37.259"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.267" endtime="20201030 18:26:37.282"></status>
</kw>
<msg timestamp="20201030 18:26:37.282" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:37.266" endtime="20201030 18:26:37.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.285" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:37.284" endtime="20201030 18:26:37.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.286" endtime="20201030 18:26:37.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.263" endtime="20201030 18:26:37.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.261" endtime="20201030 18:26:37.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.295" endtime="20201030 18:26:37.586"></status>
</kw>
<msg timestamp="20201030 18:26:37.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:37.294" endtime="20201030 18:26:37.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:37.590" endtime="20201030 18:26:37.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.599" endtime="20201030 18:26:37.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.291" endtime="20201030 18:26:37.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.289" endtime="20201030 18:26:37.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:37.628" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:37.603" endtime="20201030 18:26:37.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.629" endtime="20201030 18:26:37.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.635" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:37.634" endtime="20201030 18:26:37.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.639" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.019575972, 0.019576458, 0.019584667, 0.019585153, 0.019594389, 0.019594931, 0.019602778, 0.019603264, 0.019611361, 0.019611903, 0.019619958, 0.0196205, 0.019628861, 0.019629403, 0.019637014, 0.019637556, 0.019645806, 0.019646347, 0.019656875, 0.019657361, 0.019665653, 0.019666194, 0.019673931, 0.019674417, 0.019684778, 0.019685319, 0.019693875, 0.019694361, 0.019702972, 0.019703458, 0.019711333, 0.019711819, 0.019721875, 0.019722417, 0.019731486, 0.019732028, 0.019741819, 0.019742361, 0.019751542, 0.019752083, 0.019761278, 0.01976175, 0.019771389, 0.019771931, 0.019781972, 0.019782444, 0.0197925, 0.019792986, 0.019803458, 0.019803944, 0.019814097, 0.019814639, 0.019822792, 0.019823278, 0.019833764, 0.019834236, 0.01984325, 0.019843792, 0.019851306, 0.019851847, 0.019860708, 0.01986125, 0.019871472, 0.019871958, 0.019880875, 0.019881361, 0.019891625, 0.019892167, 0.019901139, 0.019901681, 0.019910444, 0.019910931, 0.019920889, 0.019921375, 0.019931444, 0.019931931, 0.019939597, 0.019940139, 0.019949403, 0.019949875, 0.019959708, 0.019960194, 0.019967764, 0.019968306, 0.019977708, 0.01997825, 0.019988806, 0.019989347, 0.019996986, 0.019997472, 0.020005542, 0.020006083, 0.020013625, 0.020014097, 0.020022083, 0.020022569, 0.020030569, 0.020031042, 0.020039944, 0.020040486], 'sourcediff': [0, 4.860000000009301e-07, 8.208999999998606e-06, 4.860000000009301e-07, 9.235999999999273e-06, 5.419999999992098e-07, 7.847000000001797e-06, 4.859999999974607e-07, 8.097000000002047e-06, 5.419999999992098e-07, 8.054999999999868e-06, 5.419999999992098e-07, 8.361000000001867e-06, 5.419999999992098e-07, 7.611000000001117e-06, 5.419999999992098e-07, 8.249999999997842e-06, 5.410000000032056e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 8.292000000000022e-06, 5.409999999997361e-07, 7.736999999997246e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 8.555999999999842e-06, 4.860000000009301e-07, 8.610999999998648e-06, 4.860000000009301e-07, 7.875000000000937e-06, 4.859999999974607e-07, 1.0056000000001342e-05, 5.419999999992098e-07, 9.069000000000438e-06, 5.419999999992098e-07, 9.791000000002048e-06, 5.419999999992098e-07, 9.181000000000467e-06, 5.409999999997361e-07, 9.195000000000036e-06, 4.720000000013602e-07, 9.638999999998787e-06, 5.419999999992098e-07, 1.0040999999998829e-05, 4.720000000013602e-07, 1.0056000000001342e-05, 4.859999999974607e-07, 1.0472000000000953e-05, 4.860000000009301e-07, 1.0152999999998857e-05, 5.419999999992098e-07, 8.153000000000327e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 9.013999999998162e-06, 5.419999999992098e-07, 7.514000000000132e-06, 5.409999999997361e-07, 8.861000000002367e-06, 5.419999999992098e-07, 1.0222000000000703e-05, 4.859999999974607e-07, 8.917000000000647e-06, 4.860000000009301e-07, 1.0263999999999412e-05, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 8.762999999998439e-06, 4.870000000004038e-07, 9.958000000000883e-06, 4.860000000009301e-07, 1.0068999999997968e-05, 4.870000000004038e-07, 7.665999999999923e-06, 5.419999999992098e-07, 9.264000000001882e-06, 4.7199999999789077e-07, 9.833000000000758e-06, 4.860000000009301e-07, 7.569999999998411e-06, 5.420000000026792e-07, 9.401999999998634e-06, 5.419999999992098e-07, 1.0556000000001842e-05, 5.409999999997361e-07, 7.639000000000257e-06, 4.859999999974607e-07, 8.07000000000238e-06, 5.409999999997361e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.985999999998022e-06, 4.860000000009301e-07, 8.000000000001062e-06, 4.729999999973644e-07, 8.902000000001603e-06, 5.419999999992098e-07], 'source_diff': [0, 4.860000000009301e-07, 8.208999999998606e-06, 4.860000000009301e-07, 9.235999999999273e-06, 5.419999999992098e-07, 7.847000000001797e-06, 4.859999999974607e-07, 8.097000000002047e-06, 5.419999999992098e-07, 8.054999999999868e-06, 5.419999999992098e-07, 8.361000000001867e-06, 5.419999999992098e-07, 7.611000000001117e-06, 5.419999999992098e-07, 8.249999999997842e-06, 5.410000000032056e-07, 1.0527999999999232e-05, 4.860000000009301e-07, 8.292000000000022e-06, 5.409999999997361e-07, 7.736999999997246e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 5.409999999997361e-07, 8.555999999999842e-06, 4.860000000009301e-07, 8.610999999998648e-06, 4.860000000009301e-07, 7.875000000000937e-06, 4.859999999974607e-07, 1.0056000000001342e-05, 5.419999999992098e-07, 9.069000000000438e-06, 5.419999999992098e-07, 9.791000000002048e-06, 5.419999999992098e-07, 9.181000000000467e-06, 5.409999999997361e-07, 9.195000000000036e-06, 4.720000000013602e-07, 9.638999999998787e-06, 5.419999999992098e-07, 1.0040999999998829e-05, 4.720000000013602e-07, 1.0056000000001342e-05, 4.859999999974607e-07, 1.0472000000000953e-05, 4.860000000009301e-07, 1.0152999999998857e-05, 5.419999999992098e-07, 8.153000000000327e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 9.013999999998162e-06, 5.419999999992098e-07, 7.514000000000132e-06, 5.409999999997361e-07, 8.861000000002367e-06, 5.419999999992098e-07, 1.0222000000000703e-05, 4.859999999974607e-07, 8.917000000000647e-06, 4.860000000009301e-07, 1.0263999999999412e-05, 5.419999999992098e-07, 8.972000000002922e-06, 5.419999999992098e-07, 8.762999999998439e-06, 4.870000000004038e-07, 9.958000000000883e-06, 4.860000000009301e-07, 1.0068999999997968e-05, 4.870000000004038e-07, 7.665999999999923e-06, 5.419999999992098e-07, 9.264000000001882e-06, 4.7199999999789077e-07, 9.833000000000758e-06, 4.860000000009301e-07, 7.569999999998411e-06, 5.420000000026792e-07, 9.401999999998634e-06, 5.419999999992098e-07, 1.0556000000001842e-05, 5.409999999997361e-07, 7.639000000000257e-06, 4.859999999974607e-07, 8.07000000000238e-06, 5.409999999997361e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.985999999998022e-06, 4.860000000009301e-07, 8.000000000001062e-06, 4.729999999973644e-07, 8.902000000001603e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:37.636" endtime="20201030 18:26:37.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.632" endtime="20201030 18:26:37.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:37.645" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:37.641" endtime="20201030 18:26:37.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:37.649" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.4100...</msg>
<status status="PASS" starttime="20201030 18:26:37.646" endtime="20201030 18:26:37.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.653" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:37.652" endtime="20201030 18:26:37.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.656" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:37.655" endtime="20201030 18:26:37.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.650" endtime="20201030 18:26:37.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:37.661" endtime="20201030 18:26:37.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.659" endtime="20201030 18:26:37.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.658" endtime="20201030 18:26:37.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.260" endtime="20201030 18:26:37.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.259" endtime="20201030 18:26:37.682"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.691" endtime="20201030 18:26:37.708"></status>
</kw>
<msg timestamp="20201030 18:26:37.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:37.689" endtime="20201030 18:26:37.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:37.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:37.710" endtime="20201030 18:26:37.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.713" endtime="20201030 18:26:37.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.686" endtime="20201030 18:26:37.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.684" endtime="20201030 18:26:37.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:37.722" endtime="20201030 18:26:38.010"></status>
</kw>
<msg timestamp="20201030 18:26:38.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023952097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:37.720" endtime="20201030 18:26:38.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023952097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023952569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:38.015" endtime="20201030 18:26:38.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.023" endtime="20201030 18:26:38.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.718" endtime="20201030 18:26:38.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.716" endtime="20201030 18:26:38.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:38.052" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:38.027" endtime="20201030 18:26:38.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.054" endtime="20201030 18:26:38.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.061" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:38.060" endtime="20201030 18:26:38.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.066" level="INFO">VALUE: {'eventtime': [0.023952097, 0.023952569, 0.023963097, 0.023963639, 0.023973764, 0.023974306, 0.023983583, 0.023984125, 0.023992778, 0.023993319, 0.024000833, 0.024001375, 0.024010139, 0.024010681, 0.024018306, 0.024018792, 0.024027403, 0.024027889, 0.024035667, 0.024036208, 0.024045514, 0.024046056, 0.024053583, 0.024054125, 0.024062792, 0.024063333, 0.024073056, 0.024073597, 0.024084139, 0.024084681, 0.024092417, 0.024092958, 0.024100889, 0.024101431, 0.024110319, 0.024110792, 0.024119806, 0.024120347, 0.024129236, 0.024129722, 0.024140181, 0.024140722, 0.024150667, 0.024151139, 0.024159097, 0.024159639, 0.024169139, 0.024169625, 0.024177389, 0.024177931, 0.024186167, 0.024186708, 0.024196722, 0.024197208, 0.024207694, 0.024208181, 0.024215861, 0.024216347, 0.024224653, 0.024225139, 0.024235625, 0.024236167, 0.024243597, 0.024244139, 0.024253125, 0.024253667, 0.024261236, 0.024261708, 0.024269083, 0.024269569, 0.024277236, 0.024277778, 0.024287472, 0.024288014, 0.024297917, 0.024298458, 0.024308486, 0.024308972, 0.024317667, 0.024318208, 0.024328736, 0.024329278, 0.024337847, 0.024338333, 0.024348903, 0.024349444, 0.024356792, 0.024357264, 0.024365014, 0.024365556, 0.024373069, 0.024373611, 0.024380931, 0.024381417, 0.024391736, 0.024392208, 0.02439975, 0.024400292, 0.024409403, 0.024409875], 'sourcediff': [0, 4.720000000013602e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 1.0125000000003187e-05, 5.419999999992098e-07, 9.276999999998509e-06, 5.419999999992098e-07, 8.653000000000827e-06, 5.409999999997361e-07, 7.514000000000132e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.419999999992098e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.610999999998648e-06, 4.860000000009301e-07, 7.777999999999952e-06, 5.409999999997361e-07, 9.306000000000592e-06, 5.419999999992098e-07, 7.527000000000228e-06, 5.419999999992098e-07, 8.667000000000397e-06, 5.409999999997361e-07, 9.722999999999676e-06, 5.409999999997361e-07, 1.0542000000002272e-05, 5.419999999992098e-07, 7.736000000001242e-06, 5.409999999997361e-07, 7.930999999999216e-06, 5.419999999992098e-07, 8.888000000002033e-06, 4.729999999973644e-07, 9.014000000001632e-06, 5.409999999997361e-07, 8.888999999998037e-06, 4.860000000009301e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 5.419999999992098e-07, 9.499999999999093e-06, 4.860000000009301e-07, 7.764000000000382e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.0485999999997053e-05, 4.870000000004038e-07, 7.680000000002962e-06, 4.859999999974607e-07, 8.305999999999591e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 7.429999999999243e-06, 5.420000000026792e-07, 8.985999999999023e-06, 5.419999999992098e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.860000000009301e-07, 7.666999999999397e-06, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 9.902999999998607e-06, 5.409999999997361e-07, 1.0028000000002202e-05, 4.860000000009301e-07, 8.694999999999536e-06, 5.409999999997361e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 8.568999999999938e-06, 4.860000000009301e-07, 1.0570000000001412e-05, 5.409999999997361e-07, 7.347999999997301e-06, 4.720000000013602e-07, 7.750000000000812e-06, 5.419999999992098e-07, 7.513000000000658e-06, 5.419999999992098e-07, 7.320000000001631e-06, 4.859999999974607e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 7.542000000002741e-06, 5.419999999992098e-07, 9.110999999999148e-06, 4.720000000013602e-07], 'source_diff': [0, 4.720000000013602e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 1.0125000000003187e-05, 5.419999999992098e-07, 9.276999999998509e-06, 5.419999999992098e-07, 8.653000000000827e-06, 5.409999999997361e-07, 7.514000000000132e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.419999999992098e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.610999999998648e-06, 4.860000000009301e-07, 7.777999999999952e-06, 5.409999999997361e-07, 9.306000000000592e-06, 5.419999999992098e-07, 7.527000000000228e-06, 5.419999999992098e-07, 8.667000000000397e-06, 5.409999999997361e-07, 9.722999999999676e-06, 5.409999999997361e-07, 1.0542000000002272e-05, 5.419999999992098e-07, 7.736000000001242e-06, 5.409999999997361e-07, 7.930999999999216e-06, 5.419999999992098e-07, 8.888000000002033e-06, 4.729999999973644e-07, 9.014000000001632e-06, 5.409999999997361e-07, 8.888999999998037e-06, 4.860000000009301e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 9.945000000000787e-06, 4.7199999999789077e-07, 7.958000000002352e-06, 5.419999999992098e-07, 9.499999999999093e-06, 4.860000000009301e-07, 7.764000000000382e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 1.0485999999997053e-05, 4.870000000004038e-07, 7.680000000002962e-06, 4.859999999974607e-07, 8.305999999999591e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 7.429999999999243e-06, 5.420000000026792e-07, 8.985999999999023e-06, 5.419999999992098e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.860000000009301e-07, 7.666999999999397e-06, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 9.902999999998607e-06, 5.409999999997361e-07, 1.0028000000002202e-05, 4.860000000009301e-07, 8.694999999999536e-06, 5.409999999997361e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 8.568999999999938e-06, 4.860000000009301e-07, 1.0570000000001412e-05, 5.409999999997361e-07, 7.347999999997301e-06, 4.720000000013602e-07, 7.750000000000812e-06, 5.419999999992098e-07, 7.513000000000658e-06, 5.419999999992098e-07, 7.320000000001631e-06, 4.859999999974607e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 7.542000000002741e-06, 5.419999999992098e-07, 9.110999999999148e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:38.063" endtime="20201030 18:26:38.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.057" endtime="20201030 18:26:38.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:38.074" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:38.069" endtime="20201030 18:26:38.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:38.080" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:26:38.075" endtime="20201030 18:26:38.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.085" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:38.083" endtime="20201030 18:26:38.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.087" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.729999999973644e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:26:38.086" endtime="20201030 18:26:38.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.081" endtime="20201030 18:26:38.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:38.092" endtime="20201030 18:26:38.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.090" endtime="20201030 18:26:38.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.089" endtime="20201030 18:26:38.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.683" endtime="20201030 18:26:38.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:37.682" endtime="20201030 18:26:38.113"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.121" endtime="20201030 18:26:38.136"></status>
</kw>
<msg timestamp="20201030 18:26:38.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:38.119" endtime="20201030 18:26:38.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:38.138" endtime="20201030 18:26:38.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.140" endtime="20201030 18:26:38.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.117" endtime="20201030 18:26:38.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.115" endtime="20201030 18:26:38.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.150" endtime="20201030 18:26:38.435"></status>
</kw>
<msg timestamp="20201030 18:26:38.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019862875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:38.148" endtime="20201030 18:26:38.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019862875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:38.439" endtime="20201030 18:26:38.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.448" endtime="20201030 18:26:38.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.145" endtime="20201030 18:26:38.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.144" endtime="20201030 18:26:38.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:38.476" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:38.451" endtime="20201030 18:26:38.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.477" endtime="20201030 18:26:38.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.482" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:38.481" endtime="20201030 18:26:38.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.487" level="INFO">VALUE: {'eventtime': [0.019862875, 0.019863361, 0.019873236, 0.019873708, 0.019884167, 0.019884708, 0.019895292, 0.019895764, 0.019905514, 0.019906, 0.019915861, 0.019916403, 0.019924111, 0.019924583, 0.019932639, 0.019933125, 0.019943514, 0.019944056, 0.019952611, 0.019953153, 0.019963583, 0.019964069, 0.019972889, 0.019973375, 0.019982861, 0.019983333, 0.019993764, 0.019994306, 0.020002875, 0.020003361, 0.020011347, 0.020011833, 0.020020028, 0.020020569, 0.020029056, 0.020029542, 0.020038458, 0.020039, 0.020048292, 0.020048833, 0.020058986, 0.020059472, 0.020069542, 0.020070028, 0.020077694, 0.020078236, 0.020088236, 0.020088778, 0.020098583, 0.020099069, 0.020107681, 0.020108167, 0.020117181, 0.020117722, 0.020127125, 0.020127597, 0.020135264, 0.020135806, 0.020146042, 0.020146583, 0.020156653, 0.020157125, 0.020165, 0.020165542, 0.020174639, 0.020175125, 0.020183542, 0.020184083, 0.020192333, 0.020192875, 0.020200708, 0.02020125, 0.020211042, 0.020211583, 0.020219722, 0.020220264, 0.020229361, 0.020229833, 0.020239903, 0.020240375, 0.020249806, 0.020250347, 0.020258194, 0.020258681, 0.020267417, 0.020267903, 0.020276722, 0.020277264, 0.020284625, 0.020285097, 0.020295375, 0.020295861, 0.020305833, 0.020306375, 0.020314625, 0.020315167, 0.020322889, 0.020323431, 0.020333542, 0.020334083], 'sourcediff': [0, 4.860000000009301e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.0583999999997512e-05, 4.720000000013602e-07, 9.749999999999343e-06, 4.860000000009301e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.708000000002102e-06, 4.7199999999789077e-07, 8.055999999999341e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 5.420000000026792e-07, 8.554999999996898e-06, 5.420000000026792e-07, 1.0429999999998774e-05, 4.860000000009301e-07, 8.819999999999661e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 5.419999999992098e-07, 8.568999999999938e-06, 4.860000000009301e-07, 7.985999999998022e-06, 4.860000000009301e-07, 8.194999999999036e-06, 5.409999999997361e-07, 8.487000000001466e-06, 4.860000000009301e-07, 8.915999999997704e-06, 5.420000000026792e-07, 9.291999999997552e-06, 5.409999999997361e-07, 1.0153000000002327e-05, 4.859999999974607e-07, 1.0070000000000912e-05, 4.860000000009301e-07, 7.665999999999923e-06, 5.419999999992098e-07, 9.999999999999593e-06, 5.420000000026792e-07, 9.804999999998149e-06, 4.860000000009301e-07, 8.611999999998121e-06, 4.860000000009301e-07, 9.014000000001632e-06, 5.409999999997361e-07, 9.402999999998107e-06, 4.720000000013602e-07, 7.666999999999397e-06, 5.419999999992098e-07, 1.0236000000000273e-05, 5.409999999997361e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 7.874999999997467e-06, 5.420000000026792e-07, 9.096999999999578e-06, 4.859999999974607e-07, 8.417000000000147e-06, 5.409999999997361e-07, 8.250000000001312e-06, 5.419999999992098e-07, 7.833000000002227e-06, 5.419999999992098e-07, 9.791999999998052e-06, 5.410000000032056e-07, 8.138999999997287e-06, 5.420000000026792e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.430999999997247e-06, 5.409999999997361e-07, 7.847000000001797e-06, 4.870000000004038e-07, 8.735999999998773e-06, 4.860000000009301e-07, 8.819000000000188e-06, 5.419999999992098e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 1.0278000000002452e-05, 4.859999999974607e-07, 9.972000000000453e-06, 5.420000000026792e-07, 8.249999999997842e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07], 'source_diff': [0, 4.860000000009301e-07, 9.874999999999468e-06, 4.720000000013602e-07, 1.0459000000000857e-05, 5.409999999997361e-07, 1.0583999999997512e-05, 4.720000000013602e-07, 9.749999999999343e-06, 4.860000000009301e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.708000000002102e-06, 4.7199999999789077e-07, 8.055999999999341e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 5.420000000026792e-07, 8.554999999996898e-06, 5.420000000026792e-07, 1.0429999999998774e-05, 4.860000000009301e-07, 8.819999999999661e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 1.0431000000001717e-05, 5.419999999992098e-07, 8.568999999999938e-06, 4.860000000009301e-07, 7.985999999998022e-06, 4.860000000009301e-07, 8.194999999999036e-06, 5.409999999997361e-07, 8.487000000001466e-06, 4.860000000009301e-07, 8.915999999997704e-06, 5.420000000026792e-07, 9.291999999997552e-06, 5.409999999997361e-07, 1.0153000000002327e-05, 4.859999999974607e-07, 1.0070000000000912e-05, 4.860000000009301e-07, 7.665999999999923e-06, 5.419999999992098e-07, 9.999999999999593e-06, 5.420000000026792e-07, 9.804999999998149e-06, 4.860000000009301e-07, 8.611999999998121e-06, 4.860000000009301e-07, 9.014000000001632e-06, 5.409999999997361e-07, 9.402999999998107e-06, 4.720000000013602e-07, 7.666999999999397e-06, 5.419999999992098e-07, 1.0236000000000273e-05, 5.409999999997361e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 7.874999999997467e-06, 5.420000000026792e-07, 9.096999999999578e-06, 4.859999999974607e-07, 8.417000000000147e-06, 5.409999999997361e-07, 8.250000000001312e-06, 5.419999999992098e-07, 7.833000000002227e-06, 5.419999999992098e-07, 9.791999999998052e-06, 5.410000000032056e-07, 8.138999999997287e-06, 5.420000000026792e-07, 9.096999999999578e-06, 4.7199999999789077e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.430999999997247e-06, 5.409999999997361e-07, 7.847000000001797e-06, 4.870000000004038e-07, 8.735999999998773e-06, 4.860000000009301e-07, 8.819000000000188e-06, 5.419999999992098e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 1.0278000000002452e-05, 4.859999999974607e-07, 9.972000000000453e-06, 5.420000000026792e-07, 8.249999999997842e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 1.0111000000000148e-05, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:38.483" endtime="20201030 18:26:38.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.479" endtime="20201030 18:26:38.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:38.492" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:38.489" endtime="20201030 18:26:38.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:38.497" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.420...</msg>
<status status="PASS" starttime="20201030 18:26:38.493" endtime="20201030 18:26:38.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.502" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:38.500" endtime="20201030 18:26:38.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.505" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.410000000032056e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:26:38.503" endtime="20201030 18:26:38.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.498" endtime="20201030 18:26:38.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:38.509" endtime="20201030 18:26:38.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.508" endtime="20201030 18:26:38.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.506" endtime="20201030 18:26:38.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.114" endtime="20201030 18:26:38.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.113" endtime="20201030 18:26:38.530"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.539" endtime="20201030 18:26:38.554"></status>
</kw>
<msg timestamp="20201030 18:26:38.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:38.538" endtime="20201030 18:26:38.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.557" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:38.555" endtime="20201030 18:26:38.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.558" endtime="20201030 18:26:38.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.535" endtime="20201030 18:26:38.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.533" endtime="20201030 18:26:38.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.567" endtime="20201030 18:26:38.855"></status>
</kw>
<msg timestamp="20201030 18:26:38.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:38.566" endtime="20201030 18:26:38.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:38.860" endtime="20201030 18:26:38.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.870" endtime="20201030 18:26:38.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.563" endtime="20201030 18:26:38.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.561" endtime="20201030 18:26:38.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:38.905" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:38.874" endtime="20201030 18:26:38.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.906" endtime="20201030 18:26:38.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.911" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:38.910" endtime="20201030 18:26:38.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.916" level="INFO">VALUE: {'eventtime': [0.019653014, 0.0196535, 0.019660875, 0.019661361, 0.019671944, 0.019672486, 0.019681472, 0.019681958, 0.019690764, 0.01969125, 0.019698931, 0.019699417, 0.019709569, 0.019710111, 0.019719694, 0.019720236, 0.019730361, 0.019730847, 0.019740514, 0.019741, 0.019749208, 0.01974975, 0.019758319, 0.019758861, 0.019766181, 0.019766722, 0.019775097, 0.019775583, 0.019784514, 0.019785, 0.019794347, 0.019794833, 0.019803861, 0.019804347, 0.019813375, 0.019813847, 0.019821306, 0.019821847, 0.019830097, 0.019830583, 0.019839181, 0.019839722, 0.019848, 0.019848472, 0.019856639, 0.019857181, 0.019865486, 0.019865958, 0.019875681, 0.019876153, 0.019886097, 0.019886639, 0.019895667, 0.019896139, 0.019903458, 0.019904, 0.019913278, 0.019913819, 0.01992175, 0.019922236, 0.019932306, 0.019932792, 0.019942222, 0.019942708, 0.019953292, 0.019953778, 0.019963306, 0.019963847, 0.019974139, 0.019974611, 0.019982764, 0.019983306, 0.01999125, 0.019991792, 0.019999653, 0.020000139, 0.020008125, 0.020008667, 0.020016514, 0.020017, 0.020025736, 0.020026222, 0.020036806, 0.020037292, 0.020047028, 0.020047569, 0.020057417, 0.020057889, 0.020066042, 0.020066583, 0.020077069, 0.020077542, 0.020086833, 0.020087319, 0.020095625, 0.020096111, 0.020103569, 0.020104056, 0.020113375, 0.020113917], 'sourcediff': [0, 4.860000000009301e-07, 7.375000000000437e-06, 4.859999999974607e-07, 1.0583000000001508e-05, 5.419999999992098e-07, 8.985999999999023e-06, 4.860000000009301e-07, 8.806000000000092e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.0151999999999384e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 9.667000000001397e-06, 4.860000000009301e-07, 8.207999999999133e-06, 5.419999999992098e-07, 8.568999999999938e-06, 5.419999999992098e-07, 7.320000000001631e-06, 5.409999999997361e-07, 8.374999999997967e-06, 4.860000000009301e-07, 8.931000000000217e-06, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.860000000009301e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 7.459000000001326e-06, 5.409999999997361e-07, 8.250000000001312e-06, 4.859999999974607e-07, 8.59800000000202e-06, 5.409999999997361e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 5.420000000026792e-07, 8.305000000000118e-06, 4.7199999999789077e-07, 9.722999999999676e-06, 4.720000000013602e-07, 9.943999999997843e-06, 5.420000000026792e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.318999999998688e-06, 5.420000000026792e-07, 9.277999999997982e-06, 5.409999999997361e-07, 7.930999999999216e-06, 4.860000000009301e-07, 1.0070000000000912e-05, 4.860000000009301e-07, 9.429999999997773e-06, 4.860000000009301e-07, 1.0584000000000982e-05, 4.859999999974607e-07, 9.528000000001702e-06, 5.409999999997361e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 8.153000000000327e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.420000000026792e-07, 7.860999999997897e-06, 4.860000000009301e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.846999999998328e-06, 4.860000000009301e-07, 8.735999999998773e-06, 4.860000000009301e-07, 1.0584000000000982e-05, 4.860000000009301e-07, 9.735999999999773e-06, 5.409999999997361e-07, 9.847999999999801e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 5.409999999997361e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 8.305999999999591e-06, 4.860000000009301e-07, 7.458000000001852e-06, 4.869999999969343e-07, 9.319000000000688e-06, 5.419999999992098e-07], 'source_diff': [0, 4.860000000009301e-07, 7.375000000000437e-06, 4.859999999974607e-07, 1.0583000000001508e-05, 5.419999999992098e-07, 8.985999999999023e-06, 4.860000000009301e-07, 8.806000000000092e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.0151999999999384e-05, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 4.860000000009301e-07, 9.667000000001397e-06, 4.860000000009301e-07, 8.207999999999133e-06, 5.419999999992098e-07, 8.568999999999938e-06, 5.419999999992098e-07, 7.320000000001631e-06, 5.409999999997361e-07, 8.374999999997967e-06, 4.860000000009301e-07, 8.931000000000217e-06, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.860000000009301e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 7.459000000001326e-06, 5.409999999997361e-07, 8.250000000001312e-06, 4.859999999974607e-07, 8.59800000000202e-06, 5.409999999997361e-07, 8.278000000000452e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 5.420000000026792e-07, 8.305000000000118e-06, 4.7199999999789077e-07, 9.722999999999676e-06, 4.720000000013602e-07, 9.943999999997843e-06, 5.420000000026792e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.318999999998688e-06, 5.420000000026792e-07, 9.277999999997982e-06, 5.409999999997361e-07, 7.930999999999216e-06, 4.860000000009301e-07, 1.0070000000000912e-05, 4.860000000009301e-07, 9.429999999997773e-06, 4.860000000009301e-07, 1.0584000000000982e-05, 4.859999999974607e-07, 9.528000000001702e-06, 5.409999999997361e-07, 1.0291999999998552e-05, 4.720000000013602e-07, 8.153000000000327e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.420000000026792e-07, 7.860999999997897e-06, 4.860000000009301e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.846999999998328e-06, 4.860000000009301e-07, 8.735999999998773e-06, 4.860000000009301e-07, 1.0584000000000982e-05, 4.860000000009301e-07, 9.735999999999773e-06, 5.409999999997361e-07, 9.847999999999801e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 5.409999999997361e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 9.290999999998079e-06, 4.860000000009301e-07, 8.305999999999591e-06, 4.860000000009301e-07, 7.458000000001852e-06, 4.869999999969343e-07, 9.319000000000688e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:38.913" endtime="20201030 18:26:38.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.908" endtime="20201030 18:26:38.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:38.922" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:38.918" endtime="20201030 18:26:38.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:38.926" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:26:38.923" endtime="20201030 18:26:38.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.931" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:38.930" endtime="20201030 18:26:38.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.934" level="INFO">VALUE: [4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.869999999969343e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:38.932" endtime="20201030 18:26:38.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.927" endtime="20201030 18:26:38.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:38.939" endtime="20201030 18:26:38.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.937" endtime="20201030 18:26:38.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.936" endtime="20201030 18:26:38.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.531" endtime="20201030 18:26:38.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.530" endtime="20201030 18:26:38.959"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.969" endtime="20201030 18:26:38.984"></status>
</kw>
<msg timestamp="20201030 18:26:38.985" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:38.967" endtime="20201030 18:26:38.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:38.987" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:38.986" endtime="20201030 18:26:38.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.988" endtime="20201030 18:26:38.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.963" endtime="20201030 18:26:38.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.962" endtime="20201030 18:26:38.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:38.998" endtime="20201030 18:26:39.289"></status>
</kw>
<msg timestamp="20201030 18:26:39.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:38.996" endtime="20201030 18:26:39.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:39.294" endtime="20201030 18:26:39.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.303" endtime="20201030 18:26:39.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.994" endtime="20201030 18:26:39.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.992" endtime="20201030 18:26:39.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:39.331" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:39.307" endtime="20201030 18:26:39.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.333" endtime="20201030 18:26:39.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.338" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:39.337" endtime="20201030 18:26:39.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.342" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.022279028, 0.022279569, 0.022287819, 0.022288361, 0.022298403, 0.022298889, 0.022308611, 0.022309083, 0.022319333, 0.022319806, 0.022327903, 0.022328444, 0.022337, 0.022337542, 0.022346819, 0.022347306, 0.022354778, 0.022355264, 0.022362917, 0.022363458, 0.022373986, 0.022374528, 0.022382458, 0.022383, 0.022390722, 0.022391264, 0.022399306, 0.022399792, 0.02240725, 0.022407736, 0.022415097, 0.022415583, 0.022424931, 0.022425403, 0.022434208, 0.02243475, 0.022444667, 0.022445153, 0.02245575, 0.022456222, 0.022465153, 0.022465694, 0.022475514, 0.022476056, 0.022483806, 0.022484292, 0.022493736, 0.022494278, 0.022502333, 0.022502819, 0.022512069, 0.022512556, 0.022520903, 0.022521375, 0.022530236, 0.022530778, 0.022539361, 0.022539833, 0.022547486, 0.022548028, 0.022558028, 0.022558569, 0.022568694, 0.022569181, 0.022578292, 0.022578833, 0.022587486, 0.022588028, 0.022596583, 0.022597125, 0.022606194, 0.022606736, 0.022615917, 0.022616458, 0.022626042, 0.022626583, 0.022635875, 0.022636417, 0.02264675, 0.022647292, 0.022656694, 0.022657236, 0.022665611, 0.022666097, 0.022673458, 0.022674, 0.022681333, 0.022681819, 0.022690347, 0.022690833, 0.022700583, 0.022701069, 0.022710611, 0.022711097, 0.022719278, 0.022719819, 0.022728472, 0.022729014, 0.022736625, 0.022737167], 'sourcediff': [0, 5.409999999997361e-07, 8.250000000001312e-06, 5.419999999992098e-07, 1.0042000000001772e-05, 4.859999999974607e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7300000000083386e-07, 8.096999999998578e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.419999999992098e-07, 9.277000000001978e-06, 4.870000000004038e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 7.652999999999827e-06, 5.409999999997361e-07, 1.0527999999999232e-05, 5.420000000026792e-07, 7.929999999999743e-06, 5.419999999992098e-07, 7.721999999998203e-06, 5.420000000026792e-07, 8.041999999999772e-06, 4.860000000009301e-07, 7.457999999998383e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.860000000009301e-07, 9.347999999999301e-06, 4.720000000013602e-07, 8.805000000000618e-06, 5.419999999992098e-07, 9.917000000001647e-06, 4.859999999974607e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.931000000000217e-06, 5.409999999997361e-07, 9.819999999997192e-06, 5.420000000026792e-07, 7.749999999997342e-06, 4.860000000009301e-07, 9.444000000000813e-06, 5.419999999992098e-07, 8.054999999999868e-06, 4.860000000009301e-07, 9.249999999998842e-06, 4.870000000004038e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.420000000026792e-07, 8.582999999999508e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 5.420000000026792e-07, 9.999999999999593e-06, 5.409999999997361e-07, 1.0124999999999718e-05, 4.870000000004038e-07, 9.110999999999148e-06, 5.409999999997361e-07, 8.653000000000827e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 9.069000000000438e-06, 5.419999999992098e-07, 9.181000000000467e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 5.419999999992098e-07, 9.402000000002103e-06, 5.419999999992098e-07, 8.374999999997967e-06, 4.860000000009301e-07, 7.361000000000867e-06, 5.419999999992098e-07, 7.333000000001727e-06, 4.859999999974607e-07, 8.528000000000702e-06, 4.860000000009301e-07, 9.749999999999343e-06, 4.860000000009301e-07, 9.541999999997802e-06, 4.860000000009301e-07, 8.180999999999466e-06, 5.409999999997361e-07, 8.653000000000827e-06, 5.419999999992098e-07, 7.611000000001117e-06, 5.419999999992098e-07], 'source_diff': [0, 5.409999999997361e-07, 8.250000000001312e-06, 5.419999999992098e-07, 1.0042000000001772e-05, 4.859999999974607e-07, 9.722000000000203e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.7300000000083386e-07, 8.096999999998578e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.419999999992098e-07, 9.277000000001978e-06, 4.870000000004038e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 7.652999999999827e-06, 5.409999999997361e-07, 1.0527999999999232e-05, 5.420000000026792e-07, 7.929999999999743e-06, 5.419999999992098e-07, 7.721999999998203e-06, 5.420000000026792e-07, 8.041999999999772e-06, 4.860000000009301e-07, 7.457999999998383e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.860000000009301e-07, 9.347999999999301e-06, 4.720000000013602e-07, 8.805000000000618e-06, 5.419999999992098e-07, 9.917000000001647e-06, 4.859999999974607e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.931000000000217e-06, 5.409999999997361e-07, 9.819999999997192e-06, 5.420000000026792e-07, 7.749999999997342e-06, 4.860000000009301e-07, 9.444000000000813e-06, 5.419999999992098e-07, 8.054999999999868e-06, 4.860000000009301e-07, 9.249999999998842e-06, 4.870000000004038e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.860999999998898e-06, 5.420000000026792e-07, 8.582999999999508e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 5.420000000026792e-07, 9.999999999999593e-06, 5.409999999997361e-07, 1.0124999999999718e-05, 4.870000000004038e-07, 9.110999999999148e-06, 5.409999999997361e-07, 8.653000000000827e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 9.069000000000438e-06, 5.419999999992098e-07, 9.181000000000467e-06, 5.409999999997361e-07, 9.583999999999981e-06, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 5.419999999992098e-07, 9.402000000002103e-06, 5.419999999992098e-07, 8.374999999997967e-06, 4.860000000009301e-07, 7.361000000000867e-06, 5.419999999992098e-07, 7.333000000001727e-06, 4.859999999974607e-07, 8.528000000000702e-06, 4.860000000009301e-07, 9.749999999999343e-06, 4.860000000009301e-07, 9.541999999997802e-06, 4.860000000009301e-07, 8.180999999999466e-06, 5.409999999997361e-07, 8.653000000000827e-06, 5.419999999992098e-07, 7.611000000001117e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:39.339" endtime="20201030 18:26:39.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.335" endtime="20201030 18:26:39.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:39.348" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 5.409999999997361e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:26:39.345" endtime="20201030 18:26:39.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:39.353" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860...</msg>
<status status="PASS" starttime="20201030 18:26:39.349" endtime="20201030 18:26:39.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.358" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:39.357" endtime="20201030 18:26:39.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.361" level="INFO">VALUE: [5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:39.359" endtime="20201030 18:26:39.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.354" endtime="20201030 18:26:39.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:39.365" endtime="20201030 18:26:39.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.364" endtime="20201030 18:26:39.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.363" endtime="20201030 18:26:39.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.960" endtime="20201030 18:26:39.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:38.960" endtime="20201030 18:26:39.386"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.395" endtime="20201030 18:26:39.412"></status>
</kw>
<msg timestamp="20201030 18:26:39.413" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:39.393" endtime="20201030 18:26:39.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.415" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:39.414" endtime="20201030 18:26:39.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.416" endtime="20201030 18:26:39.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.390" endtime="20201030 18:26:39.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.388" endtime="20201030 18:26:39.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.426" endtime="20201030 18:26:39.715"></status>
</kw>
<msg timestamp="20201030 18:26:39.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:39.424" endtime="20201030 18:26:39.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:39.719" endtime="20201030 18:26:39.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.728" endtime="20201030 18:26:39.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.422" endtime="20201030 18:26:39.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.420" endtime="20201030 18:26:39.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:39.756" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:39.732" endtime="20201030 18:26:39.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.757" endtime="20201030 18:26:39.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.763" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:39.762" endtime="20201030 18:26:39.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.767" level="INFO">VALUE: {'eventtime': [0.022401139, 0.022401625, 0.022411278, 0.022411819, 0.022419972, 0.022420514, 0.022429097, 0.022429583, 0.022438, 0.022438542, 0.022448236, 0.022448778, 0.022458278, 0.022458764, 0.0224685, 0.022469042, 0.022478847, 0.022479389, 0.022487528, 0.022488069, 0.022497458, 0.022497944, 0.022505625, 0.022506111, 0.022516375, 0.022516917, 0.022526292, 0.022526833, 0.022534458, 0.022534944, 0.022543139, 0.022543625, 0.022553014, 0.022553486, 0.022562361, 0.022562903, 0.02257225, 0.022572722, 0.022582028, 0.0225825, 0.022591111, 0.022591597, 0.022600931, 0.022601417, 0.022609917, 0.022610458, 0.022619875, 0.022620347, 0.022628417, 0.022628958, 0.02263875, 0.022639292, 0.022649, 0.022649486, 0.022657569, 0.022658111, 0.022668639, 0.022669181, 0.022678889, 0.022679375, 0.022689111, 0.022689653, 0.022699444, 0.022699986, 0.022709181, 0.022709667, 0.022717111, 0.022717653, 0.022727042, 0.022727583, 0.022737389, 0.022737875, 0.022745236, 0.022745722, 0.022754958, 0.0227555, 0.022764069, 0.022764611, 0.022772778, 0.022773264, 0.022782306, 0.022782847, 0.02279225, 0.022792792, 0.022801028, 0.0228015, 0.022809111, 0.022809653, 0.022817792, 0.022818278, 0.022826667, 0.022827208, 0.022837431, 0.022837917, 0.022848181, 0.022848722, 0.022858431, 0.022858917, 0.022869278, 0.022869764], 'sourcediff': [0, 4.860000000009301e-07, 9.652999999998357e-06, 5.409999999997361e-07, 8.153000000000327e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.860000000009301e-07, 8.417000000000147e-06, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 9.500000000002562e-06, 4.859999999974607e-07, 9.735999999999773e-06, 5.420000000026792e-07, 9.804999999998149e-06, 5.419999999992098e-07, 8.139000000000757e-06, 5.409999999997361e-07, 9.389000000002007e-06, 4.859999999974607e-07, 7.681000000002436e-06, 4.859999999974607e-07, 1.0264000000002882e-05, 5.419999999992098e-07, 9.374999999998967e-06, 5.409999999997361e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.346999999999828e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.611000000002117e-06, 4.860000000009301e-07, 9.333999999999731e-06, 4.859999999974607e-07, 8.500000000001562e-06, 5.409999999997361e-07, 9.417000000001147e-06, 4.7199999999789077e-07, 8.07000000000238e-06, 5.409999999997361e-07, 9.791999999998052e-06, 5.419999999992098e-07, 9.708000000000633e-06, 4.860000000009301e-07, 8.082999999999008e-06, 5.420000000026792e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 9.708000000000633e-06, 4.860000000009301e-07, 9.735999999999773e-06, 5.419999999992098e-07, 9.790999999998579e-06, 5.419999999992098e-07, 9.195000000000036e-06, 4.860000000009301e-07, 7.444000000002282e-06, 5.419999999992098e-07, 9.388999999998537e-06, 5.409999999997361e-07, 9.806000000001092e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.860000000009301e-07, 9.235999999999273e-06, 5.420000000026792e-07, 8.568999999999938e-06, 5.419999999992098e-07, 8.166999999999897e-06, 4.860000000009301e-07, 9.041999999997302e-06, 5.409999999997361e-07, 9.403000000001577e-06, 5.419999999992098e-07, 8.236000000001742e-06, 4.7199999999789077e-07, 7.611000000001117e-06, 5.419999999992098e-07, 8.139000000000757e-06, 4.860000000009301e-07, 8.388999999997537e-06, 5.410000000032056e-07, 1.0222999999996707e-05, 4.860000000009301e-07, 1.0263999999999412e-05, 5.409999999997361e-07, 9.709000000000106e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 4.860000000009301e-07], 'source_diff': [0, 4.860000000009301e-07, 9.652999999998357e-06, 5.409999999997361e-07, 8.153000000000327e-06, 5.419999999992098e-07, 8.582999999999508e-06, 4.860000000009301e-07, 8.417000000000147e-06, 5.419999999992098e-07, 9.694000000001063e-06, 5.419999999992098e-07, 9.500000000002562e-06, 4.859999999974607e-07, 9.735999999999773e-06, 5.420000000026792e-07, 9.804999999998149e-06, 5.419999999992098e-07, 8.139000000000757e-06, 5.409999999997361e-07, 9.389000000002007e-06, 4.859999999974607e-07, 7.681000000002436e-06, 4.859999999974607e-07, 1.0264000000002882e-05, 5.419999999992098e-07, 9.374999999998967e-06, 5.409999999997361e-07, 7.625000000000687e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.346999999999828e-06, 4.720000000013602e-07, 9.306000000000592e-06, 4.7199999999789077e-07, 8.611000000002117e-06, 4.860000000009301e-07, 9.333999999999731e-06, 4.859999999974607e-07, 8.500000000001562e-06, 5.409999999997361e-07, 9.417000000001147e-06, 4.7199999999789077e-07, 8.07000000000238e-06, 5.409999999997361e-07, 9.791999999998052e-06, 5.419999999992098e-07, 9.708000000000633e-06, 4.860000000009301e-07, 8.082999999999008e-06, 5.420000000026792e-07, 1.0527999999999232e-05, 5.419999999992098e-07, 9.708000000000633e-06, 4.860000000009301e-07, 9.735999999999773e-06, 5.419999999992098e-07, 9.790999999998579e-06, 5.419999999992098e-07, 9.195000000000036e-06, 4.860000000009301e-07, 7.444000000002282e-06, 5.419999999992098e-07, 9.388999999998537e-06, 5.409999999997361e-07, 9.806000000001092e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.860000000009301e-07, 9.235999999999273e-06, 5.420000000026792e-07, 8.568999999999938e-06, 5.419999999992098e-07, 8.166999999999897e-06, 4.860000000009301e-07, 9.041999999997302e-06, 5.409999999997361e-07, 9.403000000001577e-06, 5.419999999992098e-07, 8.236000000001742e-06, 4.7199999999789077e-07, 7.611000000001117e-06, 5.419999999992098e-07, 8.139000000000757e-06, 4.860000000009301e-07, 8.388999999997537e-06, 5.410000000032056e-07, 1.0222999999996707e-05, 4.860000000009301e-07, 1.0263999999999412e-05, 5.409999999997361e-07, 9.709000000000106e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:39.764" endtime="20201030 18:26:39.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.760" endtime="20201030 18:26:39.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:39.773" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:39.769" endtime="20201030 18:26:39.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:39.777" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:26:39.774" endtime="20201030 18:26:39.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.782" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:39.781" endtime="20201030 18:26:39.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.785" level="INFO">VALUE: [4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:26:39.783" endtime="20201030 18:26:39.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.778" endtime="20201030 18:26:39.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:39.790" endtime="20201030 18:26:39.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.788" endtime="20201030 18:26:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.787" endtime="20201030 18:26:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.387" endtime="20201030 18:26:39.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.387" endtime="20201030 18:26:39.811"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.820" endtime="20201030 18:26:39.834"></status>
</kw>
<msg timestamp="20201030 18:26:39.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:39.818" endtime="20201030 18:26:39.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:39.835" endtime="20201030 18:26:39.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.839" endtime="20201030 18:26:39.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.815" endtime="20201030 18:26:39.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.813" endtime="20201030 18:26:39.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:39.852" endtime="20201030 18:26:40.140"></status>
</kw>
<msg timestamp="20201030 18:26:40.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:39.850" endtime="20201030 18:26:40.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:40.144" endtime="20201030 18:26:40.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.153" endtime="20201030 18:26:40.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.846" endtime="20201030 18:26:40.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.844" endtime="20201030 18:26:40.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:40.182" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:40.156" endtime="20201030 18:26:40.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.183" endtime="20201030 18:26:40.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.188" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:40.187" endtime="20201030 18:26:40.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.192" level="INFO">VALUE: {'eventtime': [0.020278306, 0.020278778, 0.020287167, 0.020287653, 0.020296167, 0.020296653, 0.020305556, 0.020306097, 0.02031475, 0.020315292, 0.020324583, 0.020325069, 0.020335639, 0.020336181, 0.020346611, 0.020347097, 0.020356333, 0.020356819, 0.020365847, 0.020366333, 0.020376944, 0.020377431, 0.020385125, 0.020385597, 0.020394736, 0.020395278, 0.020405611, 0.020406153, 0.020416333, 0.020416806, 0.020426222, 0.020426764, 0.020436042, 0.020436583, 0.020446819, 0.020447306, 0.020455278, 0.020455764, 0.020463847, 0.020464389, 0.020474292, 0.020474833, 0.020484944, 0.020485486, 0.020493861, 0.020494333, 0.020502611, 0.020503153, 0.020512486, 0.020512958, 0.020522056, 0.020522542, 0.020530444, 0.020530917, 0.020539194, 0.020539736, 0.0205485, 0.020548986, 0.020559375, 0.020559847, 0.020570319, 0.020570861, 0.020580653, 0.020581194, 0.020590278, 0.020590764, 0.020598958, 0.020599444, 0.020608667, 0.020609208, 0.020617806, 0.020618278, 0.02062675, 0.020627236, 0.020634806, 0.020635292, 0.020644972, 0.020645444, 0.020655389, 0.020655875, 0.020666333, 0.020666875, 0.020676681, 0.020677222, 0.020687736, 0.020688278, 0.020697361, 0.020697847, 0.020708333, 0.020708819, 0.020719181, 0.020719667, 0.020729208, 0.02072975, 0.020738236, 0.020738722, 0.020746181, 0.020746722, 0.020754986, 0.020755528], 'sourcediff': [0, 4.720000000013602e-07, 8.388999999997537e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 8.902999999997607e-06, 5.409999999997361e-07, 8.653000000000827e-06, 5.419999999992098e-07, 9.291000000001548e-06, 4.860000000009301e-07, 1.0569999999997942e-05, 5.419999999992098e-07, 1.0430000000002243e-05, 4.860000000009301e-07, 9.235999999999273e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.860000000009301e-07, 1.0611000000000648e-05, 4.870000000004038e-07, 7.693999999999063e-06, 4.7199999999789077e-07, 9.139000000001757e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 5.419999999992098e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 9.416000000001673e-06, 5.419999999992098e-07, 9.278000000001452e-06, 5.409999999997361e-07, 1.0236000000000273e-05, 4.869999999969343e-07, 7.972000000001922e-06, 4.860000000009301e-07, 8.082999999999008e-06, 5.419999999992098e-07, 9.903000000002077e-06, 5.409999999997361e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 8.278000000000452e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.097999999999051e-06, 4.860000000009301e-07, 7.901999999997134e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 5.419999999992098e-07, 8.764000000001382e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 4.7199999999789077e-07, 1.0472000000000953e-05, 5.419999999992098e-07, 9.792000000001522e-06, 5.409999999997361e-07, 9.083999999999481e-06, 4.860000000009301e-07, 8.193999999999563e-06, 4.860000000009301e-07, 9.222999999999176e-06, 5.409999999997361e-07, 8.597999999998551e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.860000000009301e-07, 7.569999999998411e-06, 4.860000000009301e-07, 9.680000000001493e-06, 4.7199999999789077e-07, 9.945000000000787e-06, 4.860000000009301e-07, 1.0457999999997913e-05, 5.420000000026792e-07, 9.805999999997622e-06, 5.409999999997361e-07, 1.0514000000003132e-05, 5.419999999992098e-07, 9.083000000000008e-06, 4.859999999974607e-07, 1.0486000000000523e-05, 4.860000000009301e-07, 1.0361999999999871e-05, 4.860000000009301e-07, 9.540999999998329e-06, 5.420000000026792e-07, 8.485999999998523e-06, 4.860000000009301e-07, 7.458999999997856e-06, 5.409999999997361e-07, 8.264000000000882e-06, 5.419999999992098e-07], 'source_diff': [0, 4.720000000013602e-07, 8.388999999997537e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 8.902999999997607e-06, 5.409999999997361e-07, 8.653000000000827e-06, 5.419999999992098e-07, 9.291000000001548e-06, 4.860000000009301e-07, 1.0569999999997942e-05, 5.419999999992098e-07, 1.0430000000002243e-05, 4.860000000009301e-07, 9.235999999999273e-06, 4.860000000009301e-07, 9.027999999997732e-06, 4.860000000009301e-07, 1.0611000000000648e-05, 4.870000000004038e-07, 7.693999999999063e-06, 4.7199999999789077e-07, 9.139000000001757e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 5.419999999992098e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 9.416000000001673e-06, 5.419999999992098e-07, 9.278000000001452e-06, 5.409999999997361e-07, 1.0236000000000273e-05, 4.869999999969343e-07, 7.972000000001922e-06, 4.860000000009301e-07, 8.082999999999008e-06, 5.419999999992098e-07, 9.903000000002077e-06, 5.409999999997361e-07, 1.0111000000000148e-05, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 8.278000000000452e-06, 5.419999999992098e-07, 9.333000000000258e-06, 4.720000000013602e-07, 9.097999999999051e-06, 4.860000000009301e-07, 7.901999999997134e-06, 4.7300000000083386e-07, 8.277000000000978e-06, 5.419999999992098e-07, 8.764000000001382e-06, 4.860000000009301e-07, 1.0388999999999537e-05, 4.7199999999789077e-07, 1.0472000000000953e-05, 5.419999999992098e-07, 9.792000000001522e-06, 5.409999999997361e-07, 9.083999999999481e-06, 4.860000000009301e-07, 8.193999999999563e-06, 4.860000000009301e-07, 9.222999999999176e-06, 5.409999999997361e-07, 8.597999999998551e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.860000000009301e-07, 7.569999999998411e-06, 4.860000000009301e-07, 9.680000000001493e-06, 4.7199999999789077e-07, 9.945000000000787e-06, 4.860000000009301e-07, 1.0457999999997913e-05, 5.420000000026792e-07, 9.805999999997622e-06, 5.409999999997361e-07, 1.0514000000003132e-05, 5.419999999992098e-07, 9.083000000000008e-06, 4.859999999974607e-07, 1.0486000000000523e-05, 4.860000000009301e-07, 1.0361999999999871e-05, 4.860000000009301e-07, 9.540999999998329e-06, 5.420000000026792e-07, 8.485999999998523e-06, 4.860000000009301e-07, 7.458999999997856e-06, 5.409999999997361e-07, 8.264000000000882e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:40.189" endtime="20201030 18:26:40.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.185" endtime="20201030 18:26:40.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:40.198" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:40.195" endtime="20201030 18:26:40.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:40.203" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 18:26:40.199" endtime="20201030 18:26:40.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.207" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:40.206" endtime="20201030 18:26:40.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.209" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.869999999969343e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:40.208" endtime="20201030 18:26:40.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.203" endtime="20201030 18:26:40.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:40.214" endtime="20201030 18:26:40.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.213" endtime="20201030 18:26:40.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.211" endtime="20201030 18:26:40.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.811" endtime="20201030 18:26:40.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.811" endtime="20201030 18:26:40.235"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.244" endtime="20201030 18:26:40.261"></status>
</kw>
<msg timestamp="20201030 18:26:40.262" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:40.243" endtime="20201030 18:26:40.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:40.263" endtime="20201030 18:26:40.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.266" endtime="20201030 18:26:40.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.240" endtime="20201030 18:26:40.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.237" endtime="20201030 18:26:40.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.275" endtime="20201030 18:26:40.560"></status>
</kw>
<msg timestamp="20201030 18:26:40.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:40.273" endtime="20201030 18:26:40.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:40.565" endtime="20201030 18:26:40.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.576" endtime="20201030 18:26:40.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.271" endtime="20201030 18:26:40.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.269" endtime="20201030 18:26:40.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:40.603" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:40.579" endtime="20201030 18:26:40.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.604" endtime="20201030 18:26:40.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.609" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:40.608" endtime="20201030 18:26:40.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.613" level="INFO">VALUE: {'eventtime': [0.022827722, 0.022828208, 0.022836319, 0.022836806, 0.022844278, 0.022844819, 0.022853069, 0.022853611, 0.022861042, 0.022861583, 0.022871722, 0.022872208, 0.022881861, 0.022882403, 0.022890347, 0.022890889, 0.022899153, 0.022899694, 0.022909611, 0.022910153, 0.022917903, 0.022918389, 0.022928875, 0.022929417, 0.022936944, 0.022937486, 0.022945417, 0.022945958, 0.022954306, 0.022954847, 0.022963819, 0.022964361, 0.022974778, 0.022975319, 0.022985319, 0.022985861, 0.022994417, 0.022994958, 0.023002889, 0.023003431, 0.023012611, 0.023013097, 0.023023667, 0.023024208, 0.023033694, 0.023034236, 0.023041972, 0.023042458, 0.023052819, 0.023053306, 0.023060875, 0.023061417, 0.023069153, 0.023069694, 0.023078056, 0.023078597, 0.023087069, 0.023087611, 0.023097861, 0.023098347, 0.023106861, 0.023107347, 0.023115542, 0.023116083, 0.023126306, 0.023126847, 0.023135819, 0.023136306, 0.023146458, 0.023147, 0.023156181, 0.023156722, 0.023167042, 0.023167528, 0.023177486, 0.023177972, 0.023185653, 0.023186139, 0.023195042, 0.023195583, 0.023205583, 0.023206125, 0.023215833, 0.023216319, 0.023226264, 0.023226806, 0.023235042, 0.023235583, 0.023244139, 0.023244681, 0.023253778, 0.023254319, 0.023262472, 0.023263014, 0.023271708, 0.023272181, 0.023282167, 0.023282653, 0.023292514, 0.023293], 'sourcediff': [0, 4.859999999974607e-07, 8.111000000001617e-06, 4.870000000004038e-07, 7.4719999999979525e-06, 5.409999999997361e-07, 8.250000000001312e-06, 5.419999999992098e-07, 7.431000000002186e-06, 5.409999999997361e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 9.652999999998357e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.420000000026792e-07, 8.263999999997412e-06, 5.410000000032056e-07, 9.916999999998177e-06, 5.419999999992098e-07, 7.750000000000812e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 7.527000000000228e-06, 5.419999999992098e-07, 7.930999999999216e-06, 5.409999999997361e-07, 8.34800000000177e-06, 5.409999999997361e-07, 8.971999999999453e-06, 5.419999999992098e-07, 1.0417000000002147e-05, 5.409999999997361e-07, 9.999999999999593e-06, 5.419999999992098e-07, 8.555999999999842e-06, 5.409999999997361e-07, 7.930999999999216e-06, 5.420000000026792e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.0570000000001412e-05, 5.409999999997361e-07, 9.485999999999523e-06, 5.419999999992098e-07, 7.736000000001242e-06, 4.859999999974607e-07, 1.0361000000000398e-05, 4.870000000004038e-07, 7.569000000002407e-06, 5.419999999992098e-07, 7.735999999997772e-06, 5.410000000032056e-07, 8.361999999997871e-06, 5.409999999997361e-07, 8.472000000002422e-06, 5.419999999992098e-07, 1.0249999999999843e-05, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 8.194999999999036e-06, 5.409999999997361e-07, 1.0223000000000176e-05, 5.409999999997361e-07, 8.971999999999453e-06, 4.870000000004038e-07, 1.0152000000002853e-05, 5.419999999992098e-07, 9.181000000000467e-06, 5.409999999997361e-07, 1.0319999999997692e-05, 4.860000000009301e-07, 9.958000000000883e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 8.902999999997607e-06, 5.409999999997361e-07, 9.999999999999593e-06, 5.420000000026792e-07, 9.708000000000633e-06, 4.859999999974607e-07, 9.945000000000787e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 8.153000000000327e-06, 5.419999999992098e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 9.986000000000023e-06, 4.860000000009301e-07, 9.860999999999898e-06, 4.860000000009301e-07], 'source_diff': [0, 4.859999999974607e-07, 8.111000000001617e-06, 4.870000000004038e-07, 7.4719999999979525e-06, 5.409999999997361e-07, 8.250000000001312e-06, 5.419999999992098e-07, 7.431000000002186e-06, 5.409999999997361e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 9.652999999998357e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.420000000026792e-07, 8.263999999997412e-06, 5.410000000032056e-07, 9.916999999998177e-06, 5.419999999992098e-07, 7.750000000000812e-06, 4.860000000009301e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 7.527000000000228e-06, 5.419999999992098e-07, 7.930999999999216e-06, 5.409999999997361e-07, 8.34800000000177e-06, 5.409999999997361e-07, 8.971999999999453e-06, 5.419999999992098e-07, 1.0417000000002147e-05, 5.409999999997361e-07, 9.999999999999593e-06, 5.419999999992098e-07, 8.555999999999842e-06, 5.409999999997361e-07, 7.930999999999216e-06, 5.420000000026792e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.0570000000001412e-05, 5.409999999997361e-07, 9.485999999999523e-06, 5.419999999992098e-07, 7.736000000001242e-06, 4.859999999974607e-07, 1.0361000000000398e-05, 4.870000000004038e-07, 7.569000000002407e-06, 5.419999999992098e-07, 7.735999999997772e-06, 5.410000000032056e-07, 8.361999999997871e-06, 5.409999999997361e-07, 8.472000000002422e-06, 5.419999999992098e-07, 1.0249999999999843e-05, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 8.194999999999036e-06, 5.409999999997361e-07, 1.0223000000000176e-05, 5.409999999997361e-07, 8.971999999999453e-06, 4.870000000004038e-07, 1.0152000000002853e-05, 5.419999999992098e-07, 9.181000000000467e-06, 5.409999999997361e-07, 1.0319999999997692e-05, 4.860000000009301e-07, 9.958000000000883e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 8.902999999997607e-06, 5.409999999997361e-07, 9.999999999999593e-06, 5.420000000026792e-07, 9.708000000000633e-06, 4.859999999974607e-07, 9.945000000000787e-06, 5.419999999992098e-07, 8.236000000001742e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 8.153000000000327e-06, 5.419999999992098e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 9.986000000000023e-06, 4.860000000009301e-07, 9.860999999999898e-06, 4.860000000009301e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:40.610" endtime="20201030 18:26:40.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.606" endtime="20201030 18:26:40.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:40.619" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.870000000004038e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:40.615" endtime="20201030 18:26:40.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:40.623" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.4100...</msg>
<status status="PASS" starttime="20201030 18:26:40.619" endtime="20201030 18:26:40.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:40.627" endtime="20201030 18:26:40.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.630" level="INFO">VALUE: [4.859999999974607e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.410000000032056e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.410000000032056e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 18:26:40.629" endtime="20201030 18:26:40.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.624" endtime="20201030 18:26:40.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:40.634" endtime="20201030 18:26:40.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.633" endtime="20201030 18:26:40.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.632" endtime="20201030 18:26:40.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.236" endtime="20201030 18:26:40.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.235" endtime="20201030 18:26:40.655"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.663" endtime="20201030 18:26:40.678"></status>
</kw>
<msg timestamp="20201030 18:26:40.678" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:40.661" endtime="20201030 18:26:40.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.681" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:40.679" endtime="20201030 18:26:40.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.682" endtime="20201030 18:26:40.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.659" endtime="20201030 18:26:40.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.657" endtime="20201030 18:26:40.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.691" endtime="20201030 18:26:40.982"></status>
</kw>
<msg timestamp="20201030 18:26:40.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:40.689" endtime="20201030 18:26:40.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:40.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:40.986" endtime="20201030 18:26:40.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:40.994" endtime="20201030 18:26:40.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.687" endtime="20201030 18:26:40.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.685" endtime="20201030 18:26:40.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:41.021" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:40.998" endtime="20201030 18:26:41.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.022" endtime="20201030 18:26:41.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.027" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:41.026" endtime="20201030 18:26:41.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.031" level="INFO">VALUE: {'eventtime': [0.019458194, 0.019458736, 0.019467708, 0.01946825, 0.019478167, 0.019478653, 0.019486514, 0.019487056, 0.019496069, 0.019496542, 0.019506917, 0.019507458, 0.019515819, 0.019516361, 0.019525153, 0.019525639, 0.019534042, 0.019534583, 0.019543667, 0.019544208, 0.019553292, 0.019553833, 0.019562931, 0.019563472, 0.019571, 0.019571542, 0.019581667, 0.019582208, 0.019591, 0.019591486, 0.019602083, 0.019602569, 0.019613139, 0.019613681, 0.019622236, 0.019622778, 0.019632986, 0.019633528, 0.019643944, 0.019644486, 0.019654194, 0.019654681, 0.019664417, 0.019664903, 0.019673306, 0.019673847, 0.019683, 0.019683472, 0.019690792, 0.019691333, 0.019701153, 0.019701694, 0.019709111, 0.019709653, 0.019717889, 0.019718361, 0.019726222, 0.019726694, 0.019735083, 0.019735625, 0.019745556, 0.019746097, 0.019753417, 0.019753958, 0.019763264, 0.01976375, 0.019771778, 0.01977225, 0.019782097, 0.019782639, 0.01979225, 0.019792736, 0.019801542, 0.019802083, 0.019810014, 0.019810556, 0.019819722, 0.019820264, 0.019830264, 0.019830806, 0.019838944, 0.019839486, 0.019848861, 0.019849403, 0.019859917, 0.019860389, 0.019870306, 0.019870847, 0.019880667, 0.019881208, 0.019891653, 0.019892194, 0.019901486, 0.019902028, 0.019911014, 0.019911556, 0.019921903, 0.019922389, 0.019932139, 0.019932681], 'sourcediff': [0, 5.419999999992098e-07, 8.971999999999453e-06, 5.419999999992098e-07, 9.917000000001647e-06, 4.859999999974607e-07, 7.861000000001367e-06, 5.419999999992098e-07, 9.013000000002158e-06, 4.729999999973644e-07, 1.0374999999999968e-05, 5.409999999997361e-07, 8.361000000001867e-06, 5.419999999992098e-07, 8.792000000000522e-06, 4.860000000009301e-07, 8.403000000000577e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.528000000003171e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 5.409999999997361e-07, 8.792000000000522e-06, 4.860000000009301e-07, 1.0596999999997608e-05, 4.860000000009301e-07, 1.0570000000001412e-05, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0415999999999204e-05, 5.419999999992098e-07, 9.708000000000633e-06, 4.870000000004038e-07, 9.735999999999773e-06, 4.860000000009301e-07, 8.403000000000577e-06, 5.409999999997361e-07, 9.152999999997857e-06, 4.720000000013602e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.820000000000662e-06, 5.409999999997361e-07, 7.417000000002616e-06, 5.419999999992098e-07, 8.235999999998272e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 8.389000000001007e-06, 5.419999999992098e-07, 9.931000000001217e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.306000000000592e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.846999999996858e-06, 5.420000000026792e-07, 9.610999999999648e-06, 4.859999999974607e-07, 8.806000000000092e-06, 5.410000000032056e-07, 7.930999999999216e-06, 5.419999999992098e-07, 9.166000000001423e-06, 5.419999999992098e-07, 9.999999999999593e-06, 5.419999999992098e-07, 8.138000000001283e-06, 5.419999999992098e-07, 9.374999999998967e-06, 5.420000000026792e-07, 1.0513999999999663e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 5.409999999997361e-07, 9.820000000000662e-06, 5.409999999997361e-07, 1.0444999999997817e-05, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 4.859999999974607e-07, 9.750000000002812e-06, 5.419999999992098e-07], 'source_diff': [0, 5.419999999992098e-07, 8.971999999999453e-06, 5.419999999992098e-07, 9.917000000001647e-06, 4.859999999974607e-07, 7.861000000001367e-06, 5.419999999992098e-07, 9.013000000002158e-06, 4.729999999973644e-07, 1.0374999999999968e-05, 5.409999999997361e-07, 8.361000000001867e-06, 5.419999999992098e-07, 8.792000000000522e-06, 4.860000000009301e-07, 8.403000000000577e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.528000000003171e-06, 5.419999999992098e-07, 1.0124999999999718e-05, 5.409999999997361e-07, 8.792000000000522e-06, 4.860000000009301e-07, 1.0596999999997608e-05, 4.860000000009301e-07, 1.0570000000001412e-05, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 1.0415999999999204e-05, 5.419999999992098e-07, 9.708000000000633e-06, 4.870000000004038e-07, 9.735999999999773e-06, 4.860000000009301e-07, 8.403000000000577e-06, 5.409999999997361e-07, 9.152999999997857e-06, 4.720000000013602e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.820000000000662e-06, 5.409999999997361e-07, 7.417000000002616e-06, 5.419999999992098e-07, 8.235999999998272e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 8.389000000001007e-06, 5.419999999992098e-07, 9.931000000001217e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.306000000000592e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.846999999996858e-06, 5.420000000026792e-07, 9.610999999999648e-06, 4.859999999974607e-07, 8.806000000000092e-06, 5.410000000032056e-07, 7.930999999999216e-06, 5.419999999992098e-07, 9.166000000001423e-06, 5.419999999992098e-07, 9.999999999999593e-06, 5.419999999992098e-07, 8.138000000001283e-06, 5.419999999992098e-07, 9.374999999998967e-06, 5.420000000026792e-07, 1.0513999999999663e-05, 4.7199999999789077e-07, 9.917000000001647e-06, 5.409999999997361e-07, 9.820000000000662e-06, 5.409999999997361e-07, 1.0444999999997817e-05, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 4.859999999974607e-07, 9.750000000002812e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:41.028" endtime="20201030 18:26:41.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.024" endtime="20201030 18:26:41.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:41.037" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.729999999973644e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:41.033" endtime="20201030 18:26:41.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:41.041" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.729999999973644e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:26:41.038" endtime="20201030 18:26:41.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.046" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:41.045" endtime="20201030 18:26:41.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.049" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.729999999973644e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.410000000032056e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:41.047" endtime="20201030 18:26:41.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.042" endtime="20201030 18:26:41.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:41.054" endtime="20201030 18:26:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.052" endtime="20201030 18:26:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.051" endtime="20201030 18:26:41.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.656" endtime="20201030 18:26:41.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:40.655" endtime="20201030 18:26:41.074"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.082" endtime="20201030 18:26:41.099"></status>
</kw>
<msg timestamp="20201030 18:26:41.100" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:41.080" endtime="20201030 18:26:41.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.102" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:41.101" endtime="20201030 18:26:41.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.103" endtime="20201030 18:26:41.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.078" endtime="20201030 18:26:41.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.076" endtime="20201030 18:26:41.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.112" endtime="20201030 18:26:41.397"></status>
</kw>
<msg timestamp="20201030 18:26:41.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:41.111" endtime="20201030 18:26:41.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:41.401" endtime="20201030 18:26:41.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.410" endtime="20201030 18:26:41.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.108" endtime="20201030 18:26:41.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.106" endtime="20201030 18:26:41.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:41.437" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:41.413" endtime="20201030 18:26:41.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.438" endtime="20201030 18:26:41.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.443" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:41.442" endtime="20201030 18:26:41.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.447" level="INFO">VALUE: {'eventtime': [0.022471778, 0.022472264, 0.022481417, 0.022481889, 0.022489986, 0.022490528, 0.022500458, 0.022500944, 0.022509042, 0.022509583, 0.022517972, 0.022518444, 0.022528111, 0.022528597, 0.022536056, 0.022536597, 0.022547056, 0.022547528, 0.022556111, 0.022556653, 0.022566986, 0.022567472, 0.022575444, 0.022575986, 0.022583806, 0.022584347, 0.022591861, 0.022592403, 0.022600347, 0.022600889, 0.022611056, 0.022611528, 0.022619, 0.022619486, 0.02262925, 0.022629792, 0.022638486, 0.022638958, 0.022646972, 0.022647444, 0.0226575, 0.022658042, 0.022668069, 0.022668542, 0.022676514, 0.022677056, 0.022687583, 0.022688125, 0.022696069, 0.022696556, 0.022706292, 0.022706778, 0.022717347, 0.022717889, 0.022725819, 0.022726361, 0.022734403, 0.022734889, 0.022744333, 0.022744819, 0.022754347, 0.022754833, 0.022763333, 0.022763875, 0.022773681, 0.022774167, 0.022784444, 0.022784986, 0.022794806, 0.022795347, 0.022802764, 0.022803306, 0.022812875, 0.022813347, 0.022821403, 0.022821944, 0.022831681, 0.022832153, 0.022839931, 0.022840472, 0.02284975, 0.022850292, 0.022860208, 0.022860694, 0.022870944, 0.022871486, 0.022880347, 0.022880889, 0.022889653, 0.022890194, 0.022898125, 0.022898667, 0.022906889, 0.022907361, 0.022914903, 0.022915389, 0.022922764, 0.022923306, 0.022932292, 0.022932833], 'sourcediff': [0, 4.859999999974607e-07, 9.153000000001327e-06, 4.720000000013602e-07, 8.096999999998578e-06, 5.419999999992098e-07, 9.930000000001743e-06, 4.859999999974607e-07, 8.09800000000152e-06, 5.409999999997361e-07, 8.389000000001007e-06, 4.7199999999789077e-07, 9.667000000001397e-06, 4.860000000009301e-07, 7.458999999997856e-06, 5.409999999997361e-07, 1.0459000000000857e-05, 4.720000000013602e-07, 8.582999999999508e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 4.860000000009301e-07, 7.971999999998453e-06, 5.419999999992098e-07, 7.82000000000213e-06, 5.409999999997361e-07, 7.514000000000132e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.419999999992098e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 7.472000000001422e-06, 4.860000000009301e-07, 9.763999999998912e-06, 5.419999999992098e-07, 8.694000000000063e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 1.0056000000001342e-05, 5.419999999992098e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 7.971999999998453e-06, 5.420000000026792e-07, 1.0526999999999759e-05, 5.419999999992098e-07, 7.943999999999313e-06, 4.870000000004038e-07, 9.735999999999773e-06, 4.860000000009301e-07, 1.0568999999998469e-05, 5.420000000026792e-07, 7.929999999999743e-06, 5.419999999992098e-07, 8.041999999999772e-06, 4.860000000009301e-07, 9.443999999997343e-06, 4.860000000009301e-07, 9.528000000001702e-06, 4.859999999974607e-07, 8.500000000001562e-06, 5.419999999992098e-07, 9.806000000001092e-06, 4.860000000009301e-07, 1.0276999999999509e-05, 5.419999999992098e-07, 9.820000000000662e-06, 5.409999999997361e-07, 7.4169999999991465e-06, 5.419999999992098e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.055999999999341e-06, 5.409999999997361e-07, 9.736999999999246e-06, 4.720000000013602e-07, 7.777999999999952e-06, 5.409999999997361e-07, 9.277999999997982e-06, 5.420000000026792e-07, 9.915999999998704e-06, 4.860000000009301e-07, 1.0249999999999843e-05, 5.419999999992098e-07, 8.860999999998898e-06, 5.420000000026792e-07, 8.763999999997912e-06, 5.409999999997361e-07, 7.930999999999216e-06, 5.420000000026792e-07, 8.221999999998703e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.860000000009301e-07, 7.375000000000437e-06, 5.419999999992098e-07, 8.985999999999023e-06, 5.409999999997361e-07], 'source_diff': [0, 4.859999999974607e-07, 9.153000000001327e-06, 4.720000000013602e-07, 8.096999999998578e-06, 5.419999999992098e-07, 9.930000000001743e-06, 4.859999999974607e-07, 8.09800000000152e-06, 5.409999999997361e-07, 8.389000000001007e-06, 4.7199999999789077e-07, 9.667000000001397e-06, 4.860000000009301e-07, 7.458999999997856e-06, 5.409999999997361e-07, 1.0459000000000857e-05, 4.720000000013602e-07, 8.582999999999508e-06, 5.419999999992098e-07, 1.0333000000001258e-05, 4.860000000009301e-07, 7.971999999998453e-06, 5.419999999992098e-07, 7.82000000000213e-06, 5.409999999997361e-07, 7.514000000000132e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.419999999992098e-07, 1.0167000000001897e-05, 4.7199999999789077e-07, 7.472000000001422e-06, 4.860000000009301e-07, 9.763999999998912e-06, 5.419999999992098e-07, 8.694000000000063e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 1.0056000000001342e-05, 5.419999999992098e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 7.971999999998453e-06, 5.420000000026792e-07, 1.0526999999999759e-05, 5.419999999992098e-07, 7.943999999999313e-06, 4.870000000004038e-07, 9.735999999999773e-06, 4.860000000009301e-07, 1.0568999999998469e-05, 5.420000000026792e-07, 7.929999999999743e-06, 5.419999999992098e-07, 8.041999999999772e-06, 4.860000000009301e-07, 9.443999999997343e-06, 4.860000000009301e-07, 9.528000000001702e-06, 4.859999999974607e-07, 8.500000000001562e-06, 5.419999999992098e-07, 9.806000000001092e-06, 4.860000000009301e-07, 1.0276999999999509e-05, 5.419999999992098e-07, 9.820000000000662e-06, 5.409999999997361e-07, 7.4169999999991465e-06, 5.419999999992098e-07, 9.569000000000938e-06, 4.720000000013602e-07, 8.055999999999341e-06, 5.409999999997361e-07, 9.736999999999246e-06, 4.720000000013602e-07, 7.777999999999952e-06, 5.409999999997361e-07, 9.277999999997982e-06, 5.420000000026792e-07, 9.915999999998704e-06, 4.860000000009301e-07, 1.0249999999999843e-05, 5.419999999992098e-07, 8.860999999998898e-06, 5.420000000026792e-07, 8.763999999997912e-06, 5.409999999997361e-07, 7.930999999999216e-06, 5.420000000026792e-07, 8.221999999998703e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.860000000009301e-07, 7.375000000000437e-06, 5.419999999992098e-07, 8.985999999999023e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:41.444" endtime="20201030 18:26:41.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.440" endtime="20201030 18:26:41.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:41.453" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.859999999974607e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.7199999999789077e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:26:41.450" endtime="20201030 18:26:41.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:41.457" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720...</msg>
<status status="PASS" starttime="20201030 18:26:41.454" endtime="20201030 18:26:41.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.461" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:41.460" endtime="20201030 18:26:41.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.463" level="INFO">VALUE: [4.859999999974607e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.420000000026792e-07, 4.720000000013602e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:26:41.462" endtime="20201030 18:26:41.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.458" endtime="20201030 18:26:41.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:41.468" endtime="20201030 18:26:41.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.466" endtime="20201030 18:26:41.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.465" endtime="20201030 18:26:41.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.075" endtime="20201030 18:26:41.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.075" endtime="20201030 18:26:41.488"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.497" endtime="20201030 18:26:41.512"></status>
</kw>
<msg timestamp="20201030 18:26:41.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:41.496" endtime="20201030 18:26:41.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.515" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:41.513" endtime="20201030 18:26:41.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.516" endtime="20201030 18:26:41.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.492" endtime="20201030 18:26:41.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.491" endtime="20201030 18:26:41.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.525" endtime="20201030 18:26:41.811"></status>
</kw>
<msg timestamp="20201030 18:26:41.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02016375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:41.523" endtime="20201030 18:26:41.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02016375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:41.816" endtime="20201030 18:26:41.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.824" endtime="20201030 18:26:41.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.521" endtime="20201030 18:26:41.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.519" endtime="20201030 18:26:41.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:41.852" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:41.828" endtime="20201030 18:26:41.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.853" endtime="20201030 18:26:41.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.859" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:41.858" endtime="20201030 18:26:41.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.863" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.02016375, 0.020164292, 0.020172028, 0.020172569, 0.02018, 0.020180486, 0.020189931, 0.020190472, 0.020199556, 0.020200097, 0.02021025, 0.020210722, 0.020219097, 0.020219639, 0.020227056, 0.020227542, 0.02023575, 0.020236222, 0.0202465, 0.020246972, 0.020255986, 0.020256472, 0.020264111, 0.020264583, 0.02027275, 0.020273236, 0.020282278, 0.020282764, 0.02029325, 0.020293792, 0.020302056, 0.020302542, 0.020310014, 0.020310556, 0.020319556, 0.020320042, 0.020329458, 0.02033, 0.020339583, 0.020340125, 0.020349944, 0.020350417, 0.020360681, 0.020361167, 0.020370278, 0.020370819, 0.020381306, 0.020381778, 0.020389083, 0.020389625, 0.02039725, 0.020397792, 0.020407792, 0.020408333, 0.020416486, 0.020416958, 0.020426083, 0.020426569, 0.020436778, 0.02043725, 0.020446556, 0.020447097, 0.020455042, 0.020455583, 0.020465611, 0.020466153, 0.020475333, 0.020475875, 0.020484028, 0.020484569, 0.020492208, 0.02049275, 0.020503306, 0.020503792, 0.020513861, 0.020514403, 0.020523083, 0.020523569, 0.020532069, 0.020532611, 0.020542333, 0.020542875, 0.020552472, 0.020553014, 0.020563139, 0.020563681, 0.020572264, 0.020572736, 0.020582875, 0.020583417, 0.020591819, 0.020592292, 0.020602, 0.020602486, 0.020612542, 0.020613028, 0.020622556, 0.020623097, 0.020631667, 0.020632208], 'sourcediff': [0, 5.419999999992098e-07, 7.736000000001242e-06, 5.409999999997361e-07, 7.430999999998716e-06, 4.860000000009301e-07, 9.445000000000286e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 8.374999999997967e-06, 5.420000000026792e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 8.207999999999133e-06, 4.720000000013602e-07, 1.0277999999998982e-05, 4.7199999999789077e-07, 9.014000000001632e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.860000000009301e-07, 9.042000000000772e-06, 4.859999999974607e-07, 1.0486000000000523e-05, 5.420000000026792e-07, 8.263999999997412e-06, 4.860000000009301e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.999999999998592e-06, 4.860000000009301e-07, 9.416000000001673e-06, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.818999999997718e-06, 4.7300000000083386e-07, 1.0263999999999412e-05, 4.860000000009301e-07, 9.110999999999148e-06, 5.409999999997361e-07, 1.0486999999999996e-05, 4.720000000013602e-07, 7.304999999999118e-06, 5.420000000026792e-07, 7.624999999997217e-06, 5.420000000026792e-07, 9.999999999999593e-06, 5.409999999997361e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.859999999974607e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 9.306000000000592e-06, 5.409999999997361e-07, 7.944999999998786e-06, 5.409999999997361e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 9.179999999997523e-06, 5.420000000026792e-07, 8.153000000000327e-06, 5.409999999997361e-07, 7.639000000000257e-06, 5.419999999992098e-07, 1.0555999999998372e-05, 4.860000000009301e-07, 1.0069000000001438e-05, 5.419999999992098e-07, 8.680000000000493e-06, 4.859999999974607e-07, 8.500000000001562e-06, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.420000000026792e-07, 1.0124999999999718e-05, 5.419999999992098e-07, 8.582999999999508e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 5.419999999992098e-07, 8.402000000001103e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.860000000009301e-07, 1.0056000000001342e-05, 4.859999999974607e-07, 9.528000000001702e-06, 5.409999999997361e-07, 8.569999999999411e-06, 5.409999999997361e-07], 'source_diff': [0, 5.419999999992098e-07, 7.736000000001242e-06, 5.409999999997361e-07, 7.430999999998716e-06, 4.860000000009301e-07, 9.445000000000286e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 8.374999999997967e-06, 5.420000000026792e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 8.207999999999133e-06, 4.720000000013602e-07, 1.0277999999998982e-05, 4.7199999999789077e-07, 9.014000000001632e-06, 4.860000000009301e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.860000000009301e-07, 9.042000000000772e-06, 4.859999999974607e-07, 1.0486000000000523e-05, 5.420000000026792e-07, 8.263999999997412e-06, 4.860000000009301e-07, 7.472000000001422e-06, 5.419999999992098e-07, 8.999999999998592e-06, 4.860000000009301e-07, 9.416000000001673e-06, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 9.818999999997718e-06, 4.7300000000083386e-07, 1.0263999999999412e-05, 4.860000000009301e-07, 9.110999999999148e-06, 5.409999999997361e-07, 1.0486999999999996e-05, 4.720000000013602e-07, 7.304999999999118e-06, 5.420000000026792e-07, 7.624999999997217e-06, 5.420000000026792e-07, 9.999999999999593e-06, 5.409999999997361e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.859999999974607e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 9.306000000000592e-06, 5.409999999997361e-07, 7.944999999998786e-06, 5.409999999997361e-07, 1.0028000000002202e-05, 5.419999999992098e-07, 9.179999999997523e-06, 5.420000000026792e-07, 8.153000000000327e-06, 5.409999999997361e-07, 7.639000000000257e-06, 5.419999999992098e-07, 1.0555999999998372e-05, 4.860000000009301e-07, 1.0069000000001438e-05, 5.419999999992098e-07, 8.680000000000493e-06, 4.859999999974607e-07, 8.500000000001562e-06, 5.419999999992098e-07, 9.722000000000203e-06, 5.419999999992098e-07, 9.597000000000078e-06, 5.420000000026792e-07, 1.0124999999999718e-05, 5.419999999992098e-07, 8.582999999999508e-06, 4.720000000013602e-07, 1.0138999999999287e-05, 5.419999999992098e-07, 8.402000000001103e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.860000000009301e-07, 1.0056000000001342e-05, 4.859999999974607e-07, 9.528000000001702e-06, 5.409999999997361e-07, 8.569999999999411e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:41.860" endtime="20201030 18:26:41.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.856" endtime="20201030 18:26:41.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:41.869" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:41.865" endtime="20201030 18:26:41.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:41.874" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.7200...</msg>
<status status="PASS" starttime="20201030 18:26:41.870" endtime="20201030 18:26:41.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.878" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:41.877" endtime="20201030 18:26:41.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.881" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 5.409999999997361e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:26:41.879" endtime="20201030 18:26:41.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.875" endtime="20201030 18:26:41.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:41.885" endtime="20201030 18:26:41.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.884" endtime="20201030 18:26:41.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.883" endtime="20201030 18:26:41.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.489" endtime="20201030 18:26:41.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.489" endtime="20201030 18:26:41.906"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.915" endtime="20201030 18:26:41.928"></status>
</kw>
<msg timestamp="20201030 18:26:41.929" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:41.913" endtime="20201030 18:26:41.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:41.932" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:41.930" endtime="20201030 18:26:41.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.933" endtime="20201030 18:26:41.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.910" endtime="20201030 18:26:41.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.908" endtime="20201030 18:26:41.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:41.942" endtime="20201030 18:26:42.255"></status>
</kw>
<msg timestamp="20201030 18:26:42.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019469278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:41.941" endtime="20201030 18:26:42.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019469278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:42.261" endtime="20201030 18:26:42.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.273" endtime="20201030 18:26:42.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.938" endtime="20201030 18:26:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.936" endtime="20201030 18:26:42.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:42.303" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:42.277" endtime="20201030 18:26:42.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.305" endtime="20201030 18:26:42.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.310" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:42.309" endtime="20201030 18:26:42.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.314" level="INFO">VALUE: {'eventtime': [0.019468736, 0.019469278, 0.019479514, 0.019480056, 0.019490403, 0.019490889, 0.0195015, 0.019501972, 0.019512375, 0.019512847, 0.019521875, 0.019522361, 0.019530889, 0.019531375, 0.019539875, 0.019540417, 0.019550028, 0.019550569, 0.019558486, 0.019559028, 0.019569042, 0.019569528, 0.019579056, 0.019579597, 0.019587736, 0.019588278, 0.019598278, 0.019598819, 0.019608611, 0.019609153, 0.019619069, 0.019619611, 0.019629639, 0.019630125, 0.019640417, 0.019640903, 0.019651278, 0.019651819, 0.019659458, 0.01966, 0.019668375, 0.019668847, 0.019678611, 0.019679083, 0.019687375, 0.019687917, 0.019697389, 0.019697931, 0.019707847, 0.019708333, 0.019717458, 0.019717944, 0.0197255, 0.019726042, 0.019734306, 0.019734778, 0.019743083, 0.019743625, 0.01975425, 0.019754722, 0.019762653, 0.019763194, 0.019772597, 0.019773139, 0.019781917, 0.019782458, 0.01979175, 0.019792292, 0.019799931, 0.019800403, 0.019808792, 0.019809333, 0.019818097, 0.019818583, 0.019826972, 0.019827514, 0.019835236, 0.019835778, 0.019845694, 0.019846167, 0.019854667, 0.019855208, 0.019862833, 0.019863375, 0.019872472, 0.019873014, 0.019880861, 0.019881347, 0.019890375, 0.019890917, 0.019900333, 0.019900819, 0.019909111, 0.019909653, 0.019919889, 0.019920375, 0.019929069, 0.019929611, 0.019937958, 0.0199385], 'sourcediff': [0, 5.419999999992098e-07, 1.0236000000000273e-05, 5.419999999992098e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 1.0611000000000648e-05, 4.7199999999789077e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.859999999974607e-07, 8.528000000000702e-06, 4.860000000009301e-07, 8.500000000001562e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.409999999997361e-07, 7.916999999999647e-06, 5.419999999992098e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 9.528000000001702e-06, 5.409999999997361e-07, 8.139000000000757e-06, 5.419999999992098e-07, 9.999999999999593e-06, 5.409999999997361e-07, 9.792000000001522e-06, 5.419999999992098e-07, 9.915999999998704e-06, 5.419999999992098e-07, 1.0028000000002202e-05, 4.859999999974607e-07, 1.0292000000002022e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 5.409999999997361e-07, 7.639000000000257e-06, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.720000000013602e-07, 8.292000000000022e-06, 5.419999999992098e-07, 9.471999999999953e-06, 5.419999999992098e-07, 9.916000000002173e-06, 4.860000000009301e-07, 9.124999999998717e-06, 4.860000000009301e-07, 7.555999999998841e-06, 5.419999999992098e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.305000000000118e-06, 5.419999999992098e-07, 1.0625000000000218e-05, 4.7199999999789077e-07, 7.931000000002686e-06, 5.409999999997361e-07, 9.402999999998107e-06, 5.419999999992098e-07, 8.778000000000952e-06, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.388999999997537e-06, 5.409999999997361e-07, 8.764000000001382e-06, 4.860000000009301e-07, 8.389000000001007e-06, 5.419999999992098e-07, 7.721999999998203e-06, 5.419999999992098e-07, 9.916000000002173e-06, 4.7300000000083386e-07, 8.499999999998092e-06, 5.409999999997361e-07, 7.625000000000687e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.420000000026792e-07, 7.846999999998328e-06, 4.860000000009301e-07, 9.027999999997732e-06, 5.420000000026792e-07, 9.415999999998204e-06, 4.860000000009301e-07, 8.292000000000022e-06, 5.419999999992098e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 8.694000000000063e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000026792e-07], 'source_diff': [0, 5.419999999992098e-07, 1.0236000000000273e-05, 5.419999999992098e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 1.0611000000000648e-05, 4.7199999999789077e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.859999999974607e-07, 8.528000000000702e-06, 4.860000000009301e-07, 8.500000000001562e-06, 5.419999999992098e-07, 9.610999999999648e-06, 5.409999999997361e-07, 7.916999999999647e-06, 5.419999999992098e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 9.528000000001702e-06, 5.409999999997361e-07, 8.139000000000757e-06, 5.419999999992098e-07, 9.999999999999593e-06, 5.409999999997361e-07, 9.792000000001522e-06, 5.419999999992098e-07, 9.915999999998704e-06, 5.419999999992098e-07, 1.0028000000002202e-05, 4.859999999974607e-07, 1.0292000000002022e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 5.409999999997361e-07, 7.639000000000257e-06, 5.419999999992098e-07, 8.374999999997967e-06, 4.720000000013602e-07, 9.763999999998912e-06, 4.720000000013602e-07, 8.292000000000022e-06, 5.419999999992098e-07, 9.471999999999953e-06, 5.419999999992098e-07, 9.916000000002173e-06, 4.860000000009301e-07, 9.124999999998717e-06, 4.860000000009301e-07, 7.555999999998841e-06, 5.419999999992098e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.305000000000118e-06, 5.419999999992098e-07, 1.0625000000000218e-05, 4.7199999999789077e-07, 7.931000000002686e-06, 5.409999999997361e-07, 9.402999999998107e-06, 5.419999999992098e-07, 8.778000000000952e-06, 5.409999999997361e-07, 9.292000000001022e-06, 5.419999999992098e-07, 7.639000000000257e-06, 4.720000000013602e-07, 8.388999999997537e-06, 5.409999999997361e-07, 8.764000000001382e-06, 4.860000000009301e-07, 8.389000000001007e-06, 5.419999999992098e-07, 7.721999999998203e-06, 5.419999999992098e-07, 9.916000000002173e-06, 4.7300000000083386e-07, 8.499999999998092e-06, 5.409999999997361e-07, 7.625000000000687e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.420000000026792e-07, 7.846999999998328e-06, 4.860000000009301e-07, 9.027999999997732e-06, 5.420000000026792e-07, 9.415999999998204e-06, 4.860000000009301e-07, 8.292000000000022e-06, 5.419999999992098e-07, 1.0236000000000273e-05, 4.860000000009301e-07, 8.694000000000063e-06, 5.419999999992098e-07, 8.346999999998828e-06, 5.420000000026792e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:42.311" endtime="20201030 18:26:42.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.307" endtime="20201030 18:26:42.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:42.320" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:26:42.316" endtime="20201030 18:26:42.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:42.324" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409...</msg>
<status status="PASS" starttime="20201030 18:26:42.321" endtime="20201030 18:26:42.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.330" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:42.329" endtime="20201030 18:26:42.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.332" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.420000000026792e-07]</msg>
<status status="PASS" starttime="20201030 18:26:42.331" endtime="20201030 18:26:42.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.326" endtime="20201030 18:26:42.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:42.337" endtime="20201030 18:26:42.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.336" endtime="20201030 18:26:42.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.334" endtime="20201030 18:26:42.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.907" endtime="20201030 18:26:42.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:41.907" endtime="20201030 18:26:42.358"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.367" endtime="20201030 18:26:42.384"></status>
</kw>
<msg timestamp="20201030 18:26:42.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:42.365" endtime="20201030 18:26:42.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:42.385" endtime="20201030 18:26:42.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.388" endtime="20201030 18:26:42.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.362" endtime="20201030 18:26:42.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.360" endtime="20201030 18:26:42.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.397" endtime="20201030 18:26:42.682"></status>
</kw>
<msg timestamp="20201030 18:26:42.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:42.396" endtime="20201030 18:26:42.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019780556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:42.687" endtime="20201030 18:26:42.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.696" endtime="20201030 18:26:42.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.393" endtime="20201030 18:26:42.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.391" endtime="20201030 18:26:42.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:42.724" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:42.699" endtime="20201030 18:26:42.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.725" endtime="20201030 18:26:42.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.730" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:42.729" endtime="20201030 18:26:42.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.734" level="INFO">VALUE: {'eventtime': [0.019780556, 0.019781097, 0.019790819, 0.019791361, 0.019798889, 0.019799431, 0.019808931, 0.019809472, 0.019819708, 0.019820194, 0.019830236, 0.019830778, 0.019841306, 0.019841847, 0.019849167, 0.019849639, 0.019858139, 0.019858681, 0.019868889, 0.019869431, 0.019877569, 0.019878111, 0.019886889, 0.019887375, 0.019897986, 0.019898472, 0.019905958, 0.019906431, 0.019915347, 0.019915889, 0.019923833, 0.019924375, 0.019932111, 0.019932653, 0.019943097, 0.019943639, 0.019953042, 0.019953583, 0.019962681, 0.019963167, 0.019971778, 0.019972319, 0.019982861, 0.019983403, 0.019993014, 0.019993556, 0.020003986, 0.020004528, 0.020013486, 0.020014028, 0.020023694, 0.020024167, 0.020032917, 0.020033458, 0.020042125, 0.020042611, 0.020052444, 0.020052986, 0.020061444, 0.020061931, 0.020069389, 0.020069931, 0.020078681, 0.020079222, 0.020086528, 0.020087069, 0.020096458, 0.020097, 0.020105764, 0.02010625, 0.020116819, 0.020117361, 0.020124986, 0.020125528, 0.020135569, 0.020136056, 0.020146639, 0.020147181, 0.020156167, 0.020156653, 0.020164333, 0.020164875, 0.020172194, 0.020172736, 0.02018275, 0.020183292, 0.020191958, 0.020192444, 0.020200097, 0.020200639, 0.020208056, 0.020208597, 0.020216208, 0.02021675, 0.020226139, 0.020226625, 0.020234917, 0.020235458, 0.020244528, 0.020245069], 'sourcediff': [0, 5.409999999997361e-07, 9.722000000000203e-06, 5.419999999992098e-07, 7.527999999999702e-06, 5.419999999992098e-07, 9.499999999999093e-06, 5.410000000032056e-07, 1.0235999999996803e-05, 4.860000000009301e-07, 1.0042000000001772e-05, 5.419999999992098e-07, 1.0527999999999232e-05, 5.409999999997361e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.500000000001562e-06, 5.419999999992098e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 8.138000000001283e-06, 5.419999999992098e-07, 8.778000000000952e-06, 4.859999999974607e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 7.486000000000992e-06, 4.729999999973644e-07, 8.916000000001173e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.420000000026792e-07, 7.735999999997772e-06, 5.420000000026792e-07, 1.0443999999998343e-05, 5.419999999992098e-07, 9.403000000001577e-06, 5.409999999997361e-07, 9.097999999999051e-06, 4.860000000009301e-07, 8.610999999998648e-06, 5.409999999997361e-07, 1.0542000000002272e-05, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 1.0430000000002243e-05, 5.419999999992098e-07, 8.957999999999883e-06, 5.419999999992098e-07, 9.666000000001923e-06, 4.729999999973644e-07, 8.750000000001812e-06, 5.409999999997361e-07, 8.667000000000397e-06, 4.859999999974607e-07, 9.833000000000758e-06, 5.419999999992098e-07, 8.458000000002852e-06, 4.870000000004038e-07, 7.457999999998383e-06, 5.419999999992098e-07, 8.750000000001812e-06, 5.409999999997361e-07, 7.305999999998591e-06, 5.409999999997361e-07, 9.389000000002007e-06, 5.419999999992098e-07, 8.764000000001382e-06, 4.859999999974607e-07, 1.0569000000001938e-05, 5.419999999992098e-07, 7.625000000000687e-06, 5.419999999992098e-07, 1.0040999999998829e-05, 4.870000000004038e-07, 1.0583000000001508e-05, 5.419999999992098e-07, 8.985999999999023e-06, 4.860000000009301e-07, 7.679999999999493e-06, 5.419999999992098e-07, 7.319000000002157e-06, 5.419999999992098e-07, 1.0013999999999162e-05, 5.419999999992098e-07, 8.666000000000923e-06, 4.860000000009301e-07, 7.652999999999827e-06, 5.419999999992098e-07, 7.4169999999991465e-06, 5.409999999997361e-07, 7.611000000001117e-06, 5.419999999992098e-07, 9.389000000002007e-06, 4.860000000009301e-07, 8.292000000000022e-06, 5.409999999997361e-07, 9.069999999999911e-06, 5.409999999997361e-07], 'source_diff': [0, 5.409999999997361e-07, 9.722000000000203e-06, 5.419999999992098e-07, 7.527999999999702e-06, 5.419999999992098e-07, 9.499999999999093e-06, 5.410000000032056e-07, 1.0235999999996803e-05, 4.860000000009301e-07, 1.0042000000001772e-05, 5.419999999992098e-07, 1.0527999999999232e-05, 5.409999999997361e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.500000000001562e-06, 5.419999999992098e-07, 1.0208000000001133e-05, 5.419999999992098e-07, 8.138000000001283e-06, 5.419999999992098e-07, 8.778000000000952e-06, 4.859999999974607e-07, 1.0611000000000648e-05, 4.860000000009301e-07, 7.486000000000992e-06, 4.729999999973644e-07, 8.916000000001173e-06, 5.419999999992098e-07, 7.943999999999313e-06, 5.420000000026792e-07, 7.735999999997772e-06, 5.420000000026792e-07, 1.0443999999998343e-05, 5.419999999992098e-07, 9.403000000001577e-06, 5.409999999997361e-07, 9.097999999999051e-06, 4.860000000009301e-07, 8.610999999998648e-06, 5.409999999997361e-07, 1.0542000000002272e-05, 5.419999999992098e-07, 9.610999999999648e-06, 5.419999999992098e-07, 1.0430000000002243e-05, 5.419999999992098e-07, 8.957999999999883e-06, 5.419999999992098e-07, 9.666000000001923e-06, 4.729999999973644e-07, 8.750000000001812e-06, 5.409999999997361e-07, 8.667000000000397e-06, 4.859999999974607e-07, 9.833000000000758e-06, 5.419999999992098e-07, 8.458000000002852e-06, 4.870000000004038e-07, 7.457999999998383e-06, 5.419999999992098e-07, 8.750000000001812e-06, 5.409999999997361e-07, 7.305999999998591e-06, 5.409999999997361e-07, 9.389000000002007e-06, 5.419999999992098e-07, 8.764000000001382e-06, 4.859999999974607e-07, 1.0569000000001938e-05, 5.419999999992098e-07, 7.625000000000687e-06, 5.419999999992098e-07, 1.0040999999998829e-05, 4.870000000004038e-07, 1.0583000000001508e-05, 5.419999999992098e-07, 8.985999999999023e-06, 4.860000000009301e-07, 7.679999999999493e-06, 5.419999999992098e-07, 7.319000000002157e-06, 5.419999999992098e-07, 1.0013999999999162e-05, 5.419999999992098e-07, 8.666000000000923e-06, 4.860000000009301e-07, 7.652999999999827e-06, 5.419999999992098e-07, 7.4169999999991465e-06, 5.409999999997361e-07, 7.611000000001117e-06, 5.419999999992098e-07, 9.389000000002007e-06, 4.860000000009301e-07, 8.292000000000022e-06, 5.409999999997361e-07, 9.069999999999911e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:42.731" endtime="20201030 18:26:42.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.727" endtime="20201030 18:26:42.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:42.740" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.410000000032056e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:42.737" endtime="20201030 18:26:42.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:42.745" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419...</msg>
<status status="PASS" starttime="20201030 18:26:42.741" endtime="20201030 18:26:42.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.749" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:42.748" endtime="20201030 18:26:42.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.752" level="INFO">VALUE: [5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.410000000032056e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 5.419999999992098e-07, 5.420000000026792e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.729999999973644e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:26:42.750" endtime="20201030 18:26:42.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.745" endtime="20201030 18:26:42.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:42.756" endtime="20201030 18:26:42.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.755" endtime="20201030 18:26:42.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.754" endtime="20201030 18:26:42.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.359" endtime="20201030 18:26:42.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.358" endtime="20201030 18:26:42.777"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.786" endtime="20201030 18:26:42.803"></status>
</kw>
<msg timestamp="20201030 18:26:42.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:42.785" endtime="20201030 18:26:42.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:42.806" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:42.804" endtime="20201030 18:26:42.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.807" endtime="20201030 18:26:42.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.782" endtime="20201030 18:26:42.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.779" endtime="20201030 18:26:42.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:42.816" endtime="20201030 18:26:43.099"></status>
</kw>
<msg timestamp="20201030 18:26:43.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:42.815" endtime="20201030 18:26:43.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:43.103" endtime="20201030 18:26:43.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.112" endtime="20201030 18:26:43.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.812" endtime="20201030 18:26:43.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.810" endtime="20201030 18:26:43.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:43.140" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:43.116" endtime="20201030 18:26:43.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.142" endtime="20201030 18:26:43.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.147" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:43.146" endtime="20201030 18:26:43.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.151" level="INFO">VALUE: {'eventtime': [0.022755417, 0.022755903, 0.022766292, 0.022766833, 0.022775417, 0.022775903, 0.022786486, 0.022787028, 0.022794556, 0.022795097, 0.022805542, 0.022806028, 0.022816514, 0.022817056, 0.022824667, 0.022825208, 0.022834069, 0.022834611, 0.022842125, 0.022842667, 0.022853083, 0.022853625, 0.022860944, 0.022861431, 0.022869917, 0.022870458, 0.022878736, 0.022879208, 0.022888667, 0.022889153, 0.022897139, 0.022897681, 0.022905931, 0.022906472, 0.022916389, 0.022916931, 0.02292675, 0.022927292, 0.022937736, 0.022938222, 0.022948792, 0.022949278, 0.02295975, 0.022960292, 0.022969681, 0.022970167, 0.022980417, 0.022980958, 0.022991167, 0.022991708, 0.023001361, 0.023001833, 0.023010958, 0.023011444, 0.023020056, 0.023020597, 0.023030292, 0.023030764, 0.023038181, 0.023038667, 0.023048319, 0.023048861, 0.023058153, 0.023058694, 0.023067153, 0.023067694, 0.023078208, 0.02307875, 0.023086167, 0.023086708, 0.023094014, 0.023094556, 0.023102069, 0.023102556, 0.023110333, 0.023110819, 0.023119319, 0.023119861, 0.023129861, 0.023130403, 0.02314, 0.023140486, 0.023147944, 0.023148486, 0.023158069, 0.023158611, 0.023166333, 0.023166875, 0.023174292, 0.023174778, 0.023182153, 0.023182639, 0.023192611, 0.023193097, 0.023202653, 0.023203194, 0.023213736, 0.023214278, 0.023224097, 0.023224639], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.860000000009301e-07, 1.0388999999999537e-05, 5.409999999997361e-07, 8.583999999998981e-06, 4.860000000009301e-07, 1.0583000000001508e-05, 5.419999999992098e-07, 7.527999999999702e-06, 5.409999999997361e-07, 1.0445000000001287e-05, 4.859999999974607e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 7.611000000001117e-06, 5.409999999997361e-07, 8.860999999998898e-06, 5.420000000026792e-07, 7.514000000000132e-06, 5.419999999992098e-07, 1.0415999999999204e-05, 5.419999999992098e-07, 7.319000000002157e-06, 4.870000000004038e-07, 8.485999999998523e-06, 5.409999999997361e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.458999999999856e-06, 4.859999999974607e-07, 7.986000000001492e-06, 5.419999999992098e-07, 8.250000000001312e-06, 5.409999999997361e-07, 9.916999999998177e-06, 5.420000000026792e-07, 9.818999999997718e-06, 5.419999999992098e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 1.0569999999997942e-05, 4.860000000009301e-07, 1.0472000000000953e-05, 5.419999999992098e-07, 9.388999999998537e-06, 4.860000000009301e-07, 1.0249999999999843e-05, 5.409999999997361e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.859999999974607e-07, 8.61200000000159e-06, 5.409999999997361e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 7.417000000002616e-06, 4.859999999974607e-07, 9.652000000002353e-06, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 8.458999999998856e-06, 5.409999999997361e-07, 1.0513999999999663e-05, 5.419999999992098e-07, 7.417000000002616e-06, 5.409999999997361e-07, 7.305999999998591e-06, 5.419999999992098e-07, 7.513000000000658e-06, 4.870000000004038e-07, 7.777000000000478e-06, 4.860000000009301e-07, 8.499999999998092e-06, 5.419999999992098e-07, 1.0000000000003062e-05, 5.419999999992098e-07, 9.597000000000078e-06, 4.859999999974607e-07, 7.458000000001852e-06, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 7.375000000000437e-06, 4.860000000009301e-07, 9.971999999996983e-06, 4.860000000009301e-07, 9.556000000000842e-06, 5.409999999997361e-07, 1.0541999999998802e-05, 5.420000000026792e-07, 9.818999999997718e-06, 5.419999999992098e-07], 'source_diff': [0, 4.860000000009301e-07, 1.0388999999999537e-05, 5.409999999997361e-07, 8.583999999998981e-06, 4.860000000009301e-07, 1.0583000000001508e-05, 5.419999999992098e-07, 7.527999999999702e-06, 5.409999999997361e-07, 1.0445000000001287e-05, 4.859999999974607e-07, 1.0486000000000523e-05, 5.419999999992098e-07, 7.611000000001117e-06, 5.409999999997361e-07, 8.860999999998898e-06, 5.420000000026792e-07, 7.514000000000132e-06, 5.419999999992098e-07, 1.0415999999999204e-05, 5.419999999992098e-07, 7.319000000002157e-06, 4.870000000004038e-07, 8.485999999998523e-06, 5.409999999997361e-07, 8.278000000000452e-06, 4.720000000013602e-07, 9.458999999999856e-06, 4.859999999974607e-07, 7.986000000001492e-06, 5.419999999992098e-07, 8.250000000001312e-06, 5.409999999997361e-07, 9.916999999998177e-06, 5.420000000026792e-07, 9.818999999997718e-06, 5.419999999992098e-07, 1.0444000000001813e-05, 4.860000000009301e-07, 1.0569999999997942e-05, 4.860000000009301e-07, 1.0472000000000953e-05, 5.419999999992098e-07, 9.388999999998537e-06, 4.860000000009301e-07, 1.0249999999999843e-05, 5.409999999997361e-07, 1.0209000000000606e-05, 5.409999999997361e-07, 9.653000000001827e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.859999999974607e-07, 8.61200000000159e-06, 5.409999999997361e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 7.417000000002616e-06, 4.859999999974607e-07, 9.652000000002353e-06, 5.419999999992098e-07, 9.292000000001022e-06, 5.409999999997361e-07, 8.458999999998856e-06, 5.409999999997361e-07, 1.0513999999999663e-05, 5.419999999992098e-07, 7.417000000002616e-06, 5.409999999997361e-07, 7.305999999998591e-06, 5.419999999992098e-07, 7.513000000000658e-06, 4.870000000004038e-07, 7.777000000000478e-06, 4.860000000009301e-07, 8.499999999998092e-06, 5.419999999992098e-07, 1.0000000000003062e-05, 5.419999999992098e-07, 9.597000000000078e-06, 4.859999999974607e-07, 7.458000000001852e-06, 5.419999999992098e-07, 9.583000000000508e-06, 5.419999999992098e-07, 7.722000000001672e-06, 5.419999999992098e-07, 7.4169999999991465e-06, 4.860000000009301e-07, 7.375000000000437e-06, 4.860000000009301e-07, 9.971999999996983e-06, 4.860000000009301e-07, 9.556000000000842e-06, 5.409999999997361e-07, 1.0541999999998802e-05, 5.420000000026792e-07, 9.818999999997718e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:43.148" endtime="20201030 18:26:43.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.144" endtime="20201030 18:26:43.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:43.157" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 4.859999999974607e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:43.154" endtime="20201030 18:26:43.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:43.162" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.4200...</msg>
<status status="PASS" starttime="20201030 18:26:43.158" endtime="20201030 18:26:43.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.166" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:43.165" endtime="20201030 18:26:43.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.169" level="INFO">VALUE: [4.860000000009301e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.409999999997361e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.870000000004038e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.420000000026792e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:43.167" endtime="20201030 18:26:43.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.163" endtime="20201030 18:26:43.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:43.174" endtime="20201030 18:26:43.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.172" endtime="20201030 18:26:43.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.171" endtime="20201030 18:26:43.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.778" endtime="20201030 18:26:43.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:42.777" endtime="20201030 18:26:43.194"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.203" endtime="20201030 18:26:43.220"></status>
</kw>
<msg timestamp="20201030 18:26:43.221" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:43.201" endtime="20201030 18:26:43.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.224" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:43.222" endtime="20201030 18:26:43.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.225" endtime="20201030 18:26:43.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.198" endtime="20201030 18:26:43.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.196" endtime="20201030 18:26:43.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.234" endtime="20201030 18:26:43.519"></status>
</kw>
<msg timestamp="20201030 18:26:43.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:43.233" endtime="20201030 18:26:43.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:43.523" endtime="20201030 18:26:43.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.532" endtime="20201030 18:26:43.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.230" endtime="20201030 18:26:43.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.228" endtime="20201030 18:26:43.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:43.560" level="INFO">${debug} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201030 18:26:43.536" endtime="20201030 18:26:43.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.561" endtime="20201030 18:26:43.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.566" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:43.565" endtime="20201030 18:26:43.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.571" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.022539722, 0.022540264, 0.022548431, 0.022548917, 0.022558778, 0.022559319, 0.022567889, 0.022568431, 0.022578972, 0.022579514, 0.022588542, 0.022589014, 0.022599042, 0.022599528, 0.022609903, 0.022610389, 0.022619083, 0.022619625, 0.022627139, 0.022627681, 0.022636208, 0.022636681, 0.022646694, 0.022647181, 0.022656417, 0.022656903, 0.02266625, 0.022666792, 0.022676931, 0.022677417, 0.022686347, 0.022686889, 0.022695347, 0.022695889, 0.022703319, 0.022703861, 0.022713778, 0.022714319, 0.022724764, 0.022725306, 0.022734708, 0.02273525, 0.022745694, 0.022746181, 0.022753556, 0.022754097, 0.02276225, 0.022762792, 0.022770222, 0.022770708, 0.022780569, 0.022781111, 0.022788958, 0.0227895, 0.022798278, 0.022798819, 0.022807597, 0.022808083, 0.022815778, 0.022816264, 0.022826347, 0.022826833, 0.022834694, 0.022835236, 0.022845722, 0.022846194, 0.022854431, 0.022854972, 0.022862806, 0.022863292, 0.022871167, 0.022871708, 0.022881083, 0.022881625, 0.022889361, 0.022889847, 0.022897861, 0.022898333, 0.022908333, 0.022908806, 0.022917931, 0.022918472, 0.022926083, 0.022926556, 0.022936875, 0.022937417, 0.022946931, 0.022947417, 0.022957069, 0.022957611, 0.022967958, 0.022968444, 0.022978319, 0.022978806, 0.022988014, 0.022988486, 0.022998292, 0.022998833, 0.023007917, 0.023008458], 'sourcediff': [0, 5.419999999992098e-07, 8.166999999999897e-06, 4.860000000009301e-07, 9.860999999999898e-06, 5.409999999997361e-07, 8.569999999999411e-06, 5.419999999992098e-07, 1.0540999999999329e-05, 5.419999999992098e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 4.860000000009301e-07, 8.694000000000063e-06, 5.419999999992098e-07, 7.514000000000132e-06, 5.419999999992098e-07, 8.527000000001228e-06, 4.729999999973644e-07, 1.0012999999999689e-05, 4.870000000004038e-07, 9.236000000002742e-06, 4.859999999974607e-07, 9.346999999999828e-06, 5.420000000026792e-07, 1.0138999999999287e-05, 4.859999999974607e-07, 8.930000000000743e-06, 5.419999999992098e-07, 8.458000000002852e-06, 5.419999999992098e-07, 7.429999999999243e-06, 5.419999999992098e-07, 9.917000000001647e-06, 5.409999999997361e-07, 1.0445000000001287e-05, 5.419999999992098e-07, 9.401999999998634e-06, 5.419999999992098e-07, 1.0444000000001813e-05, 4.870000000004038e-07, 7.375000000000437e-06, 5.409999999997361e-07, 8.153000000000327e-06, 5.419999999992098e-07, 7.429999999999243e-06, 4.860000000009301e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.847000000001797e-06, 5.419999999992098e-07, 8.778000000000952e-06, 5.409999999997361e-07, 8.777999999997482e-06, 4.860000000009301e-07, 7.694999999998536e-06, 4.860000000009301e-07, 1.0083000000001008e-05, 4.860000000009301e-07, 7.860999999997897e-06, 5.419999999992098e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 8.237000000001216e-06, 5.409999999997361e-07, 7.833999999998231e-06, 4.860000000009301e-07, 7.875000000000937e-06, 5.409999999997361e-07, 9.374999999998967e-06, 5.419999999992098e-07, 7.736000000001242e-06, 4.860000000009301e-07, 8.013999999997162e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 5.409999999997361e-07, 7.611000000001117e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.513999999998662e-06, 4.860000000009301e-07, 9.651999999998884e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 9.874999999999468e-06, 4.870000000004038e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07], 'source_diff': [0, 5.419999999992098e-07, 8.166999999999897e-06, 4.860000000009301e-07, 9.860999999999898e-06, 5.409999999997361e-07, 8.569999999999411e-06, 5.419999999992098e-07, 1.0540999999999329e-05, 5.419999999992098e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.0027999999998732e-05, 4.860000000009301e-07, 1.0374999999999968e-05, 4.860000000009301e-07, 8.694000000000063e-06, 5.419999999992098e-07, 7.514000000000132e-06, 5.419999999992098e-07, 8.527000000001228e-06, 4.729999999973644e-07, 1.0012999999999689e-05, 4.870000000004038e-07, 9.236000000002742e-06, 4.859999999974607e-07, 9.346999999999828e-06, 5.420000000026792e-07, 1.0138999999999287e-05, 4.859999999974607e-07, 8.930000000000743e-06, 5.419999999992098e-07, 8.458000000002852e-06, 5.419999999992098e-07, 7.429999999999243e-06, 5.419999999992098e-07, 9.917000000001647e-06, 5.409999999997361e-07, 1.0445000000001287e-05, 5.419999999992098e-07, 9.401999999998634e-06, 5.419999999992098e-07, 1.0444000000001813e-05, 4.870000000004038e-07, 7.375000000000437e-06, 5.409999999997361e-07, 8.153000000000327e-06, 5.419999999992098e-07, 7.429999999999243e-06, 4.860000000009301e-07, 9.860999999999898e-06, 5.419999999992098e-07, 7.847000000001797e-06, 5.419999999992098e-07, 8.778000000000952e-06, 5.409999999997361e-07, 8.777999999997482e-06, 4.860000000009301e-07, 7.694999999998536e-06, 4.860000000009301e-07, 1.0083000000001008e-05, 4.860000000009301e-07, 7.860999999997897e-06, 5.419999999992098e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 8.237000000001216e-06, 5.409999999997361e-07, 7.833999999998231e-06, 4.860000000009301e-07, 7.875000000000937e-06, 5.409999999997361e-07, 9.374999999998967e-06, 5.419999999992098e-07, 7.736000000001242e-06, 4.860000000009301e-07, 8.013999999997162e-06, 4.720000000013602e-07, 9.999999999999593e-06, 4.7300000000083386e-07, 9.124999999998717e-06, 5.409999999997361e-07, 7.611000000001117e-06, 4.7300000000083386e-07, 1.0318999999998218e-05, 5.420000000026792e-07, 9.513999999998662e-06, 4.860000000009301e-07, 9.651999999998884e-06, 5.419999999992098e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 9.874999999999468e-06, 4.870000000004038e-07, 9.208000000000133e-06, 4.7199999999789077e-07, 9.806000000001092e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:43.567" endtime="20201030 18:26:43.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.563" endtime="20201030 18:26:43.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:43.576" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 4.860000000009301e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:43.573" endtime="20201030 18:26:43.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:43.581" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:26:43.577" endtime="20201030 18:26:43.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.586" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:43.585" endtime="20201030 18:26:43.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.589" level="INFO">VALUE: [5.419999999992098e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.859999999974607e-07, 5.420000000026792e-07, 4.859999999974607e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.870000000004038e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.860000000009301e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 5.420000000026792e-07, 4.860000000009301e-07, 5.419999999992098e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 5.409999999997361e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:26:43.587" endtime="20201030 18:26:43.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.582" endtime="20201030 18:26:43.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:43.593" endtime="20201030 18:26:43.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.592" endtime="20201030 18:26:43.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.590" endtime="20201030 18:26:43.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.195" endtime="20201030 18:26:43.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.195" endtime="20201030 18:26:43.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:35.092" endtime="20201030 18:26:43.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:43.619" endtime="20201030 18:26:43.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.617" endtime="20201030 18:26:43.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.616" endtime="20201030 18:26:43.640"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:35.015" endtime="20201030 18:26:43.640" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:43.647" endtime="20201030 18:26:43.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.645" endtime="20201030 18:26:43.667"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.681" endtime="20201030 18:26:43.702"></status>
</kw>
<msg timestamp="20201030 18:26:43.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:43.679" endtime="20201030 18:26:43.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.705" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:43.704" endtime="20201030 18:26:43.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.709" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:43.707" endtime="20201030 18:26:43.709"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:43.676" endtime="20201030 18:26:43.710"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:43.674" endtime="20201030 18:26:43.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.673" endtime="20201030 18:26:43.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:43.716" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:43.714" endtime="20201030 18:26:43.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.712" endtime="20201030 18:26:43.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.672" endtime="20201030 18:26:43.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.671" endtime="20201030 18:26:43.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.718" endtime="20201030 18:26:43.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.670" endtime="20201030 18:26:43.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.668" endtime="20201030 18:26:43.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.644" endtime="20201030 18:26:43.721"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.729" endtime="20201030 18:26:43.748"></status>
</kw>
<msg timestamp="20201030 18:26:43.748" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:43.728" endtime="20201030 18:26:43.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.751" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:43.749" endtime="20201030 18:26:43.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.752" endtime="20201030 18:26:43.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.725" endtime="20201030 18:26:43.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.723" endtime="20201030 18:26:43.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.762" endtime="20201030 18:26:44.047"></status>
</kw>
<msg timestamp="20201030 18:26:44.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077167472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077171694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:43.760" endtime="20201030 18:26:44.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077167472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077171694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:44.051" endtime="20201030 18:26:44.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.060" endtime="20201030 18:26:44.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.757" endtime="20201030 18:26:44.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.756" endtime="20201030 18:26:44.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:44.067" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.2499999999973115e-06}, {'diff': 4.223000000011523e-06}, {'diff': 4.237000000004154e-06}, {'diff': 4.193999999999032e-06}, {'diff': 4.208000000005541e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:44.064" endtime="20201030 18:26:44.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:44.073" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.2499999999973115e-06, 4.223000000011523e-06, 4.237000000004154e-06, 4.193999999999032e-06, 4.208000000005541e-06, 4.207999999991663e-06, 4.180000000006401e-06, 4.235...</msg>
<status status="PASS" starttime="20201030 18:26:44.068" endtime="20201030 18:26:44.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.078" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:44.077" endtime="20201030 18:26:44.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.080" level="INFO">VALUE: [4.221999999998172e-06, 4.2499999999973115e-06, 4.223000000011523e-06, 4.237000000004154e-06, 4.193999999999032e-06, 4.208000000005541e-06, 4.207999999991663e-06, 4.180000000006401e-06, 4.235999999990803e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.208000000005541e-06, 4.237000000004154e-06, 4.235999999990803e-06, 4.207999999991663e-06, 4.208000000005541e-06, 4.2499999999973115e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.250000000011189e-06, 4.222999999997645e-06, 4.2360000000046805e-06, 4.277999999996451e-06, 4.2360000000046805e-06, 4.277999999996451e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.2499999999973115e-06, 4.207999999991663e-06, 4.209000000005014e-06, 4.222999999997645e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.208000000005541e-06, 4.2499999999973115e-06, 4.2360000000046805e-06, 4.2360000000046805e-06, 4.2360000000046805e-06, 4.250000000011189e-06, 4.208000000005541e-06, 4.207999999991663e-06, 4.235999999990803e-06, 4.2360000000046805e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.319999999988222e-06, 4.208000000005541e-06, 4.2910000000034865e-06, 4.277999999996451e-06]</msg>
<status status="PASS" starttime="20201030 18:26:44.079" endtime="20201030 18:26:44.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.074" endtime="20201030 18:26:44.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:44.085" endtime="20201030 18:26:44.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.084" endtime="20201030 18:26:44.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.082" endtime="20201030 18:26:44.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.722" endtime="20201030 18:26:44.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.722" endtime="20201030 18:26:44.106"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.114" endtime="20201030 18:26:44.130"></status>
</kw>
<msg timestamp="20201030 18:26:44.131" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.113" endtime="20201030 18:26:44.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.135" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.132" endtime="20201030 18:26:44.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.136" endtime="20201030 18:26:44.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.110" endtime="20201030 18:26:44.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.108" endtime="20201030 18:26:44.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.153" endtime="20201030 18:26:44.440"></status>
</kw>
<msg timestamp="20201030 18:26:44.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:44.151" endtime="20201030 18:26:44.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020726875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:44.445" endtime="20201030 18:26:44.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.455" endtime="20201030 18:26:44.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.148" endtime="20201030 18:26:44.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.144" endtime="20201030 18:26:44.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:44.464" level="INFO">${RESULT} = [{'diff': 4.277999999999921e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.237000000000685e-06}, {'diff': 4.209000000001545e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:44.458" endtime="20201030 18:26:44.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:44.469" level="INFO">${OVERHEAD} = {'diff': [4.277999999999921e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.209000000001545e-06, 4.264000000000351e-06, 4.193999999999032e-06, 4.1250...</msg>
<status status="PASS" starttime="20201030 18:26:44.465" endtime="20201030 18:26:44.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.475" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:44.473" endtime="20201030 18:26:44.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.478" level="INFO">VALUE: [4.277999999999921e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.209000000001545e-06, 4.264000000000351e-06, 4.193999999999032e-06, 4.125000000000656e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.209000000001545e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.195000000001975e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.2359999999977416e-06, 4.152000000000322e-06, 4.250000000000781e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.195000000001975e-06, 4.1949999999985055e-06, 4.1809999999989356e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.1949999999985055e-06, 4.223000000001115e-06, 4.207999999998602e-06, 4.263999999996881e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.207999999998602e-06]</msg>
<status status="PASS" starttime="20201030 18:26:44.476" endtime="20201030 18:26:44.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.470" endtime="20201030 18:26:44.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:44.483" endtime="20201030 18:26:44.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.481" endtime="20201030 18:26:44.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.480" endtime="20201030 18:26:44.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.107" endtime="20201030 18:26:44.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.106" endtime="20201030 18:26:44.504"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.515" endtime="20201030 18:26:44.533"></status>
</kw>
<msg timestamp="20201030 18:26:44.533" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.513" endtime="20201030 18:26:44.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.536" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.534" endtime="20201030 18:26:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.537" endtime="20201030 18:26:44.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.510" endtime="20201030 18:26:44.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.507" endtime="20201030 18:26:44.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.547" endtime="20201030 18:26:44.837"></status>
</kw>
<msg timestamp="20201030 18:26:44.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025089472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:44.546" endtime="20201030 18:26:44.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025089472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:44.842" endtime="20201030 18:26:44.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.850" endtime="20201030 18:26:44.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.542" endtime="20201030 18:26:44.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.540" endtime="20201030 18:26:44.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:44.857" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.195000000001975e-06}, {'diff': 4.277999999999921e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.236000000001211e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:44.854" endtime="20201030 18:26:44.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:44.862" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.195000000001975e-06, 4.277999999999921e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.23...</msg>
<status status="PASS" starttime="20201030 18:26:44.859" endtime="20201030 18:26:44.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.866" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:44.865" endtime="20201030 18:26:44.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.869" level="INFO">VALUE: [4.221999999998172e-06, 4.195000000001975e-06, 4.277999999999921e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.2499999999973115e-06, 4.207999999998602e-06, 4.222999999997645e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.277000000000447e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.179999999999462e-06, 4.209000000001545e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.237000000000685e-06, 4.208999999998075e-06, 4.236999999997215e-06, 4.222999999997645e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.305999999999061e-06, 4.194000000002501e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.277999999999921e-06, 4.236999999997215e-06, 4.237000000000685e-06]</msg>
<status status="PASS" starttime="20201030 18:26:44.867" endtime="20201030 18:26:44.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.863" endtime="20201030 18:26:44.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:44.874" endtime="20201030 18:26:44.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.872" endtime="20201030 18:26:44.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.871" endtime="20201030 18:26:44.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.505" endtime="20201030 18:26:44.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.505" endtime="20201030 18:26:44.895"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.908" endtime="20201030 18:26:44.932"></status>
</kw>
<msg timestamp="20201030 18:26:44.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.905" endtime="20201030 18:26:44.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.935" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.934" endtime="20201030 18:26:44.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.936" endtime="20201030 18:26:44.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.902" endtime="20201030 18:26:44.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.899" endtime="20201030 18:26:44.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.946" endtime="20201030 18:26:45.235"></status>
</kw>
<msg timestamp="20201030 18:26:45.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031205194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031209417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:44.945" endtime="20201030 18:26:45.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031205194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031209417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:45.240" endtime="20201030 18:26:45.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.248" endtime="20201030 18:26:45.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.942" endtime="20201030 18:26:45.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.940" endtime="20201030 18:26:45.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:45.256" level="INFO">${RESULT} = [{'diff': 4.223000000001115e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.223000000001115e-06}, {'diff': 4.263999999996881e-06}, {'diff': 4.166999999999366e-06},...</msg>
<status status="PASS" starttime="20201030 18:26:45.252" endtime="20201030 18:26:45.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:45.261" level="INFO">${OVERHEAD} = {'diff': [4.223000000001115e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.223000000001115e-06, 4.263999999996881e-06, 4.166999999999366e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.22...</msg>
<status status="PASS" starttime="20201030 18:26:45.257" endtime="20201030 18:26:45.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.265" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:45.264" endtime="20201030 18:26:45.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.267" level="INFO">VALUE: [4.223000000001115e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.223000000001115e-06, 4.263999999996881e-06, 4.166999999999366e-06, 4.221999999998172e-06, 4.222999999997645e-06, 4.222999999997645e-06, 4.2220000000051106e-06, 4.221999999998172e-06, 4.139000000000226e-06, 4.222999999997645e-06, 4.25000000000425e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.193999999999032e-06, 4.263999999996881e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.2499999999973115e-06, 4.222999999997645e-06, 4.305000000003056e-06, 4.25000000000425e-06, 4.276999999996978e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.2499999999973115e-06, 4.276999999996978e-06, 4.30600000000253e-06, 4.2499999999973115e-06, 4.2499999999973115e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.193999999999032e-06, 4.195000000005444e-06, 4.1810000000058745e-06, 4.2499999999973115e-06, 4.2220000000051106e-06, 4.221999999998172e-06, 4.2360000000046805e-06, 4.25000000000425e-06, 4.263999999996881e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.25000000000425e-06, 4.26400000000382e-06]</msg>
<status status="PASS" starttime="20201030 18:26:45.266" endtime="20201030 18:26:45.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.262" endtime="20201030 18:26:45.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:45.272" endtime="20201030 18:26:45.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.271" endtime="20201030 18:26:45.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.269" endtime="20201030 18:26:45.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.896" endtime="20201030 18:26:45.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.895" endtime="20201030 18:26:45.293"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.301" endtime="20201030 18:26:45.315"></status>
</kw>
<msg timestamp="20201030 18:26:45.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:45.300" endtime="20201030 18:26:45.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.318" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:45.317" endtime="20201030 18:26:45.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.319" endtime="20201030 18:26:45.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.297" endtime="20201030 18:26:45.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.295" endtime="20201030 18:26:45.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.329" endtime="20201030 18:26:45.618"></status>
</kw>
<msg timestamp="20201030 18:26:45.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019336347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:45.327" endtime="20201030 18:26:45.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019336347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:45.622" endtime="20201030 18:26:45.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.638" endtime="20201030 18:26:45.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.324" endtime="20201030 18:26:45.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.323" endtime="20201030 18:26:45.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:45.645" level="INFO">${RESULT} = [{'diff': 4.236000000001211e-06}, {'diff': 4.152999999999796e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.167000000002835e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:45.642" endtime="20201030 18:26:45.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:45.651" level="INFO">${OVERHEAD} = {'diff': [4.236000000001211e-06, 4.152999999999796e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.167000000002835e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.250...</msg>
<status status="PASS" starttime="20201030 18:26:45.646" endtime="20201030 18:26:45.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.655" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:45.654" endtime="20201030 18:26:45.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.658" level="INFO">VALUE: [4.236000000001211e-06, 4.152999999999796e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.167000000002835e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.208000000002071e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.304999999999587e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.165999999999892e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.152999999999796e-06, 4.223000000001115e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.1809999999989356e-06, 4.222999999997645e-06, 4.181000000002405e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.236999999997215e-06, 4.181000000002405e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 18:26:45.656" endtime="20201030 18:26:45.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.652" endtime="20201030 18:26:45.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:45.663" endtime="20201030 18:26:45.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.661" endtime="20201030 18:26:45.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.660" endtime="20201030 18:26:45.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.294" endtime="20201030 18:26:45.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.293" endtime="20201030 18:26:45.683"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.692" endtime="20201030 18:26:45.708"></status>
</kw>
<msg timestamp="20201030 18:26:45.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:45.690" endtime="20201030 18:26:45.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:45.711" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:45.709" endtime="20201030 18:26:45.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.712" endtime="20201030 18:26:45.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.687" endtime="20201030 18:26:45.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.686" endtime="20201030 18:26:45.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:45.722" endtime="20201030 18:26:46.012"></status>
</kw>
<msg timestamp="20201030 18:26:46.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:45.720" endtime="20201030 18:26:46.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020805014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:46.016" endtime="20201030 18:26:46.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.025" endtime="20201030 18:26:46.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.717" endtime="20201030 18:26:46.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.715" endtime="20201030 18:26:46.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:46.032" level="INFO">${RESULT} = [{'diff': 4.236000000001211e-06}, {'diff': 4.193999999999032e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.2499999999973115e-06}, {'diff': 4.221999999998172e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:46.028" endtime="20201030 18:26:46.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:46.036" level="INFO">${OVERHEAD} = {'diff': [4.236000000001211e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.221999999998172e-06, 4.236999999997215e-06, 4.236000000001211e-06, 4.222...</msg>
<status status="PASS" starttime="20201030 18:26:46.033" endtime="20201030 18:26:46.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.040" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:46.039" endtime="20201030 18:26:46.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.043" level="INFO">VALUE: [4.236000000001211e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.221999999998172e-06, 4.236999999997215e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.222999999997645e-06, 4.1809999999989356e-06, 4.236999999997215e-06, 4.2499999999973115e-06, 4.139000000000226e-06, 4.1809999999989356e-06, 4.222999999997645e-06, 4.195000000001975e-06, 4.223000000001115e-06, 4.237000000000685e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.1949999999985055e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.194000000002501e-06, 4.236000000001211e-06, 4.179999999999462e-06, 4.193999999999032e-06, 4.179999999999462e-06]</msg>
<status status="PASS" starttime="20201030 18:26:46.042" endtime="20201030 18:26:46.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.037" endtime="20201030 18:26:46.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:46.048" endtime="20201030 18:26:46.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.046" endtime="20201030 18:26:46.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.045" endtime="20201030 18:26:46.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.684" endtime="20201030 18:26:46.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:45.684" endtime="20201030 18:26:46.069"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.077" endtime="20201030 18:26:46.094"></status>
</kw>
<msg timestamp="20201030 18:26:46.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:46.075" endtime="20201030 18:26:46.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.097" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:46.096" endtime="20201030 18:26:46.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.099" endtime="20201030 18:26:46.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.073" endtime="20201030 18:26:46.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.071" endtime="20201030 18:26:46.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.108" endtime="20201030 18:26:46.393"></status>
</kw>
<msg timestamp="20201030 18:26:46.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:46.107" endtime="20201030 18:26:46.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022537861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:46.397" endtime="20201030 18:26:46.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.406" endtime="20201030 18:26:46.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.104" endtime="20201030 18:26:46.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.102" endtime="20201030 18:26:46.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:46.413" level="INFO">${RESULT} = [{'diff': 4.222000000001641e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.181000000002405e-06}, {'diff': 4.194000000002501e-06}, {'diff': 4.236000000001211e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:46.409" endtime="20201030 18:26:46.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:46.417" level="INFO">${OVERHEAD} = {'diff': [4.222000000001641e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.181000000002405e-06, 4.194000000002501e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.2229...</msg>
<status status="PASS" starttime="20201030 18:26:46.414" endtime="20201030 18:26:46.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.422" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:46.420" endtime="20201030 18:26:46.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.424" level="INFO">VALUE: [4.222000000001641e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.181000000002405e-06, 4.194000000002501e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.222999999997645e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.222999999997645e-06, 4.208000000002071e-06, 4.250000000000781e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.263000000000877e-06, 4.1949999999985055e-06, 4.222000000001641e-06, 4.222999999997645e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.209000000001545e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.167000000002835e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.263000000000877e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.291000000000017e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.209000000001545e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.2499999999973115e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.2499999999973115e-06]</msg>
<status status="PASS" starttime="20201030 18:26:46.423" endtime="20201030 18:26:46.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.418" endtime="20201030 18:26:46.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:46.430" endtime="20201030 18:26:46.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.428" endtime="20201030 18:26:46.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.427" endtime="20201030 18:26:46.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.069" endtime="20201030 18:26:46.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.069" endtime="20201030 18:26:46.451"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.459" endtime="20201030 18:26:46.478"></status>
</kw>
<msg timestamp="20201030 18:26:46.478" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:46.457" endtime="20201030 18:26:46.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.481" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:46.479" endtime="20201030 18:26:46.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.482" endtime="20201030 18:26:46.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.455" endtime="20201030 18:26:46.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.453" endtime="20201030 18:26:46.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.492" endtime="20201030 18:26:46.779"></status>
</kw>
<msg timestamp="20201030 18:26:46.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:46.490" endtime="20201030 18:26:46.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022350708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:46.784" endtime="20201030 18:26:46.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.793" endtime="20201030 18:26:46.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.488" endtime="20201030 18:26:46.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.486" endtime="20201030 18:26:46.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:46.800" level="INFO">${RESULT} = [{'diff': 4.222000000001641e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.223000000001115e-06}, {'diff': 4.208999999998075e-06}, {'diff': 4.207999999998602e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:46.796" endtime="20201030 18:26:46.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:46.805" level="INFO">${OVERHEAD} = {'diff': [4.222000000001641e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.223000000001115e-06, 4.222999999997645e-06, 4.2500...</msg>
<status status="PASS" starttime="20201030 18:26:46.801" endtime="20201030 18:26:46.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.809" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:46.808" endtime="20201030 18:26:46.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.812" level="INFO">VALUE: [4.222000000001641e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.208999999998075e-06, 4.207999999998602e-06, 4.223000000001115e-06, 4.222999999997645e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.209000000001545e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.222999999997645e-06, 4.236000000001211e-06, 4.1949999999985055e-06, 4.223000000001115e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.222999999997645e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.237000000000685e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.194000000002501e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.209000000001545e-06, 4.208000000002071e-06, 4.2499999999973115e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.250000000000781e-06]</msg>
<status status="PASS" starttime="20201030 18:26:46.810" endtime="20201030 18:26:46.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.806" endtime="20201030 18:26:46.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:46.816" endtime="20201030 18:26:46.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.815" endtime="20201030 18:26:46.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.814" endtime="20201030 18:26:46.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.451" endtime="20201030 18:26:46.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.451" endtime="20201030 18:26:46.837"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.845" endtime="20201030 18:26:46.862"></status>
</kw>
<msg timestamp="20201030 18:26:46.863" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:46.843" endtime="20201030 18:26:46.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:46.865" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:46.864" endtime="20201030 18:26:46.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.867" endtime="20201030 18:26:46.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.841" endtime="20201030 18:26:46.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.839" endtime="20201030 18:26:46.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:46.876" endtime="20201030 18:26:47.187"></status>
</kw>
<msg timestamp="20201030 18:26:47.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:46.875" endtime="20201030 18:26:47.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022846417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022850625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:47.192" endtime="20201030 18:26:47.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.200" endtime="20201030 18:26:47.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.872" endtime="20201030 18:26:47.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.870" endtime="20201030 18:26:47.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:47.207" level="INFO">${RESULT} = [{'diff': 4.207999999998602e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.208999999998075e-06}, {'diff': 4.180000000002931e-06}, {'diff': 4.223000000001115e-06}, {'diff': 4.222000000001641e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:47.204" endtime="20201030 18:26:47.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:47.212" level="INFO">${OVERHEAD} = {'diff': [4.207999999998602e-06, 4.208000000002071e-06, 4.208999999998075e-06, 4.180000000002931e-06, 4.223000000001115e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.2090...</msg>
<status status="PASS" starttime="20201030 18:26:47.208" endtime="20201030 18:26:47.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.216" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:47.215" endtime="20201030 18:26:47.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.218" level="INFO">VALUE: [4.207999999998602e-06, 4.208000000002071e-06, 4.208999999998075e-06, 4.180000000002931e-06, 4.223000000001115e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.209000000001545e-06, 4.236000000001211e-06, 4.208999999998075e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.194000000002501e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.277999999999921e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.277999999999921e-06, 4.208999999998075e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.277999999999921e-06]</msg>
<status status="PASS" starttime="20201030 18:26:47.217" endtime="20201030 18:26:47.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.213" endtime="20201030 18:26:47.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:47.223" endtime="20201030 18:26:47.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.222" endtime="20201030 18:26:47.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.220" endtime="20201030 18:26:47.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.838" endtime="20201030 18:26:47.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:46.837" endtime="20201030 18:26:47.244"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.252" endtime="20201030 18:26:47.270"></status>
</kw>
<msg timestamp="20201030 18:26:47.271" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:47.251" endtime="20201030 18:26:47.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:47.272" endtime="20201030 18:26:47.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.275" endtime="20201030 18:26:47.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.248" endtime="20201030 18:26:47.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.246" endtime="20201030 18:26:47.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.285" endtime="20201030 18:26:47.571"></status>
</kw>
<msg timestamp="20201030 18:26:47.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:47.284" endtime="20201030 18:26:47.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:47.575" endtime="20201030 18:26:47.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.583" endtime="20201030 18:26:47.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.281" endtime="20201030 18:26:47.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.279" endtime="20201030 18:26:47.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:47.590" level="INFO">${RESULT} = [{'diff': 4.222000000001641e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.222999999997645e-06}, {'diff': 4.207999999998602e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:47.587" endtime="20201030 18:26:47.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:47.594" level="INFO">${OVERHEAD} = {'diff': [4.222000000001641e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222999999997645e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.2369...</msg>
<status status="PASS" starttime="20201030 18:26:47.591" endtime="20201030 18:26:47.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.598" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:47.597" endtime="20201030 18:26:47.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.600" level="INFO">VALUE: [4.222000000001641e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222999999997645e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.236999999997215e-06, 4.221999999998172e-06, 4.236999999997215e-06, 4.250000000000781e-06, 4.277000000000447e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.193999999999032e-06, 4.2499999999973115e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.195000000001975e-06, 4.207999999998602e-06, 4.291999999999491e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.179999999999462e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.194000000002501e-06, 4.180000000002931e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.139000000000226e-06, 4.236000000001211e-06, 4.138000000000752e-06, 4.193999999999032e-06]</msg>
<status status="PASS" starttime="20201030 18:26:47.599" endtime="20201030 18:26:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.595" endtime="20201030 18:26:47.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:47.608" endtime="20201030 18:26:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.606" endtime="20201030 18:26:47.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.605" endtime="20201030 18:26:47.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.245" endtime="20201030 18:26:47.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.244" endtime="20201030 18:26:47.628"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.637" endtime="20201030 18:26:47.656"></status>
</kw>
<msg timestamp="20201030 18:26:47.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:47.635" endtime="20201030 18:26:47.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:47.658" endtime="20201030 18:26:47.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.660" endtime="20201030 18:26:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.632" endtime="20201030 18:26:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.630" endtime="20201030 18:26:47.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.670" endtime="20201030 18:26:47.973"></status>
</kw>
<msg timestamp="20201030 18:26:47.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020078736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:47.668" endtime="20201030 18:26:47.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:47.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020078736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020082958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:47.982" endtime="20201030 18:26:47.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:47.990" endtime="20201030 18:26:47.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.666" endtime="20201030 18:26:47.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.664" endtime="20201030 18:26:47.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:47.997" level="INFO">${RESULT} = [{'diff': 4.222000000001641e-06}, {'diff': 4.291999999999491e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.222000000001641e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:47.994" endtime="20201030 18:26:47.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:48.002" level="INFO">${OVERHEAD} = {'diff': [4.222000000001641e-06, 4.291999999999491e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.207...</msg>
<status status="PASS" starttime="20201030 18:26:47.998" endtime="20201030 18:26:48.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.006" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:48.005" endtime="20201030 18:26:48.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.008" level="INFO">VALUE: [4.222000000001641e-06, 4.291999999999491e-06, 4.208000000002071e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.179999999999462e-06, 4.222000000001641e-06, 4.165999999999892e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.221999999998172e-06, 4.152999999999796e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.1949999999985055e-06, 4.2499999999973115e-06, 4.208999999998075e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.223000000001115e-06, 4.208999999998075e-06, 4.237000000000685e-06, 4.264000000000351e-06, 4.193999999999032e-06, 4.277999999999921e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.181000000002405e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.207999999998602e-06]</msg>
<status status="PASS" starttime="20201030 18:26:48.007" endtime="20201030 18:26:48.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.003" endtime="20201030 18:26:48.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:48.013" endtime="20201030 18:26:48.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.012" endtime="20201030 18:26:48.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.010" endtime="20201030 18:26:48.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.629" endtime="20201030 18:26:48.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:47.629" endtime="20201030 18:26:48.034"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.042" endtime="20201030 18:26:48.058"></status>
</kw>
<msg timestamp="20201030 18:26:48.059" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.041" endtime="20201030 18:26:48.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.061" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.060" endtime="20201030 18:26:48.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.062" endtime="20201030 18:26:48.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.038" endtime="20201030 18:26:48.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.036" endtime="20201030 18:26:48.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.071" endtime="20201030 18:26:48.357"></status>
</kw>
<msg timestamp="20201030 18:26:48.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:48.070" endtime="20201030 18:26:48.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021506833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:48.361" endtime="20201030 18:26:48.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.370" endtime="20201030 18:26:48.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.067" endtime="20201030 18:26:48.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.065" endtime="20201030 18:26:48.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:48.377" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.221999999998172e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:48.374" endtime="20201030 18:26:48.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:48.381" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.20...</msg>
<status status="PASS" starttime="20201030 18:26:48.378" endtime="20201030 18:26:48.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.386" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:48.384" endtime="20201030 18:26:48.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.388" level="INFO">VALUE: [4.221999999998172e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.237000000000685e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.222999999997645e-06, 4.223000000001115e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.1809999999989356e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.237000000000685e-06, 4.2359999999977416e-06, 4.263000000000877e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.263000000000877e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.208999999998075e-06, 4.223000000001115e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.222000000001641e-06]</msg>
<status status="PASS" starttime="20201030 18:26:48.387" endtime="20201030 18:26:48.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.382" endtime="20201030 18:26:48.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:48.393" endtime="20201030 18:26:48.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.391" endtime="20201030 18:26:48.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.390" endtime="20201030 18:26:48.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.035" endtime="20201030 18:26:48.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.035" endtime="20201030 18:26:48.414"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.422" endtime="20201030 18:26:48.436"></status>
</kw>
<msg timestamp="20201030 18:26:48.437" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.420" endtime="20201030 18:26:48.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.439" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.438" endtime="20201030 18:26:48.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.440" endtime="20201030 18:26:48.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.418" endtime="20201030 18:26:48.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.416" endtime="20201030 18:26:48.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.450" endtime="20201030 18:26:48.739"></status>
</kw>
<msg timestamp="20201030 18:26:48.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018434125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:48.448" endtime="20201030 18:26:48.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018434125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:48.744" endtime="20201030 18:26:48.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.752" endtime="20201030 18:26:48.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.446" endtime="20201030 18:26:48.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.444" endtime="20201030 18:26:48.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:48.758" level="INFO">${RESULT} = [{'diff': 4.207999999998602e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.208999999998075e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.208999999998075e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:48.755" endtime="20201030 18:26:48.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:48.763" level="INFO">${OVERHEAD} = {'diff': [4.207999999998602e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.2359999999977416e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.222...</msg>
<status status="PASS" starttime="20201030 18:26:48.759" endtime="20201030 18:26:48.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.767" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:48.766" endtime="20201030 18:26:48.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.769" level="INFO">VALUE: [4.207999999998602e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.208999999998075e-06, 4.2359999999977416e-06, 4.208999999998075e-06, 4.209000000001545e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.3200000000021e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.223000000001115e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.264000000000351e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.181000000002405e-06, 4.277999999999921e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.209000000001545e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.291999999999491e-06, 4.194000000002501e-06, 4.2359999999977416e-06, 4.237000000000685e-06]</msg>
<status status="PASS" starttime="20201030 18:26:48.768" endtime="20201030 18:26:48.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.763" endtime="20201030 18:26:48.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:48.775" endtime="20201030 18:26:48.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.773" endtime="20201030 18:26:48.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.772" endtime="20201030 18:26:48.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.415" endtime="20201030 18:26:48.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.414" endtime="20201030 18:26:48.796"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.804" endtime="20201030 18:26:48.817"></status>
</kw>
<msg timestamp="20201030 18:26:48.818" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.802" endtime="20201030 18:26:48.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.819" endtime="20201030 18:26:48.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.822" endtime="20201030 18:26:48.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.799" endtime="20201030 18:26:48.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.798" endtime="20201030 18:26:48.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.830" endtime="20201030 18:26:49.118"></status>
</kw>
<msg timestamp="20201030 18:26:49.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:48.829" endtime="20201030 18:26:49.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018399319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0184035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:49.122" endtime="20201030 18:26:49.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.130" endtime="20201030 18:26:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.826" endtime="20201030 18:26:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.825" endtime="20201030 18:26:49.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:49.136" level="INFO">${RESULT} = [{'diff': 4.1809999999989356e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.222000000001641e-06}, {'diff': 4.221999999998172e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:49.133" endtime="20201030 18:26:49.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:49.141" level="INFO">${OVERHEAD} = {'diff': [4.1809999999989356e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.236...</msg>
<status status="PASS" starttime="20201030 18:26:49.137" endtime="20201030 18:26:49.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.145" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:49.144" endtime="20201030 18:26:49.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.148" level="INFO">VALUE: [4.1809999999989356e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.208999999998075e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.208999999998075e-06, 4.223000000001115e-06, 4.208999999998075e-06, 4.2499999999973115e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.277999999999921e-06, 4.236999999997215e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.208999999998075e-06, 4.222000000001641e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.263000000000877e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.1949999999985055e-06, 4.207999999998602e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.179999999999462e-06, 4.221999999998172e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 18:26:49.147" endtime="20201030 18:26:49.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.142" endtime="20201030 18:26:49.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:49.153" endtime="20201030 18:26:49.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.151" endtime="20201030 18:26:49.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.150" endtime="20201030 18:26:49.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.796" endtime="20201030 18:26:49.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.796" endtime="20201030 18:26:49.174"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.182" endtime="20201030 18:26:49.200"></status>
</kw>
<msg timestamp="20201030 18:26:49.200" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.180" endtime="20201030 18:26:49.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.201" endtime="20201030 18:26:49.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.204" endtime="20201030 18:26:49.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.177" endtime="20201030 18:26:49.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.176" endtime="20201030 18:26:49.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.213" endtime="20201030 18:26:49.501"></status>
</kw>
<msg timestamp="20201030 18:26:49.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:49.211" endtime="20201030 18:26:49.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:49.505" endtime="20201030 18:26:49.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.514" endtime="20201030 18:26:49.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.208" endtime="20201030 18:26:49.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.207" endtime="20201030 18:26:49.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:49.521" level="INFO">${RESULT} = [{'diff': 4.221999999998172e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.237000000000685e-06}, {'diff': 4.2499999999973115e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.236000000001211e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:49.518" endtime="20201030 18:26:49.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:49.525" level="INFO">${OVERHEAD} = {'diff': [4.221999999998172e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.236...</msg>
<status status="PASS" starttime="20201030 18:26:49.522" endtime="20201030 18:26:49.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.529" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:49.528" endtime="20201030 18:26:49.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.532" level="INFO">VALUE: [4.221999999998172e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.221999999998172e-06, 4.194000000002501e-06, 4.193999999999032e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.263000000000877e-06, 4.2499999999973115e-06, 4.3199999999986305e-06, 4.208999999998075e-06, 4.264000000000351e-06, 4.208000000002071e-06, 4.222999999997645e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.222999999997645e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.1809999999989356e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.2499999999973115e-06, 4.222000000001641e-06]</msg>
<status status="PASS" starttime="20201030 18:26:49.530" endtime="20201030 18:26:49.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.526" endtime="20201030 18:26:49.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:49.537" endtime="20201030 18:26:49.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.535" endtime="20201030 18:26:49.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.534" endtime="20201030 18:26:49.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.174" endtime="20201030 18:26:49.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.174" endtime="20201030 18:26:49.557"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.565" endtime="20201030 18:26:49.580"></status>
</kw>
<msg timestamp="20201030 18:26:49.581" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.564" endtime="20201030 18:26:49.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.583" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.582" endtime="20201030 18:26:49.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.584" endtime="20201030 18:26:49.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.561" endtime="20201030 18:26:49.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.559" endtime="20201030 18:26:49.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.594" endtime="20201030 18:26:49.882"></status>
</kw>
<msg timestamp="20201030 18:26:49.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:49.593" endtime="20201030 18:26:49.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:49.886" endtime="20201030 18:26:49.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.894" endtime="20201030 18:26:49.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.590" endtime="20201030 18:26:49.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.588" endtime="20201030 18:26:49.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:49.901" level="INFO">${RESULT} = [{'diff': 4.223000000001115e-06}, {'diff': 4.166999999999366e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.166999999999366e-06}, {'diff': 4.208000000002071e-06}, {'diff': 4.221999999998172e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:49.898" endtime="20201030 18:26:49.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:49.905" level="INFO">${OVERHEAD} = {'diff': [4.223000000001115e-06, 4.166999999999366e-06, 4.250000000000781e-06, 4.166999999999366e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.305999999999061e-06, 4.236000000001211e-06, 4.2220...</msg>
<status status="PASS" starttime="20201030 18:26:49.902" endtime="20201030 18:26:49.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.909" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:49.908" endtime="20201030 18:26:49.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.911" level="INFO">VALUE: [4.223000000001115e-06, 4.166999999999366e-06, 4.250000000000781e-06, 4.166999999999366e-06, 4.208000000002071e-06, 4.221999999998172e-06, 4.305999999999061e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.291000000000017e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.208000000002071e-06, 4.193999999999032e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.209000000001545e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.193999999999032e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.250000000000781e-06, 4.208000000002071e-06, 4.2499999999973115e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.209000000001545e-06, 4.194000000002501e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.222999999997645e-06, 4.264000000000351e-06, 4.223000000001115e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.1949999999985055e-06, 4.2359999999977416e-06, 4.165999999999892e-06, 4.179999999999462e-06, 4.236000000001211e-06, 4.193999999999032e-06, 4.222000000001641e-06, 4.250000000000781e-06]</msg>
<status status="PASS" starttime="20201030 18:26:49.910" endtime="20201030 18:26:49.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.906" endtime="20201030 18:26:49.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:49.917" endtime="20201030 18:26:49.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.916" endtime="20201030 18:26:49.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.914" endtime="20201030 18:26:49.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.558" endtime="20201030 18:26:49.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.558" endtime="20201030 18:26:49.938"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.946" endtime="20201030 18:26:49.963"></status>
</kw>
<msg timestamp="20201030 18:26:49.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.944" endtime="20201030 18:26:49.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.966" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.965" endtime="20201030 18:26:49.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.967" endtime="20201030 18:26:49.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.941" endtime="20201030 18:26:49.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.940" endtime="20201030 18:26:49.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.976" endtime="20201030 18:26:50.260"></status>
</kw>
<msg timestamp="20201030 18:26:50.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02175275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:49.975" endtime="20201030 18:26:50.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02175275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:50.264" endtime="20201030 18:26:50.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.272" endtime="20201030 18:26:50.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.972" endtime="20201030 18:26:50.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.970" endtime="20201030 18:26:50.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:50.279" level="INFO">${RESULT} = [{'diff': 4.193999999999032e-06}, {'diff': 4.2359999999977416e-06}, {'diff': 4.221999999998172e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.207999999998602e-06}, {'diff': 4.1949999999985055e-06},...</msg>
<status status="PASS" starttime="20201030 18:26:50.276" endtime="20201030 18:26:50.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:50.284" level="INFO">${OVERHEAD} = {'diff': [4.193999999999032e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.207999999998602e-06, 4.23...</msg>
<status status="PASS" starttime="20201030 18:26:50.280" endtime="20201030 18:26:50.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.288" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:50.287" endtime="20201030 18:26:50.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.290" level="INFO">VALUE: [4.193999999999032e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.1949999999985055e-06, 4.194000000002501e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.305999999999061e-06, 4.237000000000685e-06, 4.223000000001115e-06, 4.195000000001975e-06, 4.318999999999157e-06, 4.207999999998602e-06, 4.2499999999973115e-06, 4.152999999999796e-06, 4.250000000000781e-06, 4.209000000001545e-06, 4.250000000000781e-06, 4.264000000000351e-06, 4.2359999999977416e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.222999999997645e-06, 4.2499999999973115e-06, 4.237000000000685e-06, 4.207999999998602e-06, 4.209000000001545e-06, 4.221999999998172e-06, 4.1949999999985055e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.263000000000877e-06, 4.222000000001641e-06, 4.1949999999985055e-06, 4.195000000001975e-06, 4.221999999998172e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.209000000001545e-06, 4.221999999998172e-06]</msg>
<status status="PASS" starttime="20201030 18:26:50.289" endtime="20201030 18:26:50.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.285" endtime="20201030 18:26:50.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:50.295" endtime="20201030 18:26:50.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.294" endtime="20201030 18:26:50.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.293" endtime="20201030 18:26:50.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.938" endtime="20201030 18:26:50.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.938" endtime="20201030 18:26:50.316"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.324" endtime="20201030 18:26:50.340"></status>
</kw>
<msg timestamp="20201030 18:26:50.340" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.322" endtime="20201030 18:26:50.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.343" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.341" endtime="20201030 18:26:50.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.344" endtime="20201030 18:26:50.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.320" endtime="20201030 18:26:50.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.318" endtime="20201030 18:26:50.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.353" endtime="20201030 18:26:50.640"></status>
</kw>
<msg timestamp="20201030 18:26:50.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:50.351" endtime="20201030 18:26:50.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020268028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:50.644" endtime="20201030 18:26:50.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.653" endtime="20201030 18:26:50.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.349" endtime="20201030 18:26:50.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.347" endtime="20201030 18:26:50.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:50.660" level="INFO">${RESULT} = [{'diff': 4.250000000000781e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.264000000000351e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.236000000001211e-06}, {'diff': 4.277999999999921e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:50.657" endtime="20201030 18:26:50.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:50.664" level="INFO">${OVERHEAD} = {'diff': [4.250000000000781e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.263999999996881e-06, 4.222000000001641e-06, 4.2220...</msg>
<status status="PASS" starttime="20201030 18:26:50.661" endtime="20201030 18:26:50.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.668" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:50.667" endtime="20201030 18:26:50.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.671" level="INFO">VALUE: [4.250000000000781e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.263999999996881e-06, 4.222000000001641e-06, 4.222000000001641e-06, 4.318999999999157e-06, 4.236999999997215e-06, 4.250000000000781e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.277000000000447e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.277999999999921e-06, 4.222000000001641e-06, 4.277999999999921e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 4.222000000001641e-06, 4.2359999999977416e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.291000000000017e-06, 4.291000000000017e-06, 4.207999999998602e-06, 4.236000000001211e-06, 4.221999999998172e-06, 4.291000000000017e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.223000000001115e-06, 4.237000000000685e-06, 4.236000000001211e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.223000000001115e-06, 4.223000000001115e-06, 4.223000000001115e-06, 4.221999999998172e-06, 4.223000000001115e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201030 18:26:50.669" endtime="20201030 18:26:50.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.665" endtime="20201030 18:26:50.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:50.677" endtime="20201030 18:26:50.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.675" endtime="20201030 18:26:50.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.673" endtime="20201030 18:26:50.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.317" endtime="20201030 18:26:50.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.316" endtime="20201030 18:26:50.697"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.705" endtime="20201030 18:26:50.723"></status>
</kw>
<msg timestamp="20201030 18:26:50.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.704" endtime="20201030 18:26:50.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.725" endtime="20201030 18:26:50.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.728" endtime="20201030 18:26:50.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.701" endtime="20201030 18:26:50.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.699" endtime="20201030 18:26:50.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.737" endtime="20201030 18:26:51.024"></status>
</kw>
<msg timestamp="20201030 18:26:51.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020827194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:50.736" endtime="20201030 18:26:51.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020827194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.028" endtime="20201030 18:26:51.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.036" endtime="20201030 18:26:51.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.733" endtime="20201030 18:26:51.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.732" endtime="20201030 18:26:51.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:51.043" level="INFO">${RESULT} = [{'diff': 4.208999999998075e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.250000000000781e-06}, {'diff': 4.193999999999032e-06}, {'diff': 4.223000000001115e-06}, {'diff': 4.277999999999921e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:51.040" endtime="20201030 18:26:51.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:51.047" level="INFO">${OVERHEAD} = {'diff': [4.208999999998075e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.277999999999921e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.2079...</msg>
<status status="PASS" starttime="20201030 18:26:51.044" endtime="20201030 18:26:51.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.051" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:51.050" endtime="20201030 18:26:51.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.054" level="INFO">VALUE: [4.208999999998075e-06, 4.250000000000781e-06, 4.250000000000781e-06, 4.193999999999032e-06, 4.223000000001115e-06, 4.277999999999921e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.207999999998602e-06, 4.305999999999061e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.209000000001545e-06, 4.179999999999462e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.250000000000781e-06, 4.222000000001641e-06, 4.236000000001211e-06, 4.1809999999989356e-06, 4.277999999999921e-06, 4.2499999999973115e-06, 4.207999999998602e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.208000000002071e-06, 4.1809999999989356e-06, 4.194000000002501e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.250000000000781e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.236000000001211e-06, 4.237000000000685e-06, 4.221999999998172e-06, 4.222000000001641e-06, 4.180000000002931e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.236000000001211e-06, 4.250000000000781e-06]</msg>
<status status="PASS" starttime="20201030 18:26:51.052" endtime="20201030 18:26:51.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.048" endtime="20201030 18:26:51.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:51.061" endtime="20201030 18:26:51.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.060" endtime="20201030 18:26:51.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.059" endtime="20201030 18:26:51.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.698" endtime="20201030 18:26:51.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.698" endtime="20201030 18:26:51.082"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.090" endtime="20201030 18:26:51.108"></status>
</kw>
<msg timestamp="20201030 18:26:51.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.088" endtime="20201030 18:26:51.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.109" endtime="20201030 18:26:51.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.112" endtime="20201030 18:26:51.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.086" endtime="20201030 18:26:51.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.084" endtime="20201030 18:26:51.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.123" endtime="20201030 18:26:51.410"></status>
</kw>
<msg timestamp="20201030 18:26:51.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.122" endtime="20201030 18:26:51.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022936819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.414" endtime="20201030 18:26:51.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.422" endtime="20201030 18:26:51.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.119" endtime="20201030 18:26:51.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.117" endtime="20201030 18:26:51.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:51.429" level="INFO">${RESULT} = [{'diff': 4.250000000000781e-06}, {'diff': 4.223000000001115e-06}, {'diff': 4.304999999999587e-06}, {'diff': 4.318999999999157e-06}, {'diff': 4.277000000000447e-06}, {'diff': 4.236000000001211e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:51.426" endtime="20201030 18:26:51.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:51.434" level="INFO">${OVERHEAD} = {'diff': [4.250000000000781e-06, 4.223000000001115e-06, 4.304999999999587e-06, 4.318999999999157e-06, 4.277000000000447e-06, 4.236000000001211e-06, 4.291000000000017e-06, 4.236000000001211e-06, 4.2230...</msg>
<status status="PASS" starttime="20201030 18:26:51.430" endtime="20201030 18:26:51.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.438" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:26:51.437" endtime="20201030 18:26:51.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.440" level="INFO">VALUE: [4.250000000000781e-06, 4.223000000001115e-06, 4.304999999999587e-06, 4.318999999999157e-06, 4.277000000000447e-06, 4.236000000001211e-06, 4.291000000000017e-06, 4.236000000001211e-06, 4.223000000001115e-06, 4.208000000002071e-06, 4.222000000001641e-06, 4.181000000002405e-06, 4.193999999999032e-06, 4.305999999999061e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.207999999998602e-06, 4.221999999998172e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.195000000001975e-06, 4.2359999999977416e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.250000000000781e-06, 4.221999999998172e-06, 4.2359999999977416e-06, 4.2359999999977416e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.209000000001545e-06, 4.1809999999989356e-06, 4.277000000000447e-06, 4.222000000001641e-06, 4.208999999998075e-06, 4.221999999998172e-06, 4.209000000001545e-06, 4.236999999997215e-06, 4.221999999998172e-06, 4.236000000001211e-06, 4.2359999999977416e-06, 4.209000000001545e-06, 4.250000000000781e-06, 4.2359999999977416e-06, 4.207999999998602e-06]</msg>
<status status="PASS" starttime="20201030 18:26:51.439" endtime="20201030 18:26:51.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.435" endtime="20201030 18:26:51.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:51.445" endtime="20201030 18:26:51.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.444" endtime="20201030 18:26:51.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.443" endtime="20201030 18:26:51.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.083" endtime="20201030 18:26:51.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.082" endtime="20201030 18:26:51.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.721" endtime="20201030 18:26:51.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:51.470" endtime="20201030 18:26:51.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.469" endtime="20201030 18:26:51.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.467" endtime="20201030 18:26:51.490"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:43.642" endtime="20201030 18:26:51.491" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:51.497" endtime="20201030 18:26:51.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.496" endtime="20201030 18:26:51.517"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.530" endtime="20201030 18:26:51.551"></status>
</kw>
<msg timestamp="20201030 18:26:51.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.529" endtime="20201030 18:26:51.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.553" endtime="20201030 18:26:51.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.557" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:51.555" endtime="20201030 18:26:51.558"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:51.526" endtime="20201030 18:26:51.558"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:51.524" endtime="20201030 18:26:51.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.522" endtime="20201030 18:26:51.559"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:51.563" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:51.562" endtime="20201030 18:26:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.560" endtime="20201030 18:26:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.522" endtime="20201030 18:26:51.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.521" endtime="20201030 18:26:51.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.564" endtime="20201030 18:26:51.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.520" endtime="20201030 18:26:51.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.518" endtime="20201030 18:26:51.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.495" endtime="20201030 18:26:51.567"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.575" endtime="20201030 18:26:51.597"></status>
</kw>
<msg timestamp="20201030 18:26:51.598" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.574" endtime="20201030 18:26:51.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.600" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.599" endtime="20201030 18:26:51.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.602" endtime="20201030 18:26:51.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.571" endtime="20201030 18:26:51.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.569" endtime="20201030 18:26:51.604"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.606" endtime="20201030 18:26:51.608"></status>
</kw>
<msg timestamp="20201030 18:26:51.608" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:26:51.605" endtime="20201030 18:26:51.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.612" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:26:51.611" endtime="20201030 18:26:51.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.614" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:26:51.613" endtime="20201030 18:26:51.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.609" endtime="20201030 18:26:51.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.619" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:26:51.618" endtime="20201030 18:26:51.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.621" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:26:51.620" endtime="20201030 18:26:51.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.616" endtime="20201030 18:26:51.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.628" endtime="20201030 18:26:51.915"></status>
</kw>
<msg timestamp="20201030 18:26:51.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070144569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070153167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.627" endtime="20201030 18:26:51.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070144569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070153167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.919" endtime="20201030 18:26:51.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.928" endtime="20201030 18:26:51.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.624" endtime="20201030 18:26:51.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.623" endtime="20201030 18:26:51.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:51.934" level="INFO">${RESULT} = [{'diff': 8.597999999998551e-06}, {'diff': 8.777000000001478e-06}, {'diff': 8.708999999995637e-06}, {'diff': 8.709000000009515e-06}, {'diff': 8.735999999995303e-06}, {'diff': 8.749999999987934e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:51.931" endtime="20201030 18:26:51.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:51.938" level="INFO">${OVERHEAD} = {'diff': [8.597999999998551e-06, 8.777000000001478e-06, 8.708999999995637e-06, 8.709000000009515e-06, 8.735999999995303e-06, 8.749999999987934e-06, 8.735999999995303e-06, 8.708999999995637e-06, 8.7359...</msg>
<status status="PASS" starttime="20201030 18:26:51.935" endtime="20201030 18:26:51.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.943" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:26:51.942" endtime="20201030 18:26:51.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.946" level="INFO">VALUE: [8.597999999998551e-06, 8.777000000001478e-06, 8.708999999995637e-06, 8.709000000009515e-06, 8.735999999995303e-06, 8.749999999987934e-06, 8.735999999995303e-06, 8.708999999995637e-06, 8.735999999995303e-06, 8.723000000002146e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.76299999999497e-06, 8.722999999988268e-06, 8.735999999995303e-06, 8.778000000000952e-06, 8.763999999994443e-06, 8.76400000000832e-06, 8.680999999996497e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.722000000002672e-06, 8.76400000000832e-06, 8.749999999987934e-06, 8.750000000001812e-06, 8.735999999995303e-06, 8.722000000002672e-06, 8.709000000009515e-06, 8.806000000000092e-06, 8.735999999995303e-06, 8.750000000001812e-06, 8.708999999995637e-06, 8.735999999995303e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.763000000008847e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.79200000000746e-06, 8.721999999988794e-06, 8.750000000001812e-06, 8.707999999996163e-06, 8.818999999993249e-06, 8.722000000002672e-06, 8.708999999995637e-06, 8.735999999995303e-06, 8.819000000007127e-06, 8.722000000002672e-06, 8.736000000009181e-06]</msg>
<status status="PASS" starttime="20201030 18:26:51.944" endtime="20201030 18:26:51.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.939" endtime="20201030 18:26:51.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:51.950" endtime="20201030 18:26:51.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.949" endtime="20201030 18:26:51.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.947" endtime="20201030 18:26:51.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.568" endtime="20201030 18:26:51.971"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:51.492" endtime="20201030 18:26:51.971" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:51.978" endtime="20201030 18:26:51.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.976" endtime="20201030 18:26:51.998"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.012" endtime="20201030 18:26:52.028"></status>
</kw>
<msg timestamp="20201030 18:26:52.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.010" endtime="20201030 18:26:52.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.030" endtime="20201030 18:26:52.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.034" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:52.032" endtime="20201030 18:26:52.035"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:52.008" endtime="20201030 18:26:52.035"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:52.006" endtime="20201030 18:26:52.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.004" endtime="20201030 18:26:52.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:52.040" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:52.039" endtime="20201030 18:26:52.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.037" endtime="20201030 18:26:52.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.004" endtime="20201030 18:26:52.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.003" endtime="20201030 18:26:52.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.042" endtime="20201030 18:26:52.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.001" endtime="20201030 18:26:52.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.999" endtime="20201030 18:26:52.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.975" endtime="20201030 18:26:52.044"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.053" endtime="20201030 18:26:52.151"></status>
</kw>
<msg timestamp="20201030 18:26:52.152" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.051" endtime="20201030 18:26:52.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.154" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.153" endtime="20201030 18:26:52.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.155" endtime="20201030 18:26:52.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.049" endtime="20201030 18:26:52.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.046" endtime="20201030 18:26:52.158"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.160" endtime="20201030 18:26:52.161"></status>
</kw>
<msg timestamp="20201030 18:26:52.162" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:26:52.159" endtime="20201030 18:26:52.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.167" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:26:52.165" endtime="20201030 18:26:52.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.169" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:26:52.168" endtime="20201030 18:26:52.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.163" endtime="20201030 18:26:52.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.174" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:26:52.173" endtime="20201030 18:26:52.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.176" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:26:52.175" endtime="20201030 18:26:52.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.170" endtime="20201030 18:26:52.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.183" endtime="20201030 18:26:52.474"></status>
</kw>
<msg timestamp="20201030 18:26:52.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068180542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068230875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:52.181" endtime="20201030 18:26:52.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068180542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068230875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:52.479" endtime="20201030 18:26:52.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.487" endtime="20201030 18:26:52.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.179" endtime="20201030 18:26:52.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.177" endtime="20201030 18:26:52.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:52.493" level="INFO">${RESULT} = [{'diff': 5.033299999999963e-05}, {'diff': 5.032000000000647e-05}, {'diff': 5.03749999999914e-05}, {'diff': 5.03339999999991e-05}, {'diff': 5.0431000000003556e-05}, {'diff': 5.033299999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:26:52.490" endtime="20201030 18:26:52.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:52.497" level="INFO">${OVERHEAD} = {'diff': [5.033299999999963e-05, 5.032000000000647e-05, 5.03749999999914e-05, 5.03339999999991e-05, 5.0431000000003556e-05, 5.033299999999963e-05, 5.029200000000733e-05, 5.030500000000049e-05, 5.03059...</msg>
<status status="PASS" starttime="20201030 18:26:52.494" endtime="20201030 18:26:52.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.503" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:26:52.502" endtime="20201030 18:26:52.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.505" level="INFO">VALUE: [5.033299999999963e-05, 5.032000000000647e-05, 5.03749999999914e-05, 5.03339999999991e-05, 5.0431000000003556e-05, 5.033299999999963e-05, 5.029200000000733e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.031999999999259e-05, 5.033299999999963e-05, 5.031899999999312e-05, 5.038899999999791e-05, 5.031899999999312e-05, 5.034700000000614e-05, 5.030500000000049e-05, 5.0417000000010925e-05, 5.038899999999791e-05, 5.036199999999824e-05, 5.034699999999226e-05, 5.0429999999990205e-05, 5.044499999999619e-05, 5.038899999999791e-05, 5.034800000000561e-05, 5.033299999999963e-05, 5.03339999999991e-05, 5.0403000000004416e-05, 5.034700000000614e-05, 5.033299999999963e-05, 5.033299999999963e-05, 5.030500000000049e-05, 5.0415999999997574e-05, 5.032000000000647e-05, 5.031999999999259e-05, 5.034800000000561e-05, 5.036099999999877e-05, 5.034799999999173e-05, 5.043099999998968e-05, 5.0347999999977855e-05, 5.0375000000019154e-05, 5.030500000000049e-05, 5.0333000000013506e-05, 5.02909999999801e-05, 5.0403000000004416e-05, 5.0403000000004416e-05, 5.034800000000561e-05, 5.0403000000004416e-05, 5.030599999999996e-05, 5.03749999999914e-05]</msg>
<status status="PASS" starttime="20201030 18:26:52.504" endtime="20201030 18:26:52.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.498" endtime="20201030 18:26:52.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:52.510" endtime="20201030 18:26:52.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.508" endtime="20201030 18:26:52.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.507" endtime="20201030 18:26:52.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.045" endtime="20201030 18:26:52.531"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:51.973" endtime="20201030 18:26:52.531" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:52.538" endtime="20201030 18:26:52.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.536" endtime="20201030 18:26:52.558"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.571" endtime="20201030 18:26:52.585"></status>
</kw>
<msg timestamp="20201030 18:26:52.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.569" endtime="20201030 18:26:52.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.587" endtime="20201030 18:26:52.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:52.589" endtime="20201030 18:26:52.592"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:52.567" endtime="20201030 18:26:52.592"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:52.564" endtime="20201030 18:26:52.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.563" endtime="20201030 18:26:52.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:52.597" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:52.596" endtime="20201030 18:26:52.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.594" endtime="20201030 18:26:52.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.562" endtime="20201030 18:26:52.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.562" endtime="20201030 18:26:52.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.598" endtime="20201030 18:26:52.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.560" endtime="20201030 18:26:52.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.559" endtime="20201030 18:26:52.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.535" endtime="20201030 18:26:52.601"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.611" endtime="20201030 18:26:52.899"></status>
</kw>
<msg timestamp="20201030 18:26:52.899" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.610" endtime="20201030 18:26:52.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.902" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.900" endtime="20201030 18:26:52.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.903" endtime="20201030 18:26:52.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.606" endtime="20201030 18:26:52.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.603" endtime="20201030 18:26:52.908"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.911" endtime="20201030 18:26:52.913"></status>
</kw>
<msg timestamp="20201030 18:26:52.913" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:26:52.909" endtime="20201030 18:26:52.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.918" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:26:52.916" endtime="20201030 18:26:52.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.922" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:26:52.920" endtime="20201030 18:26:52.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.914" endtime="20201030 18:26:52.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.939" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:26:52.936" endtime="20201030 18:26:52.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.949" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:26:52.946" endtime="20201030 18:26:52.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.927" endtime="20201030 18:26:52.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.965" endtime="20201030 18:26:53.265"></status>
</kw>
<msg timestamp="20201030 18:26:53.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069348111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069442056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:52.962" endtime="20201030 18:26:53.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069348111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069442056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:53.270" endtime="20201030 18:26:53.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.286" endtime="20201030 18:26:53.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.956" endtime="20201030 18:26:53.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.953" endtime="20201030 18:26:53.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:53.294" level="INFO">${RESULT} = [{'diff': 9.394499999999806e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.3333000000001e-05}, {'diff': 9.337499999999277e-05}, {'diff': 9.340299999999191e-05}, {'diff': 9.342999999999158e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:26:53.290" endtime="20201030 18:26:53.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:53.303" level="INFO">${OVERHEAD} = {'diff': [9.394499999999806e-05, 9.330600000000133e-05, 9.3333000000001e-05, 9.337499999999277e-05, 9.340299999999191e-05, 9.342999999999158e-05, 9.343100000000493e-05, 9.331899999999449e-05, 9.337500...</msg>
<status status="PASS" starttime="20201030 18:26:53.296" endtime="20201030 18:26:53.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.308" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:26:53.307" endtime="20201030 18:26:53.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.311" level="INFO">VALUE: [9.394499999999806e-05, 9.330600000000133e-05, 9.3333000000001e-05, 9.337499999999277e-05, 9.340299999999191e-05, 9.342999999999158e-05, 9.343100000000493e-05, 9.331899999999449e-05, 9.337500000000665e-05, 9.334699999999363e-05, 9.336100000000014e-05, 9.336199999998573e-05, 9.3333000000001e-05, 9.336099999998626e-05, 9.343100000000493e-05, 9.347199999998335e-05, 9.34170000000123e-05, 9.338899999999928e-05, 9.337500000000665e-05, 9.344399999999808e-05, 9.340300000001966e-05, 9.338899999999928e-05, 9.340299999999191e-05, 9.347300000001058e-05, 9.340299999999191e-05, 9.329199999999482e-05, 9.330600000001521e-05, 9.337500000000665e-05, 9.349999999999636e-05, 9.34299999999777e-05, 9.327800000000219e-05, 9.332000000000784e-05, 9.327800000000219e-05, 9.343100000000493e-05, 9.331899999998061e-05, 9.329099999999535e-05, 9.333299999997324e-05, 9.330499999998798e-05, 9.343000000000545e-05, 9.341600000001282e-05, 9.344399999999808e-05, 9.333299999997324e-05, 9.348599999997598e-05, 9.334700000002139e-05, 9.344399999999808e-05, 9.338899999999928e-05, 9.331900000003612e-05, 9.327799999997444e-05, 9.340299999999191e-05, 9.341699999998454e-05]</msg>
<status status="PASS" starttime="20201030 18:26:53.309" endtime="20201030 18:26:53.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.305" endtime="20201030 18:26:53.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:53.315" endtime="20201030 18:26:53.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.314" endtime="20201030 18:26:53.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.313" endtime="20201030 18:26:53.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.602" endtime="20201030 18:26:53.336"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:52.533" endtime="20201030 18:26:53.336" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:53.343" endtime="20201030 18:26:53.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.342" endtime="20201030 18:26:53.363"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.376" endtime="20201030 18:26:53.403"></status>
</kw>
<msg timestamp="20201030 18:26:53.405" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.375" endtime="20201030 18:26:53.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.408" endtime="20201030 18:26:53.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.427" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:53.419" endtime="20201030 18:26:53.428"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:53.372" endtime="20201030 18:26:53.431"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:53.370" endtime="20201030 18:26:53.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.368" endtime="20201030 18:26:53.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:53.442" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:53.441" endtime="20201030 18:26:53.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.439" endtime="20201030 18:26:53.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.368" endtime="20201030 18:26:53.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.367" endtime="20201030 18:26:53.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.444" endtime="20201030 18:26:53.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.366" endtime="20201030 18:26:53.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.364" endtime="20201030 18:26:53.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.341" endtime="20201030 18:26:53.447"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.456" endtime="20201030 18:26:53.481"></status>
</kw>
<msg timestamp="20201030 18:26:53.482" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.455" endtime="20201030 18:26:53.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.485" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.483" endtime="20201030 18:26:53.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.486" endtime="20201030 18:26:53.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.452" endtime="20201030 18:26:53.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.450" endtime="20201030 18:26:53.488"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.490" endtime="20201030 18:26:53.492"></status>
</kw>
<msg timestamp="20201030 18:26:53.493" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:26:53.489" endtime="20201030 18:26:53.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.497" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:26:53.496" endtime="20201030 18:26:53.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.499" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:26:53.498" endtime="20201030 18:26:53.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.493" endtime="20201030 18:26:53.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.505" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:26:53.503" endtime="20201030 18:26:53.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.507" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:26:53.506" endtime="20201030 18:26:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.501" endtime="20201030 18:26:53.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.515" endtime="20201030 18:26:53.813"></status>
</kw>
<msg timestamp="20201030 18:26:53.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108329181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108331181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:53.513" endtime="20201030 18:26:53.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108329181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108331181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:53.817" endtime="20201030 18:26:53.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.826" endtime="20201030 18:26:53.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.510" endtime="20201030 18:26:53.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.508" endtime="20201030 18:26:53.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:53.832" level="INFO">${RESULT} = [{'diff': 2.000000000002e-06}, {'diff': 2.000000000002e-06}, {'diff': 1.9440000000037205e-06}, {'diff': 1.9579999999963515e-06}, {'diff': 2.013999999994631e-06}, {'diff': 2.000000000002e-06}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:26:53.829" endtime="20201030 18:26:53.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:53.837" level="INFO">${OVERHEAD} = {'diff': [2.000000000002e-06, 2.000000000002e-06, 1.9440000000037205e-06, 1.9579999999963515e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.000000000002e-06, 2.000000000002e-...</msg>
<status status="PASS" starttime="20201030 18:26:53.833" endtime="20201030 18:26:53.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.841" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:26:53.840" endtime="20201030 18:26:53.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.844" level="INFO">VALUE: [2.000000000002e-06, 2.000000000002e-06, 1.9440000000037205e-06, 1.9579999999963515e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.9999999999881224e-06, 1.986000000009369e-06, 1.973000000002334e-06, 1.9309999999966854e-06, 1.9859999999954914e-06, 2.05600000000028e-06, 1.986000000009369e-06, 1.986999999994965e-06, 2.000000000002e-06, 2.000000000002e-06, 1.9999999999881224e-06, 1.9859999999954914e-06, 2.000000000002e-06, 1.9720000000028604e-06, 2.014000000008509e-06, 2.000000000002e-06, 2.014000000008509e-06, 2.02800000000114e-06, 2.014000000008509e-06, 1.986000000009369e-06, 1.986999999994965e-06, 2.041000000008175e-06, 2.013999999994631e-06, 2.000000000002e-06, 1.9859999999954914e-06, 1.986000000009369e-06, 1.986000000009369e-06, 1.9719999999889826e-06, 2.000000000002e-06, 2.000000000002e-06, 2.000000000002e-06, 1.986000000009369e-06, 2.000000000002e-06, 1.9859999999954914e-06, 2.02800000000114e-06, 1.9720000000028604e-06, 2.014000000008509e-06, 1.9579999999963515e-06, 2.000000000002e-06, 1.9859999999954914e-06]</msg>
<status status="PASS" starttime="20201030 18:26:53.842" endtime="20201030 18:26:53.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.838" endtime="20201030 18:26:53.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:53.848" endtime="20201030 18:26:53.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.847" endtime="20201030 18:26:53.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.846" endtime="20201030 18:26:53.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.448" endtime="20201030 18:26:53.869"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:53.338" endtime="20201030 18:26:53.869" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:53.877" endtime="20201030 18:26:53.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.875" endtime="20201030 18:26:53.897"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.911" endtime="20201030 18:26:53.927"></status>
</kw>
<msg timestamp="20201030 18:26:53.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.909" endtime="20201030 18:26:53.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.928" endtime="20201030 18:26:53.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.933" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:53.931" endtime="20201030 18:26:53.933"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:53.907" endtime="20201030 18:26:53.934"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:53.904" endtime="20201030 18:26:53.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.903" endtime="20201030 18:26:53.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:53.938" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:53.938" endtime="20201030 18:26:53.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.936" endtime="20201030 18:26:53.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.902" endtime="20201030 18:26:53.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.902" endtime="20201030 18:26:53.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.940" endtime="20201030 18:26:53.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.899" endtime="20201030 18:26:53.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.898" endtime="20201030 18:26:53.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.874" endtime="20201030 18:26:53.943"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.952" endtime="20201030 18:26:54.053"></status>
</kw>
<msg timestamp="20201030 18:26:54.054" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.950" endtime="20201030 18:26:54.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.059" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.057" endtime="20201030 18:26:54.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.060" endtime="20201030 18:26:54.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.947" endtime="20201030 18:26:54.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.945" endtime="20201030 18:26:54.063"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.065" endtime="20201030 18:26:54.067"></status>
</kw>
<msg timestamp="20201030 18:26:54.067" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:26:54.064" endtime="20201030 18:26:54.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.075" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:26:54.070" endtime="20201030 18:26:54.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.077" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:26:54.076" endtime="20201030 18:26:54.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.068" endtime="20201030 18:26:54.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.082" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:26:54.081" endtime="20201030 18:26:54.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.084" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:26:54.083" endtime="20201030 18:26:54.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.079" endtime="20201030 18:26:54.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.091" endtime="20201030 18:26:54.386"></status>
</kw>
<msg timestamp="20201030 18:26:54.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068732014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068744208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:54.089" endtime="20201030 18:26:54.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068732014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068744208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:54.390" endtime="20201030 18:26:54.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.398" endtime="20201030 18:26:54.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.087" endtime="20201030 18:26:54.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.085" endtime="20201030 18:26:54.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:54.405" level="INFO">${RESULT} = [{'diff': 1.2194000000007033e-05}, {'diff': 1.2180000000000524e-05}, {'diff': 1.2153000000000858e-05}, {'diff': 1.2166999999993489e-05}, {'diff': 1.2195000000006506e-05}, {'diff': 1.2167000000007366e-...</msg>
<status status="PASS" starttime="20201030 18:26:54.402" endtime="20201030 18:26:54.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:54.409" level="INFO">${OVERHEAD} = {'diff': [1.2194000000007033e-05, 1.2180000000000524e-05, 1.2153000000000858e-05, 1.2166999999993489e-05, 1.2195000000006506e-05, 1.2167000000007366e-05, 1.2166999999993489e-05, 1.2152000000001384e-05...</msg>
<status status="PASS" starttime="20201030 18:26:54.406" endtime="20201030 18:26:54.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.415" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:26:54.414" endtime="20201030 18:26:54.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.418" level="INFO">VALUE: [1.2194000000007033e-05, 1.2180000000000524e-05, 1.2153000000000858e-05, 1.2166999999993489e-05, 1.2195000000006506e-05, 1.2167000000007366e-05, 1.2166999999993489e-05, 1.2152000000001384e-05, 1.2125000000001718e-05, 1.2222000000006172e-05, 1.2165999999994015e-05, 1.2153000000000858e-05, 1.2166999999993489e-05, 1.2152000000001384e-05, 1.2166000000007893e-05, 1.2166999999993489e-05, 1.2165999999994015e-05, 1.2250000000005312e-05, 1.2165999999994015e-05, 1.2166999999993489e-05, 1.2153000000000858e-05, 1.2167000000007366e-05, 1.2166999999993489e-05, 1.2152000000001384e-05, 1.2180999999999997e-05, 1.2166999999993489e-05, 1.2167000000007366e-05, 1.2166999999993489e-05, 1.2167000000007366e-05, 1.2193999999993155e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2180000000000524e-05, 1.2165999999994015e-05, 1.2110999999995209e-05, 1.2165999999994015e-05, 1.2153000000000858e-05, 1.2151999999987506e-05, 1.2193999999993155e-05, 1.2180999999999997e-05, 1.2208000000013541e-05, 1.2193999999993155e-05, 1.2167000000007366e-05, 1.2152000000015262e-05, 1.2180000000000524e-05, 1.2138999999994349e-05, 1.2167000000007366e-05, 1.2138999999994349e-05, 1.215299999998698e-05, 1.2166000000007893e-05]</msg>
<status status="PASS" starttime="20201030 18:26:54.416" endtime="20201030 18:26:54.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.410" endtime="20201030 18:26:54.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:54.422" endtime="20201030 18:26:54.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.420" endtime="20201030 18:26:54.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.419" endtime="20201030 18:26:54.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.944" endtime="20201030 18:26:54.443"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:53.871" endtime="20201030 18:26:54.443" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:54.450" endtime="20201030 18:26:54.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.448" endtime="20201030 18:26:54.470"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.483" endtime="20201030 18:26:54.500"></status>
</kw>
<msg timestamp="20201030 18:26:54.501" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.481" endtime="20201030 18:26:54.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.502" endtime="20201030 18:26:54.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.506" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:54.504" endtime="20201030 18:26:54.507"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:54.479" endtime="20201030 18:26:54.507"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:54.476" endtime="20201030 18:26:54.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.475" endtime="20201030 18:26:54.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:54.512" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:54.511" endtime="20201030 18:26:54.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.509" endtime="20201030 18:26:54.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.474" endtime="20201030 18:26:54.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.474" endtime="20201030 18:26:54.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.514" endtime="20201030 18:26:54.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.472" endtime="20201030 18:26:54.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.471" endtime="20201030 18:26:54.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.447" endtime="20201030 18:26:54.517"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.526" endtime="20201030 18:26:54.817"></status>
</kw>
<msg timestamp="20201030 18:26:54.817" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.524" endtime="20201030 18:26:54.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.820" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.818" endtime="20201030 18:26:54.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.821" endtime="20201030 18:26:54.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.521" endtime="20201030 18:26:54.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.519" endtime="20201030 18:26:54.823"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.825" endtime="20201030 18:26:54.827"></status>
</kw>
<msg timestamp="20201030 18:26:54.827" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:26:54.824" endtime="20201030 18:26:54.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.831" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:26:54.830" endtime="20201030 18:26:54.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.833" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:26:54.832" endtime="20201030 18:26:54.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.828" endtime="20201030 18:26:54.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.838" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:26:54.837" endtime="20201030 18:26:54.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.840" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:26:54.839" endtime="20201030 18:26:54.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.835" endtime="20201030 18:26:54.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.847" endtime="20201030 18:26:55.141"></status>
</kw>
<msg timestamp="20201030 18:26:55.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071961111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071983736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:54.846" endtime="20201030 18:26:55.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071961111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071983736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:55.145" endtime="20201030 18:26:55.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.154" endtime="20201030 18:26:55.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.843" endtime="20201030 18:26:55.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.842" endtime="20201030 18:26:55.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:55.169" level="INFO">${RESULT} = [{'diff': 2.262500000001222e-05}, {'diff': 2.2582999999992692e-05}, {'diff': 2.2542000000000395e-05}, {'diff': 2.2542000000000395e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.254100000000092e-05},...</msg>
<status status="PASS" starttime="20201030 18:26:55.162" endtime="20201030 18:26:55.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:55.179" level="INFO">${OVERHEAD} = {'diff': [2.262500000001222e-05, 2.2582999999992692e-05, 2.2542000000000395e-05, 2.2542000000000395e-05, 2.25969999999992e-05, 2.254100000000092e-05, 2.255500000000743e-05, 2.2638999999990972e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:26:55.171" endtime="20201030 18:26:55.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.188" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:26:55.186" endtime="20201030 18:26:55.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.194" level="INFO">VALUE: [2.262500000001222e-05, 2.2582999999992692e-05, 2.2542000000000395e-05, 2.2542000000000395e-05, 2.25969999999992e-05, 2.254100000000092e-05, 2.255500000000743e-05, 2.2638999999990972e-05, 2.25969999999992e-05, 2.2584000000006044e-05, 2.2541999999986517e-05, 2.2541999999986517e-05, 2.2542000000014273e-05, 2.2556000000006904e-05, 2.2541999999986517e-05, 2.256900000000006e-05, 2.2556000000006904e-05, 2.2540999999987044e-05, 2.2556000000006904e-05, 2.256900000000006e-05, 2.2596999999985323e-05, 2.2541999999986517e-05, 2.2554999999979675e-05, 2.2638999999990972e-05, 2.2541999999986517e-05, 2.2527999999993886e-05, 2.249999999998087e-05, 2.256900000000006e-05, 2.2638999999990972e-05, 2.2569999999999535e-05, 2.256900000000006e-05, 2.259700000001308e-05, 2.255500000000743e-05, 2.2527999999993886e-05, 2.2583000000020448e-05, 2.259700000001308e-05, 2.252799999996613e-05, 2.2653000000039114e-05, 2.2583999999992166e-05, 2.2471999999995607e-05, 2.2554999999979675e-05, 2.2569999999999535e-05, 2.2526999999994413e-05, 2.2569000000027817e-05, 2.2555000000035186e-05, 2.254199999995876e-05, 2.2528000000021642e-05, 2.2542000000014273e-05, 2.2638999999990972e-05, 2.2583000000020448e-05]</msg>
<status status="PASS" starttime="20201030 18:26:55.191" endtime="20201030 18:26:55.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.181" endtime="20201030 18:26:55.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:55.203" endtime="20201030 18:26:55.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.200" endtime="20201030 18:26:55.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.198" endtime="20201030 18:26:55.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.517" endtime="20201030 18:26:55.227"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:54.445" endtime="20201030 18:26:55.228" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:55.242" endtime="20201030 18:26:55.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.239" endtime="20201030 18:26:55.263"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.276" endtime="20201030 18:26:55.300"></status>
</kw>
<msg timestamp="20201030 18:26:55.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:55.275" endtime="20201030 18:26:55.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:55.305" endtime="20201030 18:26:55.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.309" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:55.307" endtime="20201030 18:26:55.310"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:55.272" endtime="20201030 18:26:55.310"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:55.269" endtime="20201030 18:26:55.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.268" endtime="20201030 18:26:55.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:55.315" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:55.315" endtime="20201030 18:26:55.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.312" endtime="20201030 18:26:55.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.267" endtime="20201030 18:26:55.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.267" endtime="20201030 18:26:55.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.317" endtime="20201030 18:26:55.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.265" endtime="20201030 18:26:55.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.264" endtime="20201030 18:26:55.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.237" endtime="20201030 18:26:55.320"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.323" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:26:55.332" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:26:56.479" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:26:55.322" endtime="20201030 18:26:56.480"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.482" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:26:56.481" endtime="20201030 18:26:56.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.321" endtime="20201030 18:26:56.483"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.493" endtime="20201030 18:26:56.505"></status>
</kw>
<msg timestamp="20201030 18:26:56.506" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:56.491" endtime="20201030 18:26:56.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.508" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:56.507" endtime="20201030 18:26:56.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.509" endtime="20201030 18:26:56.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.488" endtime="20201030 18:26:56.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.486" endtime="20201030 18:26:56.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.518" endtime="20201030 18:26:56.829"></status>
</kw>
<msg timestamp="20201030 18:26:56.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.178881875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.178889014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 18:26:56.517" endtime="20201030 18:26:56.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.178881875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.178889014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 18:26:56.834" endtime="20201030 18:26:56.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.845" endtime="20201030 18:26:56.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.514" endtime="20201030 18:26:56.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.512" endtime="20201030 18:26:56.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:56.853" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 7.11100000017062e-06}, {'diff': 7.138999999822815e-06}, {'diff': 7.1390000000448595e-06}, {'diff': 7.0970000001224776e-06}, {'diff': 7.124999999996717e-06}, {'diff': 7.139000000...</msg>
<status status="PASS" starttime="20201030 18:26:56.849" endtime="20201030 18:26:56.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:56.858" level="INFO">${RESULT} = {'diff': [0, 7.11100000017062e-06, 7.138999999822815e-06, 7.1390000000448595e-06, 7.0970000001224776e-06, 7.124999999996717e-06, 7.1390000000448595e-06, 7.124999999996717e-06, 7.166999999919099e-06, 7...</msg>
<status status="PASS" starttime="20201030 18:26:56.854" endtime="20201030 18:26:56.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.863" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:56.862" endtime="20201030 18:26:56.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.866" level="INFO">VALUE: [0, 7.11100000017062e-06, 7.138999999822815e-06, 7.1390000000448595e-06, 7.0970000001224776e-06, 7.124999999996717e-06, 7.1390000000448595e-06, 7.124999999996717e-06, 7.166999999919099e-06, 7.042000000012649e-06, 7.124999999996717e-06, 7.180999999967241e-06, 7.1390000000448595e-06, 7.124999999996717e-06, 0.062441680999999916, 2.318999999806337e-06, 2.3049999999802395e-06, 2.30600000006298e-06, 2.347000000124666e-06, 2.3339999999372196e-06, 2.2920000000148377e-06, 2.3469999999026214e-06, 2.3469999999026214e-06, 2.347000000124666e-06, 2.3199999998890775e-06, 2.3190000000283817e-06, 2.318999999806337e-06, 2.347000000124666e-06, 2.333000000076524e-06, 2.320000000111122e-06, 2.3190000000283817e-06, 2.320000000111122e-06, 2.3190000000283817e-06, 2.3340000001592642e-06, 2.3190000000283817e-06, 2.333000000076524e-06, 2.30600000006298e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.3340000001592642e-06, 2.3190000000283817e-06, 2.264000000140598e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.333000000076524e-06, 2.3329999998544793e-06, 2.320000000111122e-06, 2.333000000076524e-06, 2.3609999999507636e-06, 2.3199999998890775e-06, 2.3190000000283817e-06, 2.3340000001592642e-06, 2.347000000124666e-06, 2.30600000006298e-06, 2.3190000000283817e-06, 2.30600000006298e-06, 2.3329999998544793e-06, 2.333000000076524e-06, 2.3199999998890775e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.3469999999026214e-06, 2.347000000124666e-06, 2.3049999999802395e-06]</msg>
<status status="PASS" starttime="20201030 18:26:56.864" endtime="20201030 18:26:56.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.859" endtime="20201030 18:26:56.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:56.870" endtime="20201030 18:26:56.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.869" endtime="20201030 18:26:56.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.868" endtime="20201030 18:26:56.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.485" endtime="20201030 18:26:56.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.484" endtime="20201030 18:26:56.891"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.900" endtime="20201030 18:26:56.911"></status>
</kw>
<msg timestamp="20201030 18:26:56.912" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:56.898" endtime="20201030 18:26:56.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.915" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:56.913" endtime="20201030 18:26:56.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.916" endtime="20201030 18:26:56.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.896" endtime="20201030 18:26:56.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.894" endtime="20201030 18:26:56.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.925" endtime="20201030 18:26:57.211"></status>
</kw>
<msg timestamp="20201030 18:26:57.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020632431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:56.923" endtime="20201030 18:26:57.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020632431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020649806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:57.216" endtime="20201030 18:26:57.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.224" endtime="20201030 18:26:57.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.921" endtime="20201030 18:26:57.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.919" endtime="20201030 18:26:57.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:57.231" level="INFO">${PHILIP_RES} = [{'diff': 1.737500000000003e-05}, {'diff': 1.7429999999998835e-05}, {'diff': 1.7429999999998835e-05}, {'diff': 1.7401999999999695e-05}, {'diff': 1.7416000000002735e-05}, {'diff': 1.741700000000221e-05...</msg>
<status status="PASS" starttime="20201030 18:26:57.228" endtime="20201030 18:26:57.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:57.236" level="INFO">${RESULT} = {'diff': [1.737500000000003e-05, 1.7429999999998835e-05, 1.7429999999998835e-05, 1.7401999999999695e-05, 1.7416000000002735e-05, 1.741700000000221e-05, 1.743100000000178e-05, 1.741699999999874e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:26:57.233" endtime="20201030 18:26:57.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.240" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:57.239" endtime="20201030 18:26:57.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.243" level="INFO">VALUE: [1.737500000000003e-05, 1.7429999999998835e-05, 1.7429999999998835e-05, 1.7401999999999695e-05, 1.7416000000002735e-05, 1.741700000000221e-05, 1.743100000000178e-05, 1.741699999999874e-05, 1.741699999999874e-05, 1.743099999999831e-05, 1.743099999999831e-05, 1.743099999999831e-05, 1.73889999999996e-05, 1.7415999999999265e-05, 1.7443999999998405e-05, 1.744500000000135e-05, 1.7458000000001445e-05, 1.7415999999999265e-05, 1.740299999999917e-05, 1.740299999999917e-05, 1.741699999999874e-05, 1.744500000000135e-05, 1.741699999999874e-05, 1.7457999999997975e-05, 1.741699999999874e-05, 1.7444000000001875e-05, 1.7513999999999724e-05, 1.744500000000135e-05, 1.7430000000002305e-05, 1.733299999999785e-05, 1.7415999999999265e-05, 1.7415999999999265e-05, 1.743099999999831e-05, 1.743099999999831e-05, 1.741699999999874e-05, 1.741699999999874e-05, 1.741699999999874e-05, 1.7458000000001445e-05, 1.7471999999997545e-05, 1.743099999999831e-05, 1.740299999999917e-05, 1.7415999999999265e-05, 1.7415999999999265e-05, 1.7415999999999265e-05, 1.7429999999998835e-05, 1.7443999999998405e-05, 1.7471999999997545e-05, 1.7458000000001445e-05, 1.743100000000178e-05, 1.743100000000178e-05]</msg>
<status status="PASS" starttime="20201030 18:26:57.242" endtime="20201030 18:26:57.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.237" endtime="20201030 18:26:57.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:57.249" endtime="20201030 18:26:57.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.247" endtime="20201030 18:26:57.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.246" endtime="20201030 18:26:57.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.892" endtime="20201030 18:26:57.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.892" endtime="20201030 18:26:57.270"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.278" endtime="20201030 18:26:57.293"></status>
</kw>
<msg timestamp="20201030 18:26:57.293" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:57.277" endtime="20201030 18:26:57.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.296" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:57.294" endtime="20201030 18:26:57.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.297" endtime="20201030 18:26:57.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.274" endtime="20201030 18:26:57.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.272" endtime="20201030 18:26:57.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.306" endtime="20201030 18:26:57.607"></status>
</kw>
<msg timestamp="20201030 18:26:57.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019263222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:57.305" endtime="20201030 18:26:57.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019263222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:57.611" endtime="20201030 18:26:57.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.619" endtime="20201030 18:26:57.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.302" endtime="20201030 18:26:57.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.300" endtime="20201030 18:26:57.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:57.626" level="INFO">${PHILIP_RES} = [{'diff': 2.6721999999999857e-05}, {'diff': 2.6777999999998137e-05}, {'diff': 2.6833000000000412e-05}, {'diff': 2.6833999999999886e-05}, {'diff': 2.6833000000000412e-05}, {'diff': 2.6792000000001176e-...</msg>
<status status="PASS" starttime="20201030 18:26:57.623" endtime="20201030 18:26:57.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:57.631" level="INFO">${RESULT} = {'diff': [2.6721999999999857e-05, 2.6777999999998137e-05, 2.6833000000000412e-05, 2.6833999999999886e-05, 2.6833000000000412e-05, 2.6792000000001176e-05, 2.6820000000000316e-05, 2.690299999999826e-05,...</msg>
<status status="PASS" starttime="20201030 18:26:57.627" endtime="20201030 18:26:57.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.635" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:57.634" endtime="20201030 18:26:57.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.638" level="INFO">VALUE: [2.6721999999999857e-05, 2.6777999999998137e-05, 2.6833000000000412e-05, 2.6833999999999886e-05, 2.6833000000000412e-05, 2.6792000000001176e-05, 2.6820000000000316e-05, 2.690299999999826e-05, 2.6806000000000746e-05, 2.6778000000001606e-05, 2.6804999999997803e-05, 2.6792000000001176e-05, 2.6778000000001606e-05, 2.6790999999998233e-05, 2.6776999999998663e-05, 2.6763000000002563e-05, 2.6819000000000842e-05, 2.6805000000001272e-05, 2.6778000000001606e-05, 2.6792000000001176e-05, 2.6847999999999456e-05, 2.6833000000000412e-05, 2.6778000000001606e-05, 2.6791999999997707e-05, 2.6819000000000842e-05, 2.6806000000000746e-05, 2.6777999999998137e-05, 2.6819999999996846e-05, 2.6874999999999122e-05, 2.6792000000001176e-05, 2.6763999999998567e-05, 2.6819000000000842e-05, 2.6820000000000316e-05, 2.6735999999999427e-05, 2.6777999999998137e-05, 2.6833000000000412e-05, 2.6820000000000316e-05, 2.6776999999998663e-05, 2.6749999999998997e-05, 2.6820000000000316e-05, 2.6763999999998567e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.6833000000000412e-05, 2.6792000000001176e-05, 2.6764000000002036e-05, 2.6819000000000842e-05, 2.6846999999999982e-05, 2.6776999999998663e-05, 2.6820000000000316e-05]</msg>
<status status="PASS" starttime="20201030 18:26:57.636" endtime="20201030 18:26:57.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.632" endtime="20201030 18:26:57.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:57.642" endtime="20201030 18:26:57.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.641" endtime="20201030 18:26:57.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.640" endtime="20201030 18:26:57.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.270" endtime="20201030 18:26:57.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.270" endtime="20201030 18:26:57.663"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.671" endtime="20201030 18:26:57.689"></status>
</kw>
<msg timestamp="20201030 18:26:57.690" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:57.670" endtime="20201030 18:26:57.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.692" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:57.691" endtime="20201030 18:26:57.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.693" endtime="20201030 18:26:57.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.667" endtime="20201030 18:26:57.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.665" endtime="20201030 18:26:57.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.702" endtime="20201030 18:26:57.994"></status>
</kw>
<msg timestamp="20201030 18:26:57.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:57.700" endtime="20201030 18:26:57.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022562319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:57.998" endtime="20201030 18:26:58.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.007" endtime="20201030 18:26:58.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.698" endtime="20201030 18:26:58.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.696" endtime="20201030 18:26:58.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:58.015" level="INFO">${PHILIP_RES} = [{'diff': 3.6888999999998284e-05}, {'diff': 3.701400000000188e-05}, {'diff': 3.699999999999884e-05}, {'diff': 3.695800000000013e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.6902999999997854e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:26:58.011" endtime="20201030 18:26:58.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:58.019" level="INFO">${RESULT} = {'diff': [3.6888999999998284e-05, 3.701400000000188e-05, 3.699999999999884e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.6902999999997854e-05, 3.698600000000274e-05, 3.695800000000013e-05, 3.705...</msg>
<status status="PASS" starttime="20201030 18:26:58.016" endtime="20201030 18:26:58.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.023" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:58.022" endtime="20201030 18:26:58.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.026" level="INFO">VALUE: [3.6888999999998284e-05, 3.701400000000188e-05, 3.699999999999884e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.6902999999997854e-05, 3.698600000000274e-05, 3.695800000000013e-05, 3.705600000000059e-05, 3.7040999999998075e-05, 3.698700000000221e-05, 3.694500000000003e-05, 3.701399999999841e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.691600000000142e-05, 3.697299999999917e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.6917000000000894e-05, 3.698599999999927e-05, 3.701399999999841e-05, 3.701399999999841e-05, 3.700000000000231e-05, 3.699999999999884e-05, 3.69719999999997e-05, 3.698599999999927e-05, 3.697299999999917e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.698599999999927e-05, 3.704200000000102e-05, 3.704200000000102e-05, 3.698599999999927e-05, 3.6888999999998284e-05, 3.702800000000145e-05, 3.702799999999798e-05, 3.697200000000317e-05, 3.698600000000274e-05, 3.698600000000274e-05, 3.698600000000274e-05, 3.700000000000231e-05, 3.695800000000013e-05, 3.698599999999927e-05, 3.7041000000001545e-05, 3.698599999999927e-05, 3.698699999999874e-05, 3.698599999999927e-05]</msg>
<status status="PASS" starttime="20201030 18:26:58.024" endtime="20201030 18:26:58.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.020" endtime="20201030 18:26:58.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:58.030" endtime="20201030 18:26:58.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.029" endtime="20201030 18:26:58.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.028" endtime="20201030 18:26:58.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.664" endtime="20201030 18:26:58.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.663" endtime="20201030 18:26:58.051"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.060" endtime="20201030 18:26:58.076"></status>
</kw>
<msg timestamp="20201030 18:26:58.076" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.058" endtime="20201030 18:26:58.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.079" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.078" endtime="20201030 18:26:58.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.080" endtime="20201030 18:26:58.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.055" endtime="20201030 18:26:58.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.054" endtime="20201030 18:26:58.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.089" endtime="20201030 18:26:58.391"></status>
</kw>
<msg timestamp="20201030 18:26:58.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:58.087" endtime="20201030 18:26:58.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021394417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:58.396" endtime="20201030 18:26:58.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.404" endtime="20201030 18:26:58.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.085" endtime="20201030 18:26:58.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.083" endtime="20201030 18:26:58.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:58.411" level="INFO">${PHILIP_RES} = [{'diff': 4.806900000000128e-05}, {'diff': 4.805599999999771e-05}, {'diff': 4.809799999999989e-05}, {'diff': 4.811099999999999e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.808400000000032e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:26:58.407" endtime="20201030 18:26:58.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:58.415" level="INFO">${RESULT} = {'diff': [4.806900000000128e-05, 4.805599999999771e-05, 4.809799999999989e-05, 4.811099999999999e-05, 4.813899999999913e-05, 4.808400000000032e-05, 4.811099999999999e-05, 4.815200000000269e-05, 4.8097...</msg>
<status status="PASS" starttime="20201030 18:26:58.412" endtime="20201030 18:26:58.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.419" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:58.418" endtime="20201030 18:26:58.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.422" level="INFO">VALUE: [4.806900000000128e-05, 4.805599999999771e-05, 4.809799999999989e-05, 4.811099999999999e-05, 4.813899999999913e-05, 4.808400000000032e-05, 4.811099999999999e-05, 4.815200000000269e-05, 4.809799999999989e-05, 4.808300000000085e-05, 4.816599999999879e-05, 4.807000000000075e-05, 4.806900000000128e-05, 4.8167000000001736e-05, 4.804199999999814e-05, 4.806900000000128e-05, 4.806900000000128e-05, 4.8153000000002166e-05, 4.812499999999956e-05, 4.806899999999781e-05, 4.812499999999956e-05, 4.811099999999999e-05, 4.808300000000085e-05, 4.808399999999685e-05, 4.811099999999999e-05, 4.808400000000032e-05, 4.807000000000075e-05, 4.817999999999836e-05, 4.812499999999956e-05, 4.808400000000032e-05, 4.808299999999738e-05, 4.813899999999913e-05, 4.809700000000042e-05, 4.808400000000032e-05, 4.811099999999999e-05, 4.813899999999913e-05, 4.819399999999793e-05, 4.805600000000118e-05, 4.812499999999956e-05, 4.819399999999793e-05, 4.806999999999728e-05, 4.808300000000085e-05, 4.81940000000014e-05, 4.808300000000085e-05, 4.809799999999989e-05, 4.813799999999965e-05, 4.808300000000085e-05, 4.81529999999987e-05, 4.812499999999956e-05, 4.809700000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:26:58.420" endtime="20201030 18:26:58.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.416" endtime="20201030 18:26:58.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:58.427" endtime="20201030 18:26:58.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.426" endtime="20201030 18:26:58.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.425" endtime="20201030 18:26:58.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.052" endtime="20201030 18:26:58.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.052" endtime="20201030 18:26:58.448"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.456" endtime="20201030 18:26:58.473"></status>
</kw>
<msg timestamp="20201030 18:26:58.473" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.455" endtime="20201030 18:26:58.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.476" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.474" endtime="20201030 18:26:58.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.477" endtime="20201030 18:26:58.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.452" endtime="20201030 18:26:58.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.450" endtime="20201030 18:26:58.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.486" endtime="20201030 18:26:58.773"></status>
</kw>
<msg timestamp="20201030 18:26:58.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:58.484" endtime="20201030 18:26:58.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021483333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:58.777" endtime="20201030 18:26:58.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.786" endtime="20201030 18:26:58.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.482" endtime="20201030 18:26:58.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.480" endtime="20201030 18:26:58.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:58.792" level="INFO">${PHILIP_RES} = [{'diff': 6.009700000000201e-05}, {'diff': 6.0013999999997125e-05}, {'diff': 6.0152000000000816e-05}, {'diff': 6.012500000000115e-05}, {'diff': 6.0028000000000165e-05}, {'diff': 6.013899999999725e-05}...</msg>
<status status="PASS" starttime="20201030 18:26:58.789" endtime="20201030 18:26:58.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:58.800" level="INFO">${RESULT} = {'diff': [6.009700000000201e-05, 6.0013999999997125e-05, 6.0152000000000816e-05, 6.012500000000115e-05, 6.0028000000000165e-05, 6.013899999999725e-05, 6.0083999999998444e-05, 6.011100000000158e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:26:58.793" endtime="20201030 18:26:58.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.804" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:58.803" endtime="20201030 18:26:58.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.806" level="INFO">VALUE: [6.009700000000201e-05, 6.0013999999997125e-05, 6.0152000000000816e-05, 6.012500000000115e-05, 6.0028000000000165e-05, 6.013899999999725e-05, 6.0083999999998444e-05, 6.011100000000158e-05, 6.0014000000000595e-05, 6.012500000000115e-05, 6.0069999999998874e-05, 6.008299999999897e-05, 6.009700000000201e-05, 6.0041999999999734e-05, 6.013900000000072e-05, 6.0028000000000165e-05, 6.012499999999768e-05, 6.0041999999999734e-05, 6.008300000000244e-05, 6.004100000000026e-05, 6.0042000000003204e-05, 6.0028000000000165e-05, 6.0041999999999734e-05, 6.009700000000201e-05, 6.0014000000000595e-05, 6.012500000000115e-05, 6.0028000000000165e-05, 6.0193999999999526e-05, 6.004100000000026e-05, 6.011099999999811e-05, 6.008300000000244e-05, 6.008299999999897e-05, 6.009699999999854e-05, 6.0041999999999734e-05, 6.016699999999986e-05, 6.005499999999983e-05, 6.005499999999983e-05, 6.009699999999854e-05, 6.005499999999983e-05, 6.012500000000115e-05, 6.0028000000000165e-05, 6.013899999999725e-05, 6.015300000000029e-05, 6.0083999999998444e-05, 6.0069999999998874e-05, 6.012500000000115e-05, 6.0014000000000595e-05, 6.012500000000115e-05, 6.012500000000115e-05, 6.008300000000244e-05]</msg>
<status status="PASS" starttime="20201030 18:26:58.805" endtime="20201030 18:26:58.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.800" endtime="20201030 18:26:58.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:58.811" endtime="20201030 18:26:58.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.809" endtime="20201030 18:26:58.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.808" endtime="20201030 18:26:58.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.449" endtime="20201030 18:26:58.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.448" endtime="20201030 18:26:58.832"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.842" endtime="20201030 18:26:58.860"></status>
</kw>
<msg timestamp="20201030 18:26:58.860" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.840" endtime="20201030 18:26:58.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.863" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.861" endtime="20201030 18:26:58.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.864" endtime="20201030 18:26:58.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.837" endtime="20201030 18:26:58.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.835" endtime="20201030 18:26:58.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.874" endtime="20201030 18:26:59.212"></status>
</kw>
<msg timestamp="20201030 18:26:59.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:58.872" endtime="20201030 18:26:59.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024555486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024628403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.216" endtime="20201030 18:26:59.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.225" endtime="20201030 18:26:59.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.869" endtime="20201030 18:26:59.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.867" endtime="20201030 18:26:59.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:59.232" level="INFO">${PHILIP_RES} = [{'diff': 7.291699999999873e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.295900000000091e-05}, {'diff': 7.291699999999873e-05}, {'diff': 7.301399999999972e-05}, {'diff': 7.29170000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:26:59.229" endtime="20201030 18:26:59.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:59.237" level="INFO">${RESULT} = {'diff': [7.291699999999873e-05, 7.300000000000015e-05, 7.295900000000091e-05, 7.291699999999873e-05, 7.301399999999972e-05, 7.29170000000022e-05, 7.286100000000045e-05, 7.295899999999744e-05, 7.29310...</msg>
<status status="PASS" starttime="20201030 18:26:59.233" endtime="20201030 18:26:59.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.241" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:59.240" endtime="20201030 18:26:59.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.244" level="INFO">VALUE: [7.291699999999873e-05, 7.300000000000015e-05, 7.295900000000091e-05, 7.291699999999873e-05, 7.301399999999972e-05, 7.29170000000022e-05, 7.286100000000045e-05, 7.295899999999744e-05, 7.293100000000177e-05, 7.299999999999668e-05, 7.290300000000263e-05, 7.300000000000015e-05, 7.288899999999959e-05, 7.302800000000276e-05, 7.291600000000273e-05, 7.298600000000058e-05, 7.298600000000058e-05, 7.288899999999959e-05, 7.300000000000015e-05, 7.300000000000015e-05, 7.290299999999916e-05, 7.298600000000058e-05, 7.288899999999959e-05, 7.298600000000058e-05, 7.288899999999959e-05, 7.291699999999873e-05, 7.3069000000002e-05, 7.297200000000101e-05, 7.290299999999916e-05, 7.300000000000015e-05, 7.297199999999754e-05, 7.304199999999886e-05, 7.287500000000002e-05, 7.300000000000015e-05, 7.287500000000002e-05, 7.292999999999883e-05, 7.298600000000058e-05, 7.297200000000101e-05, 7.292999999999883e-05, 7.287500000000002e-05, 7.298600000000058e-05, 7.298600000000058e-05, 7.286099999999698e-05, 7.292999999999883e-05, 7.297200000000101e-05, 7.300000000000015e-05, 7.288899999999959e-05, 7.297200000000101e-05, 7.293100000000177e-05, 7.297199999999754e-05]</msg>
<status status="PASS" starttime="20201030 18:26:59.242" endtime="20201030 18:26:59.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.237" endtime="20201030 18:26:59.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:59.248" endtime="20201030 18:26:59.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.247" endtime="20201030 18:26:59.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.246" endtime="20201030 18:26:59.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.833" endtime="20201030 18:26:59.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.832" endtime="20201030 18:26:59.269"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.278" endtime="20201030 18:26:59.292"></status>
</kw>
<msg timestamp="20201030 18:26:59.293" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.276" endtime="20201030 18:26:59.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.295" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.294" endtime="20201030 18:26:59.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.297" endtime="20201030 18:26:59.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.274" endtime="20201030 18:26:59.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.272" endtime="20201030 18:26:59.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.306" endtime="20201030 18:26:59.593"></status>
</kw>
<msg timestamp="20201030 18:26:59.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019238861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019325417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.305" endtime="20201030 18:26:59.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019238861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019325417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.597" endtime="20201030 18:26:59.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.606" endtime="20201030 18:26:59.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.302" endtime="20201030 18:26:59.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.300" endtime="20201030 18:26:59.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:26:59.613" level="INFO">${PHILIP_RES} = [{'diff': 8.655600000000152e-05}, {'diff': 8.656900000000162e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.669500000000122e-05}, {'diff': 8.659700000000076e-05}, {'diff': 8.665199999999956e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:26:59.609" endtime="20201030 18:26:59.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:59.617" level="INFO">${RESULT} = {'diff': [8.655600000000152e-05, 8.656900000000162e-05, 8.66249999999999e-05, 8.669500000000122e-05, 8.659700000000076e-05, 8.665199999999956e-05, 8.66249999999999e-05, 8.669500000000122e-05, 8.666599...</msg>
<status status="PASS" starttime="20201030 18:26:59.614" endtime="20201030 18:26:59.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.622" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:26:59.620" endtime="20201030 18:26:59.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.624" level="INFO">VALUE: [8.655600000000152e-05, 8.656900000000162e-05, 8.66249999999999e-05, 8.669500000000122e-05, 8.659700000000076e-05, 8.665199999999956e-05, 8.66249999999999e-05, 8.669500000000122e-05, 8.666599999999913e-05, 8.658300000000119e-05, 8.652799999999891e-05, 8.672199999999741e-05, 8.661100000000033e-05, 8.658399999999719e-05, 8.663899999999947e-05, 8.669499999999775e-05, 8.663899999999947e-05, 8.665299999999904e-05, 8.66669999999986e-05, 8.659699999999729e-05, 8.673600000000045e-05, 8.654100000000248e-05, 8.666700000000208e-05, 8.66249999999999e-05, 8.668099999999818e-05, 8.654099999999901e-05, 8.666599999999913e-05, 8.665299999999904e-05, 8.66249999999999e-05, 8.663899999999947e-05, 8.658300000000119e-05, 8.661099999999686e-05, 8.665299999999904e-05, 8.666700000000208e-05, 8.658299999999772e-05, 8.661100000000033e-05, 8.659799999999676e-05, 8.670800000000131e-05, 8.658300000000119e-05, 8.669499999999775e-05, 8.668099999999818e-05, 8.659699999999729e-05, 8.659700000000076e-05, 8.654200000000195e-05, 8.666700000000208e-05, 8.668099999999818e-05, 8.66249999999999e-05, 8.659699999999729e-05, 8.659800000000023e-05, 8.670800000000131e-05]</msg>
<status status="PASS" starttime="20201030 18:26:59.623" endtime="20201030 18:26:59.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.618" endtime="20201030 18:26:59.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:59.630" endtime="20201030 18:26:59.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.628" endtime="20201030 18:26:59.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.627" endtime="20201030 18:26:59.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.270" endtime="20201030 18:26:59.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.270" endtime="20201030 18:26:59.651"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.659" endtime="20201030 18:26:59.675"></status>
</kw>
<msg timestamp="20201030 18:26:59.675" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.658" endtime="20201030 18:26:59.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.679" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.678" endtime="20201030 18:26:59.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.681" endtime="20201030 18:26:59.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.655" endtime="20201030 18:26:59.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.653" endtime="20201030 18:26:59.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.692" endtime="20201030 18:26:59.994"></status>
</kw>
<msg timestamp="20201030 18:26:59.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019661097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.690" endtime="20201030 18:26:59.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019661097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.998" endtime="20201030 18:27:00.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.006" endtime="20201030 18:27:00.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.687" endtime="20201030 18:27:00.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.685" endtime="20201030 18:27:00.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:00.012" level="INFO">${PHILIP_RES} = [{'diff': 0.0001011939999999989}, {'diff': 0.00010133299999999859}, {'diff': 0.00010113900000000009}, {'diff': 0.00010126400000000021}, {'diff': 0.00010120800000000194}, {'diff': 0.0001011810000000022...</msg>
<status status="PASS" starttime="20201030 18:27:00.009" endtime="20201030 18:27:00.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:00.017" level="INFO">${RESULT} = {'diff': [0.0001011939999999989, 0.00010133299999999859, 0.00010113900000000009, 0.00010126400000000021, 0.00010120800000000194, 0.00010118100000000227, 0.00010116699999999923, 0.00010113900000000009,...</msg>
<status status="PASS" starttime="20201030 18:27:00.013" endtime="20201030 18:27:00.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.022" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:00.020" endtime="20201030 18:27:00.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.024" level="INFO">VALUE: [0.0001011939999999989, 0.00010133299999999859, 0.00010113900000000009, 0.00010126400000000021, 0.00010120800000000194, 0.00010118100000000227, 0.00010116699999999923, 0.00010113900000000009, 0.00010126400000000021, 0.0001011809999999988, 0.00010119500000000184, 0.00010120799999999847, 0.00010125000000000065, 0.00010116699999999923, 0.00010122199999999804, 0.0001011809999999988, 0.0001013480000000011, 0.00010123600000000108, 0.00010123600000000108, 0.00010133299999999859, 0.00010126299999999727, 0.00010129199999999935, 0.0001012220000000015, 0.00010124999999999718, 0.00010124999999999718, 0.00010122199999999804, 0.00010125000000000065, 0.00010126400000000021, 0.00010126399999999675, 0.00010127700000000031, 0.00010130499999999945, 0.00010127700000000031, 0.0001012220000000015, 0.00010130499999999945, 0.00010126400000000021, 0.00010123600000000108, 0.00010125000000000065, 0.00010126400000000021, 0.00010122199999999804, 0.0001012359999999976, 0.00010115199999999672, 0.00010126400000000021, 0.00010130599999999892, 0.00010126400000000021, 0.00010125000000000065, 0.00010123600000000108, 0.00010129199999999935, 0.00010120900000000141, 0.00010123600000000108, 0.00010125000000000065]</msg>
<status status="PASS" starttime="20201030 18:27:00.023" endtime="20201030 18:27:00.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.018" endtime="20201030 18:27:00.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:00.028" endtime="20201030 18:27:00.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.027" endtime="20201030 18:27:00.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.026" endtime="20201030 18:27:00.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.652" endtime="20201030 18:27:00.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.651" endtime="20201030 18:27:00.049"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.058" endtime="20201030 18:27:00.080"></status>
</kw>
<msg timestamp="20201030 18:27:00.081" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.056" endtime="20201030 18:27:00.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.083" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.082" endtime="20201030 18:27:00.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.084" endtime="20201030 18:27:00.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.053" endtime="20201030 18:27:00.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.051" endtime="20201030 18:27:00.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.093" endtime="20201030 18:27:00.379"></status>
</kw>
<msg timestamp="20201030 18:27:00.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:00.092" endtime="20201030 18:27:00.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:00.383" endtime="20201030 18:27:00.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.391" endtime="20201030 18:27:00.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.089" endtime="20201030 18:27:00.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.088" endtime="20201030 18:27:00.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:00.399" level="INFO">${PHILIP_RES} = [{'diff': 0.00011665200000000181}, {'diff': 0.00011656899999999693}, {'diff': 0.00011661100000000257}, {'diff': 0.00011666600000000138}, {'diff': 0.00011670800000000009}, {'diff': 0.000116624999999998...</msg>
<status status="PASS" starttime="20201030 18:27:00.396" endtime="20201030 18:27:00.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:00.403" level="INFO">${RESULT} = {'diff': [0.00011665200000000181, 0.00011656899999999693, 0.00011661100000000257, 0.00011666600000000138, 0.00011670800000000009, 0.00011662499999999867, 0.00011672200000000313, 0.00011670800000000009...</msg>
<status status="PASS" starttime="20201030 18:27:00.400" endtime="20201030 18:27:00.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.407" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:00.406" endtime="20201030 18:27:00.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.409" level="INFO">VALUE: [0.00011665200000000181, 0.00011656899999999693, 0.00011661100000000257, 0.00011666600000000138, 0.00011670800000000009, 0.00011662499999999867, 0.00011672200000000313, 0.00011670800000000009, 0.00011658299999999996, 0.00011668100000000042, 0.00011661100000000257, 0.0001167230000000026, 0.00011658299999999996, 0.00011666700000000085, 0.0001165690000000004, 0.00011670800000000009, 0.0001166109999999991, 0.00011673599999999923, 0.00011658299999999996, 0.00011662499999999867, 0.00011666700000000085, 0.00011666699999999738, 0.00011656999999999987, 0.00011659699999999953, 0.00011662500000000214, 0.00011663800000000224, 0.00011670899999999956, 0.00011655599999999683, 0.00011666700000000085, 0.00011666600000000138, 0.00011669400000000052, 0.00011662500000000214, 0.00011668100000000042, 0.00011667999999999748, 0.00011662500000000214, 0.00011663900000000171, 0.00011658399999999944, 0.00011669400000000052, 0.00011658299999999996, 0.00011663900000000171, 0.0001166109999999991, 0.00011659699999999953, 0.00011666600000000138, 0.00011663899999999824, 0.00011656999999999987, 0.00011663800000000224, 0.00011658299999999996, 0.0001165560000000003, 0.00011658399999999944, 0.00011672199999999966]</msg>
<status status="PASS" starttime="20201030 18:27:00.408" endtime="20201030 18:27:00.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.404" endtime="20201030 18:27:00.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:00.414" endtime="20201030 18:27:00.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.412" endtime="20201030 18:27:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.411" endtime="20201030 18:27:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.050" endtime="20201030 18:27:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.049" endtime="20201030 18:27:00.434"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.443" endtime="20201030 18:27:00.463"></status>
</kw>
<msg timestamp="20201030 18:27:00.463" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.442" endtime="20201030 18:27:00.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.466" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.464" endtime="20201030 18:27:00.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.467" endtime="20201030 18:27:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.439" endtime="20201030 18:27:00.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.437" endtime="20201030 18:27:00.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.476" endtime="20201030 18:27:00.762"></status>
</kw>
<msg timestamp="20201030 18:27:00.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:00.474" endtime="20201030 18:27:00.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:00.766" endtime="20201030 18:27:00.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.775" endtime="20201030 18:27:00.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.472" endtime="20201030 18:27:00.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.470" endtime="20201030 18:27:00.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:00.781" level="INFO">${PHILIP_RES} = [{'diff': 0.00013297199999999856}, {'diff': 0.00013295800000000246}, {'diff': 0.00013294500000000237}, {'diff': 0.0001329869999999976}, {'diff': 0.00013290200000000071}, {'diff': 0.0001330410000000004...</msg>
<status status="PASS" starttime="20201030 18:27:00.778" endtime="20201030 18:27:00.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:00.785" level="INFO">${RESULT} = {'diff': [0.00013297199999999856, 0.00013295800000000246, 0.00013294500000000237, 0.0001329869999999976, 0.00013290200000000071, 0.0001330410000000004, 0.0001329310000000028, 0.00013301400000000074, 0...</msg>
<status status="PASS" starttime="20201030 18:27:00.782" endtime="20201030 18:27:00.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.789" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:00.788" endtime="20201030 18:27:00.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.792" level="INFO">VALUE: [0.00013297199999999856, 0.00013295800000000246, 0.00013294500000000237, 0.0001329869999999976, 0.00013290200000000071, 0.0001330410000000004, 0.0001329310000000028, 0.00013301400000000074, 0.00013305599999999945, 0.0001329860000000016, 0.00013301400000000074, 0.00013295800000000246, 0.00013294399999999942, 0.00013301400000000074, 0.000132957999999999, 0.00013297299999999804, 0.00013292999999999985, 0.0001329999999999977, 0.00013294399999999942, 0.00013306999999999902, 0.00013297200000000203, 0.0001329310000000028, 0.00013291699999999976, 0.00013301399999999727, 0.0001329999999999977, 0.0001330280000000003, 0.0001329030000000002, 0.0001329999999999977, 0.00013287500000000105, 0.00013301400000000074, 0.0001329860000000016, 0.00013292999999999985, 0.00013305599999999945, 0.000132957999999999, 0.00013298599999999813, 0.00013304199999999988, 0.0001330280000000003, 0.0001330280000000003, 0.0001330969999999987, 0.0001329030000000002, 0.00013304199999999988, 0.0001330280000000003, 0.00013295800000000246, 0.00013301400000000074, 0.00013293099999999933, 0.00013305599999999945, 0.0001330969999999987, 0.00013291600000000028, 0.00013304199999999988, 0.0001329030000000002]</msg>
<status status="PASS" starttime="20201030 18:27:00.790" endtime="20201030 18:27:00.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.786" endtime="20201030 18:27:00.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:00.797" endtime="20201030 18:27:00.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.795" endtime="20201030 18:27:00.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.794" endtime="20201030 18:27:00.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.436" endtime="20201030 18:27:00.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.435" endtime="20201030 18:27:00.818"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.831" endtime="20201030 18:27:00.855"></status>
</kw>
<msg timestamp="20201030 18:27:00.855" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.829" endtime="20201030 18:27:00.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.858" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.856" endtime="20201030 18:27:00.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.859" endtime="20201030 18:27:00.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.825" endtime="20201030 18:27:00.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.821" endtime="20201030 18:27:00.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.869" endtime="20201030 18:27:01.155"></status>
</kw>
<msg timestamp="20201030 18:27:01.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027919931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028070167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:00.867" endtime="20201030 18:27:01.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027919931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028070167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.159" endtime="20201030 18:27:01.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.167" endtime="20201030 18:27:01.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.865" endtime="20201030 18:27:01.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.863" endtime="20201030 18:27:01.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:01.173" level="INFO">${PHILIP_RES} = [{'diff': 0.0001502360000000015}, {'diff': 0.00015027800000000022}, {'diff': 0.00015027799999999675}, {'diff': 0.0001502629999999977}, {'diff': 0.00015025000000000108}, {'diff': 0.0001502910000000003}...</msg>
<status status="PASS" starttime="20201030 18:27:01.170" endtime="20201030 18:27:01.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:01.178" level="INFO">${RESULT} = {'diff': [0.0001502360000000015, 0.00015027800000000022, 0.00015027799999999675, 0.0001502629999999977, 0.00015025000000000108, 0.0001502910000000003, 0.00015022200000000194, 0.00015022199999999847, 0...</msg>
<status status="PASS" starttime="20201030 18:27:01.174" endtime="20201030 18:27:01.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.182" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:01.181" endtime="20201030 18:27:01.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.185" level="INFO">VALUE: [0.0001502360000000015, 0.00015027800000000022, 0.00015027799999999675, 0.0001502629999999977, 0.00015025000000000108, 0.0001502910000000003, 0.00015022200000000194, 0.00015022199999999847, 0.0001502360000000015, 0.00015026400000000065, 0.00015026400000000065, 0.00015022200000000194, 0.0001502499999999976, 0.0001502360000000015, 0.00015022199999999847, 0.00015019399999999933, 0.00015030600000000283, 0.0001502910000000003, 0.00015023599999999804, 0.00015025000000000108, 0.0001502079999999989, 0.00015025000000000455, 0.0001503750000000012, 0.0001501949999999988, 0.00015023600000000498, 0.0001502770000000042, 0.0001501949999999988, 0.00015029200000000326, 0.00015022299999999794, 0.00015023599999999804, 0.00015036100000000163, 0.00015017999999999976, 0.00015022299999999794, 0.00015027699999999727, 0.0001502499999999976, 0.00015023599999999804, 0.00015023600000000498, 0.00015023700000000445, 0.0001502499999999976, 0.00015023599999999804, 0.00015022199999999847, 0.00015018099999999923, 0.00015013899999999358, 0.00015017999999999976, 0.00015026399999999718, 0.0001502499999999976, 0.00015029199999999632, 0.00015022199999999847, 0.00015013800000000105, 0.00015020800000000584]</msg>
<status status="PASS" starttime="20201030 18:27:01.183" endtime="20201030 18:27:01.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.179" endtime="20201030 18:27:01.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.190" endtime="20201030 18:27:01.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.188" endtime="20201030 18:27:01.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.187" endtime="20201030 18:27:01.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.819" endtime="20201030 18:27:01.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.818" endtime="20201030 18:27:01.210"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.218" endtime="20201030 18:27:01.241"></status>
</kw>
<msg timestamp="20201030 18:27:01.242" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.217" endtime="20201030 18:27:01.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.244" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.243" endtime="20201030 18:27:01.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.245" endtime="20201030 18:27:01.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.214" endtime="20201030 18:27:01.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.213" endtime="20201030 18:27:01.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.254" endtime="20201030 18:27:01.540"></status>
</kw>
<msg timestamp="20201030 18:27:01.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.253" endtime="20201030 18:27:01.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022528694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.544" endtime="20201030 18:27:01.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.552" endtime="20201030 18:27:01.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.250" endtime="20201030 18:27:01.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.248" endtime="20201030 18:27:01.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:01.560" level="INFO">${PHILIP_RES} = [{'diff': 0.00016824999999999826}, {'diff': 0.00016819500000000293}, {'diff': 0.0001682770000000014}, {'diff': 0.000168306}, {'diff': 0.00016829200000000044}, {'diff': 0.00016831999999999958}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:27:01.557" endtime="20201030 18:27:01.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:01.564" level="INFO">${RESULT} = {'diff': [0.00016824999999999826, 0.00016819500000000293, 0.0001682770000000014, 0.000168306, 0.00016829200000000044, 0.00016831999999999958, 0.0001682640000000013, 0.00016823600000000216, 0.000168277...</msg>
<status status="PASS" starttime="20201030 18:27:01.561" endtime="20201030 18:27:01.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.568" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:01.567" endtime="20201030 18:27:01.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.570" level="INFO">VALUE: [0.00016824999999999826, 0.00016819500000000293, 0.0001682770000000014, 0.000168306, 0.00016829200000000044, 0.00016831999999999958, 0.0001682640000000013, 0.00016823600000000216, 0.0001682779999999974, 0.0001682770000000014, 0.0001682640000000013, 0.00016824999999999826, 0.0001682640000000013, 0.00016829200000000044, 0.00016824999999999826, 0.00016825000000000173, 0.00016829100000000097, 0.00016823600000000216, 0.0001682359999999987, 0.0001682220000000026, 0.0001682359999999987, 0.00016825000000000173, 0.00016824999999999826, 0.00016822199999999912, 0.00016818099999999989, 0.00016830499999999707, 0.00016829200000000044, 0.00016822199999999912, 0.0001682090000000025, 0.00016829100000000097, 0.0001682640000000013, 0.00016830500000000054, 0.00016834699999999925, 0.00016829200000000044, 0.00016823700000000164, 0.00016818099999999989, 0.00016827800000000087, 0.00016827699999999793, 0.00016826399999999783, 0.00016825000000000173, 0.00016816700000000032, 0.00016827800000000087, 0.00016829200000000044, 0.000168306, 0.0001682770000000014, 0.00016827699999999793, 0.00016833399999999915, 0.00016816699999999685, 0.00016823600000000216, 0.00016829200000000044]</msg>
<status status="PASS" starttime="20201030 18:27:01.569" endtime="20201030 18:27:01.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.565" endtime="20201030 18:27:01.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.575" endtime="20201030 18:27:01.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.574" endtime="20201030 18:27:01.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.573" endtime="20201030 18:27:01.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.211" endtime="20201030 18:27:01.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.211" endtime="20201030 18:27:01.596"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.604" endtime="20201030 18:27:01.628"></status>
</kw>
<msg timestamp="20201030 18:27:01.628" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.603" endtime="20201030 18:27:01.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.631" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.629" endtime="20201030 18:27:01.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.632" endtime="20201030 18:27:01.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.600" endtime="20201030 18:27:01.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.598" endtime="20201030 18:27:01.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.642" endtime="20201030 18:27:01.929"></status>
</kw>
<msg timestamp="20201030 18:27:01.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023534514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023721653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.640" endtime="20201030 18:27:01.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023534514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023721653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.933" endtime="20201030 18:27:01.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.941" endtime="20201030 18:27:01.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.637" endtime="20201030 18:27:01.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.635" endtime="20201030 18:27:01.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:01.947" level="INFO">${PHILIP_RES} = [{'diff': 0.00018713899999999936}, {'diff': 0.00018715199999999946}, {'diff': 0.00018716700000000197}, {'diff': 0.0001871669999999985}, {'diff': 0.00018724999999999992}, {'diff': 0.0001872089999999972...</msg>
<status status="PASS" starttime="20201030 18:27:01.944" endtime="20201030 18:27:01.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:01.952" level="INFO">${RESULT} = {'diff': [0.00018713899999999936, 0.00018715199999999946, 0.00018716700000000197, 0.0001871669999999985, 0.00018724999999999992, 0.0001872089999999972, 0.00018716700000000197, 0.00018715199999999946, ...</msg>
<status status="PASS" starttime="20201030 18:27:01.948" endtime="20201030 18:27:01.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.956" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:01.955" endtime="20201030 18:27:01.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.958" level="INFO">VALUE: [0.00018713899999999936, 0.00018715199999999946, 0.00018716700000000197, 0.0001871669999999985, 0.00018724999999999992, 0.0001872089999999972, 0.00018716700000000197, 0.00018715199999999946, 0.00018718099999999807, 0.00018713899999999936, 0.00018720900000000068, 0.00018709700000000065, 0.00018718099999999807, 0.0001872080000000012, 0.00018723600000000035, 0.0001871799999999986, 0.00018723600000000035, 0.00018719400000000164, 0.00018709700000000065, 0.0001872080000000012, 0.00018719399999999817, 0.00018719400000000164, 0.00018718099999999807, 0.00018719499999999764, 0.00018720799999999774, 0.00018713899999999936, 0.00018709700000000065, 0.0001872080000000012, 0.0001872080000000012, 0.00018708400000000056, 0.00018718099999999807, 0.00018718099999999807, 0.00018704200000000185, 0.00018722200000000078, 0.00018722200000000078, 0.00018723600000000035, 0.00018720799999999774, 0.0001871809999999946, 0.0001872080000000012, 0.00018715299999999546, 0.00018709699999999718, 0.00018726399999999949, 0.00018723600000000035, 0.00018730499999999872, 0.00018723600000000035, 0.00018719400000000164, 0.00018718100000000154, 0.0001873059999999982, 0.0001871389999999959, 0.00018720900000000068]</msg>
<status status="PASS" starttime="20201030 18:27:01.957" endtime="20201030 18:27:01.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.952" endtime="20201030 18:27:01.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.965" endtime="20201030 18:27:01.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.964" endtime="20201030 18:27:01.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.963" endtime="20201030 18:27:01.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.597" endtime="20201030 18:27:01.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.596" endtime="20201030 18:27:01.986"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.995" endtime="20201030 18:27:02.016"></status>
</kw>
<msg timestamp="20201030 18:27:02.016" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.993" endtime="20201030 18:27:02.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.019" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.017" endtime="20201030 18:27:02.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.020" endtime="20201030 18:27:02.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.991" endtime="20201030 18:27:02.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.988" endtime="20201030 18:27:02.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.029" endtime="20201030 18:27:02.319"></status>
</kw>
<msg timestamp="20201030 18:27:02.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.028" endtime="20201030 18:27:02.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.323" endtime="20201030 18:27:02.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.331" endtime="20201030 18:27:02.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.025" endtime="20201030 18:27:02.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.023" endtime="20201030 18:27:02.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:02.338" level="INFO">${PHILIP_RES} = [{'diff': 0.00020702800000000146}, {'diff': 0.00020708300000000027}, {'diff': 0.00020709699999999984}, {'diff': 0.00020722199999999996}, {'diff': 0.0002071109999999994}, {'diff': 0.0002071109999999994...</msg>
<status status="PASS" starttime="20201030 18:27:02.335" endtime="20201030 18:27:02.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:02.345" level="INFO">${RESULT} = {'diff': [0.00020702800000000146, 0.00020708300000000027, 0.00020709699999999984, 0.00020722199999999996, 0.0002071109999999994, 0.0002071109999999994, 0.00020715300000000159, 0.00020709699999999984, ...</msg>
<status status="PASS" starttime="20201030 18:27:02.339" endtime="20201030 18:27:02.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.349" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:02.348" endtime="20201030 18:27:02.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.352" level="INFO">VALUE: [0.00020702800000000146, 0.00020708300000000027, 0.00020709699999999984, 0.00020722199999999996, 0.0002071109999999994, 0.0002071109999999994, 0.00020715300000000159, 0.00020709699999999984, 0.00020709699999999984, 0.00020718100000000073, 0.00020719499999999683, 0.00020716699999999769, 0.00020726400000000214, 0.00020715299999999812, 0.00020720899999999987, 0.00020736099999999966, 0.00020713899999999855, 0.00020713899999999855, 0.0002070979999999993, 0.00020719399999999735, 0.00020719399999999735, 0.00020715199999999864, 0.00020715300000000159, 0.00020717999999999778, 0.00020719400000000082, 0.00020712500000000245, 0.00020712499999999898, 0.00020713900000000202, 0.00020715199999999864, 0.00020706899999999723, 0.0002070690000000007, 0.00020709699999999984, 0.0002070690000000007, 0.00020705500000000113, 0.00020701399999999842, 0.0002070690000000007, 0.0002072080000000004, 0.00020708399999999974, 0.00020717999999999778, 0.0002071659999999982, 0.00020713900000000202, 0.0002071950000000003, 0.00020713900000000202, 0.00020719399999999735, 0.00020708300000000027, 0.00020716700000000116, 0.0002071950000000003, 0.00020716699999999769, 0.00020713800000000254, 0.00020719400000000082]</msg>
<status status="PASS" starttime="20201030 18:27:02.350" endtime="20201030 18:27:02.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.346" endtime="20201030 18:27:02.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:02.356" endtime="20201030 18:27:02.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.355" endtime="20201030 18:27:02.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.354" endtime="20201030 18:27:02.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.987" endtime="20201030 18:27:02.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.986" endtime="20201030 18:27:02.377"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.386" endtime="20201030 18:27:02.412"></status>
</kw>
<msg timestamp="20201030 18:27:02.412" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.384" endtime="20201030 18:27:02.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.415" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.413" endtime="20201030 18:27:02.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.416" endtime="20201030 18:27:02.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.381" endtime="20201030 18:27:02.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.379" endtime="20201030 18:27:02.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.425" endtime="20201030 18:27:02.710"></status>
</kw>
<msg timestamp="20201030 18:27:02.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020990722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.423" endtime="20201030 18:27:02.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020990722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021218431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.715" endtime="20201030 18:27:02.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.723" endtime="20201030 18:27:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.420" endtime="20201030 18:27:02.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.419" endtime="20201030 18:27:02.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:02.730" level="INFO">${PHILIP_RES} = [{'diff': 0.00022770899999999955}, {'diff': 0.00022790200000000205}, {'diff': 0.0002277780000000014}, {'diff': 0.0002278049999999976}, {'diff': 0.00022781900000000063}, {'diff': 0.00022780500000000106...</msg>
<status status="PASS" starttime="20201030 18:27:02.727" endtime="20201030 18:27:02.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:02.734" level="INFO">${RESULT} = {'diff': [0.00022770899999999955, 0.00022790200000000205, 0.0002277780000000014, 0.0002278049999999976, 0.00022781900000000063, 0.00022780500000000106, 0.0002277910000000015, 0.00022779200000000097, 0...</msg>
<status status="PASS" starttime="20201030 18:27:02.731" endtime="20201030 18:27:02.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.738" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:02.737" endtime="20201030 18:27:02.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.741" level="INFO">VALUE: [0.00022770899999999955, 0.00022790200000000205, 0.0002277780000000014, 0.0002278049999999976, 0.00022781900000000063, 0.00022780500000000106, 0.0002277910000000015, 0.00022779200000000097, 0.00022772199999999965, 0.0002277499999999988, 0.00022776399999999836, 0.0002278749999999989, 0.0002279170000000011, 0.00022780500000000106, 0.00022777799999999793, 0.00022775000000000226, 0.00022788900000000195, 0.00022784699999999977, 0.00022784699999999977, 0.0002278200000000001, 0.00022763799999999876, 0.00022775000000000226, 0.00022773599999999922, 0.00022786199999999882, 0.00022770899999999955, 0.0002276810000000004, 0.00022780500000000106, 0.00022788899999999848, 0.00022780600000000054, 0.0002277919999999975, 0.0002278200000000001, 0.00022788899999999848, 0.00022776400000000183, 0.00022786200000000228, 0.00022779200000000097, 0.0002278200000000001, 0.0002277780000000014, 0.0002277499999999988, 0.00022776300000000235, 0.00022779099999999802, 0.0002277780000000014, 0.00022776399999999836, 0.00022787500000000238, 0.0002277499999999988, 0.0002278339999999962, 0.00022782000000000358, 0.0002278049999999976, 0.0002277919999999975, 0.00022776399999999836, 0.00022786200000000228]</msg>
<status status="PASS" starttime="20201030 18:27:02.739" endtime="20201030 18:27:02.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.735" endtime="20201030 18:27:02.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:02.746" endtime="20201030 18:27:02.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.744" endtime="20201030 18:27:02.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.743" endtime="20201030 18:27:02.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.378" endtime="20201030 18:27:02.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.377" endtime="20201030 18:27:02.766"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.774" endtime="20201030 18:27:02.804"></status>
</kw>
<msg timestamp="20201030 18:27:02.804" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.773" endtime="20201030 18:27:02.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.807" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.805" endtime="20201030 18:27:02.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.808" endtime="20201030 18:27:02.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.770" endtime="20201030 18:27:02.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.769" endtime="20201030 18:27:02.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.816" endtime="20201030 18:27:03.103"></status>
</kw>
<msg timestamp="20201030 18:27:03.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018783194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019032444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.815" endtime="20201030 18:27:03.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018783194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019032444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.107" endtime="20201030 18:27:03.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.115" endtime="20201030 18:27:03.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.812" endtime="20201030 18:27:03.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.811" endtime="20201030 18:27:03.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:03.121" level="INFO">${PHILIP_RES} = [{'diff': 0.00024924999999999947}, {'diff': 0.00024924999999999947}, {'diff': 0.0002493200000000008}, {'diff': 0.00024938899999999917}, {'diff': 0.00024938900000000264}, {'diff': 0.0002493340000000003...</msg>
<status status="PASS" starttime="20201030 18:27:03.118" endtime="20201030 18:27:03.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:03.125" level="INFO">${RESULT} = {'diff': [0.00024924999999999947, 0.00024924999999999947, 0.0002493200000000008, 0.00024938899999999917, 0.00024938900000000264, 0.00024933400000000036, 0.000249458999999997, 0.0002493049999999983, 0....</msg>
<status status="PASS" starttime="20201030 18:27:03.122" endtime="20201030 18:27:03.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.129" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:03.128" endtime="20201030 18:27:03.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.132" level="INFO">VALUE: [0.00024924999999999947, 0.00024924999999999947, 0.0002493200000000008, 0.00024938899999999917, 0.00024938900000000264, 0.00024933400000000036, 0.000249458999999997, 0.0002493049999999983, 0.00024926399999999904, 0.000249361, 0.000249361, 0.00024922200000000033, 0.0002493749999999996, 0.00024931899999999785, 0.0002493200000000008, 0.000249361, 0.00024934700000000046, 0.00024922199999999686, 0.0002491809999999976, 0.00024931899999999785, 0.00024924999999999947, 0.0002493049999999983, 0.000249361, 0.0002492779999999986, 0.0002491809999999976, 0.00024920800000000076, 0.00024919500000000067, 0.0002492359999999999, 0.0002491810000000011, 0.0002493330000000009, 0.0002492780000000021, 0.0002492359999999999, 0.00024912499999999935, 0.0002492359999999999, 0.00024922200000000033, 0.0002491109999999998, 0.00024920900000000024, 0.00024922200000000033, 0.0002493190000000013, 0.0002492779999999986, 0.0002493200000000008, 0.0002493200000000008, 0.00024926399999999904, 0.00024934799999999993, 0.0002492229999999998, 0.0002493199999999973, 0.000249346999999997, 0.00024932000000000426, 0.0002492359999999999, 0.00024937500000000307]</msg>
<status status="PASS" starttime="20201030 18:27:03.130" endtime="20201030 18:27:03.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.126" endtime="20201030 18:27:03.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:03.140" endtime="20201030 18:27:03.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.138" endtime="20201030 18:27:03.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.136" endtime="20201030 18:27:03.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.767" endtime="20201030 18:27:03.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.767" endtime="20201030 18:27:03.161"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.169" endtime="20201030 18:27:03.195"></status>
</kw>
<msg timestamp="20201030 18:27:03.196" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.168" endtime="20201030 18:27:03.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.198" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.197" endtime="20201030 18:27:03.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.199" endtime="20201030 18:27:03.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.165" endtime="20201030 18:27:03.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.163" endtime="20201030 18:27:03.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.208" endtime="20201030 18:27:03.493"></status>
</kw>
<msg timestamp="20201030 18:27:03.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021226569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.207" endtime="20201030 18:27:03.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021226569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.497" endtime="20201030 18:27:03.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.506" endtime="20201030 18:27:03.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.204" endtime="20201030 18:27:03.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.202" endtime="20201030 18:27:03.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:03.512" level="INFO">${PHILIP_RES} = [{'diff': 0.000271707999999999}, {'diff': 0.0002717090000000019}, {'diff': 0.00027181899999999953}, {'diff': 0.00027166699999999974}, {'diff': 0.00027183300000000257}, {'diff': 0.00027162500000000103}...</msg>
<status status="PASS" starttime="20201030 18:27:03.509" endtime="20201030 18:27:03.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:03.517" level="INFO">${RESULT} = {'diff': [0.000271707999999999, 0.0002717090000000019, 0.00027181899999999953, 0.00027166699999999974, 0.00027183300000000257, 0.00027162500000000103, 0.000271707999999999, 0.0002717360000000016, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:03.513" endtime="20201030 18:27:03.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.521" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:03.520" endtime="20201030 18:27:03.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.524" level="INFO">VALUE: [0.000271707999999999, 0.0002717090000000019, 0.00027181899999999953, 0.00027166699999999974, 0.00027183300000000257, 0.00027162500000000103, 0.000271707999999999, 0.0002717360000000016, 0.0002717359999999981, 0.000271722000000002, 0.0002717910000000004, 0.00027176400000000073, 0.0002717499999999977, 0.00027175000000000116, 0.000271917, 0.0002717360000000016, 0.00027167999999999984, 0.00027179199999999987, 0.00027183400000000205, 0.00027180599999999944, 0.00027166699999999974, 0.0002718469999999987, 0.00027179199999999987, 0.00027176400000000073, 0.00027170800000000245, 0.00027180599999999944, 0.00027180499999999996, 0.00027175000000000116, 0.000271819999999999, 0.00027179199999999987, 0.00027175000000000116, 0.0002718329999999991, 0.00027176300000000125, 0.00027183300000000257, 0.0002717360000000016, 0.00027176400000000073, 0.00027176400000000073, 0.00027175000000000116, 0.00027179199999999987, 0.00027175000000000116, 0.00027162499999999756, 0.0002718469999999987, 0.00027180499999999996, 0.00027175000000000116, 0.00027176300000000125, 0.00027175000000000116, 0.00027180499999999996, 0.00027176400000000073, 0.00027179199999999987, 0.0002716940000000029]</msg>
<status status="PASS" starttime="20201030 18:27:03.522" endtime="20201030 18:27:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.518" endtime="20201030 18:27:03.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:03.528" endtime="20201030 18:27:03.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.527" endtime="20201030 18:27:03.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.526" endtime="20201030 18:27:03.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.162" endtime="20201030 18:27:03.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.161" endtime="20201030 18:27:03.549"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.557" endtime="20201030 18:27:03.583"></status>
</kw>
<msg timestamp="20201030 18:27:03.584" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.556" endtime="20201030 18:27:03.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.586" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.585" endtime="20201030 18:27:03.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.587" endtime="20201030 18:27:03.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.553" endtime="20201030 18:27:03.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.551" endtime="20201030 18:27:03.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.596" endtime="20201030 18:27:03.885"></status>
</kw>
<msg timestamp="20201030 18:27:03.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.595" endtime="20201030 18:27:03.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.889" endtime="20201030 18:27:03.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.897" endtime="20201030 18:27:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.592" endtime="20201030 18:27:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.590" endtime="20201030 18:27:03.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:03.905" level="INFO">${PHILIP_RES} = [{'diff': 0.00029506900000000197}, {'diff': 0.0002949859999999971}, {'diff': 0.00029498600000000055}, {'diff': 0.0002951110000000007}, {'diff': 0.0002950970000000011}, {'diff': 0.0002950000000000001},...</msg>
<status status="PASS" starttime="20201030 18:27:03.902" endtime="20201030 18:27:03.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:03.909" level="INFO">${RESULT} = {'diff': [0.00029506900000000197, 0.0002949859999999971, 0.00029498600000000055, 0.0002951110000000007, 0.0002950970000000011, 0.0002950000000000001, 0.00029502799999999926, 0.00029516699999999896, 0....</msg>
<status status="PASS" starttime="20201030 18:27:03.906" endtime="20201030 18:27:03.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.914" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:03.913" endtime="20201030 18:27:03.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.917" level="INFO">VALUE: [0.00029506900000000197, 0.0002949859999999971, 0.00029498600000000055, 0.0002951110000000007, 0.0002950970000000011, 0.0002950000000000001, 0.00029502799999999926, 0.00029516699999999896, 0.0002950970000000011, 0.00029497300000000046, 0.0002950000000000001, 0.0002950420000000023, 0.00029502799999999926, 0.0002950689999999985, 0.00029516699999999896, 0.00029508399999999754, 0.0002951110000000007, 0.00029508300000000154, 0.0002950970000000011, 0.00029504099999999936, 0.000294987, 0.00029498600000000055, 0.00029512500000000025, 0.00029512500000000025, 0.0002951519999999999, 0.00029512500000000025, 0.0002951119999999967, 0.00029493100000000175, 0.0002951389999999998, 0.0002951110000000007, 0.00029506999999999797, 0.0002950689999999985, 0.0002950000000000001, 0.00029508300000000154, 0.00029498600000000055, 0.00029509699999999764, 0.00029512500000000025, 0.00029501400000000316, 0.0002949309999999983, 0.00029499999999999665, 0.0002950970000000011, 0.00029506900000000197, 0.0002949730000000039, 0.0002950829999999946, 0.000295084000000001, 0.00029506900000000197, 0.00029508300000000154, 0.00029501400000000316, 0.0002950279999999958, 0.00029505600000000187]</msg>
<status status="PASS" starttime="20201030 18:27:03.915" endtime="20201030 18:27:03.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.910" endtime="20201030 18:27:03.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:03.922" endtime="20201030 18:27:03.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.920" endtime="20201030 18:27:03.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.919" endtime="20201030 18:27:03.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.550" endtime="20201030 18:27:03.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.549" endtime="20201030 18:27:03.942"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.950" endtime="20201030 18:27:03.984"></status>
</kw>
<msg timestamp="20201030 18:27:03.985" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.949" endtime="20201030 18:27:03.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.987" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.986" endtime="20201030 18:27:03.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.988" endtime="20201030 18:27:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.947" endtime="20201030 18:27:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.945" endtime="20201030 18:27:03.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.997" endtime="20201030 18:27:04.292"></status>
</kw>
<msg timestamp="20201030 18:27:04.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023642222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.996" endtime="20201030 18:27:04.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023642222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.302" endtime="20201030 18:27:04.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.320" endtime="20201030 18:27:04.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.993" endtime="20201030 18:27:04.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.991" endtime="20201030 18:27:04.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:04.333" level="INFO">${PHILIP_RES} = [{'diff': 0.0003190970000000008}, {'diff': 0.0003190980000000003}, {'diff': 0.00031922200000000095}, {'diff': 0.0003191669999999987}, {'diff': 0.00031916700000000214}, {'diff': 0.00031912499999999996}...</msg>
<status status="PASS" starttime="20201030 18:27:04.327" endtime="20201030 18:27:04.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:04.342" level="INFO">${RESULT} = {'diff': [0.0003190970000000008, 0.0003190980000000003, 0.00031922200000000095, 0.0003191669999999987, 0.00031916700000000214, 0.00031912499999999996, 0.00031912499999999996, 0.00031908300000000125, 0...</msg>
<status status="PASS" starttime="20201030 18:27:04.335" endtime="20201030 18:27:04.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.347" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:04.346" endtime="20201030 18:27:04.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.349" level="INFO">VALUE: [0.0003190970000000008, 0.0003190980000000003, 0.00031922200000000095, 0.0003191669999999987, 0.00031916700000000214, 0.00031912499999999996, 0.00031912499999999996, 0.00031908300000000125, 0.00031912499999999996, 0.0003191940000000018, 0.00031922200000000095, 0.0003191950000000013, 0.00031904199999999855, 0.00031915199999999963, 0.00031904100000000254, 0.00031908300000000125, 0.00031913899999999953, 0.00031918099999999824, 0.0003192080000000014, 0.0003191110000000004, 0.0003191520000000031, 0.0003192230000000004, 0.00031908300000000125, 0.00031924999999999315, 0.00031920799999999444, 0.0003192080000000014, 0.0003193060000000053, 0.00031922200000000095, 0.00031931999999999794, 0.00031918000000000224, 0.0003191950000000013, 0.0003192360000000005, 0.00031927699999999976, 0.00031930599999999837, 0.0003192500000000001, 0.0003193609999999972, 0.0003192230000000004, 0.00031926399999999966, 0.0003192500000000001, 0.00031938900000000325, 0.0003192919999999988, 0.00031927799999999923, 0.0003191799999999953, 0.00031927799999999923, 0.0003192080000000014, 0.0003192909999999993, 0.0003192360000000005, 0.00031926399999999966, 0.0003192230000000004, 0.00031922200000000095]</msg>
<status status="PASS" starttime="20201030 18:27:04.348" endtime="20201030 18:27:04.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.343" endtime="20201030 18:27:04.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:04.355" endtime="20201030 18:27:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.353" endtime="20201030 18:27:04.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.352" endtime="20201030 18:27:04.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.943" endtime="20201030 18:27:04.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.943" endtime="20201030 18:27:04.376"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.384" endtime="20201030 18:27:04.416"></status>
</kw>
<msg timestamp="20201030 18:27:04.417" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.382" endtime="20201030 18:27:04.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.419" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.418" endtime="20201030 18:27:04.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.420" endtime="20201030 18:27:04.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.380" endtime="20201030 18:27:04.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.378" endtime="20201030 18:27:04.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.429" endtime="20201030 18:27:04.715"></status>
</kw>
<msg timestamp="20201030 18:27:04.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.428" endtime="20201030 18:27:04.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022134236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.719" endtime="20201030 18:27:04.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.727" endtime="20201030 18:27:04.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.425" endtime="20201030 18:27:04.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.423" endtime="20201030 18:27:04.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:04.733" level="INFO">${PHILIP_RES} = [{'diff': 0.00034431999999999865}, {'diff': 0.00034437500000000093}, {'diff': 0.00034436100000000136}, {'diff': 0.00034436100000000136}, {'diff': 0.0003443890000000005}, {'diff': 0.0003443610000000013...</msg>
<status status="PASS" starttime="20201030 18:27:04.730" endtime="20201030 18:27:04.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:04.738" level="INFO">${RESULT} = {'diff': [0.00034431999999999865, 0.00034437500000000093, 0.00034436100000000136, 0.00034436100000000136, 0.0003443890000000005, 0.00034436100000000136, 0.00034431999999999865, 0.00034429100000000004,...</msg>
<status status="PASS" starttime="20201030 18:27:04.734" endtime="20201030 18:27:04.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.742" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:04.741" endtime="20201030 18:27:04.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.745" level="INFO">VALUE: [0.00034431999999999865, 0.00034437500000000093, 0.00034436100000000136, 0.00034436100000000136, 0.0003443890000000005, 0.00034436100000000136, 0.00034431999999999865, 0.00034429100000000004, 0.0003444730000000014, 0.00034440300000000007, 0.00034441699999999964, 0.0003443609999999979, 0.00034441600000000017, 0.0003443049999999996, 0.00034438899999999703, 0.00034441600000000017, 0.00034436199999999736, 0.00034438899999999703, 0.00034433299999999875, 0.00034437500000000093, 0.0003443469999999983, 0.00034436100000000136, 0.0003444439999999993, 0.00034440300000000007, 0.00034437500000000093, 0.00034444400000000625, 0.00034440300000000007, 0.0003444300000000067, 0.00034441699999999964, 0.00034430600000000255, 0.000344292000000003, 0.00034452800000000366, 0.0003444439999999993, 0.0003444729999999979, 0.00034445899999999835, 0.0003443329999999953, 0.00034424999999999734, 0.0003444309999999992, 0.00034431900000000265, 0.00034436200000000083, 0.0003443470000000018, 0.0003443340000000017, 0.00034437500000000093, 0.00034426400000000384, 0.0003443330000000022, 0.0003443059999999956, 0.00034441600000000017, 0.0003444439999999993, 0.0003444579999999989, 0.0003444729999999979]</msg>
<status status="PASS" starttime="20201030 18:27:04.743" endtime="20201030 18:27:04.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.739" endtime="20201030 18:27:04.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:04.750" endtime="20201030 18:27:04.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.748" endtime="20201030 18:27:04.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.747" endtime="20201030 18:27:04.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.376" endtime="20201030 18:27:04.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.376" endtime="20201030 18:27:04.770"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.779" endtime="20201030 18:27:04.809"></status>
</kw>
<msg timestamp="20201030 18:27:04.809" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.777" endtime="20201030 18:27:04.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.812" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.811" endtime="20201030 18:27:04.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.813" endtime="20201030 18:27:04.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.775" endtime="20201030 18:27:04.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.773" endtime="20201030 18:27:04.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.822" endtime="20201030 18:27:05.119"></status>
</kw>
<msg timestamp="20201030 18:27:05.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019256986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.820" endtime="20201030 18:27:05.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019256986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.128" endtime="20201030 18:27:05.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.146" endtime="20201030 18:27:05.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.818" endtime="20201030 18:27:05.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.816" endtime="20201030 18:27:05.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:05.157" level="INFO">${PHILIP_RES} = [{'diff': 0.0003701670000000011}, {'diff': 0.0003701389999999985}, {'diff': 0.00036997199999999966}, {'diff': 0.0003700129999999989}, {'diff': 0.0003701249999999989}, {'diff': 0.00036997299999999914},...</msg>
<status status="PASS" starttime="20201030 18:27:05.154" endtime="20201030 18:27:05.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:05.161" level="INFO">${RESULT} = {'diff': [0.0003701670000000011, 0.0003701389999999985, 0.00036997199999999966, 0.0003700129999999989, 0.0003701249999999989, 0.00036997299999999914, 0.00037004099999999804, 0.00037015300000000154, 0....</msg>
<status status="PASS" starttime="20201030 18:27:05.158" endtime="20201030 18:27:05.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.165" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:05.164" endtime="20201030 18:27:05.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.168" level="INFO">VALUE: [0.0003701670000000011, 0.0003701389999999985, 0.00036997199999999966, 0.0003700129999999989, 0.0003701249999999989, 0.00036997299999999914, 0.00037004099999999804, 0.00037015300000000154, 0.00037011099999999936, 0.00037008299999999675, 0.0003700830000000002, 0.0003700410000000015, 0.0003700969999999998, 0.00037013900000000197, 0.0003700410000000015, 0.0003701249999999989, 0.00036997199999999966, 0.0003700839999999997, 0.0003700839999999997, 0.00037011099999999936, 0.0003700700000000001, 0.0003700280000000014, 0.0003701800000000012, 0.00036998599999999923, 0.00037001399999999837, 0.0003702089999999998, 0.0003700839999999997, 0.0003700969999999998, 0.0003701250000000024, 0.00037019400000000077, 0.00037013900000000544, 0.0003702079999999969, 0.00037034700000000004, 0.000370235999999996, 0.00037018100000000415, 0.00037011099999999936, 0.00037015299999999807, 0.0003700830000000002, 0.0003700830000000002, 0.000370153000000005, 0.0003701249999999989, 0.00037016599999999816, 0.0003701939999999973, 0.0003701249999999989, 0.0003701949999999968, 0.0003701939999999973, 0.0003701950000000037, 0.00037002799999999447, 0.00037011099999999936, 0.0003701950000000037]</msg>
<status status="PASS" starttime="20201030 18:27:05.166" endtime="20201030 18:27:05.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.162" endtime="20201030 18:27:05.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:05.173" endtime="20201030 18:27:05.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.171" endtime="20201030 18:27:05.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.170" endtime="20201030 18:27:05.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.771" endtime="20201030 18:27:05.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.771" endtime="20201030 18:27:05.193"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.201" endtime="20201030 18:27:05.236"></status>
</kw>
<msg timestamp="20201030 18:27:05.236" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.200" endtime="20201030 18:27:05.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.238" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.237" endtime="20201030 18:27:05.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.239" endtime="20201030 18:27:05.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.197" endtime="20201030 18:27:05.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.196" endtime="20201030 18:27:05.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.248" endtime="20201030 18:27:05.534"></status>
</kw>
<msg timestamp="20201030 18:27:05.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023358764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023755722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.247" endtime="20201030 18:27:05.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023358764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023755722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.538" endtime="20201030 18:27:05.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.546" endtime="20201030 18:27:05.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.244" endtime="20201030 18:27:05.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.243" endtime="20201030 18:27:05.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:05.552" level="INFO">${PHILIP_RES} = [{'diff': 0.00039695799999999934}, {'diff': 0.00039702800000000066}, {'diff': 0.00039699999999999805}, {'diff': 0.0003969589999999988}, {'diff': 0.0003968620000000013}, {'diff': 0.0003969300000000002}...</msg>
<status status="PASS" starttime="20201030 18:27:05.549" endtime="20201030 18:27:05.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:05.556" level="INFO">${RESULT} = {'diff': [0.00039695799999999934, 0.00039702800000000066, 0.00039699999999999805, 0.0003969589999999988, 0.0003968620000000013, 0.0003969300000000002, 0.0003969170000000001, 0.0003969170000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:05.553" endtime="20201030 18:27:05.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.560" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:05.559" endtime="20201030 18:27:05.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.563" level="INFO">VALUE: [0.00039695799999999934, 0.00039702800000000066, 0.00039699999999999805, 0.0003969589999999988, 0.0003968620000000013, 0.0003969300000000002, 0.0003969170000000001, 0.0003969170000000001, 0.00039690300000000053, 0.00039694499999999924, 0.00039688900000000096, 0.0003968749999999979, 0.0003969309999999997, 0.0003968610000000018, 0.00039699999999999805, 0.0003969300000000002, 0.0003968889999999975, 0.00039694499999999924, 0.0003969589999999988, 0.00039709800000000545, 0.00039695899999999534, 0.0003969720000000024, 0.00039704200000000023, 0.0003968469999999988, 0.0003969449999999958, 0.0003970000000000015, 0.0003968889999999975, 0.0003970000000000015, 0.0003968749999999979, 0.00039693100000000314, 0.0003969439999999963, 0.000396985999999995, 0.0003968889999999975, 0.00039704200000000023, 0.0003969580000000028, 0.00039704200000000023, 0.0003970000000000015, 0.00039694400000000324, 0.0003970000000000015, 0.0003970550000000003, 0.0003970689999999999, 0.0003969580000000028, 0.00039691700000000357, 0.00039698600000000195, 0.0003968339999999987, 0.00039698600000000195, 0.0003970000000000015, 0.0003970550000000003, 0.0003970000000000015, 0.00039698600000000195]</msg>
<status status="PASS" starttime="20201030 18:27:05.561" endtime="20201030 18:27:05.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.557" endtime="20201030 18:27:05.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:05.568" endtime="20201030 18:27:05.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.567" endtime="20201030 18:27:05.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.566" endtime="20201030 18:27:05.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.194" endtime="20201030 18:27:05.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.194" endtime="20201030 18:27:05.589"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.597" endtime="20201030 18:27:05.637"></status>
</kw>
<msg timestamp="20201030 18:27:05.638" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.596" endtime="20201030 18:27:05.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.640" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.639" endtime="20201030 18:27:05.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.641" endtime="20201030 18:27:05.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.593" endtime="20201030 18:27:05.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.591" endtime="20201030 18:27:05.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.650" endtime="20201030 18:27:05.951"></status>
</kw>
<msg timestamp="20201030 18:27:05.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.648" endtime="20201030 18:27:05.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.960" endtime="20201030 18:27:05.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.970" endtime="20201030 18:27:05.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.646" endtime="20201030 18:27:05.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.644" endtime="20201030 18:27:05.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:05.976" level="INFO">${PHILIP_RES} = [{'diff': 0.00042455599999999954}, {'diff': 0.00042451400000000084}, {'diff': 0.00042474999999999805}, {'diff': 0.0004245839999999987}, {'diff': 0.0004246110000000018}, {'diff': 0.00042456899999999964...</msg>
<status status="PASS" starttime="20201030 18:27:05.973" endtime="20201030 18:27:05.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:05.983" level="INFO">${RESULT} = {'diff': [0.00042455599999999954, 0.00042451400000000084, 0.00042474999999999805, 0.0004245839999999987, 0.0004246110000000018, 0.00042456899999999964, 0.00042473600000000195, 0.0004246389999999975, 0...</msg>
<status status="PASS" starttime="20201030 18:27:05.977" endtime="20201030 18:27:05.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.988" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:05.987" endtime="20201030 18:27:05.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.990" level="INFO">VALUE: [0.00042455599999999954, 0.00042451400000000084, 0.00042474999999999805, 0.0004245839999999987, 0.0004246110000000018, 0.00042456899999999964, 0.00042473600000000195, 0.0004246389999999975, 0.00042463900000000096, 0.00042461099999999835, 0.0004244860000000017, 0.0004245280000000004, 0.0004246389999999975, 0.0004246380000000015, 0.0004245969999999988, 0.0004246249999999979, 0.0004244869999999977, 0.00042469400000000324, 0.0004246110000000018, 0.0004246249999999979, 0.00042459799999999825, 0.00042455599999999954, 0.0004246389999999975, 0.00042455599999999954, 0.0004246389999999975, 0.0004245969999999988, 0.0004246119999999978, 0.00042450000000000127, 0.0004245969999999988, 0.00042450000000000127, 0.00042462500000000486, 0.0004245969999999988, 0.00042444399999999605, 0.00042452700000000093, 0.00042450000000000127, 0.00042450000000000127, 0.0004245829999999992, 0.0004247500000000015, 0.0004245829999999992, 0.0004245969999999988, 0.00042461099999999835, 0.00042466599999999716, 0.00042461099999999835, 0.0004244719999999952, 0.0004247500000000015, 0.00042465299999999706, 0.0004246249999999979, 0.00042463900000000443, 0.000424653000000004, 0.00042456899999999964]</msg>
<status status="PASS" starttime="20201030 18:27:05.989" endtime="20201030 18:27:05.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.984" endtime="20201030 18:27:05.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:05.995" endtime="20201030 18:27:06.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.993" endtime="20201030 18:27:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.992" endtime="20201030 18:27:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.590" endtime="20201030 18:27:06.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.589" endtime="20201030 18:27:06.016"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.024" endtime="20201030 18:27:06.059"></status>
</kw>
<msg timestamp="20201030 18:27:06.059" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.022" endtime="20201030 18:27:06.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.062" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.060" endtime="20201030 18:27:06.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.063" endtime="20201030 18:27:06.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.020" endtime="20201030 18:27:06.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.018" endtime="20201030 18:27:06.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.072" endtime="20201030 18:27:06.357"></status>
</kw>
<msg timestamp="20201030 18:27:06.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.070" endtime="20201030 18:27:06.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020419514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.362" endtime="20201030 18:27:06.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.369" endtime="20201030 18:27:06.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.068" endtime="20201030 18:27:06.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.066" endtime="20201030 18:27:06.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:06.377" level="INFO">${PHILIP_RES} = [{'diff': 0.0004531810000000004}, {'diff': 0.0004532360000000027}, {'diff': 0.0004533749999999989}, {'diff': 0.00045313799999999876}, {'diff': 0.0004533330000000002}, {'diff': 0.00045326399999999836},...</msg>
<status status="PASS" starttime="20201030 18:27:06.374" endtime="20201030 18:27:06.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:06.381" level="INFO">${RESULT} = {'diff': [0.0004531810000000004, 0.0004532360000000027, 0.0004533749999999989, 0.00045313799999999876, 0.0004533330000000002, 0.00045326399999999836, 0.00045326400000000183, 0.0004532910000000015, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:06.378" endtime="20201030 18:27:06.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.385" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:06.384" endtime="20201030 18:27:06.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.387" level="INFO">VALUE: [0.0004531810000000004, 0.0004532360000000027, 0.0004533749999999989, 0.00045313799999999876, 0.0004533330000000002, 0.00045326399999999836, 0.00045326400000000183, 0.0004532910000000015, 0.0004533200000000001, 0.0004533469999999998, 0.0004533330000000002, 0.0004533749999999989, 0.0004534030000000015, 0.0004533339999999997, 0.0004532359999999992, 0.0004532780000000014, 0.00045329099999999803, 0.0004532780000000014, 0.00045320899999999956, 0.00045327799999999793, 0.00045336099999999935, 0.0004533330000000002, 0.00045330600000000054, 0.0004531669999999974, 0.00045331900000000064, 0.0004534019999999986, 0.0004534299999999977, 0.0004532219999999962, 0.0004533890000000054, 0.00045330600000000054, 0.00045329099999999456, 0.0004533890000000054, 0.00045325000000000226, 0.0004533749999999989, 0.0004532629999999954, 0.0004533330000000002, 0.00045331900000000064, 0.0004533469999999998, 0.0004532780000000014, 0.00045323599999999575, 0.0004532780000000014, 0.00045331900000000064, 0.00045331900000000064, 0.00045329200000000097, 0.00045331900000000064, 0.0004532780000000014, 0.0004533339999999997, 0.0004533469999999998, 0.0004533749999999989, 0.0004533330000000002]</msg>
<status status="PASS" starttime="20201030 18:27:06.386" endtime="20201030 18:27:06.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.382" endtime="20201030 18:27:06.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:06.392" endtime="20201030 18:27:06.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.391" endtime="20201030 18:27:06.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.390" endtime="20201030 18:27:06.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.017" endtime="20201030 18:27:06.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.016" endtime="20201030 18:27:06.413"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.421" endtime="20201030 18:27:06.457"></status>
</kw>
<msg timestamp="20201030 18:27:06.457" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.420" endtime="20201030 18:27:06.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.460" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.458" endtime="20201030 18:27:06.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.461" endtime="20201030 18:27:06.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.417" endtime="20201030 18:27:06.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.415" endtime="20201030 18:27:06.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.470" endtime="20201030 18:27:06.770"></status>
</kw>
<msg timestamp="20201030 18:27:06.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.468" endtime="20201030 18:27:06.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.776" endtime="20201030 18:27:06.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.784" endtime="20201030 18:27:06.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.466" endtime="20201030 18:27:06.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.464" endtime="20201030 18:27:06.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:06.790" level="INFO">${PHILIP_RES} = [{'diff': 0.0004828199999999984}, {'diff': 0.00048284699999999806}, {'diff': 0.0004827090000000013}, {'diff': 0.00048284699999999806}, {'diff': 0.00048288900000000023}, {'diff': 0.0004827640000000001}...</msg>
<status status="PASS" starttime="20201030 18:27:06.787" endtime="20201030 18:27:06.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:06.794" level="INFO">${RESULT} = {'diff': [0.0004828199999999984, 0.00048284699999999806, 0.0004827090000000013, 0.00048284699999999806, 0.00048288900000000023, 0.0004827640000000001, 0.0005067500000000003, 0.0004828189999999989, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:06.791" endtime="20201030 18:27:06.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.798" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:06.798" endtime="20201030 18:27:06.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.801" level="INFO">VALUE: [0.0004828199999999984, 0.00048284699999999806, 0.0004827090000000013, 0.00048284699999999806, 0.00048288900000000023, 0.0004827640000000001, 0.0005067500000000003, 0.0004828189999999989, 0.00048287500000000066, 0.0004827640000000001, 0.00048280499999999935, 0.0004828189999999989, 0.00048270899999999783, 0.0004827640000000001, 0.00048275000000000054, 0.0004826520000000001, 0.0004829029999999998, 0.0004827779999999997, 0.0004829589999999981, 0.00048269500000000173, 0.00048283300000000196, 0.0004828189999999989, 0.000482750000000004, 0.00048282000000000186, 0.0004829029999999998, 0.00048272199999999793, 0.0004826520000000001, 0.00048277800000000315, 0.0004829169999999994, 0.00048272199999999793, 0.0004827919999999958, 0.0004828050000000028, 0.0004829449999999985, 0.0004827920000000027, 0.0004827920000000027, 0.0004828190000000024, 0.0004827359999999975, 0.00048280599999999535, 0.00048273600000000444, 0.00048288900000000023, 0.00048270899999999783, 0.0004828199999999949, 0.000482832999999995, 0.00048272199999999793, 0.0004828190000000024, 0.0004828470000000015, 0.00048272199999999793, 0.0004827779999999962, 0.0004827359999999975, 0.0004826799999999992]</msg>
<status status="PASS" starttime="20201030 18:27:06.800" endtime="20201030 18:27:06.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.795" endtime="20201030 18:27:06.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:06.807" endtime="20201030 18:27:06.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.805" endtime="20201030 18:27:06.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.804" endtime="20201030 18:27:06.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.414" endtime="20201030 18:27:06.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.413" endtime="20201030 18:27:06.827"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.836" endtime="20201030 18:27:06.878"></status>
</kw>
<msg timestamp="20201030 18:27:06.878" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.834" endtime="20201030 18:27:06.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.881" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.879" endtime="20201030 18:27:06.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.882" endtime="20201030 18:27:06.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.831" endtime="20201030 18:27:06.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.830" endtime="20201030 18:27:06.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.891" endtime="20201030 18:27:07.176"></status>
</kw>
<msg timestamp="20201030 18:27:07.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.889" endtime="20201030 18:27:07.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.180" endtime="20201030 18:27:07.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.188" endtime="20201030 18:27:07.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.887" endtime="20201030 18:27:07.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.885" endtime="20201030 18:27:07.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:07.194" level="INFO">${PHILIP_RES} = [{'diff': 0.000512986}, {'diff': 0.0005129999999999996}, {'diff': 0.0005129169999999982}, {'diff': 0.0005129999999999996}, {'diff': 0.0005128050000000016}, {'diff': 0.0005129310000000012}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:27:07.191" endtime="20201030 18:27:07.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:07.199" level="INFO">${RESULT} = {'diff': [0.000512986, 0.0005129999999999996, 0.0005129169999999982, 0.0005129999999999996, 0.0005128050000000016, 0.0005129310000000012, 0.0005129720000000004, 0.0005130279999999987, 0.00051300000000...</msg>
<status status="PASS" starttime="20201030 18:27:07.195" endtime="20201030 18:27:07.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.203" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:07.202" endtime="20201030 18:27:07.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.206" level="INFO">VALUE: [0.000512986, 0.0005129999999999996, 0.0005129169999999982, 0.0005129999999999996, 0.0005128050000000016, 0.0005129310000000012, 0.0005129720000000004, 0.0005130279999999987, 0.000513000000000003, 0.0005130410000000023, 0.0005129580000000009, 0.0005130560000000013, 0.0005129170000000016, 0.0005131249999999997, 0.000512986, 0.0005129999999999996, 0.0005130280000000022, 0.000513083999999997, 0.0005129440000000013, 0.0005130420000000052, 0.0005130269999999992, 0.000512874999999996, 0.0005130559999999978, 0.0005131389999999958, 0.0005130689999999979, 0.000512986, 0.000512986, 0.0005130420000000052, 0.0005129300000000017, 0.000513097000000004, 0.0005128050000000051, 0.0005128330000000042, 0.0005129159999999952, 0.000512874999999996, 0.000512791999999998, 0.0005131249999999962, 0.0005130409999999988, 0.0005128750000000029, 0.0005129019999999956, 0.0005129019999999956, 0.0005130699999999974, 0.0005129169999999947, 0.0005129029999999951, 0.0005130689999999979, 0.0005128189999999977, 0.0005131250000000032, 0.0005129999999999996, 0.0005130559999999978, 0.0005130269999999992, 0.0005131109999999967]</msg>
<status status="PASS" starttime="20201030 18:27:07.204" endtime="20201030 18:27:07.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.200" endtime="20201030 18:27:07.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:07.218" endtime="20201030 18:27:07.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.216" endtime="20201030 18:27:07.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.215" endtime="20201030 18:27:07.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.828" endtime="20201030 18:27:07.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.828" endtime="20201030 18:27:07.238"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.247" endtime="20201030 18:27:07.285"></status>
</kw>
<msg timestamp="20201030 18:27:07.285" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.245" endtime="20201030 18:27:07.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.288" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.286" endtime="20201030 18:27:07.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.289" endtime="20201030 18:27:07.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.243" endtime="20201030 18:27:07.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.241" endtime="20201030 18:27:07.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.298" endtime="20201030 18:27:07.599"></status>
</kw>
<msg timestamp="20201030 18:27:07.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018030458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018574375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.296" endtime="20201030 18:27:07.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018030458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018574375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.603" endtime="20201030 18:27:07.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.611" endtime="20201030 18:27:07.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.294" endtime="20201030 18:27:07.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.292" endtime="20201030 18:27:07.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:07.618" level="INFO">${PHILIP_RES} = [{'diff': 0.0005439170000000014}, {'diff': 0.0005440840000000002}, {'diff': 0.0005440419999999981}, {'diff': 0.0005439020000000024}, {'diff': 0.0005440279999999985}, {'diff': 0.0005440840000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:27:07.615" endtime="20201030 18:27:07.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:07.622" level="INFO">${RESULT} = {'diff': [0.0005439170000000014, 0.0005440840000000002, 0.0005440419999999981, 0.0005439020000000024, 0.0005440279999999985, 0.0005440840000000002, 0.0005439720000000002, 0.0005440970000000003, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:27:07.619" endtime="20201030 18:27:07.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.627" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:07.626" endtime="20201030 18:27:07.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.629" level="INFO">VALUE: [0.0005439170000000014, 0.0005440840000000002, 0.0005440419999999981, 0.0005439020000000024, 0.0005440279999999985, 0.0005440840000000002, 0.0005439720000000002, 0.0005440970000000003, 0.000544138999999999, 0.0005441529999999986, 0.0005440139999999989, 0.0005440000000000028, 0.0005440970000000003, 0.0005439029999999984, 0.0005440560000000011, 0.0005440279999999985, 0.0005441119999999994, 0.000544028000000002, 0.0005440559999999976, 0.0005441799999999983, 0.0005439439999999976, 0.0005440140000000024, 0.0005439300000000015, 0.0005440139999999954, 0.0005440419999999946, 0.0005440420000000015, 0.0005441249999999995, 0.0005440130000000029, 0.0005438879999999993, 0.0005440139999999954, 0.0005439310000000044, 0.0005441249999999995, 0.000544138999999999, 0.0005440970000000003, 0.0005439719999999967, 0.0005441249999999995, 0.0005440840000000002, 0.000544138999999999, 0.0005441249999999995, 0.0005441529999999986, 0.0005439309999999975, 0.0005439439999999976, 0.0005440140000000024, 0.0005438890000000057, 0.0005440420000000015, 0.0005439309999999975, 0.0005440270000000025, 0.0005440130000000029, 0.0005440139999999954, 0.0005438329999999936]</msg>
<status status="PASS" starttime="20201030 18:27:07.628" endtime="20201030 18:27:07.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.623" endtime="20201030 18:27:07.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:07.634" endtime="20201030 18:27:07.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.632" endtime="20201030 18:27:07.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.631" endtime="20201030 18:27:07.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.239" endtime="20201030 18:27:07.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.239" endtime="20201030 18:27:07.655"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.663" endtime="20201030 18:27:07.703"></status>
</kw>
<msg timestamp="20201030 18:27:07.703" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.661" endtime="20201030 18:27:07.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.705" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.704" endtime="20201030 18:27:07.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.706" endtime="20201030 18:27:07.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.659" endtime="20201030 18:27:07.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.657" endtime="20201030 18:27:07.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.715" endtime="20201030 18:27:08.002"></status>
</kw>
<msg timestamp="20201030 18:27:08.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018814639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019390806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.714" endtime="20201030 18:27:08.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018814639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019390806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.006" endtime="20201030 18:27:08.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.015" endtime="20201030 18:27:08.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.711" endtime="20201030 18:27:08.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.710" endtime="20201030 18:27:08.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:08.024" level="INFO">${PHILIP_RES} = [{'diff': 0.000576166999999999}, {'diff': 0.0005762779999999995}, {'diff': 0.0005760829999999981}, {'diff': 0.000576181000000002}, {'diff': 0.0005760409999999994}, {'diff': 0.0005762779999999995}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:08.020" endtime="20201030 18:27:08.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.029" level="INFO">${RESULT} = {'diff': [0.000576166999999999, 0.0005762779999999995, 0.0005760829999999981, 0.000576181000000002, 0.0005760409999999994, 0.0005762779999999995, 0.0005760560000000019, 0.0005760549999999989, 0.000576...</msg>
<status status="PASS" starttime="20201030 18:27:08.025" endtime="20201030 18:27:08.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.034" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:08.033" endtime="20201030 18:27:08.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.036" level="INFO">VALUE: [0.000576166999999999, 0.0005762779999999995, 0.0005760829999999981, 0.000576181000000002, 0.0005760409999999994, 0.0005762779999999995, 0.0005760560000000019, 0.0005760549999999989, 0.0005763340000000013, 0.0005761250000000002, 0.000576179999999999, 0.0005760409999999994, 0.0005761110000000007, 0.0005762909999999996, 0.0005760419999999988, 0.0005762500000000004, 0.0005762080000000017, 0.0005762360000000008, 0.0005760969999999976, 0.0005761950000000016, 0.0005760969999999976, 0.0005762080000000017, 0.0005761670000000024, 0.0005761940000000021, 0.0005761389999999963, 0.0005760970000000046, 0.0005760419999999988, 0.0005761250000000037, 0.0005761529999999959, 0.000576277, 0.0005761949999999946, 0.0005761799999999956, 0.0005761390000000033, 0.0005762220000000012, 0.0005760979999999971, 0.0005761529999999959, 0.0005763479999999974, 0.0005762220000000012, 0.000576166000000003, 0.000576181000000002, 0.0005762220000000012, 0.0005761249999999968, 0.0005762500000000004, 0.0005762220000000012, 0.000576098000000004, 0.0005760690000000054, 0.0005761249999999968, 0.000576277, 0.0005761670000000024, 0.0005759440000000018]</msg>
<status status="PASS" starttime="20201030 18:27:08.035" endtime="20201030 18:27:08.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.030" endtime="20201030 18:27:08.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.042" endtime="20201030 18:27:08.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.040" endtime="20201030 18:27:08.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.039" endtime="20201030 18:27:08.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.655" endtime="20201030 18:27:08.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.655" endtime="20201030 18:27:08.063"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.071" endtime="20201030 18:27:08.119"></status>
</kw>
<msg timestamp="20201030 18:27:08.119" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.069" endtime="20201030 18:27:08.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.122" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.120" endtime="20201030 18:27:08.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.123" endtime="20201030 18:27:08.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.067" endtime="20201030 18:27:08.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.065" endtime="20201030 18:27:08.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.132" endtime="20201030 18:27:08.432"></status>
</kw>
<msg timestamp="20201030 18:27:08.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.130" endtime="20201030 18:27:08.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023462639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.436" endtime="20201030 18:27:08.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.444" endtime="20201030 18:27:08.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.128" endtime="20201030 18:27:08.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.126" endtime="20201030 18:27:08.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:08.450" level="INFO">${PHILIP_RES} = [{'diff': 0.000609110999999999}, {'diff': 0.0006091519999999982}, {'diff': 0.0006092780000000013}, {'diff': 0.0006091390000000016}, {'diff': 0.0006091810000000003}, {'diff': 0.0006092640000000017}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:08.447" endtime="20201030 18:27:08.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.455" level="INFO">${RESULT} = {'diff': [0.000609110999999999, 0.0006091519999999982, 0.0006092780000000013, 0.0006091390000000016, 0.0006091810000000003, 0.0006092640000000017, 0.000609402999999998, 0.0006091670000000007, 0.000609...</msg>
<status status="PASS" starttime="20201030 18:27:08.451" endtime="20201030 18:27:08.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.460" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:08.459" endtime="20201030 18:27:08.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.462" level="INFO">VALUE: [0.000609110999999999, 0.0006091519999999982, 0.0006092780000000013, 0.0006091390000000016, 0.0006091810000000003, 0.0006092640000000017, 0.000609402999999998, 0.0006091670000000007, 0.0006093060000000004, 0.0006092639999999983, 0.0006092500000000022, 0.000609305000000001, 0.000609208, 0.000609208, 0.0006091660000000013, 0.0006091110000000025, 0.0006091110000000025, 0.0006093329999999966, 0.0006092639999999983, 0.0006091949999999999, 0.0006092359999999991, 0.000609125000000002, 0.0006091810000000003, 0.0006091390000000016, 0.0006091110000000025, 0.0006092779999999978, 0.000609208, 0.000609125000000002, 0.0006090550000000042, 0.0006090000000000054, 0.0006092499999999987, 0.0006091530000000012, 0.0006093200000000035, 0.000609125000000002, 0.000609222999999999, 0.0006091669999999938, 0.0006091110000000025, 0.0006092639999999983, 0.0006091810000000003, 0.0006091810000000003, 0.000609208, 0.0006091800000000008, 0.0006091940000000004, 0.000609305999999997, 0.0006092500000000056, 0.0006090559999999967, 0.0006090980000000024, 0.0006092219999999995, 0.0006091529999999942, 0.000609222999999999]</msg>
<status status="PASS" starttime="20201030 18:27:08.461" endtime="20201030 18:27:08.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.456" endtime="20201030 18:27:08.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.467" endtime="20201030 18:27:08.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.465" endtime="20201030 18:27:08.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.464" endtime="20201030 18:27:08.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.064" endtime="20201030 18:27:08.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.063" endtime="20201030 18:27:08.488"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.496" endtime="20201030 18:27:08.545"></status>
</kw>
<msg timestamp="20201030 18:27:08.546" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.494" endtime="20201030 18:27:08.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.548" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.547" endtime="20201030 18:27:08.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.549" endtime="20201030 18:27:08.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.492" endtime="20201030 18:27:08.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.490" endtime="20201030 18:27:08.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.558" endtime="20201030 18:27:08.843"></status>
</kw>
<msg timestamp="20201030 18:27:08.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.556" endtime="20201030 18:27:08.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019822569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.847" endtime="20201030 18:27:08.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.855" endtime="20201030 18:27:08.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.554" endtime="20201030 18:27:08.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.552" endtime="20201030 18:27:08.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:08.862" level="INFO">${PHILIP_RES} = [{'diff': 0.0006430979999999982}, {'diff': 0.0006430140000000008}, {'diff': 0.0006430270000000009}, {'diff': 0.0006430419999999999}, {'diff': 0.0006430419999999999}, {'diff': 0.0006430280000000003}, {...</msg>
<status status="PASS" starttime="20201030 18:27:08.859" endtime="20201030 18:27:08.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.866" level="INFO">${RESULT} = {'diff': [0.0006430979999999982, 0.0006430140000000008, 0.0006430270000000009, 0.0006430419999999999, 0.0006430419999999999, 0.0006430280000000003, 0.0006430829999999992, 0.0006430280000000003, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:27:08.863" endtime="20201030 18:27:08.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.870" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:08.869" endtime="20201030 18:27:08.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.873" level="INFO">VALUE: [0.0006430979999999982, 0.0006430140000000008, 0.0006430270000000009, 0.0006430419999999999, 0.0006430419999999999, 0.0006430280000000003, 0.0006430829999999992, 0.0006430280000000003, 0.0006428749999999976, 0.0006431109999999983, 0.0006429860000000016, 0.0006430139999999973, 0.0006430839999999986, 0.0006431800000000001, 0.0006431120000000012, 0.0006430840000000021, 0.000643055, 0.0006431800000000001, 0.0006430700000000025, 0.0006429999999999977, 0.0006430280000000038, 0.0006431809999999996, 0.0006430690000000031, 0.0006429859999999982, 0.0006429999999999977, 0.0006430420000000034, 0.0006431109999999948, 0.0006430970000000022, 0.000643055999999996, 0.0006430280000000038, 0.0006430130000000048, 0.0006431110000000018, 0.0006430419999999964, 0.0006429870000000046, 0.0006429719999999986, 0.000642764000000004, 0.0006428060000000027, 0.0006429439999999995, 0.0006430549999999965, 0.0006429439999999995, 0.0006428750000000011, 0.0006429449999999989, 0.0006429160000000003, 0.0006430140000000042, 0.0006427919999999962, 0.0006428750000000011, 0.0006428190000000028, 0.000643167, 0.0006429439999999995, 0.0006430140000000042]</msg>
<status status="PASS" starttime="20201030 18:27:08.871" endtime="20201030 18:27:08.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.867" endtime="20201030 18:27:08.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.877" endtime="20201030 18:27:08.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.876" endtime="20201030 18:27:08.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.875" endtime="20201030 18:27:08.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.488" endtime="20201030 18:27:08.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.488" endtime="20201030 18:27:08.898"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.907" endtime="20201030 18:27:08.954"></status>
</kw>
<msg timestamp="20201030 18:27:08.954" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.905" endtime="20201030 18:27:08.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.956" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.955" endtime="20201030 18:27:08.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.957" endtime="20201030 18:27:08.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.903" endtime="20201030 18:27:08.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.901" endtime="20201030 18:27:08.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.966" endtime="20201030 18:27:09.265"></status>
</kw>
<msg timestamp="20201030 18:27:09.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.965" endtime="20201030 18:27:09.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021784958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.269" endtime="20201030 18:27:09.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.277" endtime="20201030 18:27:09.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.962" endtime="20201030 18:27:09.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.961" endtime="20201030 18:27:09.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:09.284" level="INFO">${PHILIP_RES} = [{'diff': 0.0006775410000000003}, {'diff': 0.000677500000000001}, {'diff': 0.0006776669999999999}, {'diff': 0.00067768}, {'diff': 0.0006775969999999985}, {'diff': 0.0006775549999999998}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:09.281" endtime="20201030 18:27:09.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.288" level="INFO">${RESULT} = {'diff': [0.0006775410000000003, 0.000677500000000001, 0.0006776669999999999, 0.00067768, 0.0006775969999999985, 0.0006775549999999998, 0.0006775689999999994, 0.0006775969999999985, 0.0006777500000000...</msg>
<status status="PASS" starttime="20201030 18:27:09.285" endtime="20201030 18:27:09.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.292" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:09.291" endtime="20201030 18:27:09.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.294" level="INFO">VALUE: [0.0006775410000000003, 0.000677500000000001, 0.0006776669999999999, 0.00067768, 0.0006775969999999985, 0.0006775549999999998, 0.0006775689999999994, 0.0006775969999999985, 0.0006777500000000013, 0.0006775410000000003, 0.0006777079999999991, 0.0006777359999999982, 0.0006774590000000018, 0.0006774860000000014, 0.0006773750000000009, 0.0006774449999999987, 0.0006774719999999984, 0.0006774439999999993, 0.0006774860000000049, 0.0006775139999999971, 0.0006774309999999992, 0.0006775550000000033, 0.0006775279999999967, 0.000677806000000003, 0.0006777079999999991, 0.0006775559999999958, 0.0006777360000000052, 0.000677485999999998, 0.0006774299999999997, 0.0006775279999999967, 0.0006774590000000053, 0.0006776669999999999, 0.0006776110000000016, 0.0006775969999999951, 0.0006775699999999954, 0.0006776530000000003, 0.0006776669999999999, 0.0006777370000000046, 0.000677597000000002, 0.0006776250000000011, 0.0006777640000000043, 0.0006774579999999988, 0.0006775279999999967, 0.0006776669999999999, 0.0006774999999999975, 0.0006777500000000047, 0.0006775690000000029, 0.0006776669999999999, 0.0006775980000000015, 0.0006776110000000016]</msg>
<status status="PASS" starttime="20201030 18:27:09.293" endtime="20201030 18:27:09.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.289" endtime="20201030 18:27:09.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.300" endtime="20201030 18:27:09.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.299" endtime="20201030 18:27:09.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.298" endtime="20201030 18:27:09.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.899" endtime="20201030 18:27:09.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.899" endtime="20201030 18:27:09.321"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.329" endtime="20201030 18:27:09.380"></status>
</kw>
<msg timestamp="20201030 18:27:09.380" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.328" endtime="20201030 18:27:09.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.383" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.381" endtime="20201030 18:27:09.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.384" endtime="20201030 18:27:09.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.325" endtime="20201030 18:27:09.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.323" endtime="20201030 18:27:09.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.393" endtime="20201030 18:27:09.678"></status>
</kw>
<msg timestamp="20201030 18:27:09.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021078889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.391" endtime="20201030 18:27:09.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020365875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021078889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.682" endtime="20201030 18:27:09.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.690" endtime="20201030 18:27:09.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.389" endtime="20201030 18:27:09.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.387" endtime="20201030 18:27:09.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:09.697" level="INFO">${PHILIP_RES} = [{'diff': 0.0007130140000000014}, {'diff': 0.0007131660000000012}, {'diff': 0.000713125000000002}, {'diff': 0.0007130839999999992}, {'diff': 0.0007132920000000008}, {'diff': 0.0007132500000000021}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:09.694" endtime="20201030 18:27:09.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.704" level="INFO">${RESULT} = {'diff': [0.0007130140000000014, 0.0007131660000000012, 0.000713125000000002, 0.0007130839999999992, 0.0007132920000000008, 0.0007132500000000021, 0.000713125000000002, 0.0007132230000000024, 0.000713...</msg>
<status status="PASS" starttime="20201030 18:27:09.698" endtime="20201030 18:27:09.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.708" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:09.707" endtime="20201030 18:27:09.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.710" level="INFO">VALUE: [0.0007130140000000014, 0.0007131660000000012, 0.000713125000000002, 0.0007130839999999992, 0.0007132920000000008, 0.0007132500000000021, 0.000713125000000002, 0.0007132230000000024, 0.0007132219999999995, 0.0007132500000000021, 0.0007131939999999969, 0.0007132219999999995, 0.0007133339999999995, 0.0007132500000000021, 0.0007133060000000004, 0.0007133329999999966, 0.0007132909999999978, 0.0007132920000000043, 0.0007130559999999966, 0.0007132499999999986, 0.0007133469999999961, 0.0007132919999999973, 0.0007132779999999977, 0.0007133750000000022, 0.0007132499999999986, 0.0007134170000000009, 0.0007132920000000043, 0.0007133890000000018, 0.0007132629999999987, 0.0007132219999999995, 0.0007130560000000036, 0.0007132640000000051, 0.0007132779999999977, 0.0007132919999999973, 0.0007132909999999978, 0.0007133049999999974, 0.0007133890000000018, 0.0007132779999999977, 0.0007133889999999948, 0.000713235999999999, 0.0007133049999999974, 0.0007134030000000013, 0.000713334000000003, 0.0007132079999999999, 0.000713125000000002, 0.0007133059999999969, 0.0007133329999999966, 0.0007134299999999941, 0.0007133609999999957, 0.000713235999999999]</msg>
<status status="PASS" starttime="20201030 18:27:09.709" endtime="20201030 18:27:09.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.705" endtime="20201030 18:27:09.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.715" endtime="20201030 18:27:09.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.714" endtime="20201030 18:27:09.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.713" endtime="20201030 18:27:09.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.322" endtime="20201030 18:27:09.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.321" endtime="20201030 18:27:09.736"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.744" endtime="20201030 18:27:09.798"></status>
</kw>
<msg timestamp="20201030 18:27:09.798" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.743" endtime="20201030 18:27:09.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.801" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.799" endtime="20201030 18:27:09.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.802" endtime="20201030 18:27:09.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.740" endtime="20201030 18:27:09.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.738" endtime="20201030 18:27:09.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.811" endtime="20201030 18:27:10.107"></status>
</kw>
<msg timestamp="20201030 18:27:10.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02292825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:09.809" endtime="20201030 18:27:10.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02292825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:10.111" endtime="20201030 18:27:10.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.119" endtime="20201030 18:27:10.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.807" endtime="20201030 18:27:10.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.805" endtime="20201030 18:27:10.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:10.125" level="INFO">${PHILIP_RES} = [{'diff': 0.0007494170000000022}, {'diff': 0.000749472000000001}, {'diff': 0.0007495000000000002}, {'diff': 0.0007495420000000023}, {'diff': 0.0007495000000000002}, {'diff': 0.000749652}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:10.122" endtime="20201030 18:27:10.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:10.129" level="INFO">${RESULT} = {'diff': [0.0007494170000000022, 0.000749472000000001, 0.0007495000000000002, 0.0007495420000000023, 0.0007495000000000002, 0.000749652, 0.0007495689999999985, 0.0007495829999999981, 0.000749597999999...</msg>
<status status="PASS" starttime="20201030 18:27:10.126" endtime="20201030 18:27:10.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.133" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:10.132" endtime="20201030 18:27:10.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.136" level="INFO">VALUE: [0.0007494170000000022, 0.000749472000000001, 0.0007495000000000002, 0.0007495420000000023, 0.0007495000000000002, 0.000749652, 0.0007495689999999985, 0.0007495829999999981, 0.0007495979999999972, 0.0007495409999999994, 0.000749569999999998, 0.000749569999999998, 0.0007495689999999985, 0.0007493750000000035, 0.0007495689999999985, 0.0007494590000000009, 0.0007493340000000043, 0.0007495969999999977, 0.0007497080000000017, 0.0007496809999999951, 0.000749681000000002, 0.0007495839999999976, 0.0007496250000000038, 0.0007496939999999952, 0.0007494860000000006, 0.0007495409999999994, 0.000749554999999999, 0.0007495559999999984, 0.0007495279999999993, 0.0007496110000000042, 0.0007493340000000043, 0.000749554999999999, 0.0007494169999999953, 0.0007494450000000014, 0.0007494170000000022, 0.0007494029999999957, 0.0007493750000000035, 0.0007493200000000047, 0.0007493059999999982, 0.0007493469999999974, 0.000749068999999998, 0.0007492220000000008, 0.0007490279999999988, 0.000749278000000006, 0.0007492639999999995, 0.0007490839999999971, 0.0007490419999999984, 0.0007491940000000016, 0.0007491940000000016, 0.0007491810000000015]</msg>
<status status="PASS" starttime="20201030 18:27:10.134" endtime="20201030 18:27:10.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.130" endtime="20201030 18:27:10.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:10.141" endtime="20201030 18:27:10.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.139" endtime="20201030 18:27:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.138" endtime="20201030 18:27:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.737" endtime="20201030 18:27:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.736" endtime="20201030 18:27:10.161"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.170" endtime="20201030 18:27:10.224"></status>
</kw>
<msg timestamp="20201030 18:27:10.224" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.168" endtime="20201030 18:27:10.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.227" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.225" endtime="20201030 18:27:10.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.228" endtime="20201030 18:27:10.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.166" endtime="20201030 18:27:10.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.164" endtime="20201030 18:27:10.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.237" endtime="20201030 18:27:10.521"></status>
</kw>
<msg timestamp="20201030 18:27:10.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018989444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01977575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:10.235" endtime="20201030 18:27:10.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018989444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01977575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:10.525" endtime="20201030 18:27:10.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.533" endtime="20201030 18:27:10.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.233" endtime="20201030 18:27:10.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.231" endtime="20201030 18:27:10.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:10.540" level="INFO">${PHILIP_RES} = [{'diff': 0.0007863060000000005}, {'diff': 0.0007865280000000016}, {'diff': 0.0007865409999999982}, {'diff': 0.000786694000000001}, {'diff': 0.0007868749999999994}, {'diff': 0.0007870280000000021}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:10.537" endtime="20201030 18:27:10.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:10.544" level="INFO">${RESULT} = {'diff': [0.0007863060000000005, 0.0007865280000000016, 0.0007865409999999982, 0.000786694000000001, 0.0007868749999999994, 0.0007870280000000021, 0.0007870139999999991, 0.0007868330000000007, 0.00078...</msg>
<status status="PASS" starttime="20201030 18:27:10.541" endtime="20201030 18:27:10.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.548" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:10.547" endtime="20201030 18:27:10.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.550" level="INFO">VALUE: [0.0007863060000000005, 0.0007865280000000016, 0.0007865409999999982, 0.000786694000000001, 0.0007868749999999994, 0.0007870280000000021, 0.0007870139999999991, 0.0007868330000000007, 0.0007868609999999998, 0.0007868049999999981, 0.0007867769999999989, 0.0007869159999999986, 0.000786806000000001, 0.0007867080000000005, 0.000786903000000002, 0.000786999999999996, 0.0007869439999999978, 0.0007868609999999998, 0.0007867499999999958, 0.0007867229999999961, 0.0007868470000000002, 0.000786806000000001, 0.0007867079999999971, 0.0007869169999999981, 0.0007867219999999966, 0.0007866389999999987, 0.0007866810000000043, 0.0007867360000000032, 0.0007867919999999945, 0.0007867369999999957, 0.0007867359999999962, 0.000786806000000001, 0.0007867499999999958, 0.0007867640000000023, 0.0007868749999999994, 0.0007868200000000006, 0.000786888999999999, 0.0007869729999999964, 0.0007869309999999977, 0.0007868609999999998, 0.0007867639999999954, 0.0007868330000000007, 0.000786806000000001, 0.0007867639999999954, 0.0007868330000000007, 0.000786791000000002, 0.0007867359999999962, 0.000786888999999999, 0.0007869720000000038, 0.0007868749999999994]</msg>
<status status="PASS" starttime="20201030 18:27:10.549" endtime="20201030 18:27:10.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.544" endtime="20201030 18:27:10.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:10.556" endtime="20201030 18:27:10.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.554" endtime="20201030 18:27:10.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.553" endtime="20201030 18:27:10.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.162" endtime="20201030 18:27:10.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.162" endtime="20201030 18:27:10.577"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.585" endtime="20201030 18:27:10.641"></status>
</kw>
<msg timestamp="20201030 18:27:10.642" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.583" endtime="20201030 18:27:10.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.644" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.643" endtime="20201030 18:27:10.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.645" endtime="20201030 18:27:10.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.581" endtime="20201030 18:27:10.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.579" endtime="20201030 18:27:10.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.654" endtime="20201030 18:27:10.957"></status>
</kw>
<msg timestamp="20201030 18:27:10.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020711819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.652" endtime="20201030 18:27:10.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020711819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.961" endtime="20201030 18:27:10.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.969" endtime="20201030 18:27:10.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.650" endtime="20201030 18:27:10.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.648" endtime="20201030 18:27:10.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:10.975" level="INFO">${PHILIP_RES} = [{'diff': 0.0008245000000000023}, {'diff': 0.0008247639999999987}, {'diff': 0.0008245000000000023}, {'diff': 0.0008244999999999988}, {'diff': 0.000824445}, {'diff': 0.0008244310000000005}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:27:10.972" endtime="20201030 18:27:10.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:10.980" level="INFO">${RESULT} = {'diff': [0.0008245000000000023, 0.0008247639999999987, 0.0008245000000000023, 0.0008244999999999988, 0.000824445, 0.0008244310000000005, 0.0008248060000000008, 0.0008246389999999985, 0.00082487499999...</msg>
<status status="PASS" starttime="20201030 18:27:10.976" endtime="20201030 18:27:10.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.985" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:10.984" endtime="20201030 18:27:10.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.987" level="INFO">VALUE: [0.0008245000000000023, 0.0008247639999999987, 0.0008245000000000023, 0.0008244999999999988, 0.000824445, 0.0008244310000000005, 0.0008248060000000008, 0.0008246389999999985, 0.0008248749999999992, 0.000824624999999999, 0.0008245969999999998, 0.0008246939999999973, 0.0008246250000000024, 0.0008245139999999984, 0.0008244580000000001, 0.0008246249999999955, 0.0008246950000000003, 0.0008244719999999997, 0.0008246250000000024, 0.0008246670000000011, 0.0008245829999999968, 0.0008245549999999977, 0.0008245130000000059, 0.0008245559999999971, 0.0008245550000000046, 0.000824639000000002, 0.0008247779999999982, 0.0008246950000000003, 0.0008245829999999968, 0.0008247089999999999, 0.0008245560000000041, 0.000824445, 0.000824527999999998, 0.0008244720000000066, 0.0008245969999999964, 0.0008246529999999946, 0.0008246669999999942, 0.0008245969999999964, 0.0008246110000000029, 0.0008245700000000036, 0.0008245840000000032, 0.0008245690000000042, 0.0008247080000000004, 0.0008246660000000017, 0.0008245139999999984, 0.000824722, 0.000824527999999998, 0.0008247499999999991, 0.0008246809999999938, 0.0008246530000000085]</msg>
<status status="PASS" starttime="20201030 18:27:10.986" endtime="20201030 18:27:10.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.981" endtime="20201030 18:27:10.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:10.992" endtime="20201030 18:27:11.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.990" endtime="20201030 18:27:11.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.989" endtime="20201030 18:27:11.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.577" endtime="20201030 18:27:11.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.577" endtime="20201030 18:27:11.013"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.021" endtime="20201030 18:27:11.079"></status>
</kw>
<msg timestamp="20201030 18:27:11.079" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.019" endtime="20201030 18:27:11.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.082" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.080" endtime="20201030 18:27:11.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.083" endtime="20201030 18:27:11.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.017" endtime="20201030 18:27:11.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.015" endtime="20201030 18:27:11.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.092" endtime="20201030 18:27:11.377"></status>
</kw>
<msg timestamp="20201030 18:27:11.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.090" endtime="20201030 18:27:11.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.381" endtime="20201030 18:27:11.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.389" endtime="20201030 18:27:11.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.088" endtime="20201030 18:27:11.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.086" endtime="20201030 18:27:11.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:11.396" level="INFO">${PHILIP_RES} = [{'diff': 0.0008635560000000014}, {'diff': 0.0008636800000000021}, {'diff': 0.0008637079999999978}, {'diff': 0.0008636939999999982}, {'diff': 0.0008637230000000003}, {'diff': 0.0008637220000000008}, {...</msg>
<status status="PASS" starttime="20201030 18:27:11.393" endtime="20201030 18:27:11.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.399" level="INFO">${RESULT} = {'diff': [0.0008635560000000014, 0.0008636800000000021, 0.0008637079999999978, 0.0008636939999999982, 0.0008637230000000003, 0.0008637220000000008, 0.0008637220000000008, 0.0008635970000000007, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:27:11.397" endtime="20201030 18:27:11.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.404" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:11.403" endtime="20201030 18:27:11.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.406" level="INFO">VALUE: [0.0008635560000000014, 0.0008636800000000021, 0.0008637079999999978, 0.0008636939999999982, 0.0008637230000000003, 0.0008637220000000008, 0.0008637220000000008, 0.0008635970000000007, 0.0008636660000000025, 0.0008635140000000027, 0.0008636249999999963, 0.0008637780000000025, 0.0008635280000000023, 0.000863764000000003, 0.0008637359999999969, 0.0008637359999999969, 0.0008637500000000034, 0.000863764000000003, 0.0008635970000000007, 0.0008635829999999942, 0.0008636249999999998, 0.0008635000000000032, 0.000863665999999999, 0.0008635140000000027, 0.0008636110000000002, 0.0008636390000000063, 0.0008636249999999998, 0.000863652999999999, 0.0008637499999999965, 0.0008636110000000002, 0.0008637079999999978, 0.0008637779999999956, 0.0008636809999999981, 0.0008639309999999983, 0.0008638200000000013, 0.0008637089999999972, 0.0008638050000000022, 0.0008638060000000017, 0.0008635830000000011, 0.0008635269999999959, 0.000863681000000005, 0.0008637089999999972, 0.0008635970000000007, 0.0008637920000000021, 0.000863570000000001, 0.0008635699999999941, 0.0008636249999999929, 0.0008635419999999949, 0.0008637219999999973, 0.0008636389999999994]</msg>
<status status="PASS" starttime="20201030 18:27:11.405" endtime="20201030 18:27:11.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.400" endtime="20201030 18:27:11.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.411" endtime="20201030 18:27:11.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.409" endtime="20201030 18:27:11.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.408" endtime="20201030 18:27:11.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.014" endtime="20201030 18:27:11.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.013" endtime="20201030 18:27:11.432"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.440" endtime="20201030 18:27:11.500"></status>
</kw>
<msg timestamp="20201030 18:27:11.501" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.439" endtime="20201030 18:27:11.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.503" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.502" endtime="20201030 18:27:11.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.504" endtime="20201030 18:27:11.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.436" endtime="20201030 18:27:11.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.434" endtime="20201030 18:27:11.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.515" endtime="20201030 18:27:11.813"></status>
</kw>
<msg timestamp="20201030 18:27:11.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019636917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.512" endtime="20201030 18:27:11.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019636917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.817" endtime="20201030 18:27:11.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.825" endtime="20201030 18:27:11.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.509" endtime="20201030 18:27:11.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.507" endtime="20201030 18:27:11.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:11.832" level="INFO">${PHILIP_RES} = [{'diff': 0.0009040690000000004}, {'diff': 0.0009039719999999994}, {'diff': 0.0009039579999999998}, {'diff': 0.0009040409999999978}, {'diff': 0.0009040699999999999}, {'diff': 0.0009039579999999998}, {...</msg>
<status status="PASS" starttime="20201030 18:27:11.829" endtime="20201030 18:27:11.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.836" level="INFO">${RESULT} = {'diff': [0.0009040690000000004, 0.0009039719999999994, 0.0009039579999999998, 0.0009040409999999978, 0.0009040699999999999, 0.0009039579999999998, 0.0009037920000000005, 0.000904083, 0.00090400000000...</msg>
<status status="PASS" starttime="20201030 18:27:11.833" endtime="20201030 18:27:11.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.840" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:11.839" endtime="20201030 18:27:11.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.842" level="INFO">VALUE: [0.0009040690000000004, 0.0009039719999999994, 0.0009039579999999998, 0.0009040409999999978, 0.0009040699999999999, 0.0009039579999999998, 0.0009037920000000005, 0.000904083, 0.000904000000000002, 0.000903888999999998, 0.0009040549999999974, 0.0009038890000000015, 0.0009038750000000019, 0.0009039860000000025, 0.0009040690000000004, 0.000904000000000002, 0.0009039450000000032, 0.0009037220000000026, 0.0009039030000000045, 0.0009039859999999955, 0.0009038190000000002, 0.0009039169999999971, 0.0009041109999999991, 0.0009040280000000012, 0.0009039299999999972, 0.0009040969999999995, 0.0009040420000000007, 0.0009037640000000013, 0.0009039580000000033, 0.0009039439999999968, 0.0009040140000000016, 0.0009041670000000043, 0.0009042499999999953, 0.0009040969999999995, 0.0009039719999999959, 0.0009038749999999984, 0.0009039999999999951, 0.0009039299999999972, 0.0009041530000000048, 0.0009039719999999959, 0.0009039999999999951, 0.000904000000000002, 0.000903888999999998, 0.0009040140000000016, 0.0009040409999999943, 0.0009040270000000017, 0.0009039309999999967, 0.0009041109999999991, 0.000904000000000002, 0.0009039440000000037]</msg>
<status status="PASS" starttime="20201030 18:27:11.841" endtime="20201030 18:27:11.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.837" endtime="20201030 18:27:11.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.848" endtime="20201030 18:27:11.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.847" endtime="20201030 18:27:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.845" endtime="20201030 18:27:11.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.433" endtime="20201030 18:27:11.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.432" endtime="20201030 18:27:11.869"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.877" endtime="20201030 18:27:11.937"></status>
</kw>
<msg timestamp="20201030 18:27:11.938" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.875" endtime="20201030 18:27:11.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.940" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.939" endtime="20201030 18:27:11.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.941" endtime="20201030 18:27:11.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.873" endtime="20201030 18:27:11.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.871" endtime="20201030 18:27:11.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.950" endtime="20201030 18:27:12.236"></status>
</kw>
<msg timestamp="20201030 18:27:12.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.948" endtime="20201030 18:27:12.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019755403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.240" endtime="20201030 18:27:12.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.248" endtime="20201030 18:27:12.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.946" endtime="20201030 18:27:12.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.944" endtime="20201030 18:27:12.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:12.255" level="INFO">${PHILIP_RES} = [{'diff': 0.0009443609999999977}, {'diff': 0.0009443059999999989}, {'diff': 0.0009443890000000003}, {'diff': 0.0009442360000000011}, {'diff': 0.0009442360000000011}, {'diff': 0.0009443890000000003}, {...</msg>
<status status="PASS" starttime="20201030 18:27:12.252" endtime="20201030 18:27:12.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.259" level="INFO">${RESULT} = {'diff': [0.0009443609999999977, 0.0009443059999999989, 0.0009443890000000003, 0.0009442360000000011, 0.0009442360000000011, 0.0009443890000000003, 0.0009441109999999975, 0.0009441939999999989, 0.0009...</msg>
<status status="PASS" starttime="20201030 18:27:12.256" endtime="20201030 18:27:12.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.264" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:12.263" endtime="20201030 18:27:12.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.266" level="INFO">VALUE: [0.0009443609999999977, 0.0009443059999999989, 0.0009443890000000003, 0.0009442360000000011, 0.0009442360000000011, 0.0009443890000000003, 0.0009441109999999975, 0.0009441939999999989, 0.0009442359999999976, 0.0009441939999999989, 0.0009443050000000029, 0.0009444580000000022, 0.0009445410000000001, 0.000944207999999995, 0.0009443469999999982, 0.0009443050000000064, 0.0009441950000000018, 0.0009443469999999982, 0.0009441670000000027, 0.0009445140000000005, 0.0009443470000000051, 0.0009443329999999986, 0.0009444579999999952, 0.0009444299999999961, 0.0009442500000000006, 0.0009444730000000012, 0.0009445970000000053, 0.0009444159999999965, 0.0009445000000000009, 0.0009444869999999939, 0.0009445559999999992, 0.0009444720000000018, 0.0009444029999999964, 0.0009444719999999948, 0.0009446119999999975, 0.0009444720000000018, 0.000944401999999997, 0.000944722000000002, 0.0009444310000000025, 0.000944528, 0.0009444030000000034, 0.0009444029999999964, 0.0009443889999999969, 0.0009442360000000011, 0.0009442920000000132, 0.0009443050000000064, 0.0009444029999999964, 0.0009443749999999973, 0.0009444030000000103, 0.0009442080000000019]</msg>
<status status="PASS" starttime="20201030 18:27:12.265" endtime="20201030 18:27:12.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.260" endtime="20201030 18:27:12.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.276" endtime="20201030 18:27:12.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.274" endtime="20201030 18:27:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.273" endtime="20201030 18:27:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.870" endtime="20201030 18:27:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.869" endtime="20201030 18:27:12.296"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.305" endtime="20201030 18:27:12.370"></status>
</kw>
<msg timestamp="20201030 18:27:12.371" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.303" endtime="20201030 18:27:12.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.376" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.373" endtime="20201030 18:27:12.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.378" endtime="20201030 18:27:12.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.301" endtime="20201030 18:27:12.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.299" endtime="20201030 18:27:12.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.397" endtime="20201030 18:27:12.703"></status>
</kw>
<msg timestamp="20201030 18:27:12.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019166, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201030 18:27:12.394" endtime="20201030 18:27:12.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019166, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020152, 'source': 'DUT_IC', 'event': 'FALLING',...</msg>
<status status="PASS" starttime="20201030 18:27:12.707" endtime="20201030 18:27:12.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.715" endtime="20201030 18:27:12.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.388" endtime="20201030 18:27:12.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.385" endtime="20201030 18:27:12.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:12.721" level="INFO">${PHILIP_RES} = [{'diff': 0.0009860000000000008}, {'diff': 0.0009861249999999974}, {'diff': 0.0009857500000000005}, {'diff': 0.0009860270000000004}, {'diff': 0.0009862360000000014}, {'diff': 0.0009859579999999986}, {...</msg>
<status status="PASS" starttime="20201030 18:27:12.718" endtime="20201030 18:27:12.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.725" level="INFO">${RESULT} = {'diff': [0.0009860000000000008, 0.0009861249999999974, 0.0009857500000000005, 0.0009860270000000004, 0.0009862360000000014, 0.0009859579999999986, 0.0009860969999999983, 0.0009859999999999973, 0.0009...</msg>
<status status="PASS" starttime="20201030 18:27:12.722" endtime="20201030 18:27:12.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.729" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:12.728" endtime="20201030 18:27:12.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.732" level="INFO">VALUE: [0.0009860000000000008, 0.0009861249999999974, 0.0009857500000000005, 0.0009860270000000004, 0.0009862360000000014, 0.0009859579999999986, 0.0009860969999999983, 0.0009859999999999973, 0.0009864439999999995, 0.0009862639999999971, 0.000986444999999999, 0.0009866250000000014, 0.0009865280000000004, 0.000986624999999998, 0.000986360999999998, 0.0009864170000000033, 0.0009864729999999947, 0.000986360999999998, 0.0009863889999999972, 0.0009864580000000026, 0.000986624999999998, 0.0009864860000000017, 0.0009864860000000017, 0.0009864860000000017, 0.0009865000000000013, 0.0009863049999999998, 0.0009862089999999948, 0.0009863879999999978, 0.000986527000000001, 0.000986138999999997, 0.000986430999999996, 0.000986443999999996, 0.0009865280000000004, 0.0009863470000000055, 0.0009864860000000017, 0.0009864860000000017, 0.000986555, 0.0009865839999999987, 0.0009865000000000013, 0.0009865410000000005, 0.0009864860000000017, 0.0009862919999999928, 0.000986459000000009, 0.0009862080000000023, 0.000986333000000006, 0.0009865140000000078, 0.0009863609999999912, 0.000986237000000001, 0.000986444000000003, 0.0009865969999999918]</msg>
<status status="PASS" starttime="20201030 18:27:12.731" endtime="20201030 18:27:12.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.726" endtime="20201030 18:27:12.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.737" endtime="20201030 18:27:12.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.735" endtime="20201030 18:27:12.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.734" endtime="20201030 18:27:12.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.297" endtime="20201030 18:27:12.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.297" endtime="20201030 18:27:12.758"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.766" endtime="20201030 18:27:12.831"></status>
</kw>
<msg timestamp="20201030 18:27:12.832" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.764" endtime="20201030 18:27:12.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.834" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.833" endtime="20201030 18:27:12.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.835" endtime="20201030 18:27:12.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.762" endtime="20201030 18:27:12.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.760" endtime="20201030 18:27:12.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.844" endtime="20201030 18:27:13.130"></status>
</kw>
<msg timestamp="20201030 18:27:13.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021260403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.843" endtime="20201030 18:27:13.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021260403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.135" endtime="20201030 18:27:13.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.143" endtime="20201030 18:27:13.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.840" endtime="20201030 18:27:13.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.838" endtime="20201030 18:27:13.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:13.149" level="INFO">${PHILIP_RES} = [{'diff': 0.0010282780000000005}, {'diff': 0.0010281250000000013}, {'diff': 0.0010284859999999986}, {'diff': 0.0010284030000000006}, {'diff': 0.0010283750000000015}, {'diff': 0.0010283340000000023}, {...</msg>
<status status="PASS" starttime="20201030 18:27:13.146" endtime="20201030 18:27:13.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:13.153" level="INFO">${RESULT} = {'diff': [0.0010282780000000005, 0.0010281250000000013, 0.0010284859999999986, 0.0010284030000000006, 0.0010283750000000015, 0.0010283340000000023, 0.0010284160000000007, 0.0010284170000000002, 0.0010...</msg>
<status status="PASS" starttime="20201030 18:27:13.150" endtime="20201030 18:27:13.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.157" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:13.156" endtime="20201030 18:27:13.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.159" level="INFO">VALUE: [0.0010282780000000005, 0.0010281250000000013, 0.0010284859999999986, 0.0010284030000000006, 0.0010283750000000015, 0.0010283340000000023, 0.0010284160000000007, 0.0010284170000000002, 0.001028277999999997, 0.0010284439999999999, 0.001028471999999999, 0.0010284030000000041, 0.0010285140000000012, 0.0010284309999999963, 0.001028277000000001, 0.0010284999999999947, 0.0010283189999999998, 0.0010284170000000037, 0.0010284309999999963, 0.001028346999999999, 0.0010283620000000049, 0.0010286249999999983, 0.0010282360000000018, 0.0010283199999999992, 0.0010282780000000005, 0.001028374999999998, 0.0010283340000000057, 0.0010284450000000028, 0.0010285550000000004, 0.001028569, 0.001028486000000002, 0.0010285140000000012, 0.0010283609999999985, 0.0010284590000000024, 0.001028374999999998, 0.0010283610000000054, 0.0010284159999999973, 0.0010284169999999968, 0.0010286250000000052, 0.0010285280000000008, 0.0010284019999999977, 0.0010286109999999987, 0.0010284439999999895, 0.0010282780000000075, 0.001028375000000012, 0.001028346999999999, 0.0010284309999999963, 0.0010284859999999951, 0.0010282910000000006, 0.0010282219999999953]</msg>
<status status="PASS" starttime="20201030 18:27:13.158" endtime="20201030 18:27:13.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.154" endtime="20201030 18:27:13.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.165" endtime="20201030 18:27:13.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.164" endtime="20201030 18:27:13.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.163" endtime="20201030 18:27:13.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.758" endtime="20201030 18:27:13.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.758" endtime="20201030 18:27:13.186"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.194" endtime="20201030 18:27:13.261"></status>
</kw>
<msg timestamp="20201030 18:27:13.262" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.193" endtime="20201030 18:27:13.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.267" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.264" endtime="20201030 18:27:13.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.269" endtime="20201030 18:27:13.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.190" endtime="20201030 18:27:13.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.188" endtime="20201030 18:27:13.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.288" endtime="20201030 18:27:13.579"></status>
</kw>
<msg timestamp="20201030 18:27:13.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018837208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.284" endtime="20201030 18:27:13.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018837208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019909583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.583" endtime="20201030 18:27:13.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.591" endtime="20201030 18:27:13.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.279" endtime="20201030 18:27:13.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.275" endtime="20201030 18:27:13.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:13.597" level="INFO">${PHILIP_RES} = [{'diff': 0.0010723750000000004}, {'diff': 0.0010723189999999987}, {'diff': 0.0010721250000000002}, {'diff': 0.0010722230000000006}, {'diff': 0.0010723610000000008}, {'diff': 0.0010722500000000003}, {...</msg>
<status status="PASS" starttime="20201030 18:27:13.594" endtime="20201030 18:27:13.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:13.605" level="INFO">${RESULT} = {'diff': [0.0010723750000000004, 0.0010723189999999987, 0.0010721250000000002, 0.0010722230000000006, 0.0010723610000000008, 0.0010722500000000003, 0.001072194000000002, 0.0010722360000000007, 0.00107...</msg>
<status status="PASS" starttime="20201030 18:27:13.598" endtime="20201030 18:27:13.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.609" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:13.608" endtime="20201030 18:27:13.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.611" level="INFO">VALUE: [0.0010723750000000004, 0.0010723189999999987, 0.0010721250000000002, 0.0010722230000000006, 0.0010723610000000008, 0.0010722500000000003, 0.001072194000000002, 0.0010722360000000007, 0.0010721529999999993, 0.0010722639999999999, 0.0010720690000000019, 0.0010718060000000015, 0.001071875, 0.001071875, 0.0010719719999999974, 0.0010717080000000045, 0.0010716379999999998, 0.001071680999999998, 0.0010718470000000008, 0.0010718619999999998, 0.0010716389999999992, 0.0010716389999999992, 0.001071875, 0.0010720139999999961, 0.001071986000000004, 0.0010722219999999977, 0.001071903000000006, 0.0010719589999999973, 0.0010718889999999995, 0.0010718470000000008, 0.001071875, 0.0010720420000000022, 0.001071777000000003, 0.0010718889999999995, 0.0010717630000000034, 0.0010719309999999982, 0.001071777000000003, 0.0010719450000000047, 0.0010718199999999942, 0.0010718470000000008, 0.001071875, 0.0010721110000000006, 0.0010718609999999934, 0.0010720000000000035, 0.0010718480000000002, 0.0010719299999999987, 0.0010717770000000099, 0.0010717779999999955, 0.0010717910000000025, 0.001071820000000001]</msg>
<status status="PASS" starttime="20201030 18:27:13.610" endtime="20201030 18:27:13.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.605" endtime="20201030 18:27:13.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.616" endtime="20201030 18:27:13.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.615" endtime="20201030 18:27:13.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.614" endtime="20201030 18:27:13.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.187" endtime="20201030 18:27:13.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.186" endtime="20201030 18:27:13.642"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.650" endtime="20201030 18:27:13.721"></status>
</kw>
<msg timestamp="20201030 18:27:13.722" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.649" endtime="20201030 18:27:13.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.725" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.723" endtime="20201030 18:27:13.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.726" endtime="20201030 18:27:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.646" endtime="20201030 18:27:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.644" endtime="20201030 18:27:13.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.736" endtime="20201030 18:27:14.023"></status>
</kw>
<msg timestamp="20201030 18:27:14.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025169958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026286681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.734" endtime="20201030 18:27:14.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025169958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026286681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.027" endtime="20201030 18:27:14.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.035" endtime="20201030 18:27:14.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.731" endtime="20201030 18:27:14.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.730" endtime="20201030 18:27:14.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:14.042" level="INFO">${PHILIP_RES} = [{'diff': 0.001116723}, {'diff': 0.0011166659999999988}, {'diff': 0.0011166249999999996}, {'diff': 0.0011166950000000009}, {'diff': 0.0011164859999999999}, {'diff': 0.0011165420000000016}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:27:14.039" endtime="20201030 18:27:14.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.051" level="INFO">${RESULT} = {'diff': [0.001116723, 0.0011166659999999988, 0.0011166249999999996, 0.0011166950000000009, 0.0011164859999999999, 0.0011165420000000016, 0.001116624999999996, 0.0011165410000000056, 0.001116763999999...</msg>
<status status="PASS" starttime="20201030 18:27:14.044" endtime="20201030 18:27:14.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.059" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:14.057" endtime="20201030 18:27:14.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.064" level="INFO">VALUE: [0.001116723, 0.0011166659999999988, 0.0011166249999999996, 0.0011166950000000009, 0.0011164859999999999, 0.0011165420000000016, 0.001116624999999996, 0.0011165410000000056, 0.0011167639999999993, 0.001116625000000003, 0.001116818999999998, 0.0011165689999999978, 0.0011166390000000026, 0.0011166950000000009, 0.0011167499999999997, 0.0011164020000000024, 0.0011166800000000018, 0.0011165689999999978, 0.0011166389999999957, 0.0011166109999999965, 0.0011165689999999978, 0.0011164440000000012, 0.0011165280000000055, 0.0011164859999999999, 0.0011164999999999994, 0.0011165690000000048, 0.0011165839999999969, 0.001116431000000001, 0.0011159159999999946, 0.0011160420000000046, 0.001116111000000003, 0.0011161800000000013, 0.0011160969999999965, 0.0011161670000000012, 0.001116194000000001, 0.001116111000000003, 0.001115916999999994, 0.0011161250000000095, 0.0011160830000000038, 0.0011161120000000024, 0.0011160279999999911, 0.0011160559999999903, 0.001115999999999992, 0.0011161669999999874, 0.0011161249999999956, 0.0011161809999999939, 0.0011159310000000006, 0.0011159720000000067, 0.0011161120000000024, 0.0011160969999999965]</msg>
<status status="PASS" starttime="20201030 18:27:14.062" endtime="20201030 18:27:14.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.052" endtime="20201030 18:27:14.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.075" endtime="20201030 18:27:14.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.072" endtime="20201030 18:27:14.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.069" endtime="20201030 18:27:14.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.643" endtime="20201030 18:27:14.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.642" endtime="20201030 18:27:14.100"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.120" endtime="20201030 18:27:14.199"></status>
</kw>
<msg timestamp="20201030 18:27:14.199" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.115" endtime="20201030 18:27:14.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.202" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.200" endtime="20201030 18:27:14.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.203" endtime="20201030 18:27:14.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.109" endtime="20201030 18:27:14.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.105" endtime="20201030 18:27:14.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.212" endtime="20201030 18:27:14.499"></status>
</kw>
<msg timestamp="20201030 18:27:14.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042688056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043849181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.210" endtime="20201030 18:27:14.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042688056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043849181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.503" endtime="20201030 18:27:14.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.511" endtime="20201030 18:27:14.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.208" endtime="20201030 18:27:14.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.206" endtime="20201030 18:27:14.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:14.517" level="INFO">${PHILIP_RES} = [{'diff': 0.001161124999999999}, {'diff': 0.001161124999999999}, {'diff': 0.0011610969999999998}, {'diff': 0.0011609860000000027}, {'diff': 0.0011611939999999973}, {'diff': 0.0011612220000000034}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:14.514" endtime="20201030 18:27:14.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.521" level="INFO">${RESULT} = {'diff': [0.001161124999999999, 0.001161124999999999, 0.0011610969999999998, 0.0011609860000000027, 0.0011611939999999973, 0.0011612220000000034, 0.0011611669999999977, 0.0011610000000000023, 0.001161...</msg>
<status status="PASS" starttime="20201030 18:27:14.518" endtime="20201030 18:27:14.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.526" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:14.525" endtime="20201030 18:27:14.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.528" level="INFO">VALUE: [0.001161124999999999, 0.001161124999999999, 0.0011610969999999998, 0.0011609860000000027, 0.0011611939999999973, 0.0011612220000000034, 0.0011611669999999977, 0.0011610000000000023, 0.0011611109999999994, 0.0011611109999999994, 0.001161027000000002, 0.0011610700000000002, 0.0011612919999999943, 0.0011610280000000014, 0.0011610969999999998, 0.001161042000000001, 0.001161235999999996, 0.001161152999999998, 0.0011610830000000072, 0.0011610690000000007, 0.0011610279999999945, 0.0011610140000000019, 0.0011611669999999907, 0.0011609870000000022, 0.0011611950000000038, 0.0011610410000000015, 0.001161055000000008, 0.0011609999999999954, 0.0011609030000000048, 0.001161124999999999, 0.00116097200000001, 0.001161124999999999, 0.0011610410000000015, 0.001161042000000001, 0.0011610969999999998, 0.001161222999999989, 0.0011610829999999933, 0.0011611799999999978, 0.001161207999999997, 0.0011610140000000019, 0.0011611390000000055, 0.0011612909999999949, 0.0011611109999999925, 0.0011613190000000079, 0.001161152999999998, 0.001161347000000007, 0.001161124999999999, 0.0011611950000000038, 0.0011609729999999957, 0.0011609169999999974]</msg>
<status status="PASS" starttime="20201030 18:27:14.527" endtime="20201030 18:27:14.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.522" endtime="20201030 18:27:14.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.534" endtime="20201030 18:27:14.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.532" endtime="20201030 18:27:14.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.531" endtime="20201030 18:27:14.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.102" endtime="20201030 18:27:14.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.101" endtime="20201030 18:27:14.554"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.563" endtime="20201030 18:27:14.640"></status>
</kw>
<msg timestamp="20201030 18:27:14.640" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.561" endtime="20201030 18:27:14.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.643" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.642" endtime="20201030 18:27:14.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.644" endtime="20201030 18:27:14.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.559" endtime="20201030 18:27:14.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.557" endtime="20201030 18:27:14.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.653" endtime="20201030 18:27:14.952"></status>
</kw>
<msg timestamp="20201030 18:27:14.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:14.651" endtime="20201030 18:27:14.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023118597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:14.956" endtime="20201030 18:27:14.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.964" endtime="20201030 18:27:14.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.649" endtime="20201030 18:27:14.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.647" endtime="20201030 18:27:14.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:14.970" level="INFO">${PHILIP_RES} = [{'diff': 0.0012075970000000012}, {'diff': 0.0012074310000000019}, {'diff': 0.0012076949999999982}, {'diff': 0.0012076250000000004}, {'diff': 0.001207639}, {'diff': 0.0012076110000000008}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:27:14.967" endtime="20201030 18:27:14.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.975" level="INFO">${RESULT} = {'diff': [0.0012075970000000012, 0.0012074310000000019, 0.0012076949999999982, 0.0012076250000000004, 0.001207639, 0.0012076110000000008, 0.001207764, 0.0012076799999999992, 0.0012073749999999966, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:14.971" endtime="20201030 18:27:14.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.979" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:14.978" endtime="20201030 18:27:14.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.982" level="INFO">VALUE: [0.0012075970000000012, 0.0012074310000000019, 0.0012076949999999982, 0.0012076250000000004, 0.001207639, 0.0012076110000000008, 0.001207764, 0.0012076799999999992, 0.0012073749999999966, 0.0012077080000000018, 0.0012076109999999973, 0.0012077779999999996, 0.0012078329999999984, 0.0012075840000000046, 0.001207554999999999, 0.0012075000000000002, 0.001207360999999997, 0.001207554999999999, 0.0012076940000000022, 0.0012075139999999998, 0.0012076940000000022, 0.0012076389999999965, 0.0012077500000000005, 0.0012077779999999996, 0.0012074860000000007, 0.0012074860000000007, 0.001207764, 0.0012076250000000038, 0.0012075970000000047, 0.0012075969999999978, 0.0012075139999999998, 0.001207555000000006, 0.001207764, 0.0012075000000000002, 0.0012075000000000002, 0.0012074450000000014, 0.001207875000000011, 0.0012078050000000062, 0.0012078610000000045, 0.001207444000000002, 0.0012075420000000059, 0.0012075980000000042, 0.0012076940000000091, 0.0012077080000000018, 0.0012078189999999989, 0.0012078889999999898, 0.0012079589999999946, 0.0012078890000000037, 0.0012076670000000095, 0.0012077499999999936]</msg>
<status status="PASS" starttime="20201030 18:27:14.980" endtime="20201030 18:27:14.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.976" endtime="20201030 18:27:14.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.987" endtime="20201030 18:27:15.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.985" endtime="20201030 18:27:15.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.984" endtime="20201030 18:27:15.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.555" endtime="20201030 18:27:15.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.555" endtime="20201030 18:27:15.007"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.016" endtime="20201030 18:27:15.093"></status>
</kw>
<msg timestamp="20201030 18:27:15.093" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.014" endtime="20201030 18:27:15.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.096" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.094" endtime="20201030 18:27:15.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.097" endtime="20201030 18:27:15.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.012" endtime="20201030 18:27:15.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.010" endtime="20201030 18:27:15.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.106" endtime="20201030 18:27:15.394"></status>
</kw>
<msg timestamp="20201030 18:27:15.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021188611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.104" endtime="20201030 18:27:15.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021188611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.398" endtime="20201030 18:27:15.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.406" endtime="20201030 18:27:15.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.102" endtime="20201030 18:27:15.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.100" endtime="20201030 18:27:15.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:15.412" level="INFO">${PHILIP_RES} = [{'diff': 0.001254485999999999}, {'diff': 0.0012544020000000017}, {'diff': 0.0012542920000000006}, {'diff': 0.0012543470000000029}, {'diff': 0.001254472000000003}, {'diff': 0.0012542219999999993}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:15.409" endtime="20201030 18:27:15.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:15.416" level="INFO">${RESULT} = {'diff': [0.001254485999999999, 0.0012544020000000017, 0.0012542920000000006, 0.0012543470000000029, 0.001254472000000003, 0.0012542219999999993, 0.0012542920000000006, 0.0012541520000000014, 0.001254...</msg>
<status status="PASS" starttime="20201030 18:27:15.413" endtime="20201030 18:27:15.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.420" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:15.419" endtime="20201030 18:27:15.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.423" level="INFO">VALUE: [0.001254485999999999, 0.0012544020000000017, 0.0012542920000000006, 0.0012543470000000029, 0.001254472000000003, 0.0012542219999999993, 0.0012542920000000006, 0.0012541520000000014, 0.0012544449999999999, 0.001254374999999995, 0.001254292000000004, 0.0012543200000000032, 0.001254375000000002, 0.0012542499999999984, 0.001254375000000002, 0.0012545139999999982, 0.0012543610000000024, 0.0012542219999999993, 0.0012544439999999935, 0.0012545830000000036, 0.0012543470000000029, 0.001254375000000002, 0.0012544160000000013, 0.0012543199999999963, 0.001254375000000002, 0.0012542359999999989, 0.001254374999999995, 0.0012545419999999974, 0.0012542079999999997, 0.001254263999999998, 0.0012544719999999995, 0.0012543189999999968, 0.0012546529999999945, 0.0012543610000000094, 0.0012545420000000113, 0.0012544999999999917, 0.0012545139999999982, 0.0012545139999999982, 0.0012547080000000072, 0.0012545830000000036, 0.0012544589999999994, 0.0012544300000000008, 0.001254540999999998, 0.0012543199999999893, 0.001254276999999998, 0.001254444999999993, 0.001254472999999992, 0.001254235999999992, 0.0012544159999999943, 0.0012544439999999935]</msg>
<status status="PASS" starttime="20201030 18:27:15.422" endtime="20201030 18:27:15.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.417" endtime="20201030 18:27:15.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.428" endtime="20201030 18:27:15.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.426" endtime="20201030 18:27:15.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.425" endtime="20201030 18:27:15.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.008" endtime="20201030 18:27:15.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.008" endtime="20201030 18:27:15.448"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.457" endtime="20201030 18:27:15.539"></status>
</kw>
<msg timestamp="20201030 18:27:15.540" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.455" endtime="20201030 18:27:15.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.542" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.541" endtime="20201030 18:27:15.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.543" endtime="20201030 18:27:15.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.453" endtime="20201030 18:27:15.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.451" endtime="20201030 18:27:15.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.552" endtime="20201030 18:27:15.850"></status>
</kw>
<msg timestamp="20201030 18:27:15.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022165861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023467569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.551" endtime="20201030 18:27:15.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022165861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023467569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.854" endtime="20201030 18:27:15.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.862" endtime="20201030 18:27:15.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.548" endtime="20201030 18:27:15.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.546" endtime="20201030 18:27:15.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:15.868" level="INFO">${PHILIP_RES} = [{'diff': 0.0013017080000000021}, {'diff': 0.0013017090000000016}, {'diff': 0.0013018470000000018}, {'diff': 0.001302000000000001}, {'diff': 0.0013017919999999995}, {'diff': 0.0013019169999999997}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:15.865" endtime="20201030 18:27:15.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:15.872" level="INFO">${RESULT} = {'diff': [0.0013017080000000021, 0.0013017090000000016, 0.0013018470000000018, 0.001302000000000001, 0.0013017919999999995, 0.0013019169999999997, 0.0013018610000000014, 0.001301763999999997, 0.001302...</msg>
<status status="PASS" starttime="20201030 18:27:15.869" endtime="20201030 18:27:15.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.876" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:15.875" endtime="20201030 18:27:15.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.879" level="INFO">VALUE: [0.0013017080000000021, 0.0013017090000000016, 0.0013018470000000018, 0.001302000000000001, 0.0013017919999999995, 0.0013019169999999997, 0.0013018610000000014, 0.001301763999999997, 0.0013020000000000045, 0.0013018059999999956, 0.001301680999999999, 0.0013020419999999963, 0.0013018890000000005, 0.0013017780000000034, 0.001301680999999999, 0.0013016250000000007, 0.0013015969999999946, 0.0013019299999999998, 0.0013017499999999974, 0.0013017640000000039, 0.0013017079999999986, 0.0013017500000000043, 0.001301791999999996, 0.0013016250000000007, 0.0013018059999999956, 0.0013016669999999994, 0.001301666, 0.001301570000000002, 0.0013018199999999952, 0.001301486999999997, 0.0013016799999999995, 0.0013016119999999937, 0.0013017220000000052, 0.0013015279999999962, 0.0013016669999999925, 0.0013018750000000079, 0.0013018330000000022, 0.0013017230000000046, 0.0013016250000000007, 0.0013018469999999949, 0.0013015140000000036, 0.0013018609999999875, 0.0013015690000000024, 0.0013018610000000014, 0.0013018199999999952, 0.0013018190000000096, 0.001302278000000004, 0.0013023889999999871, 0.0013022360000000122, 0.001302306000000003]</msg>
<status status="PASS" starttime="20201030 18:27:15.877" endtime="20201030 18:27:15.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.873" endtime="20201030 18:27:15.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.884" endtime="20201030 18:27:15.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.883" endtime="20201030 18:27:15.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.882" endtime="20201030 18:27:15.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.449" endtime="20201030 18:27:15.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.449" endtime="20201030 18:27:15.905"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.913" endtime="20201030 18:27:15.997"></status>
</kw>
<msg timestamp="20201030 18:27:15.998" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.912" endtime="20201030 18:27:15.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.000" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.999" endtime="20201030 18:27:16.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.001" endtime="20201030 18:27:16.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.909" endtime="20201030 18:27:16.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.907" endtime="20201030 18:27:16.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.010" endtime="20201030 18:27:16.297"></status>
</kw>
<msg timestamp="20201030 18:27:16.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.009" endtime="20201030 18:27:16.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024107708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.301" endtime="20201030 18:27:16.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.309" endtime="20201030 18:27:16.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.006" endtime="20201030 18:27:16.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.004" endtime="20201030 18:27:16.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:16.315" level="INFO">${PHILIP_RES} = [{'diff': 0.0013508889999999975}, {'diff': 0.0013505410000000002}, {'diff': 0.0013506660000000004}, {'diff': 0.001350709000000002}, {'diff': 0.0013506390000000007}, {'diff': 0.0013506669999999998}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:16.312" endtime="20201030 18:27:16.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.320" level="INFO">${RESULT} = {'diff': [0.0013508889999999975, 0.0013505410000000002, 0.0013506660000000004, 0.001350709000000002, 0.0013506390000000007, 0.0013506669999999998, 0.0013506250000000011, 0.0013505830000000024, 0.00135...</msg>
<status status="PASS" starttime="20201030 18:27:16.316" endtime="20201030 18:27:16.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.324" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:16.323" endtime="20201030 18:27:16.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.327" level="INFO">VALUE: [0.0013508889999999975, 0.0013505410000000002, 0.0013506660000000004, 0.001350709000000002, 0.0013506390000000007, 0.0013506669999999998, 0.0013506250000000011, 0.0013505830000000024, 0.0013504999999999975, 0.0013510139999999976, 0.0013508750000000014, 0.0013506390000000007, 0.0013502640000000038, 0.001350304999999996, 0.001350485999999998, 0.0013504449999999987, 0.0013502079999999986, 0.001350193999999999, 0.001350193999999999, 0.0013501250000000006, 0.0013502780000000034, 0.0013501949999999985, 0.0013502229999999976, 0.0013503330000000022, 0.0013500280000000031, 0.001350292000000003, 0.0013502359999999977, 0.0013502499999999973, 0.0013500699999999949, 0.0013503329999999952, 0.0013502360000000047, 0.0013503610000000082, 0.0013504720000000053, 0.0013506519999999939, 0.0013502779999999964, 0.0013502499999999973, 0.0013504020000000005, 0.0013504440000000062, 0.0013504999999999906, 0.001350485999999998, 0.001350320000000002, 0.00135026399999999, 0.0013503329999999952, 0.0013501249999999937, 0.0013502219999999981, 0.0013503470000000017, 0.0013501659999999999, 0.0013499589999999978, 0.0013500690000000093, 0.0013502219999999981]</msg>
<status status="PASS" starttime="20201030 18:27:16.325" endtime="20201030 18:27:16.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.321" endtime="20201030 18:27:16.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.331" endtime="20201030 18:27:16.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.330" endtime="20201030 18:27:16.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.329" endtime="20201030 18:27:16.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.906" endtime="20201030 18:27:16.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.905" endtime="20201030 18:27:16.352"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.360" endtime="20201030 18:27:16.449"></status>
</kw>
<msg timestamp="20201030 18:27:16.449" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.359" endtime="20201030 18:27:16.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.452" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.450" endtime="20201030 18:27:16.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.453" endtime="20201030 18:27:16.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.356" endtime="20201030 18:27:16.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.355" endtime="20201030 18:27:16.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.462" endtime="20201030 18:27:16.764"></status>
</kw>
<msg timestamp="20201030 18:27:16.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024082472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.460" endtime="20201030 18:27:16.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022682639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024082472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.768" endtime="20201030 18:27:16.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.776" endtime="20201030 18:27:16.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.458" endtime="20201030 18:27:16.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.456" endtime="20201030 18:27:16.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:16.783" level="INFO">${PHILIP_RES} = [{'diff': 0.0013998329999999996}, {'diff': 0.001399694}, {'diff': 0.0013998329999999996}, {'diff': 0.0013996809999999998}, {'diff': 0.0013999719999999993}, {'diff': 0.001399694}, {'diff': 0.0013997630...</msg>
<status status="PASS" starttime="20201030 18:27:16.779" endtime="20201030 18:27:16.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.786" level="INFO">${RESULT} = {'diff': [0.0013998329999999996, 0.001399694, 0.0013998329999999996, 0.0013996809999999998, 0.0013999719999999993, 0.001399694, 0.0013997630000000053, 0.0013998189999999966, 0.0013996249999999946, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:16.783" endtime="20201030 18:27:16.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.791" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:16.790" endtime="20201030 18:27:16.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.793" level="INFO">VALUE: [0.0013998329999999996, 0.001399694, 0.0013998329999999996, 0.0013996809999999998, 0.0013999719999999993, 0.001399694, 0.0013997630000000053, 0.0013998189999999966, 0.0013996249999999946, 0.0013996670000000003, 0.001399500000000005, 0.001399985999999999, 0.0013997769999999979, 0.0013999579999999998, 0.001399833000000003, 0.0013997629999999983, 0.001400013999999998, 0.0013999170000000005, 0.0013996800000000004, 0.0013995840000000023, 0.0013998329999999962, 0.001400013999999998, 0.0013996670000000003, 0.0013996660000000008, 0.0013997359999999986, 0.0013996800000000004, 0.0013999300000000006, 0.0013998470000000096, 0.0013997359999999986, 0.0013998189999999966, 0.0014000269999999981, 0.0013999719999999993, 0.0013997500000000052, 0.001399693999999993, 0.0013997639999999978, 0.0013996389999999942, 0.0013997359999999986, 0.0013995549999999968, 0.0013997500000000052, 0.0013997780000000043, 0.0014151389999999958, 0.0013998470000000096, 0.0013997639999999978, 0.001399791999999997, 0.0013997219999999921, 0.0013997639999999978, 0.0013997639999999978, 0.0013997359999999986, 0.0013996669999999933, 0.0013997079999999995]</msg>
<status status="PASS" starttime="20201030 18:27:16.792" endtime="20201030 18:27:16.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.787" endtime="20201030 18:27:16.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.798" endtime="20201030 18:27:16.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.797" endtime="20201030 18:27:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.795" endtime="20201030 18:27:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.353" endtime="20201030 18:27:16.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.353" endtime="20201030 18:27:16.819"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.827" endtime="20201030 18:27:16.916"></status>
</kw>
<msg timestamp="20201030 18:27:16.917" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.826" endtime="20201030 18:27:16.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.919" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.918" endtime="20201030 18:27:16.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.920" endtime="20201030 18:27:16.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.823" endtime="20201030 18:27:16.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.821" endtime="20201030 18:27:16.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.929" endtime="20201030 18:27:17.215"></status>
</kw>
<msg timestamp="20201030 18:27:17.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.928" endtime="20201030 18:27:17.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023426861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024877417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.221" endtime="20201030 18:27:17.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.231" endtime="20201030 18:27:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.925" endtime="20201030 18:27:17.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.924" endtime="20201030 18:27:17.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:17.240" level="INFO">${PHILIP_RES} = [{'diff': 0.0014505559999999987}, {'diff': 0.0014500699999999977}, {'diff': 0.0014500980000000004}, {'diff': 0.0014498610000000002}, {'diff': 0.001450027999999999}, {'diff': 0.0014499449999999976}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:17.236" endtime="20201030 18:27:17.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.244" level="INFO">${RESULT} = {'diff': [0.0014505559999999987, 0.0014500699999999977, 0.0014500980000000004, 0.0014498610000000002, 0.001450027999999999, 0.0014499449999999976, 0.001449723, 0.0014499580000000012, 0.001449749999999...</msg>
<status status="PASS" starttime="20201030 18:27:17.241" endtime="20201030 18:27:17.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.249" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:17.248" endtime="20201030 18:27:17.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.251" level="INFO">VALUE: [0.0014505559999999987, 0.0014500699999999977, 0.0014500980000000004, 0.0014498610000000002, 0.001450027999999999, 0.0014499449999999976, 0.001449723, 0.0014499580000000012, 0.0014497499999999997, 0.0014499590000000007, 0.0014497779999999988, 0.001449431000000001, 0.001449526999999999, 0.0014498610000000037, 0.0014497220000000005, 0.0014497919999999984, 0.0014497639999999992, 0.001449945000000001, 0.0014498750000000032, 0.0014500139999999995, 0.001450110999999997, 0.0014501250000000035, 0.0014499860000000003, 0.0014501249999999966, 0.0014499580000000012, 0.0014501799999999954, 0.0014499030000000024, 0.0014499159999999955, 0.0014500139999999995, 0.0014499159999999955, 0.0014499719999999938, 0.0014500839999999904, 0.0014505279999999926, 0.0014506799999999959, 0.001450596999999998, 0.0014507089999999945, 0.0014507359999999941, 0.001450624999999997, 0.0014505689999999988, 0.0014506670000000027, 0.0014505839999999909, 0.0014504860000000008, 0.001450638000000004, 0.0014506110000000044, 0.0014507220000000015, 0.0014508329999999986, 0.0014508750000000042, 0.0014506110000000044, 0.0014505830000000053, 0.0014506109999999905]</msg>
<status status="PASS" starttime="20201030 18:27:17.250" endtime="20201030 18:27:17.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.245" endtime="20201030 18:27:17.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.257" endtime="20201030 18:27:17.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.255" endtime="20201030 18:27:17.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.254" endtime="20201030 18:27:17.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.820" endtime="20201030 18:27:17.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.819" endtime="20201030 18:27:17.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.483" endtime="20201030 18:27:17.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.289" endtime="20201030 18:27:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.286" endtime="20201030 18:27:17.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.283" endtime="20201030 18:27:17.312"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:55.232" endtime="20201030 18:27:17.313" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:26:33.399" endtime="20201030 18:27:17.337"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.430" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:17.438" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:18.561" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:17.429" endtime="20201030 18:27:18.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.564" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:18.563" endtime="20201030 18:27:18.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.428" endtime="20201030 18:27:18.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.567" endtime="20201030 18:27:18.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.566" endtime="20201030 18:27:18.759"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.771" endtime="20201030 18:27:18.796"></status>
</kw>
<msg timestamp="20201030 18:27:18.797" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['sion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.770" endtime="20201030 18:27:18.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.803" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['sion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.800" endtime="20201030 18:27:18.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:18.806" endtime="20201030 18:27:18.811"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:18.767" endtime="20201030 18:27:18.812"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:18.765" endtime="20201030 18:27:18.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.764" endtime="20201030 18:27:18.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:18.822" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:18.821" endtime="20201030 18:27:18.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.816" endtime="20201030 18:27:18.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.763" endtime="20201030 18:27:18.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.763" endtime="20201030 18:27:18.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.828" endtime="20201030 18:27:18.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.761" endtime="20201030 18:27:18.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.835" endtime="20201030 18:27:18.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.760" endtime="20201030 18:27:18.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.426" endtime="20201030 18:27:18.841"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.853" endtime="20201030 18:27:18.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.850" endtime="20201030 18:27:18.877"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.899" endtime="20201030 18:27:18.917"></status>
</kw>
<msg timestamp="20201030 18:27:18.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.897" endtime="20201030 18:27:18.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.919" endtime="20201030 18:27:18.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.924" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:18.922" endtime="20201030 18:27:18.924"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:18.895" endtime="20201030 18:27:18.925"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:18.891" endtime="20201030 18:27:18.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.888" endtime="20201030 18:27:18.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:18.929" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:18.929" endtime="20201030 18:27:18.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.926" endtime="20201030 18:27:18.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.886" endtime="20201030 18:27:18.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.885" endtime="20201030 18:27:18.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.931" endtime="20201030 18:27:18.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.882" endtime="20201030 18:27:18.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.878" endtime="20201030 18:27:18.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.847" endtime="20201030 18:27:18.934"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.945" endtime="20201030 18:27:18.966"></status>
</kw>
<msg timestamp="20201030 18:27:18.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.944" endtime="20201030 18:27:18.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.967" endtime="20201030 18:27:18.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.970" endtime="20201030 18:27:18.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.940" endtime="20201030 18:27:18.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.937" endtime="20201030 18:27:18.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.980" endtime="20201030 18:27:19.273"></status>
</kw>
<msg timestamp="20201030 18:27:19.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084098875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.978" endtime="20201030 18:27:19.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084098875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.277" endtime="20201030 18:27:19.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.286" endtime="20201030 18:27:19.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.976" endtime="20201030 18:27:19.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.974" endtime="20201030 18:27:19.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.293" level="INFO">${RESULT} = [{'diff': 6.083000000003946e-06}, {'diff': 6.096999999996577e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.096999999996577e-06}, {'diff': 6.083000000003946e-06}, {'diff': 6.111000000003086e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:19.289" endtime="20201030 18:27:19.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:19.297" level="INFO">${ACCURACY} = {'diff': [6.083000000003946e-06, 6.096999999996577e-06, 6.069999999996911e-06, 6.096999999996577e-06, 6.083000000003946e-06, 6.111000000003086e-06, 5.985999999999492e-06, 6.069999999996911e-06, 6.1390...</msg>
<status status="PASS" starttime="20201030 18:27:19.294" endtime="20201030 18:27:19.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.302" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:27:19.301" endtime="20201030 18:27:19.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.305" level="INFO">VALUE: [6.083000000003946e-06, 6.096999999996577e-06, 6.069999999996911e-06, 6.096999999996577e-06, 6.083000000003946e-06, 6.111000000003086e-06, 5.985999999999492e-06, 6.069999999996911e-06, 6.139000000002226e-06, 6.041999999997771e-06, 6.02800000000514e-06, 6.096999999996577e-06, 6.111000000003086e-06, 6.083999999989542e-06, 6.083999999989542e-06, 6.097000000010455e-06, 6.083000000003946e-06, 6.0550000000048065e-06, 6.083000000003946e-06, 6.124999999995717e-06, 6.069999999996911e-06, 6.069000000011315e-06, 6.054999999990929e-06, 6.096999999996577e-06, 6.055999999990402e-06, 6.083000000003946e-06, 6.0689999999974376e-06, 6.083000000003946e-06, 6.083999999989542e-06, 6.110999999989208e-06, 6.139000000002226e-06, 6.069999999996911e-06, 6.040999999998298e-06, 6.040999999998298e-06, 6.041999999997771e-06, 6.08400000000342e-06, 6.096999999996577e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.05600000000428e-06, 6.05600000000428e-06, 6.069000000011315e-06, 6.055999999990402e-06, 6.096999999996577e-06, 6.05600000000428e-06, 6.05600000000428e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.096999999996577e-06, 6.111000000003086e-06]</msg>
<status status="PASS" starttime="20201030 18:27:19.304" endtime="20201030 18:27:19.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.298" endtime="20201030 18:27:19.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.310" endtime="20201030 18:27:19.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.308" endtime="20201030 18:27:19.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.307" endtime="20201030 18:27:19.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.936" endtime="20201030 18:27:19.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.935" endtime="20201030 18:27:19.331"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.344" endtime="20201030 18:27:19.365"></status>
</kw>
<msg timestamp="20201030 18:27:19.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.341" endtime="20201030 18:27:19.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.366" endtime="20201030 18:27:19.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.369" endtime="20201030 18:27:19.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.337" endtime="20201030 18:27:19.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.334" endtime="20201030 18:27:19.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.379" endtime="20201030 18:27:19.666"></status>
</kw>
<msg timestamp="20201030 18:27:19.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030227583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030233639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.377" endtime="20201030 18:27:19.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030227583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030233639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.673" endtime="20201030 18:27:19.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.688" endtime="20201030 18:27:19.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.375" endtime="20201030 18:27:19.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.373" endtime="20201030 18:27:19.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.705" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.097000000000047e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:19.694" endtime="20201030 18:27:19.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:19.722" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.0829999999970075e-06, 6.082...</msg>
<status status="PASS" starttime="20201030 18:27:19.713" endtime="20201030 18:27:19.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.732" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:27:19.729" endtime="20201030 18:27:19.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.737" level="INFO">VALUE: [6.056000000000811e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.054999999997868e-06, 6.069999999996911e-06, 5.999999999999062e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.040999999998298e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.042000000001241e-06]</msg>
<status status="PASS" starttime="20201030 18:27:19.734" endtime="20201030 18:27:19.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.724" endtime="20201030 18:27:19.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.747" endtime="20201030 18:27:19.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.744" endtime="20201030 18:27:19.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.741" endtime="20201030 18:27:19.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.332" endtime="20201030 18:27:19.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.331" endtime="20201030 18:27:19.769"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.780" endtime="20201030 18:27:19.796"></status>
</kw>
<msg timestamp="20201030 18:27:19.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.778" endtime="20201030 18:27:19.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.798" endtime="20201030 18:27:19.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.801" endtime="20201030 18:27:19.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.775" endtime="20201030 18:27:19.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.772" endtime="20201030 18:27:19.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.812" endtime="20201030 18:27:20.100"></status>
</kw>
<msg timestamp="20201030 18:27:20.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.810" endtime="20201030 18:27:20.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.105" endtime="20201030 18:27:20.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.113" endtime="20201030 18:27:20.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.807" endtime="20201030 18:27:20.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.805" endtime="20201030 18:27:20.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.120" level="INFO">${RESULT} = [{'diff': 6.0979999999995205e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.040999999998298e-06}, {'diff': 6.055999999997341e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:20.117" endtime="20201030 18:27:20.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:20.124" level="INFO">${ACCURACY} = {'diff': [6.0979999999995205e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:27:20.121" endtime="20201030 18:27:20.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.129" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:27:20.128" endtime="20201030 18:27:20.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.132" level="INFO">VALUE: [6.0979999999995205e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.055999999997341e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.137999999999283e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.139000000002226e-06, 6.070000000000381e-06, 6.0979999999995205e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.0829999999970075e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.0829999999970075e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.130" endtime="20201030 18:27:20.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.125" endtime="20201030 18:27:20.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.136" endtime="20201030 18:27:20.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.135" endtime="20201030 18:27:20.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.133" endtime="20201030 18:27:20.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.770" endtime="20201030 18:27:20.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.770" endtime="20201030 18:27:20.157"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.167" endtime="20201030 18:27:20.186"></status>
</kw>
<msg timestamp="20201030 18:27:20.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.165" endtime="20201030 18:27:20.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.188" endtime="20201030 18:27:20.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.191" endtime="20201030 18:27:20.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.162" endtime="20201030 18:27:20.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.160" endtime="20201030 18:27:20.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.203" endtime="20201030 18:27:20.489"></status>
</kw>
<msg timestamp="20201030 18:27:20.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.201" endtime="20201030 18:27:20.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.493" endtime="20201030 18:27:20.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.502" endtime="20201030 18:27:20.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.197" endtime="20201030 18:27:20.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.196" endtime="20201030 18:27:20.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.509" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.110999999999617e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.0829999999970075e-06...</msg>
<status status="PASS" starttime="20201030 18:27:20.506" endtime="20201030 18:27:20.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:20.513" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6...</msg>
<status status="PASS" starttime="20201030 18:27:20.510" endtime="20201030 18:27:20.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.518" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:27:20.517" endtime="20201030 18:27:20.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.520" level="INFO">VALUE: [6.0839999999999506e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.0829999999970075e-06, 6.0829999999970075e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.110999999999617e-06, 6.0829999999970075e-06, 6.027000000002197e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.1389999999987566e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.519" endtime="20201030 18:27:20.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.514" endtime="20201030 18:27:20.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.526" endtime="20201030 18:27:20.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.524" endtime="20201030 18:27:20.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.523" endtime="20201030 18:27:20.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.158" endtime="20201030 18:27:20.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.157" endtime="20201030 18:27:20.547"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.556" endtime="20201030 18:27:20.575"></status>
</kw>
<msg timestamp="20201030 18:27:20.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.555" endtime="20201030 18:27:20.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.577" endtime="20201030 18:27:20.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.579" endtime="20201030 18:27:20.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.552" endtime="20201030 18:27:20.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.550" endtime="20201030 18:27:20.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.589" endtime="20201030 18:27:20.876"></status>
</kw>
<msg timestamp="20201030 18:27:20.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.587" endtime="20201030 18:27:20.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024764806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024770903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.880" endtime="20201030 18:27:20.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.889" endtime="20201030 18:27:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.585" endtime="20201030 18:27:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.583" endtime="20201030 18:27:20.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.896" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.0839999999999506e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:20.893" endtime="20201030 18:27:20.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:20.901" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:27:20.897" endtime="20201030 18:27:20.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.906" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:27:20.905" endtime="20201030 18:27:20.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.908" level="INFO">VALUE: [6.097000000000047e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.0689999999974376e-06, 6.124999999999187e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.125000000002656e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.08400000000342e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 5.999999999999062e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.0139999999986316e-06, 6.097000000000047e-06, 6.139000000002226e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.907" endtime="20201030 18:27:20.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.902" endtime="20201030 18:27:20.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.914" endtime="20201030 18:27:20.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.912" endtime="20201030 18:27:20.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.911" endtime="20201030 18:27:20.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.548" endtime="20201030 18:27:20.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.548" endtime="20201030 18:27:20.934"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.943" endtime="20201030 18:27:20.962"></status>
</kw>
<msg timestamp="20201030 18:27:20.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.942" endtime="20201030 18:27:20.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.963" endtime="20201030 18:27:20.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.966" endtime="20201030 18:27:20.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.939" endtime="20201030 18:27:20.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.937" endtime="20201030 18:27:20.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.975" endtime="20201030 18:27:21.262"></status>
</kw>
<msg timestamp="20201030 18:27:21.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024093208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024099292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.974" endtime="20201030 18:27:21.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024093208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024099292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.268" endtime="20201030 18:27:21.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.277" endtime="20201030 18:27:21.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.971" endtime="20201030 18:27:21.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.969" endtime="20201030 18:27:21.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.284" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.09800000000299e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.097000000000047e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:21.281" endtime="20201030 18:27:21.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:21.288" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.069000000000907e-06, 6.069999999996911e-06, 6.09800000000299e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0139999999986316e-06, 6.09800000000299e-06, 6.0970...</msg>
<status status="PASS" starttime="20201030 18:27:21.285" endtime="20201030 18:27:21.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.293" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:27:21.292" endtime="20201030 18:27:21.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.296" level="INFO">VALUE: [6.0839999999999506e-06, 6.069000000000907e-06, 6.069999999996911e-06, 6.09800000000299e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0139999999986316e-06, 6.09800000000299e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.026999999998728e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.139000000002226e-06, 6.054999999997868e-06, 5.999999999999062e-06, 6.0689999999974376e-06, 6.040999999998298e-06, 6.0979999999995205e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201030 18:27:21.294" endtime="20201030 18:27:21.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.289" endtime="20201030 18:27:21.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.301" endtime="20201030 18:27:21.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.299" endtime="20201030 18:27:21.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.298" endtime="20201030 18:27:21.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.935" endtime="20201030 18:27:21.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.935" endtime="20201030 18:27:21.322"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.331" endtime="20201030 18:27:21.353"></status>
</kw>
<msg timestamp="20201030 18:27:21.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.329" endtime="20201030 18:27:21.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.354" endtime="20201030 18:27:21.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.357" endtime="20201030 18:27:21.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.327" endtime="20201030 18:27:21.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.324" endtime="20201030 18:27:21.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.366" endtime="20201030 18:27:21.652"></status>
</kw>
<msg timestamp="20201030 18:27:21.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.365" endtime="20201030 18:27:21.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023583125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023589181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.656" endtime="20201030 18:27:21.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.665" endtime="20201030 18:27:21.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.362" endtime="20201030 18:27:21.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.360" endtime="20201030 18:27:21.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.671" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.0979999999995205e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.124999999999187e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:21.668" endtime="20201030 18:27:21.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:21.676" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.06...</msg>
<status status="PASS" starttime="20201030 18:27:21.672" endtime="20201030 18:27:21.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.680" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:27:21.679" endtime="20201030 18:27:21.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.683" level="INFO">VALUE: [6.056000000000811e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.137999999999283e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.040999999998298e-06, 6.125000000002656e-06, 6.125000000002656e-06, 6.0979999999995205e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.139000000002226e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.1389999999987566e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.096999999996577e-06]</msg>
<status status="PASS" starttime="20201030 18:27:21.682" endtime="20201030 18:27:21.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.677" endtime="20201030 18:27:21.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.691" endtime="20201030 18:27:21.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.689" endtime="20201030 18:27:21.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.688" endtime="20201030 18:27:21.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.323" endtime="20201030 18:27:21.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.322" endtime="20201030 18:27:21.712"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.721" endtime="20201030 18:27:21.741"></status>
</kw>
<msg timestamp="20201030 18:27:21.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.719" endtime="20201030 18:27:21.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.743" endtime="20201030 18:27:21.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.745" endtime="20201030 18:27:21.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.717" endtime="20201030 18:27:21.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.714" endtime="20201030 18:27:21.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.755" endtime="20201030 18:27:22.040"></status>
</kw>
<msg timestamp="20201030 18:27:22.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025321833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.753" endtime="20201030 18:27:22.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025321833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025327917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.045" endtime="20201030 18:27:22.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.053" endtime="20201030 18:27:22.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.750" endtime="20201030 18:27:22.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.749" endtime="20201030 18:27:22.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.060" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.041999999997771e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.054999999997868e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:22.057" endtime="20201030 18:27:22.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:22.065" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.0689999999974376e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:27:22.061" endtime="20201030 18:27:22.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.070" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:27:22.069" endtime="20201030 18:27:22.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.073" level="INFO">VALUE: [6.0839999999999506e-06, 6.0689999999974376e-06, 6.041000000001767e-06, 6.041999999997771e-06, 6.0689999999974376e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.0829999999970075e-06, 6.014000000002101e-06, 6.041999999997771e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.111000000003086e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.040999999998298e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.069999999996911e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.0979999999995205e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.071" endtime="20201030 18:27:22.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.066" endtime="20201030 18:27:22.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.078" endtime="20201030 18:27:22.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.076" endtime="20201030 18:27:22.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.075" endtime="20201030 18:27:22.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.713" endtime="20201030 18:27:22.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.712" endtime="20201030 18:27:22.098"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.107" endtime="20201030 18:27:22.123"></status>
</kw>
<msg timestamp="20201030 18:27:22.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.106" endtime="20201030 18:27:22.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.124" endtime="20201030 18:27:22.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.127" endtime="20201030 18:27:22.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.103" endtime="20201030 18:27:22.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.101" endtime="20201030 18:27:22.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.136" endtime="20201030 18:27:22.423"></status>
</kw>
<msg timestamp="20201030 18:27:22.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.135" endtime="20201030 18:27:22.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.427" endtime="20201030 18:27:22.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.436" endtime="20201030 18:27:22.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.132" endtime="20201030 18:27:22.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.130" endtime="20201030 18:27:22.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.443" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0839999999999506e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:22.439" endtime="20201030 18:27:22.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:22.447" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:27:22.444" endtime="20201030 18:27:22.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.452" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:27:22.450" endtime="20201030 18:27:22.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.454" level="INFO">VALUE: [6.056000000000811e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.041000000001767e-06, 6.014000000002101e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.0689999999974376e-06, 6.042000000001241e-06, 6.125000000002656e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.453" endtime="20201030 18:27:22.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.448" endtime="20201030 18:27:22.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.467" endtime="20201030 18:27:22.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.465" endtime="20201030 18:27:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.464" endtime="20201030 18:27:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.099" endtime="20201030 18:27:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.099" endtime="20201030 18:27:22.487"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.496" endtime="20201030 18:27:22.519"></status>
</kw>
<msg timestamp="20201030 18:27:22.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.495" endtime="20201030 18:27:22.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.521" endtime="20201030 18:27:22.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.523" endtime="20201030 18:27:22.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.492" endtime="20201030 18:27:22.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.490" endtime="20201030 18:27:22.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.533" endtime="20201030 18:27:22.819"></status>
</kw>
<msg timestamp="20201030 18:27:22.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.531" endtime="20201030 18:27:22.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.823" endtime="20201030 18:27:22.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.832" endtime="20201030 18:27:22.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.528" endtime="20201030 18:27:22.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.527" endtime="20201030 18:27:22.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.838" level="INFO">${RESULT} = [{'diff': 6.110999999999617e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.041000000001767e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.09800000000299e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:22.835" endtime="20201030 18:27:22.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:22.843" level="INFO">${ACCURACY} = {'diff': [6.110999999999617e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.09800000000299e-06, 6.055000000001337e-06, 6.0979999999995205e-06, 6.097...</msg>
<status status="PASS" starttime="20201030 18:27:22.839" endtime="20201030 18:27:22.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.847" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:27:22.846" endtime="20201030 18:27:22.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.850" level="INFO">VALUE: [6.110999999999617e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.09800000000299e-06, 6.055000000001337e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.1389999999987566e-06, 6.026999999998728e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.0979999999995205e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.848" endtime="20201030 18:27:22.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.844" endtime="20201030 18:27:22.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.856" endtime="20201030 18:27:22.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.854" endtime="20201030 18:27:22.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.853" endtime="20201030 18:27:22.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.488" endtime="20201030 18:27:22.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.488" endtime="20201030 18:27:22.877"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.886" endtime="20201030 18:27:22.901"></status>
</kw>
<msg timestamp="20201030 18:27:22.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.884" endtime="20201030 18:27:22.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.902" endtime="20201030 18:27:22.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.905" endtime="20201030 18:27:22.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.881" endtime="20201030 18:27:22.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.879" endtime="20201030 18:27:22.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.914" endtime="20201030 18:27:23.202"></status>
</kw>
<msg timestamp="20201030 18:27:23.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021164153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.913" endtime="20201030 18:27:23.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021164153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021170222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.206" endtime="20201030 18:27:23.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.215" endtime="20201030 18:27:23.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.910" endtime="20201030 18:27:23.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.908" endtime="20201030 18:27:23.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.222" level="INFO">${RESULT} = [{'diff': 6.0689999999974376e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.110999999999617e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0139999999986316e-06}, {'diff': 6.083000000000477e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:23.219" endtime="20201030 18:27:23.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:23.228" level="INFO">${ACCURACY} = {'diff': [6.0689999999974376e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.0979999999995205e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:23.224" endtime="20201030 18:27:23.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.233" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:27:23.232" endtime="20201030 18:27:23.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.236" level="INFO">VALUE: [6.0689999999974376e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.0979999999995205e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.0139999999986316e-06, 6.139000000002226e-06, 6.110999999999617e-06, 6.0139999999986316e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.08400000000342e-06, 6.11199999999909e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.056000000000811e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.0839999999999506e-06, 6.0979999999995205e-06]</msg>
<status status="PASS" starttime="20201030 18:27:23.235" endtime="20201030 18:27:23.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.229" endtime="20201030 18:27:23.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.242" endtime="20201030 18:27:23.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.240" endtime="20201030 18:27:23.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.239" endtime="20201030 18:27:23.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.878" endtime="20201030 18:27:23.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.877" endtime="20201030 18:27:23.263"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.272" endtime="20201030 18:27:23.289"></status>
</kw>
<msg timestamp="20201030 18:27:23.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.271" endtime="20201030 18:27:23.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.290" endtime="20201030 18:27:23.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.293" endtime="20201030 18:27:23.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.268" endtime="20201030 18:27:23.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.266" endtime="20201030 18:27:23.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.302" endtime="20201030 18:27:23.588"></status>
</kw>
<msg timestamp="20201030 18:27:23.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.301" endtime="20201030 18:27:23.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021505056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.593" endtime="20201030 18:27:23.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.601" endtime="20201030 18:27:23.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.298" endtime="20201030 18:27:23.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.296" endtime="20201030 18:27:23.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.608" level="INFO">${RESULT} = [{'diff': 6.0689999999974376e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0979999999995205e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:23.605" endtime="20201030 18:27:23.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:23.612" level="INFO">${ACCURACY} = {'diff': [6.0689999999974376e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.05...</msg>
<status status="PASS" starttime="20201030 18:27:23.609" endtime="20201030 18:27:23.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.618" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:27:23.616" endtime="20201030 18:27:23.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.621" level="INFO">VALUE: [6.0689999999974376e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.137999999999283e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.1389999999987566e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.070000000000381e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.000000000002531e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201030 18:27:23.619" endtime="20201030 18:27:23.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.613" endtime="20201030 18:27:23.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.628" endtime="20201030 18:27:23.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.626" endtime="20201030 18:27:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.624" endtime="20201030 18:27:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.264" endtime="20201030 18:27:23.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.264" endtime="20201030 18:27:23.650"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.661" endtime="20201030 18:27:23.681"></status>
</kw>
<msg timestamp="20201030 18:27:23.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.659" endtime="20201030 18:27:23.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.682" endtime="20201030 18:27:23.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.685" endtime="20201030 18:27:23.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.655" endtime="20201030 18:27:23.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.653" endtime="20201030 18:27:23.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.695" endtime="20201030 18:27:23.980"></status>
</kw>
<msg timestamp="20201030 18:27:23.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02693725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026943347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:23.693" endtime="20201030 18:27:23.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02693725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026943347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:23.985" endtime="20201030 18:27:23.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.993" endtime="20201030 18:27:23.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.690" endtime="20201030 18:27:23.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.688" endtime="20201030 18:27:23.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.000" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.070000000000381e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:23.997" endtime="20201030 18:27:24.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:24.005" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 6.124999999999187e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.09800000000299e-06, 6.0689999999974376e-06, 6.083...</msg>
<status status="PASS" starttime="20201030 18:27:24.001" endtime="20201030 18:27:24.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.009" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:27:24.008" endtime="20201030 18:27:24.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.012" level="INFO">VALUE: [6.097000000000047e-06, 6.124999999999187e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.09800000000299e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.139000000002226e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.0689999999974376e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.069999999996911e-06, 6.139000000002226e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.1389999999987566e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.041999999997771e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 18:27:24.010" endtime="20201030 18:27:24.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.006" endtime="20201030 18:27:24.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.018" endtime="20201030 18:27:24.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.016" endtime="20201030 18:27:24.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.015" endtime="20201030 18:27:24.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.651" endtime="20201030 18:27:24.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.651" endtime="20201030 18:27:24.039"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.048" endtime="20201030 18:27:24.067"></status>
</kw>
<msg timestamp="20201030 18:27:24.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.046" endtime="20201030 18:27:24.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.068" endtime="20201030 18:27:24.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.071" endtime="20201030 18:27:24.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.043" endtime="20201030 18:27:24.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.041" endtime="20201030 18:27:24.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.080" endtime="20201030 18:27:24.367"></status>
</kw>
<msg timestamp="20201030 18:27:24.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024710778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.079" endtime="20201030 18:27:24.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024704681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024710778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.372" endtime="20201030 18:27:24.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.380" endtime="20201030 18:27:24.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.076" endtime="20201030 18:27:24.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.074" endtime="20201030 18:27:24.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.387" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0829999999970075e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:24.384" endtime="20201030 18:27:24.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:24.392" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.07...</msg>
<status status="PASS" starttime="20201030 18:27:24.388" endtime="20201030 18:27:24.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.397" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:27:24.396" endtime="20201030 18:27:24.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.400" level="INFO">VALUE: [6.097000000000047e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.0829999999970075e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.110999999999617e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.0979999999995205e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.125000000002656e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.069999999996911e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.056000000000811e-06, 6.0139999999986316e-06, 6.097000000000047e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.070000000000381e-06]</msg>
<status status="PASS" starttime="20201030 18:27:24.398" endtime="20201030 18:27:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.393" endtime="20201030 18:27:24.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.405" endtime="20201030 18:27:24.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.403" endtime="20201030 18:27:24.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.402" endtime="20201030 18:27:24.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.040" endtime="20201030 18:27:24.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.039" endtime="20201030 18:27:24.426"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.435" endtime="20201030 18:27:24.453"></status>
</kw>
<msg timestamp="20201030 18:27:24.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.433" endtime="20201030 18:27:24.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.455" endtime="20201030 18:27:24.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.457" endtime="20201030 18:27:24.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.431" endtime="20201030 18:27:24.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.428" endtime="20201030 18:27:24.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.467" endtime="20201030 18:27:24.754"></status>
</kw>
<msg timestamp="20201030 18:27:24.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024545333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024551389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.465" endtime="20201030 18:27:24.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024545333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024551389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.759" endtime="20201030 18:27:24.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.770" endtime="20201030 18:27:24.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.462" endtime="20201030 18:27:24.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.461" endtime="20201030 18:27:24.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.778" level="INFO">${RESULT} = [{'diff': 6.056000000000811e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.056000000000811e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:24.775" endtime="20201030 18:27:24.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:24.783" level="INFO">${ACCURACY} = {'diff': [6.056000000000811e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.0700...</msg>
<status status="PASS" starttime="20201030 18:27:24.779" endtime="20201030 18:27:24.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.787" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:27:24.786" endtime="20201030 18:27:24.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.790" level="INFO">VALUE: [6.056000000000811e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.028000000001671e-06, 6.054999999997868e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.0279999999982015e-06, 6.054999999997868e-06, 6.055000000001337e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201030 18:27:24.788" endtime="20201030 18:27:24.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.784" endtime="20201030 18:27:24.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.795" endtime="20201030 18:27:24.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.794" endtime="20201030 18:27:24.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.792" endtime="20201030 18:27:24.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.427" endtime="20201030 18:27:24.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.426" endtime="20201030 18:27:24.816"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.825" endtime="20201030 18:27:24.848"></status>
</kw>
<msg timestamp="20201030 18:27:24.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.823" endtime="20201030 18:27:24.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.849" endtime="20201030 18:27:24.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.852" endtime="20201030 18:27:24.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.821" endtime="20201030 18:27:24.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.819" endtime="20201030 18:27:24.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.861" endtime="20201030 18:27:25.147"></status>
</kw>
<msg timestamp="20201030 18:27:25.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02615825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026164333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:24.860" endtime="20201030 18:27:25.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02615825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026164333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:25.151" endtime="20201030 18:27:25.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.160" endtime="20201030 18:27:25.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.857" endtime="20201030 18:27:25.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.855" endtime="20201030 18:27:25.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.167" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.014000000002101e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.027000000002197e-06}, {'diff': 5.999999999999062e-06}, {'diff': 6.083000000000477e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:25.163" endtime="20201030 18:27:25.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:25.171" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.014000000002101e-06, 6.097000000000047e-06, 6.027000000002197e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.013...</msg>
<status status="PASS" starttime="20201030 18:27:25.168" endtime="20201030 18:27:25.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.176" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:27:25.174" endtime="20201030 18:27:25.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.181" level="INFO">VALUE: [6.083000000000477e-06, 6.014000000002101e-06, 6.097000000000047e-06, 6.027000000002197e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.0139999999986316e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.153000000001796e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.054999999997868e-06, 6.124999999999187e-06, 6.070000000000381e-06, 6.0829999999970075e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.151999999998853e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.125000000002656e-06, 6.0279999999982015e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.139000000002226e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 18:27:25.177" endtime="20201030 18:27:25.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.172" endtime="20201030 18:27:25.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.187" endtime="20201030 18:27:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.185" endtime="20201030 18:27:25.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.184" endtime="20201030 18:27:25.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.817" endtime="20201030 18:27:25.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.816" endtime="20201030 18:27:25.208"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.217" endtime="20201030 18:27:25.233"></status>
</kw>
<msg timestamp="20201030 18:27:25.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.215" endtime="20201030 18:27:25.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.234" endtime="20201030 18:27:25.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.237" endtime="20201030 18:27:25.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.212" endtime="20201030 18:27:25.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.210" endtime="20201030 18:27:25.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.246" endtime="20201030 18:27:25.532"></status>
</kw>
<msg timestamp="20201030 18:27:25.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021396347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.245" endtime="20201030 18:27:25.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021396347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021402417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.536" endtime="20201030 18:27:25.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.545" endtime="20201030 18:27:25.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.242" endtime="20201030 18:27:25.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.240" endtime="20201030 18:27:25.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.552" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.056000000000811e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:25.548" endtime="20201030 18:27:25.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:25.557" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:27:25.553" endtime="20201030 18:27:25.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.561" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:27:25.560" endtime="20201030 18:27:25.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.564" level="INFO">VALUE: [6.070000000000381e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.0979999999995205e-06, 6.11199999999909e-06, 6.110999999999617e-06, 6.1389999999987566e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0279999999982015e-06, 6.041000000001767e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.139000000002226e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.055999999997341e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.041000000001767e-06]</msg>
<status status="PASS" starttime="20201030 18:27:25.563" endtime="20201030 18:27:25.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.558" endtime="20201030 18:27:25.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.569" endtime="20201030 18:27:25.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.568" endtime="20201030 18:27:25.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.566" endtime="20201030 18:27:25.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.208" endtime="20201030 18:27:25.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.208" endtime="20201030 18:27:25.590"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.599" endtime="20201030 18:27:25.617"></status>
</kw>
<msg timestamp="20201030 18:27:25.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.597" endtime="20201030 18:27:25.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.619" endtime="20201030 18:27:25.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.622" endtime="20201030 18:27:25.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.595" endtime="20201030 18:27:25.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.592" endtime="20201030 18:27:25.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.631" endtime="20201030 18:27:25.918"></status>
</kw>
<msg timestamp="20201030 18:27:25.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020868278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.629" endtime="20201030 18:27:25.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020862208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020868278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.922" endtime="20201030 18:27:25.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.931" endtime="20201030 18:27:25.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.627" endtime="20201030 18:27:25.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.625" endtime="20201030 18:27:25.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.938" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.069000000000907e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:25.934" endtime="20201030 18:27:25.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:25.942" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069999999996911e-06, 6.09...</msg>
<status status="PASS" starttime="20201030 18:27:25.939" endtime="20201030 18:27:25.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.947" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:27:25.946" endtime="20201030 18:27:25.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.949" level="INFO">VALUE: [6.070000000000381e-06, 6.0839999999999506e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069999999996911e-06, 6.097000000000047e-06, 6.028000000001671e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.111000000003086e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.056000000000811e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.0979999999995205e-06, 6.111000000003086e-06, 6.0829999999970075e-06, 6.124999999999187e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.040999999998298e-06, 6.097000000000047e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 18:27:25.948" endtime="20201030 18:27:25.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.943" endtime="20201030 18:27:25.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.954" endtime="20201030 18:27:25.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.953" endtime="20201030 18:27:25.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.952" endtime="20201030 18:27:25.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.591" endtime="20201030 18:27:25.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.590" endtime="20201030 18:27:25.975"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.984" endtime="20201030 18:27:26.001"></status>
</kw>
<msg timestamp="20201030 18:27:26.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.983" endtime="20201030 18:27:26.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.002" endtime="20201030 18:27:26.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.005" endtime="20201030 18:27:26.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.980" endtime="20201030 18:27:26.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.978" endtime="20201030 18:27:26.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.014" endtime="20201030 18:27:26.300"></status>
</kw>
<msg timestamp="20201030 18:27:26.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.013" endtime="20201030 18:27:26.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.305" endtime="20201030 18:27:26.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.314" endtime="20201030 18:27:26.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.010" endtime="20201030 18:27:26.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.008" endtime="20201030 18:27:26.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.320" level="INFO">${RESULT} = [{'diff': 5.985999999999492e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.028000000001671e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:26.317" endtime="20201030 18:27:26.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:26.325" level="INFO">${ACCURACY} = {'diff': [5.985999999999492e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.01...</msg>
<status status="PASS" starttime="20201030 18:27:26.321" endtime="20201030 18:27:26.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.329" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:27:26.328" endtime="20201030 18:27:26.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.332" level="INFO">VALUE: [5.985999999999492e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.028000000001671e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.014000000002101e-06, 6.055000000001337e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.166999999997896e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.070000000000381e-06, 5.985999999999492e-06, 6.054999999997868e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0829999999970075e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.153000000001796e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.083000000000477e-06, 5.999999999999062e-06, 6.055999999997341e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.069999999996911e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.0689999999974376e-06]</msg>
<status status="PASS" starttime="20201030 18:27:26.330" endtime="20201030 18:27:26.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.326" endtime="20201030 18:27:26.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.338" endtime="20201030 18:27:26.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.336" endtime="20201030 18:27:26.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.335" endtime="20201030 18:27:26.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.976" endtime="20201030 18:27:26.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.976" endtime="20201030 18:27:26.359"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.368" endtime="20201030 18:27:26.382"></status>
</kw>
<msg timestamp="20201030 18:27:26.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.366" endtime="20201030 18:27:26.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.384" endtime="20201030 18:27:26.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.386" endtime="20201030 18:27:26.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.364" endtime="20201030 18:27:26.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.362" endtime="20201030 18:27:26.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.396" endtime="20201030 18:27:26.681"></status>
</kw>
<msg timestamp="20201030 18:27:26.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.394" endtime="20201030 18:27:26.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.685" endtime="20201030 18:27:26.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.694" endtime="20201030 18:27:26.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.392" endtime="20201030 18:27:26.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.390" endtime="20201030 18:27:26.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.701" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 6.139000000002226e-06}, {'diff': 6.125000000002656e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.0979999999995205e-06}, {'diff': 6.056000000000811e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:26.698" endtime="20201030 18:27:26.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:26.707" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.054999999997868e-06, 6.0979999999995205e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.09800000000299e-06, 6.0829...</msg>
<status status="PASS" starttime="20201030 18:27:26.702" endtime="20201030 18:27:26.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.711" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:27:26.710" endtime="20201030 18:27:26.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.714" level="INFO">VALUE: [6.097000000000047e-06, 6.139000000002226e-06, 6.125000000002656e-06, 6.054999999997868e-06, 6.0979999999995205e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.09800000000299e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.097000000000047e-06, 6.124999999999187e-06, 6.151999999998853e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.110999999999617e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.054999999997868e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201030 18:27:26.712" endtime="20201030 18:27:26.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.707" endtime="20201030 18:27:26.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.719" endtime="20201030 18:27:26.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.717" endtime="20201030 18:27:26.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.716" endtime="20201030 18:27:26.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.360" endtime="20201030 18:27:26.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.359" endtime="20201030 18:27:26.740"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.749" endtime="20201030 18:27:26.769"></status>
</kw>
<msg timestamp="20201030 18:27:26.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.747" endtime="20201030 18:27:26.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.771" endtime="20201030 18:27:26.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.773" endtime="20201030 18:27:26.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.745" endtime="20201030 18:27:26.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.742" endtime="20201030 18:27:26.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.783" endtime="20201030 18:27:27.070"></status>
</kw>
<msg timestamp="20201030 18:27:27.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02146275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:26.781" endtime="20201030 18:27:27.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02146275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:27.074" endtime="20201030 18:27:27.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.083" endtime="20201030 18:27:27.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.778" endtime="20201030 18:27:27.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.777" endtime="20201030 18:27:27.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.090" level="INFO">${RESULT} = [{'diff': 6.097000000000047e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.110999999999617e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.1389999999987566e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:27.086" endtime="20201030 18:27:27.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:27.094" level="INFO">${ACCURACY} = {'diff': [6.097000000000047e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.0279999999982015e-06, 6.1389999999987566e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:27:27.091" endtime="20201030 18:27:27.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.098" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:27:27.097" endtime="20201030 18:27:27.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.101" level="INFO">VALUE: [6.097000000000047e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.0279999999982015e-06, 6.1389999999987566e-06, 6.028000000001671e-06, 6.028000000001671e-06, 6.041000000001767e-06, 6.083000000000477e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.026999999998728e-06, 6.055999999997341e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.097000000000047e-06, 5.999999999999062e-06, 6.083000000000477e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.041000000001767e-06, 6.097000000000047e-06, 6.040999999998298e-06, 6.097000000000047e-06, 6.111000000003086e-06, 6.097000000000047e-06, 6.11199999999909e-06]</msg>
<status status="PASS" starttime="20201030 18:27:27.100" endtime="20201030 18:27:27.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.095" endtime="20201030 18:27:27.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.106" endtime="20201030 18:27:27.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.105" endtime="20201030 18:27:27.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.104" endtime="20201030 18:27:27.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.741" endtime="20201030 18:27:27.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.740" endtime="20201030 18:27:27.127"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.136" endtime="20201030 18:27:27.157"></status>
</kw>
<msg timestamp="20201030 18:27:27.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.135" endtime="20201030 18:27:27.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.158" endtime="20201030 18:27:27.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.161" endtime="20201030 18:27:27.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.132" endtime="20201030 18:27:27.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.130" endtime="20201030 18:27:27.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.170" endtime="20201030 18:27:27.457"></status>
</kw>
<msg timestamp="20201030 18:27:27.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025938292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025944375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.169" endtime="20201030 18:27:27.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025938292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025944375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.461" endtime="20201030 18:27:27.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.470" endtime="20201030 18:27:27.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.166" endtime="20201030 18:27:27.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.164" endtime="20201030 18:27:27.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.477" level="INFO">${RESULT} = [{'diff': 6.0829999999970075e-06}, {'diff': 6.054999999997868e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.083000000000477e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:27.474" endtime="20201030 18:27:27.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:27.481" level="INFO">${ACCURACY} = {'diff': [6.0829999999970075e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.07...</msg>
<status status="PASS" starttime="20201030 18:27:27.478" endtime="20201030 18:27:27.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.486" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:27:27.485" endtime="20201030 18:27:27.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.488" level="INFO">VALUE: [6.0829999999970075e-06, 6.054999999997868e-06, 6.070000000000381e-06, 6.0689999999974376e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.166999999997896e-06, 6.041999999997771e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.026999999998728e-06, 6.097000000000047e-06, 6.028000000001671e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.055000000001337e-06, 6.070000000000381e-06, 6.026999999998728e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.041999999997771e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.028000000001671e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201030 18:27:27.487" endtime="20201030 18:27:27.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.482" endtime="20201030 18:27:27.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.499" endtime="20201030 18:27:27.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.498" endtime="20201030 18:27:27.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.496" endtime="20201030 18:27:27.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.128" endtime="20201030 18:27:27.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.128" endtime="20201030 18:27:27.520"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.529" endtime="20201030 18:27:27.548"></status>
</kw>
<msg timestamp="20201030 18:27:27.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.527" endtime="20201030 18:27:27.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.550" endtime="20201030 18:27:27.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.552" endtime="20201030 18:27:27.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.525" endtime="20201030 18:27:27.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.523" endtime="20201030 18:27:27.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.562" endtime="20201030 18:27:27.848"></status>
</kw>
<msg timestamp="20201030 18:27:27.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.560" endtime="20201030 18:27:27.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024984431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024990486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.853" endtime="20201030 18:27:27.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.861" endtime="20201030 18:27:27.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.557" endtime="20201030 18:27:27.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.556" endtime="20201030 18:27:27.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.868" level="INFO">${RESULT} = [{'diff': 6.054999999997868e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.042000000001241e-06}, {'diff': 6.110999999999617e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:27.865" endtime="20201030 18:27:27.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:27.873" level="INFO">${ACCURACY} = {'diff': [6.054999999997868e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.08...</msg>
<status status="PASS" starttime="20201030 18:27:27.869" endtime="20201030 18:27:27.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.878" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:27:27.877" endtime="20201030 18:27:27.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.880" level="INFO">VALUE: [6.054999999997868e-06, 6.0829999999970075e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.069999999996911e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.0829999999970075e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.055999999997341e-06, 6.055999999997341e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 5.999999999999062e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.097000000000047e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.0979999999995205e-06, 6.070000000000381e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.012999999999158e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.041000000001767e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.124999999999187e-06]</msg>
<status status="PASS" starttime="20201030 18:27:27.879" endtime="20201030 18:27:27.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.874" endtime="20201030 18:27:27.882"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.886" endtime="20201030 18:27:27.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.884" endtime="20201030 18:27:27.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.883" endtime="20201030 18:27:27.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.521" endtime="20201030 18:27:27.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.520" endtime="20201030 18:27:27.907"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.916" endtime="20201030 18:27:27.940"></status>
</kw>
<msg timestamp="20201030 18:27:27.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.914" endtime="20201030 18:27:27.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.941" endtime="20201030 18:27:27.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.944" endtime="20201030 18:27:27.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.911" endtime="20201030 18:27:27.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.909" endtime="20201030 18:27:27.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.953" endtime="20201030 18:27:28.240"></status>
</kw>
<msg timestamp="20201030 18:27:28.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025261042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.952" endtime="20201030 18:27:28.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025261042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.245" endtime="20201030 18:27:28.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.253" endtime="20201030 18:27:28.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.949" endtime="20201030 18:27:28.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.947" endtime="20201030 18:27:28.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.260" level="INFO">${RESULT} = [{'diff': 6.124999999999187e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.056000000000811e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:28.257" endtime="20201030 18:27:28.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:28.264" level="INFO">${ACCURACY} = {'diff': [6.124999999999187e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.0...</msg>
<status status="PASS" starttime="20201030 18:27:28.261" endtime="20201030 18:27:28.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.269" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:27:28.268" endtime="20201030 18:27:28.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.271" level="INFO">VALUE: [6.124999999999187e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.0279999999982015e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.0689999999974376e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.055000000001337e-06, 6.014000000002101e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.041999999997771e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.042000000001241e-06, 6.125000000002656e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.139000000002226e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.000000000002531e-06, 6.070000000000381e-06, 6.0829999999970075e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.0829999999970075e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.026999999998728e-06, 6.069999999996911e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201030 18:27:28.270" endtime="20201030 18:27:28.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.265" endtime="20201030 18:27:28.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.276" endtime="20201030 18:27:28.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.275" endtime="20201030 18:27:28.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.274" endtime="20201030 18:27:28.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.908" endtime="20201030 18:27:28.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.907" endtime="20201030 18:27:28.297"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.307" endtime="20201030 18:27:28.327"></status>
</kw>
<msg timestamp="20201030 18:27:28.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.306" endtime="20201030 18:27:28.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.329" endtime="20201030 18:27:28.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.332" endtime="20201030 18:27:28.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.303" endtime="20201030 18:27:28.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.300" endtime="20201030 18:27:28.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.341" endtime="20201030 18:27:28.628"></status>
</kw>
<msg timestamp="20201030 18:27:28.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026418708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026424792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.339" endtime="20201030 18:27:28.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026418708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026424792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.632" endtime="20201030 18:27:28.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.641" endtime="20201030 18:27:28.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.337" endtime="20201030 18:27:28.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.335" endtime="20201030 18:27:28.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.647" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.1529999999983265e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.110999999999617e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:28.644" endtime="20201030 18:27:28.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:28.652" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.055999999997341e-06, 6.1529999999983265e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.1389999999987566e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:28.648" endtime="20201030 18:27:28.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.656" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:27:28.655" endtime="20201030 18:27:28.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.662" level="INFO">VALUE: [6.0839999999999506e-06, 6.055999999997341e-06, 6.1529999999983265e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.1389999999987566e-06, 6.0279999999982015e-06, 6.083000000000477e-06, 6.0279999999982015e-06, 6.097000000000047e-06, 6.014000000002101e-06, 6.0839999999999506e-06, 6.096999999996577e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.097000000000047e-06, 6.054999999997868e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.041000000001767e-06, 6.069999999996911e-06, 6.0689999999974376e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.11199999999909e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201030 18:27:28.657" endtime="20201030 18:27:28.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.653" endtime="20201030 18:27:28.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.667" endtime="20201030 18:27:28.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.666" endtime="20201030 18:27:28.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.665" endtime="20201030 18:27:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.298" endtime="20201030 18:27:28.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.298" endtime="20201030 18:27:28.688"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.697" endtime="20201030 18:27:28.714"></status>
</kw>
<msg timestamp="20201030 18:27:28.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.696" endtime="20201030 18:27:28.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.715" endtime="20201030 18:27:28.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.718" endtime="20201030 18:27:28.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.693" endtime="20201030 18:27:28.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.691" endtime="20201030 18:27:28.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.727" endtime="20201030 18:27:29.013"></status>
</kw>
<msg timestamp="20201030 18:27:29.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.726" endtime="20201030 18:27:29.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022374847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.017" endtime="20201030 18:27:29.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.026" endtime="20201030 18:27:29.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.723" endtime="20201030 18:27:29.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.721" endtime="20201030 18:27:29.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.032" level="INFO">${RESULT} = [{'diff': 6.110999999999617e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.083000000000477e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:29.029" endtime="20201030 18:27:29.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:29.038" level="INFO">${ACCURACY} = {'diff': [6.110999999999617e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.097000000000047e-06, 6.055...</msg>
<status status="PASS" starttime="20201030 18:27:29.033" endtime="20201030 18:27:29.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.042" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:27:29.041" endtime="20201030 18:27:29.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.045" level="INFO">VALUE: [6.110999999999617e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.0829999999970075e-06, 6.097000000000047e-06, 6.055000000001337e-06, 6.069000000000907e-06, 6.014000000002101e-06, 6.056000000000811e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.110999999999617e-06, 6.055000000001337e-06, 6.000000000002531e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.055999999997341e-06, 5.999999999999062e-06, 6.055999999997341e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.110999999999617e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.110999999999617e-06, 6.124999999999187e-06, 6.1389999999987566e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.041000000001767e-06, 6.0829999999970075e-06, 6.0689999999974376e-06, 6.097000000000047e-06, 6.056000000000811e-06]</msg>
<status status="PASS" starttime="20201030 18:27:29.043" endtime="20201030 18:27:29.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.039" endtime="20201030 18:27:29.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.050" endtime="20201030 18:27:29.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.048" endtime="20201030 18:27:29.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.047" endtime="20201030 18:27:29.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.689" endtime="20201030 18:27:29.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.689" endtime="20201030 18:27:29.071"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.080" endtime="20201030 18:27:29.096"></status>
</kw>
<msg timestamp="20201030 18:27:29.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.078" endtime="20201030 18:27:29.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.098" endtime="20201030 18:27:29.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.101" endtime="20201030 18:27:29.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.076" endtime="20201030 18:27:29.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.073" endtime="20201030 18:27:29.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.110" endtime="20201030 18:27:29.397"></status>
</kw>
<msg timestamp="20201030 18:27:29.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.108" endtime="20201030 18:27:29.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.401" endtime="20201030 18:27:29.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.410" endtime="20201030 18:27:29.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.106" endtime="20201030 18:27:29.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.104" endtime="20201030 18:27:29.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.417" level="INFO">${RESULT} = [{'diff': 6.070000000000381e-06}, {'diff': 6.097000000000047e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.070000000000381e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:29.414" endtime="20201030 18:27:29.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:29.421" level="INFO">${ACCURACY} = {'diff': [6.070000000000381e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.1109...</msg>
<status status="PASS" starttime="20201030 18:27:29.418" endtime="20201030 18:27:29.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.426" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:27:29.425" endtime="20201030 18:27:29.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.428" level="INFO">VALUE: [6.070000000000381e-06, 6.097000000000047e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.070000000000381e-06, 6.042000000001241e-06, 6.041999999997771e-06, 6.110999999999617e-06, 6.0839999999999506e-06, 6.09800000000299e-06, 6.069999999996911e-06, 6.056000000000811e-06, 6.028000000001671e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.110999999999617e-06, 6.041000000001767e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.124999999999187e-06, 6.125000000002656e-06, 6.083000000000477e-06, 5.986000000002961e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.0829999999970075e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.014000000002101e-06, 6.042000000001241e-06, 6.069000000000907e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.0139999999986316e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 18:27:29.427" endtime="20201030 18:27:29.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.422" endtime="20201030 18:27:29.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.434" endtime="20201030 18:27:29.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.432" endtime="20201030 18:27:29.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.431" endtime="20201030 18:27:29.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.072" endtime="20201030 18:27:29.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.071" endtime="20201030 18:27:29.454"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.463" endtime="20201030 18:27:29.482"></status>
</kw>
<msg timestamp="20201030 18:27:29.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.462" endtime="20201030 18:27:29.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.484" endtime="20201030 18:27:29.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.486" endtime="20201030 18:27:29.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.459" endtime="20201030 18:27:29.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.457" endtime="20201030 18:27:29.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.496" endtime="20201030 18:27:29.783"></status>
</kw>
<msg timestamp="20201030 18:27:29.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024802806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.494" endtime="20201030 18:27:29.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024802806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024808875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.788" endtime="20201030 18:27:29.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.796" endtime="20201030 18:27:29.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.491" endtime="20201030 18:27:29.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.490" endtime="20201030 18:27:29.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.803" level="INFO">${RESULT} = [{'diff': 6.069000000000907e-06}, {'diff': 6.083000000000477e-06}, {'diff': 6.110999999999617e-06}, {'diff': 5.985999999999492e-06}, {'diff': 6.055000000001337e-06}, {'diff': 6.000000000002531e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:29.800" endtime="20201030 18:27:29.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:29.808" level="INFO">${ACCURACY} = {'diff': [6.069000000000907e-06, 6.083000000000477e-06, 6.110999999999617e-06, 5.985999999999492e-06, 6.055000000001337e-06, 6.000000000002531e-06, 5.985999999999492e-06, 6.083000000000477e-06, 6.0559...</msg>
<status status="PASS" starttime="20201030 18:27:29.804" endtime="20201030 18:27:29.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.812" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:27:29.811" endtime="20201030 18:27:29.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.815" level="INFO">VALUE: [6.069000000000907e-06, 6.083000000000477e-06, 6.110999999999617e-06, 5.985999999999492e-06, 6.055000000001337e-06, 6.000000000002531e-06, 5.985999999999492e-06, 6.083000000000477e-06, 6.055999999997341e-06, 6.055000000001337e-06, 6.083000000000477e-06, 6.0139999999986316e-06, 6.028000000001671e-06, 6.1389999999987566e-06, 6.0839999999999506e-06, 6.0139999999986316e-06, 6.055999999997341e-06, 6.0839999999999506e-06, 6.042000000001241e-06, 6.041000000001767e-06, 6.0839999999999506e-06, 6.055000000001337e-06, 6.042000000001241e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.041999999997771e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.056000000000811e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.167000000001366e-06, 6.083000000000477e-06, 6.069000000000907e-06, 5.999999999999062e-06, 6.0829999999970075e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.110999999999617e-06, 6.042000000001241e-06, 6.1529999999983265e-06, 6.097000000000047e-06]</msg>
<status status="PASS" starttime="20201030 18:27:29.813" endtime="20201030 18:27:29.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.808" endtime="20201030 18:27:29.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.821" endtime="20201030 18:27:29.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.819" endtime="20201030 18:27:29.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.818" endtime="20201030 18:27:29.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.455" endtime="20201030 18:27:29.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.455" endtime="20201030 18:27:29.842"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.851" endtime="20201030 18:27:29.870"></status>
</kw>
<msg timestamp="20201030 18:27:29.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.849" endtime="20201030 18:27:29.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.871" endtime="20201030 18:27:29.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.874" endtime="20201030 18:27:29.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.846" endtime="20201030 18:27:29.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.844" endtime="20201030 18:27:29.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.883" endtime="20201030 18:27:30.170"></status>
</kw>
<msg timestamp="20201030 18:27:30.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.882" endtime="20201030 18:27:30.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024502597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024508583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.174" endtime="20201030 18:27:30.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.183" endtime="20201030 18:27:30.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.879" endtime="20201030 18:27:30.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.877" endtime="20201030 18:27:30.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.190" level="INFO">${RESULT} = [{'diff': 5.985999999999492e-06}, {'diff': 6.070000000000381e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.124999999999187e-06}, {'diff': 6.110999999999617e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:30.186" endtime="20201030 18:27:30.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:30.196" level="INFO">${ACCURACY} = {'diff': [5.985999999999492e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069999999996911e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0690...</msg>
<status status="PASS" starttime="20201030 18:27:30.192" endtime="20201030 18:27:30.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.201" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:27:30.200" endtime="20201030 18:27:30.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.204" level="INFO">VALUE: [5.985999999999492e-06, 6.070000000000381e-06, 6.069000000000907e-06, 6.069999999996911e-06, 6.124999999999187e-06, 6.110999999999617e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.069000000000907e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.083000000000477e-06, 6.056000000000811e-06, 6.042000000001241e-06, 6.054999999997868e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.070000000000381e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.111000000003086e-06, 6.069000000000907e-06, 6.055000000001337e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.0979999999995205e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.125000000002656e-06, 6.097000000000047e-06, 6.014000000002101e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.056000000000811e-06, 6.083000000000477e-06, 6.0689999999974376e-06, 6.056000000000811e-06, 6.055999999997341e-06, 6.124999999999187e-06, 6.124999999999187e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.0979999999995205e-06, 6.0839999999999506e-06, 6.028000000001671e-06]</msg>
<status status="PASS" starttime="20201030 18:27:30.202" endtime="20201030 18:27:30.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.197" endtime="20201030 18:27:30.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.209" endtime="20201030 18:27:30.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.207" endtime="20201030 18:27:30.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.206" endtime="20201030 18:27:30.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.843" endtime="20201030 18:27:30.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.842" endtime="20201030 18:27:30.230"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.239" endtime="20201030 18:27:30.258"></status>
</kw>
<msg timestamp="20201030 18:27:30.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.237" endtime="20201030 18:27:30.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.260" endtime="20201030 18:27:30.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.262" endtime="20201030 18:27:30.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.235" endtime="20201030 18:27:30.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.232" endtime="20201030 18:27:30.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.272" endtime="20201030 18:27:30.560"></status>
</kw>
<msg timestamp="20201030 18:27:30.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.270" endtime="20201030 18:27:30.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023194722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.564" endtime="20201030 18:27:30.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.573" endtime="20201030 18:27:30.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.267" endtime="20201030 18:27:30.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.266" endtime="20201030 18:27:30.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.580" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.056000000000811e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.040999999998298e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:30.576" endtime="20201030 18:27:30.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:30.584" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.06...</msg>
<status status="PASS" starttime="20201030 18:27:30.581" endtime="20201030 18:27:30.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.589" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:27:30.587" endtime="20201030 18:27:30.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.591" level="INFO">VALUE: [6.0839999999999506e-06, 6.069000000000907e-06, 6.0839999999999506e-06, 6.056000000000811e-06, 6.069000000000907e-06, 6.040999999998298e-06, 6.069000000000907e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.028000000001671e-06, 6.110999999999617e-06, 6.069999999996911e-06, 6.097000000000047e-06, 6.0839999999999506e-06, 6.0839999999999506e-06, 6.070000000000381e-06, 6.1389999999987566e-06, 6.0829999999970075e-06, 6.070000000000381e-06, 6.111000000003086e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.083000000000477e-06, 6.070000000000381e-06, 6.097000000000047e-06, 6.0829999999970075e-06, 6.040999999998298e-06, 6.070000000000381e-06, 6.083000000000477e-06, 6.1389999999987566e-06, 6.124999999999187e-06, 6.055999999997341e-06, 6.056000000000811e-06, 6.1389999999987566e-06, 6.09800000000299e-06, 6.110999999999617e-06, 6.069000000000907e-06, 6.0979999999995205e-06, 6.069000000000907e-06, 6.125000000002656e-06, 6.055000000001337e-06, 6.139000000002226e-06, 6.0839999999999506e-06, 6.0689999999974376e-06, 6.097000000000047e-06, 6.069000000000907e-06, 6.083000000000477e-06, 6.0839999999999506e-06, 6.069000000000907e-06, 6.1389999999987566e-06]</msg>
<status status="PASS" starttime="20201030 18:27:30.590" endtime="20201030 18:27:30.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.585" endtime="20201030 18:27:30.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.596" endtime="20201030 18:27:30.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.595" endtime="20201030 18:27:30.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.594" endtime="20201030 18:27:30.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.231" endtime="20201030 18:27:30.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.230" endtime="20201030 18:27:30.617"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.626" endtime="20201030 18:27:30.643"></status>
</kw>
<msg timestamp="20201030 18:27:30.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.625" endtime="20201030 18:27:30.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.645" endtime="20201030 18:27:30.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.648" endtime="20201030 18:27:30.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.622" endtime="20201030 18:27:30.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.620" endtime="20201030 18:27:30.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.657" endtime="20201030 18:27:30.942"></status>
</kw>
<msg timestamp="20201030 18:27:30.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.655" endtime="20201030 18:27:30.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022599694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022627694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.947" endtime="20201030 18:27:30.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.956" endtime="20201030 18:27:30.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.653" endtime="20201030 18:27:30.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.651" endtime="20201030 18:27:30.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.962" level="INFO">${RESULT} = [{'diff': 2.8000000000000247e-05}, {'diff': 1.9415999999997796e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.043100000000131e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.2250000000001435e-05...</msg>
<status status="PASS" starttime="20201030 18:27:30.959" endtime="20201030 18:27:30.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:30.967" level="INFO">${ACCURACY} = {'diff': [2.8000000000000247e-05, 1.9415999999997796e-05, 2.038899999999913e-05, 2.043100000000131e-05, 2.2319999999999285e-05, 2.2250000000001435e-05, 1.943100000000031e-05, 2.137500000000056e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:27:30.963" endtime="20201030 18:27:30.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.971" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:27:30.970" endtime="20201030 18:27:30.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.974" level="INFO">VALUE: [2.8000000000000247e-05, 1.9415999999997796e-05, 2.038899999999913e-05, 2.043100000000131e-05, 2.2319999999999285e-05, 2.2250000000001435e-05, 1.943100000000031e-05, 2.137500000000056e-05, 2.137499999999709e-05, 2.0401999999999226e-05, 2.1319999999998285e-05, 2.130499999999924e-05, 2.133300000000185e-05, 1.9444000000000405e-05, 1.941699999999727e-05, 1.941700000000074e-05, 2.231899999999981e-05, 2.037499999999956e-05, 2.03890000000026e-05, 1.941700000000074e-05, 2.223700000000134e-05, 1.941700000000074e-05, 2.041699999999827e-05, 2.043099999999784e-05, 2.0443999999997936e-05, 2.2292000000000145e-05, 1.9401999999998226e-05, 2.037499999999956e-05, 1.9514000000001724e-05, 2.236100000000199e-05, 1.943100000000031e-05, 2.136100000000099e-05, 1.936100000000246e-05, 2.0361999999999464e-05, 2.137500000000056e-05, 2.2319999999999285e-05, 1.9429999999997366e-05, 2.136099999999752e-05, 2.136100000000099e-05, 1.945899999999945e-05, 2.2333999999998855e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 1.9430000000000835e-05, 2.231899999999981e-05, 2.041699999999827e-05, 1.9443999999996936e-05, 2.134699999999795e-05, 1.9430000000000835e-05, 2.041699999999827e-05]</msg>
<status status="PASS" starttime="20201030 18:27:30.972" endtime="20201030 18:27:30.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.968" endtime="20201030 18:27:30.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.980" endtime="20201030 18:27:30.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.978" endtime="20201030 18:27:31.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.977" endtime="20201030 18:27:31.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.618" endtime="20201030 18:27:31.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.618" endtime="20201030 18:27:31.001"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.010" endtime="20201030 18:27:31.028"></status>
</kw>
<msg timestamp="20201030 18:27:31.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.008" endtime="20201030 18:27:31.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.030" endtime="20201030 18:27:31.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.032" endtime="20201030 18:27:31.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.006" endtime="20201030 18:27:31.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.003" endtime="20201030 18:27:31.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.042" endtime="20201030 18:27:31.327"></status>
</kw>
<msg timestamp="20201030 18:27:31.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020901986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020926167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.040" endtime="20201030 18:27:31.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020901986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020926167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.332" endtime="20201030 18:27:31.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.340" endtime="20201030 18:27:31.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.037" endtime="20201030 18:27:31.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.035" endtime="20201030 18:27:31.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.347" level="INFO">${RESULT} = [{'diff': 2.418099999999812e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.043100000000131e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 2.1319999999998285e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:31.344" endtime="20201030 18:27:31.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:31.353" level="INFO">${ACCURACY} = {'diff': [2.418099999999812e-05, 2.038899999999913e-05, 2.136100000000099e-05, 2.043100000000131e-05, 2.0486000000000115e-05, 2.1319999999998285e-05, 2.034700000000042e-05, 1.944499999999988e-05, 2.03...</msg>
<status status="PASS" starttime="20201030 18:27:31.348" endtime="20201030 18:27:31.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.358" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:27:31.357" endtime="20201030 18:27:31.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.361" level="INFO">VALUE: [2.418099999999812e-05, 2.038899999999913e-05, 2.136100000000099e-05, 2.043100000000131e-05, 2.0486000000000115e-05, 2.1319999999998285e-05, 2.034700000000042e-05, 1.944499999999988e-05, 2.037499999999956e-05, 2.133299999999838e-05, 2.038899999999913e-05, 2.1402000000000226e-05, 2.040300000000217e-05, 2.036099999999999e-05, 2.134700000000142e-05, 2.237499999999809e-05, 2.230500000000024e-05, 2.3333999999999855e-05, 2.0416000000002266e-05, 2.038899999999913e-05, 1.9444000000000405e-05, 1.9416000000001266e-05, 1.9444000000000405e-05, 2.130499999999924e-05, 2.136099999999752e-05, 2.037499999999956e-05, 2.1306000000002184e-05, 2.040300000000217e-05, 2.04029999999987e-05, 2.2292000000000145e-05, 2.14029999999997e-05, 2.136099999999752e-05, 2.1319999999998285e-05, 2.036099999999999e-05, 2.040300000000217e-05, 1.943100000000031e-05, 1.9458000000003445e-05, 2.036099999999999e-05, 2.036099999999999e-05, 2.136100000000099e-05, 2.22770000000011e-05, 2.1348000000000894e-05, 2.03890000000026e-05, 2.2304999999996772e-05, 2.037499999999956e-05, 2.1348000000000894e-05, 1.944499999999988e-05, 2.038899999999913e-05, 2.2276999999997632e-05, 2.041699999999827e-05]</msg>
<status status="PASS" starttime="20201030 18:27:31.359" endtime="20201030 18:27:31.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.354" endtime="20201030 18:27:31.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.366" endtime="20201030 18:27:31.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.365" endtime="20201030 18:27:31.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.363" endtime="20201030 18:27:31.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.002" endtime="20201030 18:27:31.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.001" endtime="20201030 18:27:31.387"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.396" endtime="20201030 18:27:31.412"></status>
</kw>
<msg timestamp="20201030 18:27:31.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.394" endtime="20201030 18:27:31.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.413" endtime="20201030 18:27:31.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.416" endtime="20201030 18:27:31.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.392" endtime="20201030 18:27:31.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.389" endtime="20201030 18:27:31.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.425" endtime="20201030 18:27:31.712"></status>
</kw>
<msg timestamp="20201030 18:27:31.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.424" endtime="20201030 18:27:31.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.716" endtime="20201030 18:27:31.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.725" endtime="20201030 18:27:31.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.421" endtime="20201030 18:27:31.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.419" endtime="20201030 18:27:31.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.732" level="INFO">${RESULT} = [{'diff': 2.8013999999999817e-05}, {'diff': 2.137500000000056e-05}, {'diff': 1.9457999999999975e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.2305999999999715e-0...</msg>
<status status="PASS" starttime="20201030 18:27:31.728" endtime="20201030 18:27:31.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:31.736" level="INFO">${ACCURACY} = {'diff': [2.8013999999999817e-05, 2.137500000000056e-05, 1.9457999999999975e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.236099999999852e-05, 2.230500000000024e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:27:31.733" endtime="20201030 18:27:31.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.741" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:27:31.740" endtime="20201030 18:27:31.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.743" level="INFO">VALUE: [2.8013999999999817e-05, 2.137500000000056e-05, 1.9457999999999975e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.236099999999852e-05, 2.230500000000024e-05, 1.9457999999999975e-05, 2.131900000000228e-05, 2.229100000000067e-05, 2.138900000000013e-05, 2.037499999999956e-05, 1.9429999999997366e-05, 2.2305999999999715e-05, 2.2264000000001005e-05, 2.130499999999924e-05, 2.2319999999999285e-05, 2.041700000000174e-05, 2.2305999999999715e-05, 2.134700000000142e-05, 2.038899999999913e-05, 2.133300000000185e-05, 2.034700000000042e-05, 2.2306000000003184e-05, 1.941699999999727e-05, 1.9430000000000835e-05, 2.131899999999881e-05, 1.941700000000074e-05, 1.9486000000002585e-05, 2.136100000000099e-05, 2.136100000000099e-05, 2.1333999999997855e-05, 2.136100000000099e-05, 2.1334000000001324e-05, 2.03890000000026e-05, 1.9430000000000835e-05, 2.03890000000026e-05, 2.04029999999987e-05, 2.133300000000185e-05, 2.230500000000024e-05, 1.9401999999998226e-05, 2.1333999999997855e-05, 2.138900000000013e-05, 2.230500000000024e-05, 2.037499999999956e-05, 2.038899999999913e-05, 2.036099999999999e-05, 2.03890000000026e-05, 2.029100000000214e-05]</msg>
<status status="PASS" starttime="20201030 18:27:31.742" endtime="20201030 18:27:31.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.737" endtime="20201030 18:27:31.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.749" endtime="20201030 18:27:31.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.747" endtime="20201030 18:27:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.746" endtime="20201030 18:27:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.388" endtime="20201030 18:27:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.387" endtime="20201030 18:27:31.769"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.778" endtime="20201030 18:27:31.800"></status>
</kw>
<msg timestamp="20201030 18:27:31.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.777" endtime="20201030 18:27:31.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.802" endtime="20201030 18:27:31.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.804" endtime="20201030 18:27:31.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.774" endtime="20201030 18:27:31.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.772" endtime="20201030 18:27:31.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.815" endtime="20201030 18:27:32.103"></status>
</kw>
<msg timestamp="20201030 18:27:32.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025837556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025853264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.813" endtime="20201030 18:27:32.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025837556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025853264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.108" endtime="20201030 18:27:32.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.116" endtime="20201030 18:27:32.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.810" endtime="20201030 18:27:32.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.808" endtime="20201030 18:27:32.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.123" level="INFO">${RESULT} = [{'diff': 1.5707999999999694e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.134699999999795e-05}, {'diff': 1.944499999999988e-05}, {'diff': 2.0415999999998796e-05}, {'diff': 1.9457999999999975e-05...</msg>
<status status="PASS" starttime="20201030 18:27:32.120" endtime="20201030 18:27:32.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:32.127" level="INFO">${ACCURACY} = {'diff': [1.5707999999999694e-05, 2.2305999999999715e-05, 2.134699999999795e-05, 1.944499999999988e-05, 2.0415999999998796e-05, 1.9457999999999975e-05, 1.9429999999997366e-05, 2.2277999999997106e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:32.124" endtime="20201030 18:27:32.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.132" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:27:32.131" endtime="20201030 18:27:32.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.138" level="INFO">VALUE: [1.5707999999999694e-05, 2.2305999999999715e-05, 2.134699999999795e-05, 1.944499999999988e-05, 2.0415999999998796e-05, 1.9457999999999975e-05, 1.9429999999997366e-05, 2.2277999999997106e-05, 1.9444000000000405e-05, 2.136100000000099e-05, 2.143099999999884e-05, 2.134700000000142e-05, 2.1334000000001324e-05, 2.037499999999956e-05, 2.230500000000024e-05, 2.1444000000002406e-05, 1.943100000000031e-05, 2.2278000000000575e-05, 2.137500000000056e-05, 1.945899999999945e-05, 2.231899999999981e-05, 2.034700000000042e-05, 2.043100000000131e-05, 2.136100000000099e-05, 2.133299999999838e-05, 2.136099999999752e-05, 2.136099999999752e-05, 2.131899999999881e-05, 2.038899999999913e-05, 2.136100000000099e-05, 1.941700000000074e-05, 1.9429999999997366e-05, 2.0444000000001405e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.134700000000142e-05, 2.0416000000002266e-05, 2.2319999999999285e-05, 1.9444000000000405e-05, 2.2347999999998425e-05, 2.144500000000188e-05, 2.138900000000013e-05, 1.943100000000031e-05, 2.034700000000042e-05, 2.231899999999981e-05, 2.1347999999997425e-05, 2.2292000000000145e-05, 1.9457999999999975e-05, 2.031899999999781e-05, 2.038899999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:27:32.133" endtime="20201030 18:27:32.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.128" endtime="20201030 18:27:32.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.143" endtime="20201030 18:27:32.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.142" endtime="20201030 18:27:32.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.140" endtime="20201030 18:27:32.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.770" endtime="20201030 18:27:32.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.770" endtime="20201030 18:27:32.164"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.173" endtime="20201030 18:27:32.195"></status>
</kw>
<msg timestamp="20201030 18:27:32.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.171" endtime="20201030 18:27:32.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.197" endtime="20201030 18:27:32.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.199" endtime="20201030 18:27:32.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.169" endtime="20201030 18:27:32.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.167" endtime="20201030 18:27:32.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.209" endtime="20201030 18:27:32.495"></status>
</kw>
<msg timestamp="20201030 18:27:32.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023142806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.207" endtime="20201030 18:27:32.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023142806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.500" endtime="20201030 18:27:32.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.508" endtime="20201030 18:27:32.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.204" endtime="20201030 18:27:32.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.203" endtime="20201030 18:27:32.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.515" level="INFO">${RESULT} = [{'diff': 2.423699999999987e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.034699999999695e-05}, {'diff': 2.1333999999997855e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:32.512" endtime="20201030 18:27:32.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:32.520" level="INFO">${ACCURACY} = {'diff': [2.423699999999987e-05, 2.136100000000099e-05, 2.038899999999913e-05, 2.2278000000000575e-05, 2.034699999999695e-05, 2.1333999999997855e-05, 2.037499999999956e-05, 2.037499999999956e-05, 1.94...</msg>
<status status="PASS" starttime="20201030 18:27:32.516" endtime="20201030 18:27:32.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.525" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:27:32.524" endtime="20201030 18:27:32.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.528" level="INFO">VALUE: [2.423699999999987e-05, 2.136100000000099e-05, 2.038899999999913e-05, 2.2278000000000575e-05, 2.034699999999695e-05, 2.1333999999997855e-05, 2.037499999999956e-05, 2.037499999999956e-05, 1.941700000000074e-05, 2.038899999999913e-05, 2.0402000000002696e-05, 2.138900000000013e-05, 2.038899999999913e-05, 2.1348000000000894e-05, 2.0361999999999464e-05, 2.037499999999956e-05, 2.038899999999913e-05, 2.138900000000013e-05, 2.0401999999999226e-05, 1.943100000000031e-05, 2.2292000000000145e-05, 1.941699999999727e-05, 2.2305999999999715e-05, 1.9500000000002154e-05, 2.1319999999998285e-05, 1.941699999999727e-05, 2.1305999999998715e-05, 2.0334000000000324e-05, 1.941700000000074e-05, 2.2292000000000145e-05, 2.2333999999998855e-05, 1.9487000000002058e-05, 1.9416000000001266e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.136100000000099e-05, 2.2334000000002324e-05, 2.2320000000002754e-05, 2.2264000000001005e-05, 2.038899999999913e-05, 2.2278000000000575e-05, 2.037499999999956e-05, 2.237500000000156e-05, 2.238900000000113e-05, 1.9457999999999975e-05, 2.2292000000000145e-05, 2.2236000000001865e-05, 1.9401999999998226e-05, 2.03890000000026e-05, 2.043099999999784e-05]</msg>
<status status="PASS" starttime="20201030 18:27:32.526" endtime="20201030 18:27:32.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.521" endtime="20201030 18:27:32.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.538" endtime="20201030 18:27:32.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.536" endtime="20201030 18:27:32.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.535" endtime="20201030 18:27:32.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.165" endtime="20201030 18:27:32.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.164" endtime="20201030 18:27:32.559"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.568" endtime="20201030 18:27:32.583"></status>
</kw>
<msg timestamp="20201030 18:27:32.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.566" endtime="20201030 18:27:32.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.584" endtime="20201030 18:27:32.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.587" endtime="20201030 18:27:32.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.563" endtime="20201030 18:27:32.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.561" endtime="20201030 18:27:32.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.596" endtime="20201030 18:27:32.885"></status>
</kw>
<msg timestamp="20201030 18:27:32.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.595" endtime="20201030 18:27:32.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.889" endtime="20201030 18:27:32.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.898" endtime="20201030 18:27:32.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.592" endtime="20201030 18:27:32.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.590" endtime="20201030 18:27:32.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.905" level="INFO">${RESULT} = [{'diff': 6.972000000000922e-06}, {'diff': 1.9499999999998685e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.138900000000013e-05}, {'diff': 2.233300000000285e-05}, {'diff': 1.940300000000117e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:32.901" endtime="20201030 18:27:32.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:32.909" level="INFO">${ACCURACY} = {'diff': [6.972000000000922e-06, 1.9499999999998685e-05, 2.2305999999999715e-05, 2.138900000000013e-05, 2.233300000000285e-05, 1.940300000000117e-05, 2.0415999999998796e-05, 2.0415999999998796e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:27:32.906" endtime="20201030 18:27:32.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.913" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:27:32.912" endtime="20201030 18:27:32.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.916" level="INFO">VALUE: [6.972000000000922e-06, 1.9499999999998685e-05, 2.2305999999999715e-05, 2.138900000000013e-05, 2.233300000000285e-05, 1.940300000000117e-05, 2.0415999999998796e-05, 2.0415999999998796e-05, 2.2277999999997106e-05, 2.2292000000000145e-05, 2.0401999999999226e-05, 2.137500000000056e-05, 2.138900000000013e-05, 2.03890000000026e-05, 2.2263999999997536e-05, 2.037500000000303e-05, 2.045900000000045e-05, 2.1334000000001324e-05, 2.038899999999913e-05, 2.230500000000024e-05, 2.2264000000001005e-05, 2.229100000000067e-05, 1.8485999999998115e-05, 2.138900000000013e-05, 2.2319999999999285e-05, 2.0401999999999226e-05, 2.03890000000026e-05, 2.037499999999956e-05, 2.0387999999999656e-05, 2.138900000000013e-05, 2.037499999999956e-05, 2.230500000000024e-05, 2.138900000000013e-05, 2.038899999999913e-05, 2.137499999999709e-05, 2.138900000000013e-05, 2.2292000000000145e-05, 2.036099999999999e-05, 2.1347999999997425e-05, 1.9444000000000405e-05, 2.048699999999959e-05, 2.1362000000000464e-05, 2.2264000000001005e-05, 1.9415999999997796e-05, 2.137500000000056e-05, 1.947300000000249e-05, 2.041699999999827e-05, 1.945899999999945e-05, 2.133300000000185e-05, 2.229100000000067e-05]</msg>
<status status="PASS" starttime="20201030 18:27:32.915" endtime="20201030 18:27:32.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.910" endtime="20201030 18:27:32.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.921" endtime="20201030 18:27:32.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.920" endtime="20201030 18:27:32.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.918" endtime="20201030 18:27:32.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.560" endtime="20201030 18:27:32.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.559" endtime="20201030 18:27:32.942"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.951" endtime="20201030 18:27:32.969"></status>
</kw>
<msg timestamp="20201030 18:27:32.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.949" endtime="20201030 18:27:32.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.971" endtime="20201030 18:27:32.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.974" endtime="20201030 18:27:32.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.947" endtime="20201030 18:27:32.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.945" endtime="20201030 18:27:32.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.983" endtime="20201030 18:27:33.269"></status>
</kw>
<msg timestamp="20201030 18:27:33.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023842389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023857972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.981" endtime="20201030 18:27:33.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023842389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023857972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.274" endtime="20201030 18:27:33.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.282" endtime="20201030 18:27:33.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.979" endtime="20201030 18:27:33.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.977" endtime="20201030 18:27:33.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.289" level="INFO">${RESULT} = [{'diff': 1.558300000000304e-05}, {'diff': 2.133299999999838e-05}, {'diff': 2.137500000000056e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.0387999999999656e-05}, {'diff': 2.037500000000303e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:33.286" endtime="20201030 18:27:33.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:33.294" level="INFO">${ACCURACY} = {'diff': [1.558300000000304e-05, 2.133299999999838e-05, 2.137500000000056e-05, 2.236099999999852e-05, 2.0387999999999656e-05, 2.037500000000303e-05, 2.2292000000000145e-05, 2.131899999999881e-05, 2.03...</msg>
<status status="PASS" starttime="20201030 18:27:33.290" endtime="20201030 18:27:33.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.298" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:27:33.297" endtime="20201030 18:27:33.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.301" level="INFO">VALUE: [1.558300000000304e-05, 2.133299999999838e-05, 2.137500000000056e-05, 2.236099999999852e-05, 2.0387999999999656e-05, 2.037500000000303e-05, 2.2292000000000145e-05, 2.131899999999881e-05, 2.0361999999999464e-05, 1.940300000000117e-05, 2.1320000000001754e-05, 2.0402000000002696e-05, 2.041699999999827e-05, 2.0458000000000975e-05, 2.133299999999838e-05, 2.037499999999956e-05, 2.0348000000003363e-05, 2.03890000000026e-05, 1.9457999999999975e-05, 2.2278000000000575e-05, 2.030500000000171e-05, 2.036099999999999e-05, 2.133299999999838e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.234699999999895e-05, 2.041699999999827e-05, 1.9430000000000835e-05, 2.131899999999881e-05, 2.2263999999997536e-05, 2.1305999999998715e-05, 2.131899999999881e-05, 2.038899999999913e-05, 2.043100000000131e-05, 2.137500000000056e-05, 2.0334000000000324e-05, 2.133299999999838e-05, 2.134699999999795e-05, 2.136100000000099e-05, 1.9387999999998656e-05, 1.940300000000117e-05, 1.9485999999999115e-05, 2.136100000000099e-05, 2.133299999999838e-05, 2.131899999999881e-05, 2.036099999999999e-05, 2.136100000000099e-05, 2.037499999999956e-05, 2.2250000000001435e-05, 1.8458000000002445e-05]</msg>
<status status="PASS" starttime="20201030 18:27:33.299" endtime="20201030 18:27:33.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.294" endtime="20201030 18:27:33.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.307" endtime="20201030 18:27:33.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.305" endtime="20201030 18:27:33.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.304" endtime="20201030 18:27:33.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.943" endtime="20201030 18:27:33.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.942" endtime="20201030 18:27:33.328"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.337" endtime="20201030 18:27:33.361"></status>
</kw>
<msg timestamp="20201030 18:27:33.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.335" endtime="20201030 18:27:33.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.362" endtime="20201030 18:27:33.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.365" endtime="20201030 18:27:33.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.332" endtime="20201030 18:27:33.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.330" endtime="20201030 18:27:33.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.375" endtime="20201030 18:27:33.663"></status>
</kw>
<msg timestamp="20201030 18:27:33.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.373" endtime="20201030 18:27:33.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025067778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025085306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.667" endtime="20201030 18:27:33.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.676" endtime="20201030 18:27:33.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.370" endtime="20201030 18:27:33.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.368" endtime="20201030 18:27:33.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.683" level="INFO">${RESULT} = [{'diff': 1.7528000000002764e-05}, {'diff': 2.0416000000002266e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.043100000000131e-05}, {'diff': 2.0292000000001614e-05}, {'diff': 2.0416000000002266e-05...</msg>
<status status="PASS" starttime="20201030 18:27:33.679" endtime="20201030 18:27:33.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:33.688" level="INFO">${ACCURACY} = {'diff': [1.7528000000002764e-05, 2.0416000000002266e-05, 2.136100000000099e-05, 2.043100000000131e-05, 2.0292000000001614e-05, 2.0416000000002266e-05, 2.138900000000013e-05, 2.0416000000002266e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:27:33.684" endtime="20201030 18:27:33.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.693" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:27:33.692" endtime="20201030 18:27:33.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.696" level="INFO">VALUE: [1.7528000000002764e-05, 2.0416000000002266e-05, 2.136100000000099e-05, 2.043100000000131e-05, 2.0292000000001614e-05, 2.0416000000002266e-05, 2.138900000000013e-05, 2.0416000000002266e-05, 2.131899999999881e-05, 1.941700000000074e-05, 2.1305999999998715e-05, 2.1402000000000226e-05, 1.944499999999988e-05, 2.036099999999999e-05, 2.134700000000142e-05, 2.3292000000001145e-05, 1.8485999999998115e-05, 2.04029999999987e-05, 1.943100000000031e-05, 2.136100000000099e-05, 2.137500000000056e-05, 2.2305999999999715e-05, 2.037499999999956e-05, 2.038899999999913e-05, 2.134700000000142e-05, 2.038899999999913e-05, 1.9444000000000405e-05, 2.040300000000217e-05, 2.037499999999956e-05, 2.034700000000042e-05, 2.2264000000001005e-05, 1.9430000000000835e-05, 2.044499999999741e-05, 2.0415999999998796e-05, 2.133299999999838e-05, 2.134700000000142e-05, 2.1402000000000226e-05, 2.038899999999913e-05, 1.943100000000031e-05, 2.137500000000056e-05, 2.041699999999827e-05, 2.043099999999784e-05, 2.231899999999981e-05, 1.943100000000031e-05, 2.2278000000000575e-05, 2.136100000000099e-05, 2.043100000000131e-05, 2.041700000000174e-05, 2.143099999999884e-05, 1.845899999999845e-05]</msg>
<status status="PASS" starttime="20201030 18:27:33.694" endtime="20201030 18:27:33.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.689" endtime="20201030 18:27:33.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.701" endtime="20201030 18:27:33.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.699" endtime="20201030 18:27:33.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.698" endtime="20201030 18:27:33.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.329" endtime="20201030 18:27:33.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.328" endtime="20201030 18:27:33.722"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.731" endtime="20201030 18:27:33.749"></status>
</kw>
<msg timestamp="20201030 18:27:33.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.730" endtime="20201030 18:27:33.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.751" endtime="20201030 18:27:33.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.754" endtime="20201030 18:27:33.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.727" endtime="20201030 18:27:33.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.725" endtime="20201030 18:27:33.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.763" endtime="20201030 18:27:34.053"></status>
</kw>
<msg timestamp="20201030 18:27:34.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.761" endtime="20201030 18:27:34.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.057" endtime="20201030 18:27:34.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.066" endtime="20201030 18:27:34.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.759" endtime="20201030 18:27:34.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.757" endtime="20201030 18:27:34.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.073" level="INFO">${RESULT} = [{'diff': 2.1305999999998715e-05}, {'diff': 1.9402000000001696e-05}, {'diff': 2.137500000000056e-05}, {'diff': 2.043100000000131e-05}, {'diff': 2.131899999999881e-05}, {'diff': 1.9444000000000405e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:34.069" endtime="20201030 18:27:34.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:34.077" level="INFO">${ACCURACY} = {'diff': [2.1305999999998715e-05, 1.9402000000001696e-05, 2.137500000000056e-05, 2.043100000000131e-05, 2.131899999999881e-05, 1.9444000000000405e-05, 1.94029999999977e-05, 2.038899999999913e-05, 2.13...</msg>
<status status="PASS" starttime="20201030 18:27:34.074" endtime="20201030 18:27:34.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.081" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:27:34.080" endtime="20201030 18:27:34.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.084" level="INFO">VALUE: [2.1305999999998715e-05, 1.9402000000001696e-05, 2.137500000000056e-05, 2.043100000000131e-05, 2.131899999999881e-05, 1.9444000000000405e-05, 1.94029999999977e-05, 2.038899999999913e-05, 2.134700000000142e-05, 2.04029999999987e-05, 2.1319999999998285e-05, 1.943100000000031e-05, 1.936099999999899e-05, 2.1320000000001754e-05, 2.137500000000056e-05, 2.0401999999999226e-05, 2.233299999999938e-05, 2.034700000000042e-05, 2.037499999999956e-05, 2.2221999999998826e-05, 2.136099999999752e-05, 2.137500000000056e-05, 2.1320000000001754e-05, 2.22770000000011e-05, 1.945899999999945e-05, 2.044500000000088e-05, 1.943100000000031e-05, 1.9457999999999975e-05, 2.037499999999956e-05, 2.041700000000174e-05, 2.134700000000142e-05, 2.22090000000022e-05, 2.044500000000088e-05, 2.041699999999827e-05, 2.2235999999998396e-05, 2.037499999999956e-05, 2.129099999999967e-05, 2.133299999999838e-05, 2.234699999999895e-05, 1.9486000000002585e-05, 2.22770000000011e-05, 2.137500000000056e-05, 2.0306000000001184e-05, 2.038899999999913e-05, 2.034699999999695e-05, 2.037499999999956e-05, 2.138900000000013e-05, 2.2362000000001464e-05, 2.233299999999938e-05, 2.03890000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:27:34.083" endtime="20201030 18:27:34.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.078" endtime="20201030 18:27:34.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.089" endtime="20201030 18:27:34.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.088" endtime="20201030 18:27:34.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.086" endtime="20201030 18:27:34.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.723" endtime="20201030 18:27:34.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.723" endtime="20201030 18:27:34.110"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.119" endtime="20201030 18:27:34.135"></status>
</kw>
<msg timestamp="20201030 18:27:34.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.117" endtime="20201030 18:27:34.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.137" endtime="20201030 18:27:34.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.140" endtime="20201030 18:27:34.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.115" endtime="20201030 18:27:34.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.113" endtime="20201030 18:27:34.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.149" endtime="20201030 18:27:34.437"></status>
</kw>
<msg timestamp="20201030 18:27:34.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.147" endtime="20201030 18:27:34.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021375153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.441" endtime="20201030 18:27:34.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.450" endtime="20201030 18:27:34.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.145" endtime="20201030 18:27:34.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.143" endtime="20201030 18:27:34.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.457" level="INFO">${RESULT} = [{'diff': 3.086100000000008e-05}, {'diff': 2.131899999999881e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.041699999999827e-05}, {'diff': 2.134700000000142e-05}, {'diff': 1.941700000000074e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:34.454" endtime="20201030 18:27:34.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:34.461" level="INFO">${ACCURACY} = {'diff': [3.086100000000008e-05, 2.131899999999881e-05, 2.136100000000099e-05, 2.041699999999827e-05, 2.134700000000142e-05, 1.941700000000074e-05, 1.944499999999988e-05, 2.138900000000013e-05, 2.1348...</msg>
<status status="PASS" starttime="20201030 18:27:34.458" endtime="20201030 18:27:34.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.466" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:27:34.465" endtime="20201030 18:27:34.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.468" level="INFO">VALUE: [3.086100000000008e-05, 2.131899999999881e-05, 2.136100000000099e-05, 2.041699999999827e-05, 2.134700000000142e-05, 1.941700000000074e-05, 1.944499999999988e-05, 2.138900000000013e-05, 2.1348000000000894e-05, 2.038899999999913e-05, 2.0458000000000975e-05, 2.237499999999809e-05, 1.93890000000016e-05, 2.038899999999913e-05, 2.04029999999987e-05, 2.0443999999997936e-05, 2.037499999999956e-05, 1.941700000000074e-05, 2.137500000000056e-05, 1.9444000000000405e-05, 1.941700000000074e-05, 1.9401999999998226e-05, 2.136099999999752e-05, 2.037499999999956e-05, 2.230500000000024e-05, 1.944499999999988e-05, 2.1333999999997855e-05, 2.14029999999997e-05, 2.030500000000171e-05, 2.038899999999913e-05, 2.1333999999997855e-05, 2.233299999999938e-05, 2.134700000000142e-05, 1.941700000000074e-05, 2.136099999999752e-05, 1.951299999999878e-05, 2.133300000000185e-05, 2.131900000000228e-05, 2.048699999999959e-05, 2.231899999999981e-05, 2.0429999999998366e-05, 2.04029999999987e-05, 2.136099999999752e-05, 2.131899999999881e-05, 1.934700000000289e-05, 2.037499999999956e-05, 2.134699999999795e-05, 2.231899999999981e-05, 2.037499999999956e-05, 2.2292000000000145e-05]</msg>
<status status="PASS" starttime="20201030 18:27:34.467" endtime="20201030 18:27:34.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.462" endtime="20201030 18:27:34.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.475" endtime="20201030 18:27:34.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.473" endtime="20201030 18:27:34.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.472" endtime="20201030 18:27:34.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.111" endtime="20201030 18:27:34.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.110" endtime="20201030 18:27:34.495"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.504" endtime="20201030 18:27:34.523"></status>
</kw>
<msg timestamp="20201030 18:27:34.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.503" endtime="20201030 18:27:34.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.525" endtime="20201030 18:27:34.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.529" endtime="20201030 18:27:34.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.500" endtime="20201030 18:27:34.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.498" endtime="20201030 18:27:34.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.539" endtime="20201030 18:27:34.827"></status>
</kw>
<msg timestamp="20201030 18:27:34.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022945319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.537" endtime="20201030 18:27:34.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022945319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.831" endtime="20201030 18:27:34.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.840" endtime="20201030 18:27:34.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.534" endtime="20201030 18:27:34.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.532" endtime="20201030 18:27:34.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.846" level="INFO">${RESULT} = [{'diff': 2.42230000000003e-05}, {'diff': 1.9471999999999545e-05}, {'diff': 1.943100000000031e-05}, {'diff': 2.22770000000011e-05}, {'diff': 2.137500000000056e-05}, {'diff': 1.9444000000000405e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:34.843" endtime="20201030 18:27:34.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:34.851" level="INFO">${ACCURACY} = {'diff': [2.42230000000003e-05, 1.9471999999999545e-05, 1.943100000000031e-05, 2.22770000000011e-05, 2.137500000000056e-05, 1.9444000000000405e-05, 2.0486000000000115e-05, 2.231899999999981e-05, 1.943...</msg>
<status status="PASS" starttime="20201030 18:27:34.847" endtime="20201030 18:27:34.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.856" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:27:34.855" endtime="20201030 18:27:34.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.858" level="INFO">VALUE: [2.42230000000003e-05, 1.9471999999999545e-05, 1.943100000000031e-05, 2.22770000000011e-05, 2.137500000000056e-05, 1.9444000000000405e-05, 2.0486000000000115e-05, 2.231899999999981e-05, 1.9430000000000835e-05, 1.941700000000074e-05, 2.0415999999998796e-05, 1.9430000000000835e-05, 2.234699999999895e-05, 2.041699999999827e-05, 1.9471999999999545e-05, 2.231899999999981e-05, 2.1320000000001754e-05, 1.941700000000074e-05, 2.1362000000000464e-05, 2.036099999999999e-05, 2.230500000000024e-05, 2.134699999999795e-05, 2.137500000000056e-05, 1.9387999999998656e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.231899999999981e-05, 1.9457999999999975e-05, 2.037499999999956e-05, 1.9402000000001696e-05, 2.138900000000013e-05, 3.265300000000054e-05, 1.0804999999999149e-05, 2.2264000000001005e-05, 1.943100000000031e-05, 2.2292000000000145e-05, 2.0430000000001836e-05, 2.1415999999999796e-05, 2.136100000000099e-05, 2.2305999999999715e-05, 2.137500000000056e-05, 2.133300000000185e-05, 2.0292000000001614e-05, 2.2236000000001865e-05, 2.2333999999998855e-05, 2.041700000000174e-05, 2.038899999999913e-05, 1.9429999999997366e-05, 1.9444000000000405e-05, 2.0334000000000324e-05]</msg>
<status status="PASS" starttime="20201030 18:27:34.857" endtime="20201030 18:27:34.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.852" endtime="20201030 18:27:34.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.863" endtime="20201030 18:27:34.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.862" endtime="20201030 18:27:34.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.860" endtime="20201030 18:27:34.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.496" endtime="20201030 18:27:34.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.496" endtime="20201030 18:27:34.884"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.892" endtime="20201030 18:27:34.909"></status>
</kw>
<msg timestamp="20201030 18:27:34.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.891" endtime="20201030 18:27:34.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.910" endtime="20201030 18:27:34.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.913" endtime="20201030 18:27:34.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.888" endtime="20201030 18:27:34.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.886" endtime="20201030 18:27:34.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.922" endtime="20201030 18:27:35.225"></status>
</kw>
<msg timestamp="20201030 18:27:35.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021327472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.920" endtime="20201030 18:27:35.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021327472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.234" endtime="20201030 18:27:35.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.246" endtime="20201030 18:27:35.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.918" endtime="20201030 18:27:35.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.916" endtime="20201030 18:27:35.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.252" level="INFO">${RESULT} = [{'diff': 3.094500000000097e-05}, {'diff': 2.03890000000026e-05}, {'diff': 2.0334000000000324e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.038899999999913e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:35.249" endtime="20201030 18:27:35.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:35.256" level="INFO">${ACCURACY} = {'diff': [3.094500000000097e-05, 2.03890000000026e-05, 2.0334000000000324e-05, 2.236099999999852e-05, 2.234699999999895e-05, 2.038899999999913e-05, 2.233299999999938e-05, 2.04029999999987e-05, 1.93750...</msg>
<status status="PASS" starttime="20201030 18:27:35.253" endtime="20201030 18:27:35.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.261" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:27:35.260" endtime="20201030 18:27:35.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.263" level="INFO">VALUE: [3.094500000000097e-05, 2.03890000000026e-05, 2.0334000000000324e-05, 2.236099999999852e-05, 2.234699999999895e-05, 2.038899999999913e-05, 2.233299999999938e-05, 2.04029999999987e-05, 1.937500000000203e-05, 1.8486000000001584e-05, 2.231899999999981e-05, 1.943100000000031e-05, 2.229100000000067e-05, 2.038899999999913e-05, 2.04029999999987e-05, 1.945899999999945e-05, 2.131899999999881e-05, 2.2292000000000145e-05, 2.234699999999895e-05, 2.03890000000026e-05, 2.1334000000001324e-05, 2.2278000000000575e-05, 1.8485999999998115e-05, 2.1333999999997855e-05, 2.0347999999999894e-05, 2.04029999999987e-05, 2.043100000000131e-05, 2.130500000000271e-05, 2.133300000000185e-05, 2.3249999999998966e-05, 1.937499999999856e-05, 2.143100000000231e-05, 2.138900000000013e-05, 1.9416000000001266e-05, 2.133299999999838e-05, 2.037499999999956e-05, 2.137500000000056e-05, 1.9444000000000405e-05, 2.136100000000099e-05, 2.2292000000000145e-05, 2.2292000000000145e-05, 1.9471999999999545e-05, 2.233300000000285e-05, 1.9430000000000835e-05, 2.134699999999795e-05, 2.1348000000000894e-05, 2.136099999999752e-05, 2.044499999999741e-05, 2.03890000000026e-05, 2.2292000000000145e-05]</msg>
<status status="PASS" starttime="20201030 18:27:35.262" endtime="20201030 18:27:35.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.257" endtime="20201030 18:27:35.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.268" endtime="20201030 18:27:35.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.267" endtime="20201030 18:27:35.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.265" endtime="20201030 18:27:35.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.885" endtime="20201030 18:27:35.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.884" endtime="20201030 18:27:35.289"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.297" endtime="20201030 18:27:35.315"></status>
</kw>
<msg timestamp="20201030 18:27:35.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.296" endtime="20201030 18:27:35.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.317" endtime="20201030 18:27:35.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.319" endtime="20201030 18:27:35.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.293" endtime="20201030 18:27:35.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.291" endtime="20201030 18:27:35.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.328" endtime="20201030 18:27:35.615"></status>
</kw>
<msg timestamp="20201030 18:27:35.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.327" endtime="20201030 18:27:35.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023275833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023285736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.619" endtime="20201030 18:27:35.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.627" endtime="20201030 18:27:35.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.324" endtime="20201030 18:27:35.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.322" endtime="20201030 18:27:35.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.634" level="INFO">${RESULT} = [{'diff': 9.903000000002077e-06}, {'diff': 2.136100000000099e-05}, {'diff': 2.137500000000056e-05}, {'diff': 2.0429999999998366e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 1.93890000000016e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:35.631" endtime="20201030 18:27:35.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:35.638" level="INFO">${ACCURACY} = {'diff': [9.903000000002077e-06, 2.136100000000099e-05, 2.137500000000056e-05, 2.0429999999998366e-05, 2.2278000000000575e-05, 1.93890000000016e-05, 2.2292000000000145e-05, 1.94029999999977e-05, 2.136...</msg>
<status status="PASS" starttime="20201030 18:27:35.635" endtime="20201030 18:27:35.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.642" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:27:35.641" endtime="20201030 18:27:35.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.648" level="INFO">VALUE: [9.903000000002077e-06, 2.136100000000099e-05, 2.137500000000056e-05, 2.0429999999998366e-05, 2.2278000000000575e-05, 1.93890000000016e-05, 2.2292000000000145e-05, 1.94029999999977e-05, 2.136099999999752e-05, 2.0415999999998796e-05, 2.1319999999998285e-05, 2.037500000000303e-05, 2.0347999999999894e-05, 2.133299999999838e-05, 2.2249999999997966e-05, 2.1291999999999145e-05, 2.3249999999998966e-05, 1.9444000000000405e-05, 2.140300000000317e-05, 2.038899999999913e-05, 1.940300000000117e-05, 2.2306000000003184e-05, 2.2319999999999285e-05, 1.9429999999997366e-05, 2.04029999999987e-05, 2.134699999999795e-05, 2.2278000000000575e-05, 1.9416000000001266e-05, 2.137500000000056e-05, 1.9415999999997796e-05, 2.1333999999997855e-05, 1.9457999999999975e-05, 2.041699999999827e-05, 1.9416000000001266e-05, 1.944499999999988e-05, 2.236099999999852e-05, 2.233299999999938e-05, 2.126300000000053e-05, 2.037499999999956e-05, 2.136099999999752e-05, 2.03890000000026e-05, 2.2305999999999715e-05, 2.138900000000013e-05, 2.236100000000199e-05, 1.845899999999845e-05, 2.1334000000001324e-05, 2.2277999999997106e-05, 2.230500000000024e-05, 2.0347999999999894e-05, 2.133300000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:27:35.643" endtime="20201030 18:27:35.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.639" endtime="20201030 18:27:35.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.653" endtime="20201030 18:27:35.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.652" endtime="20201030 18:27:35.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.650" endtime="20201030 18:27:35.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.290" endtime="20201030 18:27:35.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.289" endtime="20201030 18:27:35.674"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.682" endtime="20201030 18:27:35.699"></status>
</kw>
<msg timestamp="20201030 18:27:35.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.681" endtime="20201030 18:27:35.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.700" endtime="20201030 18:27:35.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.703" endtime="20201030 18:27:35.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.678" endtime="20201030 18:27:35.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.676" endtime="20201030 18:27:35.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.711" endtime="20201030 18:27:35.996"></status>
</kw>
<msg timestamp="20201030 18:27:35.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.710" endtime="20201030 18:27:35.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020120333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020149333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.000" endtime="20201030 18:27:36.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.009" endtime="20201030 18:27:36.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.707" endtime="20201030 18:27:36.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.706" endtime="20201030 18:27:36.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.015" level="INFO">${RESULT} = [{'diff': 2.8999999999997778e-05}, {'diff': 2.038899999999913e-05}, {'diff': 1.9457999999999975e-05}, {'diff': 2.2334000000002324e-05}, {'diff': 2.1319999999998285e-05}, {'diff': 1.9430000000000835e-0...</msg>
<status status="PASS" starttime="20201030 18:27:36.012" endtime="20201030 18:27:36.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:36.020" level="INFO">${ACCURACY} = {'diff': [2.8999999999997778e-05, 2.038899999999913e-05, 1.9457999999999975e-05, 2.2334000000002324e-05, 2.1319999999998285e-05, 1.9430000000000835e-05, 2.136100000000099e-05, 2.231899999999981e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:27:36.016" endtime="20201030 18:27:36.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.025" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:27:36.024" endtime="20201030 18:27:36.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.027" level="INFO">VALUE: [2.8999999999997778e-05, 2.038899999999913e-05, 1.9457999999999975e-05, 2.2334000000002324e-05, 2.1319999999998285e-05, 1.9430000000000835e-05, 2.136100000000099e-05, 2.231899999999981e-05, 2.038899999999913e-05, 2.134700000000142e-05, 2.230500000000024e-05, 1.9416000000001266e-05, 2.22770000000011e-05, 2.0361999999999464e-05, 2.1320000000001754e-05, 2.0347999999999894e-05, 1.9457999999999975e-05, 2.041699999999827e-05, 2.2305999999999715e-05, 1.940300000000117e-05, 2.03890000000026e-05, 1.941700000000074e-05, 2.034700000000042e-05, 1.845899999999845e-05, 2.037499999999956e-05, 2.1361999999996995e-05, 2.2305999999999715e-05, 2.038899999999913e-05, 2.134700000000142e-05, 2.1362000000000464e-05, 2.137500000000056e-05, 2.036099999999999e-05, 2.038899999999913e-05, 2.230500000000024e-05, 2.2292000000000145e-05, 1.9402000000001696e-05, 2.0416000000002266e-05, 2.040300000000217e-05, 2.3263999999998536e-05, 2.0458000000000975e-05, 2.1347999999997425e-05, 2.038899999999913e-05, 2.1334000000001324e-05, 2.037499999999956e-05, 2.136100000000099e-05, 1.9444000000000405e-05, 1.941700000000074e-05, 2.230500000000024e-05, 2.229100000000067e-05, 1.941700000000074e-05]</msg>
<status status="PASS" starttime="20201030 18:27:36.026" endtime="20201030 18:27:36.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.021" endtime="20201030 18:27:36.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.032" endtime="20201030 18:27:36.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.030" endtime="20201030 18:27:36.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.029" endtime="20201030 18:27:36.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.675" endtime="20201030 18:27:36.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.674" endtime="20201030 18:27:36.053"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.061" endtime="20201030 18:27:36.080"></status>
</kw>
<msg timestamp="20201030 18:27:36.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.060" endtime="20201030 18:27:36.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.082" endtime="20201030 18:27:36.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.084" endtime="20201030 18:27:36.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.057" endtime="20201030 18:27:36.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.055" endtime="20201030 18:27:36.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.093" endtime="20201030 18:27:36.382"></status>
</kw>
<msg timestamp="20201030 18:27:36.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023093931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02311725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:36.091" endtime="20201030 18:27:36.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023093931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02311725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:36.386" endtime="20201030 18:27:36.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.394" endtime="20201030 18:27:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.089" endtime="20201030 18:27:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.087" endtime="20201030 18:27:36.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.400" level="INFO">${RESULT} = [{'diff': 2.3318999999997342e-05}, {'diff': 2.137500000000056e-05}, {'diff': 1.943100000000031e-05}, {'diff': 2.237500000000156e-05}, {'diff': 1.947299999999902e-05}, {'diff': 2.0401999999999226e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:36.397" endtime="20201030 18:27:36.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:36.405" level="INFO">${ACCURACY} = {'diff': [2.3318999999997342e-05, 2.137500000000056e-05, 1.943100000000031e-05, 2.237500000000156e-05, 1.947299999999902e-05, 2.0401999999999226e-05, 2.1348000000000894e-05, 2.134700000000142e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 18:27:36.402" endtime="20201030 18:27:36.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.409" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:27:36.408" endtime="20201030 18:27:36.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.412" level="INFO">VALUE: [2.3318999999997342e-05, 2.137500000000056e-05, 1.943100000000031e-05, 2.237500000000156e-05, 1.947299999999902e-05, 2.0401999999999226e-05, 2.1348000000000894e-05, 2.134700000000142e-05, 2.04029999999987e-05, 1.9444000000000405e-05, 2.134699999999795e-05, 1.937500000000203e-05, 2.131899999999881e-05, 2.0472000000000545e-05, 1.940300000000117e-05, 2.037499999999956e-05, 1.9486000000002585e-05, 2.137500000000056e-05, 2.231899999999981e-05, 1.944499999999988e-05, 2.1320000000001754e-05, 2.136099999999752e-05, 2.2278000000000575e-05, 1.9444000000000405e-05, 1.9471999999999545e-05, 1.9388000000002126e-05, 2.1362000000000464e-05, 2.133300000000185e-05, 2.1348000000000894e-05, 2.130499999999924e-05, 2.034700000000042e-05, 2.038899999999913e-05, 2.234699999999895e-05, 2.134700000000142e-05, 2.1333999999997855e-05, 1.941700000000074e-05, 2.1334000000001324e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.1277999999999575e-05, 2.2305999999999715e-05, 2.036099999999999e-05, 2.233300000000285e-05, 2.136100000000099e-05, 2.1277999999999575e-05, 2.037499999999956e-05, 2.0443999999997936e-05, 2.03890000000026e-05, 1.9471999999999545e-05, 1.9430000000000835e-05]</msg>
<status status="PASS" starttime="20201030 18:27:36.410" endtime="20201030 18:27:36.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.405" endtime="20201030 18:27:36.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.416" endtime="20201030 18:27:36.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.415" endtime="20201030 18:27:36.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.414" endtime="20201030 18:27:36.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.054" endtime="20201030 18:27:36.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.053" endtime="20201030 18:27:36.437"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.446" endtime="20201030 18:27:36.470"></status>
</kw>
<msg timestamp="20201030 18:27:36.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.444" endtime="20201030 18:27:36.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.471" endtime="20201030 18:27:36.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.474" endtime="20201030 18:27:36.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.442" endtime="20201030 18:27:36.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.440" endtime="20201030 18:27:36.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.483" endtime="20201030 18:27:36.768"></status>
</kw>
<msg timestamp="20201030 18:27:36.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025422889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025443264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.481" endtime="20201030 18:27:36.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025422889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025443264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.773" endtime="20201030 18:27:36.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.781" endtime="20201030 18:27:36.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.479" endtime="20201030 18:27:36.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.477" endtime="20201030 18:27:36.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.787" level="INFO">${RESULT} = [{'diff': 2.037499999999956e-05}, {'diff': 2.126300000000053e-05}, {'diff': 1.9402000000001696e-05}, {'diff': 1.9457999999999975e-05}, {'diff': 1.94029999999977e-05}, {'diff': 2.1333999999997855e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:36.784" endtime="20201030 18:27:36.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:36.792" level="INFO">${ACCURACY} = {'diff': [2.037499999999956e-05, 2.126300000000053e-05, 1.9402000000001696e-05, 1.9457999999999975e-05, 1.94029999999977e-05, 2.1333999999997855e-05, 2.037499999999956e-05, 1.944499999999988e-05, 2.13...</msg>
<status status="PASS" starttime="20201030 18:27:36.788" endtime="20201030 18:27:36.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.796" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:27:36.795" endtime="20201030 18:27:36.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.798" level="INFO">VALUE: [2.037499999999956e-05, 2.126300000000053e-05, 1.9402000000001696e-05, 1.9457999999999975e-05, 1.94029999999977e-05, 2.1333999999997855e-05, 2.037499999999956e-05, 1.944499999999988e-05, 2.133299999999838e-05, 2.130499999999924e-05, 2.3249999999998966e-05, 2.044500000000088e-05, 2.2348000000001894e-05, 2.034699999999695e-05, 1.941700000000074e-05, 2.2304999999996772e-05, 2.038899999999913e-05, 2.041699999999827e-05, 2.138899999999666e-05, 2.237499999999809e-05, 2.136100000000099e-05, 2.134699999999795e-05, 2.036099999999999e-05, 1.9444000000000405e-05, 2.1306000000002184e-05, 2.1333999999997855e-05, 1.941700000000074e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.230500000000024e-05, 2.1334000000001324e-05, 1.9499999999998685e-05, 2.2348000000001894e-05, 1.9333999999999324e-05, 2.037499999999956e-05, 1.941700000000074e-05, 2.037499999999956e-05, 2.0387999999999656e-05, 1.9444000000000405e-05, 2.230500000000024e-05, 2.133299999999838e-05, 1.9471999999999545e-05, 2.038899999999913e-05, 2.038899999999913e-05, 2.0291999999998145e-05, 1.940300000000117e-05, 2.2292000000000145e-05, 2.133299999999838e-05, 2.2320000000002754e-05, 2.031899999999781e-05]</msg>
<status status="PASS" starttime="20201030 18:27:36.797" endtime="20201030 18:27:36.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.792" endtime="20201030 18:27:36.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.804" endtime="20201030 18:27:36.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.803" endtime="20201030 18:27:36.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.801" endtime="20201030 18:27:36.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.438" endtime="20201030 18:27:36.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.438" endtime="20201030 18:27:36.825"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.833" endtime="20201030 18:27:36.853"></status>
</kw>
<msg timestamp="20201030 18:27:36.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.832" endtime="20201030 18:27:36.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.855" endtime="20201030 18:27:36.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.857" endtime="20201030 18:27:36.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.829" endtime="20201030 18:27:36.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.827" endtime="20201030 18:27:36.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.866" endtime="20201030 18:27:37.150"></status>
</kw>
<msg timestamp="20201030 18:27:37.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:36.865" endtime="20201030 18:27:37.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0245965, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:37.155" endtime="20201030 18:27:37.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.163" endtime="20201030 18:27:37.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.862" endtime="20201030 18:27:37.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.860" endtime="20201030 18:27:37.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.169" level="INFO">${RESULT} = [{'diff': 1.940300000000117e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.2320000000002754e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.134699999999795e-05}, {'diff': 2.04029999999987e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:37.166" endtime="20201030 18:27:37.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:37.174" level="INFO">${ACCURACY} = {'diff': [1.940300000000117e-05, 2.2319999999999285e-05, 2.2320000000002754e-05, 2.037499999999956e-05, 2.134699999999795e-05, 2.04029999999987e-05, 2.2292000000000145e-05, 1.940300000000117e-05, 2.13...</msg>
<status status="PASS" starttime="20201030 18:27:37.170" endtime="20201030 18:27:37.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.179" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:27:37.178" endtime="20201030 18:27:37.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.181" level="INFO">VALUE: [1.940300000000117e-05, 2.2319999999999285e-05, 2.2320000000002754e-05, 2.037499999999956e-05, 2.134699999999795e-05, 2.04029999999987e-05, 2.2292000000000145e-05, 1.940300000000117e-05, 2.133299999999838e-05, 2.1387999999997187e-05, 2.040300000000217e-05, 2.136100000000099e-05, 2.2305999999999715e-05, 1.8513999999997255e-05, 2.2305999999999715e-05, 2.1361999999996995e-05, 2.134700000000142e-05, 2.230500000000024e-05, 2.043100000000131e-05, 2.2305999999999715e-05, 2.234699999999895e-05, 2.133299999999838e-05, 2.03890000000026e-05, 2.231899999999981e-05, 2.137500000000056e-05, 2.2276999999997632e-05, 2.037499999999956e-05, 1.940300000000117e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.04029999999987e-05, 2.137499999999709e-05, 1.944499999999988e-05, 2.044500000000088e-05, 2.034700000000042e-05, 2.0444000000001405e-05, 1.9430000000000835e-05, 2.2278000000000575e-05, 2.2276999999997632e-05, 2.133299999999838e-05, 2.129099999999967e-05, 2.136100000000099e-05, 2.234699999999895e-05, 2.043099999999784e-05, 2.1348000000000894e-05, 2.22770000000011e-05, 2.04029999999987e-05, 2.0430000000001836e-05, 2.134699999999795e-05, 2.133300000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.180" endtime="20201030 18:27:37.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.175" endtime="20201030 18:27:37.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.186" endtime="20201030 18:27:37.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.185" endtime="20201030 18:27:37.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.184" endtime="20201030 18:27:37.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.826" endtime="20201030 18:27:37.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.825" endtime="20201030 18:27:37.207"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.215" endtime="20201030 18:27:37.235"></status>
</kw>
<msg timestamp="20201030 18:27:37.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.214" endtime="20201030 18:27:37.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.236" endtime="20201030 18:27:37.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.239" endtime="20201030 18:27:37.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.211" endtime="20201030 18:27:37.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.209" endtime="20201030 18:27:37.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.248" endtime="20201030 18:27:37.533"></status>
</kw>
<msg timestamp="20201030 18:27:37.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024389792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.246" endtime="20201030 18:27:37.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024378958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024389792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.537" endtime="20201030 18:27:37.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.545" endtime="20201030 18:27:37.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.244" endtime="20201030 18:27:37.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.242" endtime="20201030 18:27:37.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.552" level="INFO">${RESULT} = [{'diff': 1.0834000000001232e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.3235999999999396e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.036099999999999e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:37.549" endtime="20201030 18:27:37.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:37.556" level="INFO">${ACCURACY} = {'diff': [1.0834000000001232e-05, 2.0472000000000545e-05, 2.041700000000174e-05, 2.3235999999999396e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.1305999999998715e-05, 2.138900000000013e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:27:37.553" endtime="20201030 18:27:37.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.560" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:27:37.559" endtime="20201030 18:27:37.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.563" level="INFO">VALUE: [1.0834000000001232e-05, 2.0472000000000545e-05, 2.041700000000174e-05, 2.3235999999999396e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.1305999999998715e-05, 2.138900000000013e-05, 1.941699999999727e-05, 2.134700000000142e-05, 2.037499999999956e-05, 2.0415999999998796e-05, 2.043099999999784e-05, 2.229100000000067e-05, 2.134700000000142e-05, 2.1334000000001324e-05, 2.133299999999838e-05, 1.9444000000000405e-05, 2.136100000000099e-05, 2.037499999999956e-05, 2.0387999999999656e-05, 2.2305999999999715e-05, 2.1347999999997425e-05, 2.234700000000242e-05, 2.137499999999709e-05, 2.2305999999999715e-05, 2.1319999999998285e-05, 2.136100000000099e-05, 2.133299999999838e-05, 2.2235999999998396e-05, 1.93890000000016e-05, 2.137500000000056e-05, 2.0361999999999464e-05, 1.8471999999998545e-05, 2.3235999999999396e-05, 2.2305999999999715e-05, 2.038899999999913e-05, 2.043099999999784e-05, 2.234699999999895e-05, 2.2320000000002754e-05, 2.03890000000026e-05, 2.037499999999956e-05, 2.03890000000026e-05, 2.04029999999987e-05, 1.941700000000074e-05, 2.041699999999827e-05, 2.229100000000067e-05, 2.131900000000228e-05, 2.130499999999924e-05, 2.0472000000000545e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.562" endtime="20201030 18:27:37.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.557" endtime="20201030 18:27:37.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.575" endtime="20201030 18:27:37.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.574" endtime="20201030 18:27:37.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.573" endtime="20201030 18:27:37.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.208" endtime="20201030 18:27:37.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.207" endtime="20201030 18:27:37.596"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.605" endtime="20201030 18:27:37.626"></status>
</kw>
<msg timestamp="20201030 18:27:37.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.603" endtime="20201030 18:27:37.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.627" endtime="20201030 18:27:37.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.629" endtime="20201030 18:27:37.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.600" endtime="20201030 18:27:37.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.598" endtime="20201030 18:27:37.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.638" endtime="20201030 18:27:37.927"></status>
</kw>
<msg timestamp="20201030 18:27:37.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.637" endtime="20201030 18:27:37.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.932" endtime="20201030 18:27:37.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.940" endtime="20201030 18:27:37.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.634" endtime="20201030 18:27:37.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.633" endtime="20201030 18:27:37.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.947" level="INFO">${RESULT} = [{'diff': 1.944500000000335e-05}, {'diff': 2.134700000000142e-05}, {'diff': 2.229100000000067e-05}, {'diff': 1.945899999999945e-05}, {'diff': 2.1333999999997855e-05}, {'diff': 2.231899999999981e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:37.944" endtime="20201030 18:27:37.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:37.951" level="INFO">${ACCURACY} = {'diff': [1.944500000000335e-05, 2.134700000000142e-05, 2.229100000000067e-05, 1.945899999999945e-05, 2.1333999999997855e-05, 2.231899999999981e-05, 2.234699999999895e-05, 1.936099999999899e-05, 2.136...</msg>
<status status="PASS" starttime="20201030 18:27:37.948" endtime="20201030 18:27:37.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.969" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:27:37.967" endtime="20201030 18:27:37.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.976" level="INFO">VALUE: [1.944500000000335e-05, 2.134700000000142e-05, 2.229100000000067e-05, 1.945899999999945e-05, 2.1333999999997855e-05, 2.231899999999981e-05, 2.234699999999895e-05, 1.936099999999899e-05, 2.136100000000099e-05, 2.1320000000001754e-05, 2.2277999999997106e-05, 2.137500000000056e-05, 1.9430000000000835e-05, 1.8443999999999405e-05, 2.036099999999999e-05, 2.133300000000185e-05, 2.134700000000142e-05, 2.133300000000185e-05, 2.3249999999998966e-05, 1.940300000000117e-05, 1.9416000000001266e-05, 2.136100000000099e-05, 2.134699999999795e-05, 2.2292000000000145e-05, 1.941700000000074e-05, 1.9486000000002585e-05, 1.945899999999945e-05, 2.034700000000042e-05, 2.133299999999838e-05, 2.1347999999997425e-05, 1.940300000000117e-05, 1.940300000000117e-05, 2.134700000000142e-05, 2.03890000000026e-05, 2.136100000000099e-05, 2.3264000000002005e-05, 1.8457999999998975e-05, 2.0347999999999894e-05, 2.2333999999998855e-05, 2.036099999999999e-05, 1.9416000000001266e-05, 2.033300000000085e-05, 2.2278000000000575e-05, 2.1319999999998285e-05, 2.038899999999913e-05, 2.04029999999987e-05, 1.944499999999988e-05, 2.2264000000001005e-05, 2.1320000000001754e-05, 2.137500000000056e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.972" endtime="20201030 18:27:37.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.952" endtime="20201030 18:27:37.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.991" endtime="20201030 18:27:38.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.986" endtime="20201030 18:27:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.983" endtime="20201030 18:27:38.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.597" endtime="20201030 18:27:38.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.596" endtime="20201030 18:27:38.013"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.024" endtime="20201030 18:27:38.045"></status>
</kw>
<msg timestamp="20201030 18:27:38.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.022" endtime="20201030 18:27:38.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.047" endtime="20201030 18:27:38.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.050" endtime="20201030 18:27:38.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.019" endtime="20201030 18:27:38.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.016" endtime="20201030 18:27:38.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.062" endtime="20201030 18:27:38.366"></status>
</kw>
<msg timestamp="20201030 18:27:38.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027780597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027786681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.059" endtime="20201030 18:27:38.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027780597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027786681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.371" endtime="20201030 18:27:38.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.379" endtime="20201030 18:27:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.056" endtime="20201030 18:27:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.054" endtime="20201030 18:27:38.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.386" level="INFO">${RESULT} = [{'diff': 6.0839999999999506e-06}, {'diff': 2.04029999999987e-05}, {'diff': 2.131899999999881e-05}, {'diff': 2.230500000000024e-05}, {'diff': 1.94029999999977e-05}, {'diff': 1.943100000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:38.383" endtime="20201030 18:27:38.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:38.391" level="INFO">${ACCURACY} = {'diff': [6.0839999999999506e-06, 2.04029999999987e-05, 2.131899999999881e-05, 2.230500000000024e-05, 1.94029999999977e-05, 1.943100000000031e-05, 2.0387999999999656e-05, 2.131900000000228e-05, 2.1361...</msg>
<status status="PASS" starttime="20201030 18:27:38.387" endtime="20201030 18:27:38.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.396" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:27:38.395" endtime="20201030 18:27:38.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.398" level="INFO">VALUE: [6.0839999999999506e-06, 2.04029999999987e-05, 2.131899999999881e-05, 2.230500000000024e-05, 1.94029999999977e-05, 1.943100000000031e-05, 2.0387999999999656e-05, 2.131900000000228e-05, 2.136100000000099e-05, 2.138900000000013e-05, 2.136100000000099e-05, 1.940300000000117e-05, 2.1333999999997855e-05, 2.036099999999999e-05, 2.2278000000000575e-05, 2.134699999999795e-05, 2.138900000000013e-05, 2.2292000000000145e-05, 2.037499999999956e-05, 2.230500000000024e-05, 2.2278000000000575e-05, 2.043100000000131e-05, 2.136100000000099e-05, 1.941699999999727e-05, 1.9416000000001266e-05, 1.94029999999977e-05, 2.131900000000228e-05, 1.9444000000000405e-05, 2.2277999999997106e-05, 2.138900000000013e-05, 2.043100000000131e-05, 1.943100000000031e-05, 2.037499999999956e-05, 1.9388000000002126e-05, 2.233299999999938e-05, 2.2305999999999715e-05, 2.04029999999987e-05, 1.943100000000031e-05, 2.134699999999795e-05, 2.240299999999723e-05, 2.136099999999752e-05, 2.043100000000131e-05, 2.2276999999997632e-05, 2.229100000000067e-05, 2.2235999999998396e-05, 1.9471999999999545e-05, 1.9444000000000405e-05, 2.134700000000142e-05, 2.036099999999999e-05, 2.038899999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:27:38.397" endtime="20201030 18:27:38.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.392" endtime="20201030 18:27:38.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.404" endtime="20201030 18:27:38.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.402" endtime="20201030 18:27:38.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.401" endtime="20201030 18:27:38.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.014" endtime="20201030 18:27:38.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.013" endtime="20201030 18:27:38.425"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.434" endtime="20201030 18:27:38.451"></status>
</kw>
<msg timestamp="20201030 18:27:38.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.432" endtime="20201030 18:27:38.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.453" endtime="20201030 18:27:38.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.456" endtime="20201030 18:27:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.429" endtime="20201030 18:27:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.427" endtime="20201030 18:27:38.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.466" endtime="20201030 18:27:38.753"></status>
</kw>
<msg timestamp="20201030 18:27:38.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.465" endtime="20201030 18:27:38.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.757" endtime="20201030 18:27:38.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.766" endtime="20201030 18:27:38.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.462" endtime="20201030 18:27:38.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.460" endtime="20201030 18:27:38.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.773" level="INFO">${RESULT} = [{'diff': 3.186100000000108e-05}, {'diff': 2.0334000000000324e-05}, {'diff': 2.131900000000228e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 1.9430000000000835e-05}, {'diff': 2.038899999999913e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:38.770" endtime="20201030 18:27:38.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:38.777" level="INFO">${ACCURACY} = {'diff': [3.186100000000108e-05, 2.0334000000000324e-05, 2.131900000000228e-05, 2.2319999999999285e-05, 1.9430000000000835e-05, 2.038899999999913e-05, 2.038899999999913e-05, 2.030500000000171e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 18:27:38.774" endtime="20201030 18:27:38.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.782" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:27:38.781" endtime="20201030 18:27:38.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.784" level="INFO">VALUE: [3.186100000000108e-05, 2.0334000000000324e-05, 2.131900000000228e-05, 2.2319999999999285e-05, 1.9430000000000835e-05, 2.038899999999913e-05, 2.038899999999913e-05, 2.030500000000171e-05, 2.045900000000045e-05, 2.234700000000242e-05, 2.231899999999981e-05, 2.1348000000000894e-05, 2.037499999999956e-05, 2.133300000000185e-05, 1.943100000000031e-05, 2.2292000000000145e-05, 2.136099999999752e-05, 1.940300000000117e-05, 2.138900000000013e-05, 2.2292000000000145e-05, 2.036099999999999e-05, 2.036099999999999e-05, 2.037499999999956e-05, 1.943100000000031e-05, 2.136099999999752e-05, 2.040300000000217e-05, 2.137500000000056e-05, 2.131900000000228e-05, 1.943100000000031e-05, 2.037500000000303e-05, 2.036099999999999e-05, 2.1291999999999145e-05, 1.9471999999999545e-05, 1.9457999999999975e-05, 2.1320000000001754e-05, 2.231899999999981e-05, 1.8471999999998545e-05, 2.0387999999999656e-05, 2.0415999999998796e-05, 2.136100000000099e-05, 2.2320000000002754e-05, 2.037499999999956e-05, 2.131900000000228e-05, 2.1333999999997855e-05, 1.936099999999899e-05, 2.2292000000000145e-05, 1.93890000000016e-05, 2.230500000000024e-05, 2.037499999999956e-05, 1.9416000000001266e-05]</msg>
<status status="PASS" starttime="20201030 18:27:38.783" endtime="20201030 18:27:38.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.778" endtime="20201030 18:27:38.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.790" endtime="20201030 18:27:38.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.788" endtime="20201030 18:27:38.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.787" endtime="20201030 18:27:38.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.426" endtime="20201030 18:27:38.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.425" endtime="20201030 18:27:38.811"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.819" endtime="20201030 18:27:38.843"></status>
</kw>
<msg timestamp="20201030 18:27:38.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.818" endtime="20201030 18:27:38.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.844" endtime="20201030 18:27:38.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.847" endtime="20201030 18:27:38.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.815" endtime="20201030 18:27:38.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.813" endtime="20201030 18:27:38.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.856" endtime="20201030 18:27:39.141"></status>
</kw>
<msg timestamp="20201030 18:27:39.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023433181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.855" endtime="20201030 18:27:39.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023421458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023433181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.145" endtime="20201030 18:27:39.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.154" endtime="20201030 18:27:39.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.852" endtime="20201030 18:27:39.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.850" endtime="20201030 18:27:39.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.161" level="INFO">${RESULT} = [{'diff': 1.1723000000001677e-05}, {'diff': 1.941699999999727e-05}, {'diff': 1.9429999999997366e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.138900000000013e-05}, {'diff': 2.136100000000099e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:39.157" endtime="20201030 18:27:39.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:39.165" level="INFO">${ACCURACY} = {'diff': [1.1723000000001677e-05, 1.941699999999727e-05, 1.9429999999997366e-05, 2.036099999999999e-05, 2.138900000000013e-05, 2.136100000000099e-05, 1.9415999999997796e-05, 2.044500000000088e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 18:27:39.162" endtime="20201030 18:27:39.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.170" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:27:39.168" endtime="20201030 18:27:39.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.175" level="INFO">VALUE: [1.1723000000001677e-05, 1.941699999999727e-05, 1.9429999999997366e-05, 2.036099999999999e-05, 2.138900000000013e-05, 2.136100000000099e-05, 1.9415999999997796e-05, 2.044500000000088e-05, 2.036099999999999e-05, 1.941699999999727e-05, 2.229100000000067e-05, 2.14029999999997e-05, 2.137500000000056e-05, 1.9528000000001294e-05, 2.034700000000042e-05, 2.04029999999987e-05, 2.2207999999999256e-05, 2.03890000000026e-05, 2.2292000000000145e-05, 2.133300000000185e-05, 1.943100000000031e-05, 2.037499999999956e-05, 2.229100000000067e-05, 2.2290999999997202e-05, 1.8473000000001488e-05, 1.9402000000001696e-05, 2.037499999999956e-05, 2.134700000000142e-05, 2.037499999999956e-05, 2.2263999999997536e-05, 2.3278000000001575e-05, 1.9429999999997366e-05, 2.2290999999997202e-05, 2.037499999999956e-05, 2.0415999999998796e-05, 2.2348000000001894e-05, 2.131899999999881e-05, 2.130499999999924e-05, 2.044499999999741e-05, 2.2263999999997536e-05, 2.1277999999999575e-05, 2.2290999999997202e-05, 2.0429999999998366e-05, 2.0430000000001836e-05, 2.1334000000001324e-05, 1.937499999999856e-05, 2.2250000000001435e-05, 2.134699999999795e-05, 2.2347999999998425e-05, 2.136100000000099e-05]</msg>
<status status="PASS" starttime="20201030 18:27:39.171" endtime="20201030 18:27:39.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.166" endtime="20201030 18:27:39.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.181" endtime="20201030 18:27:39.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.179" endtime="20201030 18:27:39.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.178" endtime="20201030 18:27:39.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.812" endtime="20201030 18:27:39.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.811" endtime="20201030 18:27:39.202"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.213" endtime="20201030 18:27:39.229"></status>
</kw>
<msg timestamp="20201030 18:27:39.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.211" endtime="20201030 18:27:39.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.231" endtime="20201030 18:27:39.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.234" endtime="20201030 18:27:39.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.208" endtime="20201030 18:27:39.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.205" endtime="20201030 18:27:39.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.243" endtime="20201030 18:27:39.530"></status>
</kw>
<msg timestamp="20201030 18:27:39.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024080486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.241" endtime="20201030 18:27:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024057236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024080486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.534" endtime="20201030 18:27:39.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.543" endtime="20201030 18:27:39.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.239" endtime="20201030 18:27:39.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.237" endtime="20201030 18:27:39.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.550" level="INFO">${RESULT} = [{'diff': 2.3250000000002435e-05}, {'diff': 2.138900000000013e-05}, {'diff': 2.1277999999999575e-05}, {'diff': 2.1334000000001324e-05}, {'diff': 2.038899999999913e-05}, {'diff': 2.136100000000099e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:39.546" endtime="20201030 18:27:39.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:39.555" level="INFO">${ACCURACY} = {'diff': [2.3250000000002435e-05, 2.138900000000013e-05, 2.1277999999999575e-05, 2.1334000000001324e-05, 2.038899999999913e-05, 2.136100000000099e-05, 2.038899999999913e-05, 2.1334000000001324e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:27:39.551" endtime="20201030 18:27:39.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.559" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:27:39.558" endtime="20201030 18:27:39.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.562" level="INFO">VALUE: [2.3250000000002435e-05, 2.138900000000013e-05, 2.1277999999999575e-05, 2.1334000000001324e-05, 2.038899999999913e-05, 2.136100000000099e-05, 2.038899999999913e-05, 2.1334000000001324e-05, 2.2319999999999285e-05, 2.0415999999998796e-05, 2.2278000000000575e-05, 2.03890000000026e-05, 2.22770000000011e-05, 2.038899999999913e-05, 2.14029999999997e-05, 2.2333999999998855e-05, 2.231899999999981e-05, 2.134700000000142e-05, 2.036099999999999e-05, 2.136100000000099e-05, 2.134700000000142e-05, 2.0401999999999226e-05, 2.131900000000228e-05, 2.0334000000000324e-05, 2.043100000000131e-05, 2.040300000000217e-05, 2.037500000000303e-05, 2.1320000000001754e-05, 2.037499999999956e-05, 2.131900000000228e-05, 2.237500000000156e-05, 2.233299999999938e-05, 2.138900000000013e-05, 2.230500000000024e-05, 2.2319999999999285e-05, 2.041699999999827e-05, 1.9485999999999115e-05, 2.1334000000001324e-05, 2.137500000000056e-05, 1.945899999999945e-05, 2.134700000000142e-05, 2.2263999999997536e-05, 1.941699999999727e-05, 2.2278000000000575e-05, 2.231899999999981e-05, 2.138900000000013e-05, 2.233299999999938e-05, 2.037500000000303e-05, 2.040300000000217e-05, 2.133300000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:27:39.561" endtime="20201030 18:27:39.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.556" endtime="20201030 18:27:39.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.567" endtime="20201030 18:27:39.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.566" endtime="20201030 18:27:39.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.564" endtime="20201030 18:27:39.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.203" endtime="20201030 18:27:39.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.202" endtime="20201030 18:27:39.588"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.597" endtime="20201030 18:27:39.616"></status>
</kw>
<msg timestamp="20201030 18:27:39.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.595" endtime="20201030 18:27:39.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.618" endtime="20201030 18:27:39.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.620" endtime="20201030 18:27:39.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.593" endtime="20201030 18:27:39.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.591" endtime="20201030 18:27:39.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.630" endtime="20201030 18:27:39.916"></status>
</kw>
<msg timestamp="20201030 18:27:39.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024666847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.628" endtime="20201030 18:27:39.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024657917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024666847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.921" endtime="20201030 18:27:39.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.929" endtime="20201030 18:27:39.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.625" endtime="20201030 18:27:39.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.624" endtime="20201030 18:27:39.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.936" level="INFO">${RESULT} = [{'diff': 8.929999999997273e-06}, {'diff': 2.138900000000013e-05}, {'diff': 1.943100000000031e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.2333999999998855e-05}, {'diff': 2.2306000000003184e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:39.933" endtime="20201030 18:27:39.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:39.941" level="INFO">${ACCURACY} = {'diff': [8.929999999997273e-06, 2.138900000000013e-05, 1.943100000000031e-05, 2.037499999999956e-05, 2.2333999999998855e-05, 2.2306000000003184e-05, 1.940300000000117e-05, 1.941700000000074e-05, 2.23...</msg>
<status status="PASS" starttime="20201030 18:27:39.937" endtime="20201030 18:27:39.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.945" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:27:39.944" endtime="20201030 18:27:39.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.948" level="INFO">VALUE: [8.929999999997273e-06, 2.138900000000013e-05, 1.943100000000031e-05, 2.037499999999956e-05, 2.2333999999998855e-05, 2.2306000000003184e-05, 1.940300000000117e-05, 1.941700000000074e-05, 2.2347999999998425e-05, 2.143099999999884e-05, 2.036099999999999e-05, 1.941699999999727e-05, 2.138900000000013e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.0347999999999894e-05, 2.137500000000056e-05, 2.230500000000024e-05, 2.041699999999827e-05, 2.2277999999997106e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 1.8514000000000724e-05, 2.04029999999987e-05, 2.1320000000001754e-05, 2.2278000000000575e-05, 2.0443999999997936e-05, 2.0430000000001836e-05, 2.138900000000013e-05, 2.14029999999997e-05, 2.2277999999997106e-05, 2.2319999999999285e-05, 2.0486000000000115e-05, 2.231899999999981e-05, 2.036099999999999e-05, 2.038899999999913e-05, 2.136100000000099e-05, 2.04029999999987e-05, 1.944500000000335e-05, 1.9457999999999975e-05, 2.136099999999752e-05, 2.2292000000000145e-05, 2.137499999999709e-05, 2.04029999999987e-05, 1.945899999999945e-05, 2.136100000000099e-05, 2.231899999999981e-05, 2.230500000000024e-05, 2.14029999999997e-05, 2.136099999999752e-05]</msg>
<status status="PASS" starttime="20201030 18:27:39.946" endtime="20201030 18:27:39.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.942" endtime="20201030 18:27:39.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.953" endtime="20201030 18:27:39.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.951" endtime="20201030 18:27:39.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.950" endtime="20201030 18:27:39.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.589" endtime="20201030 18:27:39.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.588" endtime="20201030 18:27:39.974"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.983" endtime="20201030 18:27:40.005"></status>
</kw>
<msg timestamp="20201030 18:27:40.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.981" endtime="20201030 18:27:40.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.006" endtime="20201030 18:27:40.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.009" endtime="20201030 18:27:40.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.979" endtime="20201030 18:27:40.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.976" endtime="20201030 18:27:40.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.018" endtime="20201030 18:27:40.305"></status>
</kw>
<msg timestamp="20201030 18:27:40.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025666569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.017" endtime="20201030 18:27:40.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025666569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025681222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.309" endtime="20201030 18:27:40.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.318" endtime="20201030 18:27:40.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.014" endtime="20201030 18:27:40.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.012" endtime="20201030 18:27:40.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.324" level="INFO">${RESULT} = [{'diff': 1.4652999999999888e-05}, {'diff': 2.1334000000001324e-05}, {'diff': 1.937499999999856e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.138900000000013e-05}, {'diff': 1.9430000000000835e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:40.321" endtime="20201030 18:27:40.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:40.329" level="INFO">${ACCURACY} = {'diff': [1.4652999999999888e-05, 2.1334000000001324e-05, 1.937499999999856e-05, 2.136100000000099e-05, 2.138900000000013e-05, 1.9430000000000835e-05, 2.034700000000042e-05, 2.2347999999998425e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:27:40.325" endtime="20201030 18:27:40.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.333" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:27:40.332" endtime="20201030 18:27:40.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.336" level="INFO">VALUE: [1.4652999999999888e-05, 2.1334000000001324e-05, 1.937499999999856e-05, 2.136100000000099e-05, 2.138900000000013e-05, 1.9430000000000835e-05, 2.034700000000042e-05, 2.2347999999998425e-05, 2.036099999999999e-05, 2.2278000000000575e-05, 2.133300000000185e-05, 2.133299999999838e-05, 1.9429999999997366e-05, 2.3236000000002865e-05, 2.133299999999838e-05, 2.22770000000011e-05, 1.9429999999997366e-05, 2.037499999999956e-05, 2.134699999999795e-05, 2.03890000000026e-05, 2.136099999999752e-05, 2.038899999999913e-05, 2.0472000000000545e-05, 2.1333999999997855e-05, 2.134699999999795e-05, 1.943100000000031e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.137500000000056e-05, 1.943099999999684e-05, 2.1334000000001324e-05, 2.1291999999999145e-05, 1.9416000000001266e-05, 2.22770000000011e-05, 2.136099999999752e-05, 2.031900000000128e-05, 2.034700000000042e-05, 1.941700000000074e-05, 2.2319999999999285e-05, 1.945899999999945e-05, 1.947299999999902e-05, 1.943100000000031e-05, 2.2278000000000575e-05, 2.236100000000199e-05, 1.943100000000031e-05, 2.2292000000000145e-05, 2.038899999999913e-05, 2.03890000000026e-05, 2.037499999999956e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201030 18:27:40.334" endtime="20201030 18:27:40.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.329" endtime="20201030 18:27:40.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.342" endtime="20201030 18:27:40.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.340" endtime="20201030 18:27:40.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.339" endtime="20201030 18:27:40.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.975" endtime="20201030 18:27:40.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.974" endtime="20201030 18:27:40.363"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.372" endtime="20201030 18:27:40.391"></status>
</kw>
<msg timestamp="20201030 18:27:40.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.370" endtime="20201030 18:27:40.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.392" endtime="20201030 18:27:40.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.395" endtime="20201030 18:27:40.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.367" endtime="20201030 18:27:40.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.365" endtime="20201030 18:27:40.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.404" endtime="20201030 18:27:40.690"></status>
</kw>
<msg timestamp="20201030 18:27:40.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023658014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023673639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.403" endtime="20201030 18:27:40.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023658014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023673639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.694" endtime="20201030 18:27:40.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.703" endtime="20201030 18:27:40.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.400" endtime="20201030 18:27:40.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.398" endtime="20201030 18:27:40.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.710" level="INFO">${RESULT} = [{'diff': 1.562499999999828e-05}, {'diff': 2.237500000000156e-05}, {'diff': 2.03890000000026e-05}, {'diff': 2.143099999999884e-05}, {'diff': 2.2333999999998855e-05}, {'diff': 1.943100000000031e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:40.706" endtime="20201030 18:27:40.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:40.715" level="INFO">${ACCURACY} = {'diff': [1.562499999999828e-05, 2.237500000000156e-05, 2.03890000000026e-05, 2.143099999999884e-05, 2.2333999999998855e-05, 1.943100000000031e-05, 2.234699999999895e-05, 2.134699999999795e-05, 2.2278...</msg>
<status status="PASS" starttime="20201030 18:27:40.711" endtime="20201030 18:27:40.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.719" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:27:40.718" endtime="20201030 18:27:40.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.722" level="INFO">VALUE: [1.562499999999828e-05, 2.237500000000156e-05, 2.03890000000026e-05, 2.143099999999884e-05, 2.2333999999998855e-05, 1.943100000000031e-05, 2.234699999999895e-05, 2.134699999999795e-05, 2.2278000000000575e-05, 2.3235999999999396e-05, 1.93890000000016e-05, 2.138900000000013e-05, 2.043100000000131e-05, 2.037499999999956e-05, 2.2250000000001435e-05, 2.137500000000056e-05, 1.9457999999999975e-05, 2.1348000000000894e-05, 2.133300000000185e-05, 2.044500000000088e-05, 2.138900000000013e-05, 2.036099999999999e-05, 1.943100000000031e-05, 2.037499999999956e-05, 2.134700000000142e-05, 2.041699999999827e-05, 2.2362000000001464e-05, 2.037499999999956e-05, 2.2208000000002726e-05, 2.131900000000228e-05, 1.9444000000000405e-05, 2.0444000000001405e-05, 2.134700000000142e-05, 2.038899999999913e-05, 2.037499999999956e-05, 1.941700000000074e-05, 2.131899999999881e-05, 2.2333999999998855e-05, 2.136099999999752e-05, 2.1347999999997425e-05, 2.0416000000002266e-05, 2.040300000000217e-05, 2.3304999999997772e-05, 2.136100000000099e-05, 2.1387999999997187e-05, 2.2292000000000145e-05, 2.037499999999956e-05, 1.9457999999999975e-05, 1.9513999999998255e-05, 2.1319999999998285e-05]</msg>
<status status="PASS" starttime="20201030 18:27:40.721" endtime="20201030 18:27:40.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.716" endtime="20201030 18:27:40.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.727" endtime="20201030 18:27:40.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.726" endtime="20201030 18:27:40.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.724" endtime="20201030 18:27:40.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.364" endtime="20201030 18:27:40.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.363" endtime="20201030 18:27:40.748"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.757" endtime="20201030 18:27:40.777"></status>
</kw>
<msg timestamp="20201030 18:27:40.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.755" endtime="20201030 18:27:40.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.779" endtime="20201030 18:27:40.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.781" endtime="20201030 18:27:40.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.753" endtime="20201030 18:27:40.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.751" endtime="20201030 18:27:40.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.791" endtime="20201030 18:27:41.077"></status>
</kw>
<msg timestamp="20201030 18:27:41.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025181889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.789" endtime="20201030 18:27:41.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025181889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025206125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.082" endtime="20201030 18:27:41.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.090" endtime="20201030 18:27:41.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.787" endtime="20201030 18:27:41.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.785" endtime="20201030 18:27:41.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.097" level="INFO">${RESULT} = [{'diff': 2.4236000000000396e-05}, {'diff': 1.9444000000000405e-05}, {'diff': 2.03890000000026e-05}, {'diff': 2.133300000000185e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.131900000000228e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:41.094" endtime="20201030 18:27:41.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:41.102" level="INFO">${ACCURACY} = {'diff': [2.4236000000000396e-05, 1.9444000000000405e-05, 2.03890000000026e-05, 2.133300000000185e-05, 2.036099999999999e-05, 2.131900000000228e-05, 2.137500000000056e-05, 1.937499999999856e-05, 1.944...</msg>
<status status="PASS" starttime="20201030 18:27:41.098" endtime="20201030 18:27:41.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.106" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:27:41.105" endtime="20201030 18:27:41.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.109" level="INFO">VALUE: [2.4236000000000396e-05, 1.9444000000000405e-05, 2.03890000000026e-05, 2.133300000000185e-05, 2.036099999999999e-05, 2.131900000000228e-05, 2.137500000000056e-05, 1.937499999999856e-05, 1.944499999999988e-05, 2.1319999999998285e-05, 2.14029999999997e-05, 1.9444000000000405e-05, 1.940300000000117e-05, 2.131899999999881e-05, 2.136100000000099e-05, 2.043099999999784e-05, 2.234699999999895e-05, 2.138900000000013e-05, 2.037499999999956e-05, 2.036099999999999e-05, 1.9471999999999545e-05, 2.134700000000142e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.041700000000174e-05, 2.136099999999752e-05, 2.1292000000002614e-05, 2.037499999999956e-05, 2.130499999999924e-05, 2.036099999999999e-05, 1.9471999999999545e-05, 2.136099999999752e-05, 2.037499999999956e-05, 1.94029999999977e-05, 2.136100000000099e-05, 1.943100000000031e-05, 2.0401999999999226e-05, 2.2305999999999715e-05, 2.233299999999938e-05, 2.133299999999838e-05, 1.9416000000001266e-05, 2.04029999999987e-05, 2.138900000000013e-05, 2.0416000000002266e-05, 2.033300000000085e-05, 2.0306000000001184e-05, 2.2292000000000145e-05, 2.04029999999987e-05, 1.945899999999945e-05, 2.136100000000099e-05]</msg>
<status status="PASS" starttime="20201030 18:27:41.107" endtime="20201030 18:27:41.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.102" endtime="20201030 18:27:41.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.114" endtime="20201030 18:27:41.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.112" endtime="20201030 18:27:41.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.111" endtime="20201030 18:27:41.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.749" endtime="20201030 18:27:41.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.748" endtime="20201030 18:27:41.135"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.144" endtime="20201030 18:27:41.166"></status>
</kw>
<msg timestamp="20201030 18:27:41.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.142" endtime="20201030 18:27:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.167" endtime="20201030 18:27:41.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.170" endtime="20201030 18:27:41.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.139" endtime="20201030 18:27:41.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.137" endtime="20201030 18:27:41.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.179" endtime="20201030 18:27:41.464"></status>
</kw>
<msg timestamp="20201030 18:27:41.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025257111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025274583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.178" endtime="20201030 18:27:41.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025257111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025274583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.469" endtime="20201030 18:27:41.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.477" endtime="20201030 18:27:41.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.175" endtime="20201030 18:27:41.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.173" endtime="20201030 18:27:41.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.484" level="INFO">${RESULT} = [{'diff': 1.7472000000001014e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.2319999999999285e-05}, {'diff': 2.231899999999981e-05}, {'diff': 1.94029999999977e-05}, {'diff': 2.134699999999795e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:41.481" endtime="20201030 18:27:41.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:41.489" level="INFO">${ACCURACY} = {'diff': [1.7472000000001014e-05, 2.0472000000000545e-05, 2.2319999999999285e-05, 2.231899999999981e-05, 1.94029999999977e-05, 2.134699999999795e-05, 2.1319999999998285e-05, 2.230500000000024e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:27:41.485" endtime="20201030 18:27:41.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.493" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:27:41.492" endtime="20201030 18:27:41.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.496" level="INFO">VALUE: [1.7472000000001014e-05, 2.0472000000000545e-05, 2.2319999999999285e-05, 2.231899999999981e-05, 1.94029999999977e-05, 2.134699999999795e-05, 2.1319999999998285e-05, 2.230500000000024e-05, 2.2292000000000145e-05, 1.9415999999997796e-05, 2.0444000000001405e-05, 2.133299999999838e-05, 2.131900000000228e-05, 1.844500000000235e-05, 2.316699999999755e-05, 2.036099999999999e-05, 2.036099999999999e-05, 2.04029999999987e-05, 2.141699999999927e-05, 2.1348000000000894e-05, 2.1348000000000894e-05, 2.3276999999998632e-05, 1.9444000000000405e-05, 2.038899999999913e-05, 2.0401999999999226e-05, 2.24030000000007e-05, 2.1430000000002836e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.036099999999999e-05, 2.2278000000000575e-05, 2.134699999999795e-05, 2.136100000000099e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.037499999999956e-05, 1.9430000000000835e-05, 2.2278000000000575e-05, 2.037499999999956e-05, 1.940300000000117e-05, 2.1305999999998715e-05, 2.234699999999895e-05, 2.233299999999938e-05, 2.133299999999838e-05, 1.9430000000000835e-05, 2.3263999999998536e-05, 1.9485999999999115e-05, 2.2278000000000575e-05]</msg>
<status status="PASS" starttime="20201030 18:27:41.495" endtime="20201030 18:27:41.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.489" endtime="20201030 18:27:41.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.503" endtime="20201030 18:27:41.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.501" endtime="20201030 18:27:41.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.500" endtime="20201030 18:27:41.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.136" endtime="20201030 18:27:41.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.135" endtime="20201030 18:27:41.524"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.533" endtime="20201030 18:27:41.551"></status>
</kw>
<msg timestamp="20201030 18:27:41.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.532" endtime="20201030 18:27:41.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.552" endtime="20201030 18:27:41.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.555" endtime="20201030 18:27:41.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.529" endtime="20201030 18:27:41.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.527" endtime="20201030 18:27:41.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.564" endtime="20201030 18:27:41.849"></status>
</kw>
<msg timestamp="20201030 18:27:41.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.563" endtime="20201030 18:27:41.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.854" endtime="20201030 18:27:41.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.862" endtime="20201030 18:27:41.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.560" endtime="20201030 18:27:41.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.558" endtime="20201030 18:27:41.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.869" level="INFO">${RESULT} = [{'diff': 3.2832999999999474e-05}, {'diff': 2.0430000000001836e-05}, {'diff': 2.04029999999987e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 1.943100000000031e-05}, {'diff': 2.230500000000024e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:41.866" endtime="20201030 18:27:41.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:41.874" level="INFO">${ACCURACY} = {'diff': [3.2832999999999474e-05, 2.0430000000001836e-05, 2.04029999999987e-05, 2.2278000000000575e-05, 1.943100000000031e-05, 2.230500000000024e-05, 2.3291999999997676e-05, 2.136100000000099e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:27:41.870" endtime="20201030 18:27:41.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.879" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:27:41.878" endtime="20201030 18:27:41.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.882" level="INFO">VALUE: [3.2832999999999474e-05, 2.0430000000001836e-05, 2.04029999999987e-05, 2.2278000000000575e-05, 1.943100000000031e-05, 2.230500000000024e-05, 2.3291999999997676e-05, 2.136100000000099e-05, 2.3249999999998966e-05, 2.1457999999998506e-05, 1.9457999999999975e-05, 2.2292000000000145e-05, 2.034700000000042e-05, 1.9485999999999115e-05, 1.93890000000016e-05, 2.133300000000185e-05, 2.2278000000000575e-05, 2.24030000000007e-05, 2.040300000000217e-05, 2.04029999999987e-05, 2.3221999999999826e-05, 2.038899999999913e-05, 2.2278000000000575e-05, 2.03890000000026e-05, 2.138900000000013e-05, 2.2305999999999715e-05, 2.133299999999838e-05, 2.0401999999999226e-05, 2.231899999999981e-05, 1.9429999999997366e-05, 2.130500000000271e-05, 2.034700000000042e-05, 2.133299999999838e-05, 2.044500000000088e-05, 1.9457999999999975e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.041700000000174e-05, 2.03890000000026e-05, 2.2250000000001435e-05, 2.2319999999999285e-05, 2.03890000000026e-05, 2.0499999999999685e-05, 2.1320000000001754e-05, 2.3263999999998536e-05, 2.138900000000013e-05, 2.043099999999784e-05, 2.234699999999895e-05, 1.938899999999813e-05, 2.2319999999999285e-05]</msg>
<status status="PASS" starttime="20201030 18:27:41.880" endtime="20201030 18:27:41.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.875" endtime="20201030 18:27:41.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.887" endtime="20201030 18:27:41.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.885" endtime="20201030 18:27:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.884" endtime="20201030 18:27:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.525" endtime="20201030 18:27:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.525" endtime="20201030 18:27:41.908"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.917" endtime="20201030 18:27:41.936"></status>
</kw>
<msg timestamp="20201030 18:27:41.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.915" endtime="20201030 18:27:41.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.937" endtime="20201030 18:27:41.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.940" endtime="20201030 18:27:41.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.912" endtime="20201030 18:27:41.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.910" endtime="20201030 18:27:41.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.949" endtime="20201030 18:27:42.237"></status>
</kw>
<msg timestamp="20201030 18:27:42.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021091472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021107125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.947" endtime="20201030 18:27:42.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021091472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021107125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.241" endtime="20201030 18:27:42.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.249" endtime="20201030 18:27:42.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.945" endtime="20201030 18:27:42.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.943" endtime="20201030 18:27:42.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.256" level="INFO">${RESULT} = [{'diff': 1.565300000000089e-05}, {'diff': 2.136100000000099e-05}, {'diff': 1.9430000000000835e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.0320000000000754e-05}, {'diff': 2.14029999999997e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:42.253" endtime="20201030 18:27:42.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:42.260" level="INFO">${ACCURACY} = {'diff': [1.565300000000089e-05, 2.136100000000099e-05, 1.9430000000000835e-05, 2.1250000000000435e-05, 2.0320000000000754e-05, 2.14029999999997e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.23...</msg>
<status status="PASS" starttime="20201030 18:27:42.257" endtime="20201030 18:27:42.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.265" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:27:42.264" endtime="20201030 18:27:42.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.267" level="INFO">VALUE: [1.565300000000089e-05, 2.136100000000099e-05, 1.9430000000000835e-05, 2.1250000000000435e-05, 2.0320000000000754e-05, 2.14029999999997e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.230500000000024e-05, 2.2319999999999285e-05, 2.03890000000026e-05, 2.2291999999996676e-05, 2.133299999999838e-05, 1.941700000000074e-05, 2.2236000000001865e-05, 2.137500000000056e-05, 2.041699999999827e-05, 2.031899999999781e-05, 2.131900000000228e-05, 2.1306000000002184e-05, 2.231899999999981e-05, 2.138900000000013e-05, 1.943100000000031e-05, 2.0429999999998366e-05, 2.2319999999999285e-05, 1.941700000000074e-05, 2.136100000000099e-05, 2.04029999999987e-05, 2.134700000000142e-05, 2.034699999999695e-05, 2.131899999999881e-05, 2.036099999999999e-05, 2.134700000000142e-05, 2.041699999999827e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.0444000000001405e-05, 2.2278000000000575e-05, 2.136099999999752e-05, 2.133300000000185e-05, 1.9444000000000405e-05, 1.9471999999999545e-05, 1.9430000000000835e-05, 1.943100000000031e-05, 2.230500000000024e-05, 2.136100000000099e-05, 2.038899999999913e-05, 1.938899999999813e-05, 2.134699999999795e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201030 18:27:42.266" endtime="20201030 18:27:42.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.261" endtime="20201030 18:27:42.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.272" endtime="20201030 18:27:42.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.271" endtime="20201030 18:27:42.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.269" endtime="20201030 18:27:42.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.909" endtime="20201030 18:27:42.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.908" endtime="20201030 18:27:42.293"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.302" endtime="20201030 18:27:42.319"></status>
</kw>
<msg timestamp="20201030 18:27:42.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.300" endtime="20201030 18:27:42.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.320" endtime="20201030 18:27:42.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.323" endtime="20201030 18:27:42.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.297" endtime="20201030 18:27:42.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.295" endtime="20201030 18:27:42.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.332" endtime="20201030 18:27:42.632"></status>
</kw>
<msg timestamp="20201030 18:27:42.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.330" endtime="20201030 18:27:42.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.636" endtime="20201030 18:27:42.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.645" endtime="20201030 18:27:42.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.328" endtime="20201030 18:27:42.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.326" endtime="20201030 18:27:42.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.651" level="INFO">${RESULT} = [{'diff': 3.2818999999999904e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 1.947300000000249e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.037499999999956e-05}, {'diff': 2.133299999999838e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:42.648" endtime="20201030 18:27:42.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:42.655" level="INFO">${ACCURACY} = {'diff': [3.2818999999999904e-05, 2.2235999999998396e-05, 1.947300000000249e-05, 2.2292000000000145e-05, 2.037499999999956e-05, 2.133299999999838e-05, 2.033300000000085e-05, 1.9416000000001266e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:27:42.652" endtime="20201030 18:27:42.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.660" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:27:42.659" endtime="20201030 18:27:42.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.665" level="INFO">VALUE: [3.2818999999999904e-05, 2.2235999999998396e-05, 1.947300000000249e-05, 2.2292000000000145e-05, 2.037499999999956e-05, 2.133299999999838e-05, 2.033300000000085e-05, 1.9416000000001266e-05, 1.941699999999727e-05, 2.1348000000000894e-05, 2.0320000000000754e-05, 2.038899999999913e-05, 1.9485999999999115e-05, 2.03890000000026e-05, 1.8528000000000294e-05, 2.1291999999999145e-05, 2.2264000000001005e-05, 1.8514000000000724e-05, 2.136100000000099e-05, 2.041699999999827e-05, 2.034700000000042e-05, 1.943099999999684e-05, 1.940300000000117e-05, 2.037499999999956e-05, 2.133300000000185e-05, 2.038899999999913e-05, 2.134699999999795e-05, 2.03890000000026e-05, 2.134700000000142e-05, 2.1319999999998285e-05, 1.9444000000000405e-05, 2.038899999999913e-05, 1.9402000000001696e-05, 2.141699999999927e-05, 2.24030000000007e-05, 2.231899999999981e-05, 2.2278000000000575e-05, 2.034700000000042e-05, 1.9415999999997796e-05, 2.22770000000011e-05, 1.944499999999988e-05, 2.037499999999956e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.1347999999997425e-05, 1.937499999999856e-05, 2.2278000000000575e-05, 2.038899999999913e-05, 2.1277999999999575e-05, 2.133300000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:27:42.661" endtime="20201030 18:27:42.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.656" endtime="20201030 18:27:42.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.671" endtime="20201030 18:27:42.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.669" endtime="20201030 18:27:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.668" endtime="20201030 18:27:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.294" endtime="20201030 18:27:42.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.293" endtime="20201030 18:27:42.692"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.700" endtime="20201030 18:27:42.720"></status>
</kw>
<msg timestamp="20201030 18:27:42.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.699" endtime="20201030 18:27:42.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.722" endtime="20201030 18:27:42.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.724" endtime="20201030 18:27:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.696" endtime="20201030 18:27:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.694" endtime="20201030 18:27:42.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.733" endtime="20201030 18:27:43.018"></status>
</kw>
<msg timestamp="20201030 18:27:43.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.731" endtime="20201030 18:27:43.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020753236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.022" endtime="20201030 18:27:43.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.030" endtime="20201030 18:27:43.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.729" endtime="20201030 18:27:43.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.727" endtime="20201030 18:27:43.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.037" level="INFO">${RESULT} = [{'diff': 6.634700000000132e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.1915999999999074e-05}, {'diff': 5.104100000000167e-05}, {'diff': 5.194400000000168e-05}, {'diff': 5.095800000000025e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:43.034" endtime="20201030 18:27:43.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:43.042" level="INFO">${ACCURACY} = {'diff': [6.634700000000132e-05, 5.187499999999984e-05, 5.1915999999999074e-05, 5.104100000000167e-05, 5.194400000000168e-05, 5.095800000000025e-05, 5.095800000000025e-05, 5.009699999999895e-05, 5.195...</msg>
<status status="PASS" starttime="20201030 18:27:43.038" endtime="20201030 18:27:43.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.046" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:27:43.045" endtime="20201030 18:27:43.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.049" level="INFO">VALUE: [6.634700000000132e-05, 5.187499999999984e-05, 5.1915999999999074e-05, 5.104100000000167e-05, 5.194400000000168e-05, 5.095800000000025e-05, 5.095800000000025e-05, 5.009699999999895e-05, 5.195800000000125e-05, 5.0929999999997644e-05, 5.094500000000016e-05, 5.383299999999966e-05, 5.0929999999997644e-05, 4.997199999999882e-05, 5.091700000000102e-05, 5.008300000000285e-05, 5.002800000000057e-05, 5.097199999999982e-05, 5.005500000000024e-05, 5.091699999999755e-05, 5.091700000000102e-05, 5.1901999999999504e-05, 5.095800000000025e-05, 5.091700000000102e-05, 4.997199999999882e-05, 5.005500000000024e-05, 5.093000000000111e-05, 5.093100000000059e-05, 5.101399999999853e-05, 5.188899999999941e-05, 5.093100000000059e-05, 5.095800000000025e-05, 5.202800000000257e-05, 4.998599999999839e-05, 5.091700000000102e-05, 5.187499999999984e-05, 5.282000000000203e-05, 5.286100000000127e-05, 4.9959000000002196e-05, 5.000000000000143e-05, 5.197200000000082e-05, 4.9014e-05, 5.190299999999898e-05, 5.190300000000245e-05, 5.190300000000245e-05, 5.1901999999999504e-05, 5.293100000000259e-05, 5.283300000000213e-05, 5.286200000000074e-05, 5.101399999999853e-05]</msg>
<status status="PASS" starttime="20201030 18:27:43.047" endtime="20201030 18:27:43.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.043" endtime="20201030 18:27:43.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.054" endtime="20201030 18:27:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.052" endtime="20201030 18:27:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.051" endtime="20201030 18:27:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.693" endtime="20201030 18:27:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.692" endtime="20201030 18:27:43.074"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.083" endtime="20201030 18:27:43.107"></status>
</kw>
<msg timestamp="20201030 18:27:43.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.082" endtime="20201030 18:27:43.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.109" endtime="20201030 18:27:43.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.111" endtime="20201030 18:27:43.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.079" endtime="20201030 18:27:43.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.077" endtime="20201030 18:27:43.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.120" endtime="20201030 18:27:43.406"></status>
</kw>
<msg timestamp="20201030 18:27:43.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024717736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.119" endtime="20201030 18:27:43.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024717736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024758222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.410" endtime="20201030 18:27:43.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.419" endtime="20201030 18:27:43.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.116" endtime="20201030 18:27:43.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.115" endtime="20201030 18:27:43.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.425" level="INFO">${RESULT} = [{'diff': 4.04859999999993e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.193099999999812e-05}, {'diff': 4.911100000000099e-05}, {'diff': 5.284699999999823e-05}, {'diff': 4.9959000000002196e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:43.422" endtime="20201030 18:27:43.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:43.429" level="INFO">${ACCURACY} = {'diff': [4.04859999999993e-05, 5.286100000000127e-05, 5.193099999999812e-05, 4.911100000000099e-05, 5.284699999999823e-05, 4.9959000000002196e-05, 5.187499999999984e-05, 5.191699999999855e-05, 5.0068...</msg>
<status status="PASS" starttime="20201030 18:27:43.426" endtime="20201030 18:27:43.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.434" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:27:43.433" endtime="20201030 18:27:43.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.436" level="INFO">VALUE: [4.04859999999993e-05, 5.286100000000127e-05, 5.193099999999812e-05, 4.911100000000099e-05, 5.284699999999823e-05, 4.9959000000002196e-05, 5.187499999999984e-05, 5.191699999999855e-05, 5.006899999999981e-05, 5.18470000000007e-05, 5.193100000000159e-05, 4.995899999999873e-05, 5.087500000000231e-05, 5.288900000000041e-05, 5.10270000000021e-05, 4.998599999999839e-05, 5.28609999999978e-05, 5.093099999999712e-05, 4.990299999999698e-05, 5.190300000000245e-05, 5.006899999999981e-05, 5.194500000000116e-05, 5.380599999999999e-05, 5.013900000000113e-05, 5.284699999999823e-05, 5.1915999999999074e-05, 5.0014000000001e-05, 5.002800000000057e-05, 5.188899999999941e-05, 5.095899999999973e-05, 4.998599999999839e-05, 5.193000000000211e-05, 5.098599999999939e-05, 5.191700000000202e-05, 5.1902000000002974e-05, 5.188899999999941e-05, 5.28470000000017e-05, 5.286100000000127e-05, 5.191699999999855e-05, 5.287500000000084e-05, 5.1957999999997784e-05, 5.097199999999982e-05, 5.102800000000157e-05, 5.101399999999853e-05, 5.284800000000117e-05, 5.188899999999941e-05, 5.281899999999909e-05, 5.291699999999955e-05, 5.288900000000041e-05, 5.004200000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:27:43.435" endtime="20201030 18:27:43.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.430" endtime="20201030 18:27:43.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.441" endtime="20201030 18:27:43.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.440" endtime="20201030 18:27:43.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.438" endtime="20201030 18:27:43.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.075" endtime="20201030 18:27:43.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.075" endtime="20201030 18:27:43.462"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.470" endtime="20201030 18:27:43.493"></status>
</kw>
<msg timestamp="20201030 18:27:43.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.469" endtime="20201030 18:27:43.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.495" endtime="20201030 18:27:43.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.497" endtime="20201030 18:27:43.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.466" endtime="20201030 18:27:43.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.464" endtime="20201030 18:27:43.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.506" endtime="20201030 18:27:43.793"></status>
</kw>
<msg timestamp="20201030 18:27:43.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024246472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.505" endtime="20201030 18:27:43.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024199292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024246472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.797" endtime="20201030 18:27:43.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.806" endtime="20201030 18:27:43.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.502" endtime="20201030 18:27:43.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.500" endtime="20201030 18:27:43.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.812" level="INFO">${RESULT} = [{'diff': 4.718000000000083e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.1901999999999504e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.0014000000001e-05}, {'diff': 5.095800000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:43.809" endtime="20201030 18:27:43.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:43.816" level="INFO">${ACCURACY} = {'diff': [4.718000000000083e-05, 5.186100000000027e-05, 5.1901999999999504e-05, 5.099999999999896e-05, 5.0014000000001e-05, 5.095800000000025e-05, 5.287500000000084e-05, 5.193100000000159e-05, 5.19029...</msg>
<status status="PASS" starttime="20201030 18:27:43.813" endtime="20201030 18:27:43.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.821" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:27:43.819" endtime="20201030 18:27:43.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.823" level="INFO">VALUE: [4.718000000000083e-05, 5.186100000000027e-05, 5.1901999999999504e-05, 5.099999999999896e-05, 5.0014000000001e-05, 5.095800000000025e-05, 5.287500000000084e-05, 5.193100000000159e-05, 5.190299999999898e-05, 5.288900000000041e-05, 5.193099999999812e-05, 4.998599999999839e-05, 5.094500000000016e-05, 5.095899999999973e-05, 5.002800000000057e-05, 5.184800000000017e-05, 5.193099999999812e-05, 5.194499999999769e-05, 5.093100000000059e-05, 5.284699999999823e-05, 5.187499999999984e-05, 5.095800000000025e-05, 5.288900000000041e-05, 5.2929999999999644e-05, 5.187499999999984e-05, 5.097199999999982e-05, 5.004200000000014e-05, 5.0929999999997644e-05, 5.002800000000057e-05, 5.101399999999853e-05, 5.190299999999898e-05, 5.283299999999866e-05, 5.191699999999855e-05, 5.099999999999896e-05, 5.187499999999984e-05, 5.093000000000111e-05, 4.997199999999882e-05, 5.00409999999972e-05, 4.995799999999925e-05, 5.19730000000003e-05, 5.095800000000025e-05, 5.099999999999896e-05, 5.288900000000041e-05, 4.997199999999882e-05, 5.09729999999993e-05, 4.998600000000186e-05, 4.997199999999882e-05, 5.1916000000002543e-05, 5.291700000000302e-05, 5.284699999999823e-05]</msg>
<status status="PASS" starttime="20201030 18:27:43.822" endtime="20201030 18:27:43.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.817" endtime="20201030 18:27:43.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.829" endtime="20201030 18:27:43.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.827" endtime="20201030 18:27:43.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.826" endtime="20201030 18:27:43.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.463" endtime="20201030 18:27:43.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.462" endtime="20201030 18:27:43.849"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.858" endtime="20201030 18:27:43.880"></status>
</kw>
<msg timestamp="20201030 18:27:43.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.857" endtime="20201030 18:27:43.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.881" endtime="20201030 18:27:43.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.884" endtime="20201030 18:27:43.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.854" endtime="20201030 18:27:43.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.852" endtime="20201030 18:27:43.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.893" endtime="20201030 18:27:44.178"></status>
</kw>
<msg timestamp="20201030 18:27:44.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023550792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.891" endtime="20201030 18:27:44.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023550792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.182" endtime="20201030 18:27:44.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.191" endtime="20201030 18:27:44.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.889" endtime="20201030 18:27:44.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.887" endtime="20201030 18:27:44.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.197" level="INFO">${RESULT} = [{'diff': 6.240300000000254e-05}, {'diff': 5.294400000000268e-05}, {'diff': 5.294400000000268e-05}, {'diff': 4.9973000000001766e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.104100000000167e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:44.194" endtime="20201030 18:27:44.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:44.202" level="INFO">${ACCURACY} = {'diff': [6.240300000000254e-05, 5.294400000000268e-05, 5.294400000000268e-05, 4.9973000000001766e-05, 5.190299999999898e-05, 5.104100000000167e-05, 5.188899999999941e-05, 5.104200000000114e-05, 5.093...</msg>
<status status="PASS" starttime="20201030 18:27:44.198" endtime="20201030 18:27:44.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.207" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:27:44.206" endtime="20201030 18:27:44.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.209" level="INFO">VALUE: [6.240300000000254e-05, 5.294400000000268e-05, 5.294400000000268e-05, 4.9973000000001766e-05, 5.190299999999898e-05, 5.104100000000167e-05, 5.188899999999941e-05, 5.104200000000114e-05, 5.093000000000111e-05, 5.193099999999812e-05, 5.104200000000114e-05, 5.190300000000245e-05, 5.104199999999767e-05, 5.1014000000002e-05, 5.005599999999971e-05, 4.994399999999968e-05, 5.1916000000002543e-05, 5.201399999999953e-05, 5.102699999999863e-05, 5.091600000000154e-05, 5.094500000000016e-05, 5.1985999999996924e-05, 5.195900000000073e-05, 5.294499999999869e-05, 5.286100000000127e-05, 5.198600000000039e-05, 5.187499999999984e-05, 5.191699999999855e-05, 5.199999999999996e-05, 5.097199999999982e-05, 5.2957999999998784e-05, 5.094500000000016e-05, 5.2916000000000074e-05, 5.193100000000159e-05, 5.004200000000014e-05, 5.097199999999982e-05, 4.909700000000142e-05, 5.0943999999997214e-05, 5.287499999999737e-05, 5.381999999999956e-05, 5.095800000000025e-05, 5.10279999999981e-05, 5.188899999999941e-05, 5.197200000000082e-05, 5.1929999999998644e-05, 5.004200000000014e-05, 5.186100000000027e-05, 5.287500000000084e-05, 5.199999999999996e-05, 5.104200000000114e-05]</msg>
<status status="PASS" starttime="20201030 18:27:44.208" endtime="20201030 18:27:44.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.203" endtime="20201030 18:27:44.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.214" endtime="20201030 18:27:44.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.213" endtime="20201030 18:27:44.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.212" endtime="20201030 18:27:44.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.850" endtime="20201030 18:27:44.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.850" endtime="20201030 18:27:44.235"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.243" endtime="20201030 18:27:44.263"></status>
</kw>
<msg timestamp="20201030 18:27:44.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.242" endtime="20201030 18:27:44.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.265" endtime="20201030 18:27:44.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.267" endtime="20201030 18:27:44.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.239" endtime="20201030 18:27:44.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.237" endtime="20201030 18:27:44.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.276" endtime="20201030 18:27:44.562"></status>
</kw>
<msg timestamp="20201030 18:27:44.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.275" endtime="20201030 18:27:44.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.566" endtime="20201030 18:27:44.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.575" endtime="20201030 18:27:44.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.272" endtime="20201030 18:27:44.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.270" endtime="20201030 18:27:44.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.581" level="INFO">${RESULT} = [{'diff': 5.6652000000000785e-05}, {'diff': 5.19730000000003e-05}, {'diff': 5.009700000000242e-05}, {'diff': 5.002800000000057e-05}, {'diff': 5.1915999999999074e-05}, {'diff': 5.194499999999769e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:44.578" endtime="20201030 18:27:44.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:44.585" level="INFO">${ACCURACY} = {'diff': [5.6652000000000785e-05, 5.19730000000003e-05, 5.009700000000242e-05, 5.002800000000057e-05, 5.1915999999999074e-05, 5.194499999999769e-05, 5.005500000000024e-05, 5.091600000000154e-05, 5.005...</msg>
<status status="PASS" starttime="20201030 18:27:44.582" endtime="20201030 18:27:44.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.590" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:27:44.589" endtime="20201030 18:27:44.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.592" level="INFO">VALUE: [5.6652000000000785e-05, 5.19730000000003e-05, 5.009700000000242e-05, 5.002800000000057e-05, 5.1915999999999074e-05, 5.194499999999769e-05, 5.005500000000024e-05, 5.091600000000154e-05, 5.005500000000024e-05, 5.002800000000057e-05, 5.002800000000057e-05, 5.1915999999999074e-05, 5.194499999999769e-05, 5.287500000000084e-05, 5.105600000000071e-05, 5.194400000000168e-05, 5.293099999999912e-05, 5.194400000000168e-05, 5.008300000000285e-05, 5.197200000000082e-05, 5.188899999999941e-05, 5.104200000000114e-05, 5.288900000000041e-05, 5.100000000000243e-05, 5.097199999999982e-05, 5.291699999999955e-05, 5.284699999999823e-05, 5.282000000000203e-05, 5.005599999999971e-05, 5.190299999999898e-05, 5.094400000000068e-05, 5.006899999999981e-05, 5.095800000000025e-05, 5.28470000000017e-05, 5.005599999999971e-05, 5.295900000000173e-05, 5.094500000000016e-05, 5.1985999999996924e-05, 4.997199999999882e-05, 5.201300000000006e-05, 5.190299999999898e-05, 5.101399999999853e-05, 5.191699999999855e-05, 5.199999999999996e-05, 5.095800000000025e-05, 5.006900000000328e-05, 5.294499999999869e-05, 5.197200000000082e-05, 4.999999999999796e-05, 5.104100000000167e-05]</msg>
<status status="PASS" starttime="20201030 18:27:44.591" endtime="20201030 18:27:44.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.586" endtime="20201030 18:27:44.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.597" endtime="20201030 18:27:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.596" endtime="20201030 18:27:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.595" endtime="20201030 18:27:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.236" endtime="20201030 18:27:44.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.235" endtime="20201030 18:27:44.618"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.627" endtime="20201030 18:27:44.648"></status>
</kw>
<msg timestamp="20201030 18:27:44.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.625" endtime="20201030 18:27:44.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.650" endtime="20201030 18:27:44.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.652" endtime="20201030 18:27:44.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.623" endtime="20201030 18:27:44.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.620" endtime="20201030 18:27:44.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.661" endtime="20201030 18:27:44.947"></status>
</kw>
<msg timestamp="20201030 18:27:44.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023747597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.660" endtime="20201030 18:27:44.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023747597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.951" endtime="20201030 18:27:44.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.959" endtime="20201030 18:27:44.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.657" endtime="20201030 18:27:44.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.655" endtime="20201030 18:27:44.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.966" level="INFO">${RESULT} = [{'diff': 6.248600000000049e-05}, {'diff': 4.997199999999882e-05}, {'diff': 4.9973000000001766e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.191700000000202e-05}, {'diff': 5.1887999999999934e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:44.963" endtime="20201030 18:27:44.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:44.970" level="INFO">${ACCURACY} = {'diff': [6.248600000000049e-05, 4.997199999999882e-05, 4.9973000000001766e-05, 5.201399999999953e-05, 5.191700000000202e-05, 5.1887999999999934e-05, 5.1014000000002e-05, 5.198600000000039e-05, 5.2819...</msg>
<status status="PASS" starttime="20201030 18:27:44.967" endtime="20201030 18:27:44.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.975" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:27:44.974" endtime="20201030 18:27:44.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.977" level="INFO">VALUE: [6.248600000000049e-05, 4.997199999999882e-05, 4.9973000000001766e-05, 5.201399999999953e-05, 5.191700000000202e-05, 5.1887999999999934e-05, 5.1014000000002e-05, 5.198600000000039e-05, 5.281999999999856e-05, 5.095800000000025e-05, 5.300000000000096e-05, 5.095800000000025e-05, 5.1957999999997784e-05, 5.28609999999978e-05, 4.9931000000003056e-05, 5.090300000000145e-05, 5.287499999999737e-05, 5.2971999999998354e-05, 4.999999999999796e-05, 5.0943999999997214e-05, 5.004200000000014e-05, 4.999999999999796e-05, 5.195800000000125e-05, 5.000000000000143e-05, 5.20279999999991e-05, 5.279199999999942e-05, 5.18609999999968e-05, 5.28609999999978e-05, 5.287500000000084e-05, 5.105500000000124e-05, 5.180500000000199e-05, 5.094500000000016e-05, 5.100000000000243e-05, 4.999999999999796e-05, 5.190299999999898e-05, 5.190299999999898e-05, 5.011100000000199e-05, 5.094500000000016e-05, 5.095800000000025e-05, 5.095800000000025e-05, 5.008399999999885e-05, 5.381900000000009e-05, 5.286100000000127e-05, 5.193099999999812e-05, 4.999999999999796e-05, 5.008299999999938e-05, 5.290299999999998e-05, 4.998599999999839e-05, 5.008300000000285e-05, 5.095800000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:27:44.976" endtime="20201030 18:27:44.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.971" endtime="20201030 18:27:44.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.983" endtime="20201030 18:27:45.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.981" endtime="20201030 18:27:45.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.980" endtime="20201030 18:27:45.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.619" endtime="20201030 18:27:45.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.618" endtime="20201030 18:27:45.004"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.012" endtime="20201030 18:27:45.036"></status>
</kw>
<msg timestamp="20201030 18:27:45.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.011" endtime="20201030 18:27:45.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.037" endtime="20201030 18:27:45.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.040" endtime="20201030 18:27:45.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.008" endtime="20201030 18:27:45.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.006" endtime="20201030 18:27:45.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.049" endtime="20201030 18:27:45.334"></status>
</kw>
<msg timestamp="20201030 18:27:45.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.047" endtime="20201030 18:27:45.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024952444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025007222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.338" endtime="20201030 18:27:45.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.347" endtime="20201030 18:27:45.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.045" endtime="20201030 18:27:45.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.043" endtime="20201030 18:27:45.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.353" level="INFO">${RESULT} = [{'diff': 5.4777999999998384e-05}, {'diff': 4.998600000000186e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.194499999999769e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.280600000000246e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:45.350" endtime="20201030 18:27:45.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:45.358" level="INFO">${ACCURACY} = {'diff': [5.4777999999998384e-05, 4.998600000000186e-05, 5.286100000000127e-05, 5.194499999999769e-05, 5.199999999999996e-05, 5.280600000000246e-05, 4.998599999999839e-05, 5.095800000000025e-05, 5.284...</msg>
<status status="PASS" starttime="20201030 18:27:45.354" endtime="20201030 18:27:45.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.363" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:27:45.362" endtime="20201030 18:27:45.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.365" level="INFO">VALUE: [5.4777999999998384e-05, 4.998600000000186e-05, 5.286100000000127e-05, 5.194499999999769e-05, 5.199999999999996e-05, 5.280600000000246e-05, 4.998599999999839e-05, 5.095800000000025e-05, 5.28470000000017e-05, 5.001300000000153e-05, 5.2929999999999644e-05, 5.1901999999999504e-05, 4.993099999999959e-05, 5.093000000000111e-05, 5.104199999999767e-05, 5.0929999999997644e-05, 4.9945000000002626e-05, 5.287499999999737e-05, 5.197200000000082e-05, 5.091700000000102e-05, 5.093100000000059e-05, 5.005500000000024e-05, 5.190299999999898e-05, 5.286100000000127e-05, 5.094500000000016e-05, 5.093100000000059e-05, 5.095800000000025e-05, 5.28470000000017e-05, 5.0943999999997214e-05, 4.998599999999839e-05, 5.002800000000057e-05, 5.197200000000082e-05, 4.999999999999796e-05, 5.190300000000245e-05, 4.905600000000218e-05, 5.290299999999998e-05, 5.006899999999981e-05, 5.001399999999753e-05, 5.28479999999977e-05, 5.095800000000025e-05, 5.0957999999996784e-05, 5.291699999999955e-05, 5.0915999999998074e-05, 5.188899999999941e-05, 5.190299999999898e-05, 5.005599999999971e-05, 5.187499999999984e-05, 5.2902000000000504e-05, 5.100000000000243e-05, 5.094500000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:27:45.364" endtime="20201030 18:27:45.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.359" endtime="20201030 18:27:45.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.370" endtime="20201030 18:27:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.369" endtime="20201030 18:27:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.368" endtime="20201030 18:27:45.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.004" endtime="20201030 18:27:45.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.004" endtime="20201030 18:27:45.391"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.399" endtime="20201030 18:27:45.423"></status>
</kw>
<msg timestamp="20201030 18:27:45.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.398" endtime="20201030 18:27:45.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.424" endtime="20201030 18:27:45.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.427" endtime="20201030 18:27:45.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.395" endtime="20201030 18:27:45.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.393" endtime="20201030 18:27:45.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.435" endtime="20201030 18:27:45.722"></status>
</kw>
<msg timestamp="20201030 18:27:45.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024341944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.434" endtime="20201030 18:27:45.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024285278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024341944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.726" endtime="20201030 18:27:45.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.735" endtime="20201030 18:27:45.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.431" endtime="20201030 18:27:45.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.430" endtime="20201030 18:27:45.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.741" level="INFO">${RESULT} = [{'diff': 5.6666000000000355e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.0014000000001e-05}, {'diff': 5.094400000000068e-05}, {'diff': 5.2929999999999644e-05}, {'diff': 4.995899999999873e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:45.738" endtime="20201030 18:27:45.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:45.745" level="INFO">${ACCURACY} = {'diff': [5.6666000000000355e-05, 5.188899999999941e-05, 5.0014000000001e-05, 5.094400000000068e-05, 5.2929999999999644e-05, 4.995899999999873e-05, 5.001299999999806e-05, 5.097199999999982e-05, 5.0055...</msg>
<status status="PASS" starttime="20201030 18:27:45.742" endtime="20201030 18:27:45.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.750" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:27:45.749" endtime="20201030 18:27:45.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.752" level="INFO">VALUE: [5.6666000000000355e-05, 5.188899999999941e-05, 5.0014000000001e-05, 5.094400000000068e-05, 5.2929999999999644e-05, 4.995899999999873e-05, 5.001299999999806e-05, 5.097199999999982e-05, 5.005599999999971e-05, 5.105599999999724e-05, 5.194400000000168e-05, 5.000000000000143e-05, 5.105500000000124e-05, 5.005599999999971e-05, 5.188899999999941e-05, 5.1971999999997354e-05, 5.099999999999896e-05, 5.290299999999998e-05, 5.1915999999999074e-05, 5.002800000000057e-05, 5.193100000000159e-05, 5.099999999999896e-05, 5.100000000000243e-05, 5.381999999999956e-05, 5.098599999999939e-05, 4.998599999999839e-05, 5.290299999999998e-05, 5.194499999999769e-05, 5.190299999999898e-05, 5.102800000000157e-05, 5.097199999999982e-05, 4.995799999999925e-05, 5.100000000000243e-05, 5.097199999999982e-05, 5.197200000000082e-05, 4.905499999999924e-05, 5.284699999999823e-05, 5.198600000000039e-05, 5.097199999999982e-05, 5.286200000000074e-05, 5.098600000000286e-05, 4.991700000000002e-05, 5.102800000000157e-05, 4.999999999999796e-05, 5.294499999999869e-05, 5.287500000000084e-05, 5.198600000000039e-05, 5.0014000000001e-05, 5.008399999999885e-05, 5.093100000000059e-05]</msg>
<status status="PASS" starttime="20201030 18:27:45.751" endtime="20201030 18:27:45.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.746" endtime="20201030 18:27:45.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.757" endtime="20201030 18:27:45.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.756" endtime="20201030 18:27:45.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.754" endtime="20201030 18:27:45.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.392" endtime="20201030 18:27:45.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.391" endtime="20201030 18:27:45.778"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.787" endtime="20201030 18:27:45.809"></status>
</kw>
<msg timestamp="20201030 18:27:45.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.785" endtime="20201030 18:27:45.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.811" endtime="20201030 18:27:45.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.813" endtime="20201030 18:27:45.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.782" endtime="20201030 18:27:45.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.780" endtime="20201030 18:27:45.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.822" endtime="20201030 18:27:46.108"></status>
</kw>
<msg timestamp="20201030 18:27:46.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024196333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.821" endtime="20201030 18:27:46.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024140583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024196333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.112" endtime="20201030 18:27:46.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.121" endtime="20201030 18:27:46.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.818" endtime="20201030 18:27:46.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.816" endtime="20201030 18:27:46.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.127" level="INFO">${RESULT} = [{'diff': 5.5750000000000244e-05}, {'diff': 5.011099999999852e-05}, {'diff': 5.1915999999999074e-05}, {'diff': 5.095800000000025e-05}, {'diff': 5.295800000000225e-05}, {'diff': 5.287500000000084e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:46.124" endtime="20201030 18:27:46.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:46.131" level="INFO">${ACCURACY} = {'diff': [5.5750000000000244e-05, 5.011099999999852e-05, 5.1915999999999074e-05, 5.095800000000025e-05, 5.295800000000225e-05, 5.287500000000084e-05, 5.187499999999984e-05, 4.994399999999968e-05, 5.08...</msg>
<status status="PASS" starttime="20201030 18:27:46.128" endtime="20201030 18:27:46.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.136" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:27:46.135" endtime="20201030 18:27:46.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.141" level="INFO">VALUE: [5.5750000000000244e-05, 5.011099999999852e-05, 5.1915999999999074e-05, 5.095800000000025e-05, 5.295800000000225e-05, 5.287500000000084e-05, 5.187499999999984e-05, 4.994399999999968e-05, 5.088900000000188e-05, 5.188899999999941e-05, 5.20279999999991e-05, 5.193100000000159e-05, 5.187499999999984e-05, 4.998599999999839e-05, 5.2943999999999214e-05, 5.086099999999927e-05, 5.188899999999941e-05, 5.104200000000114e-05, 5.188899999999941e-05, 5.288900000000041e-05, 4.997200000000229e-05, 5.1943999999998214e-05, 5.101399999999853e-05, 5.100000000000243e-05, 5.190299999999898e-05, 5.093100000000059e-05, 5.093000000000111e-05, 5.1985999999996924e-05, 5.181899999999809e-05, 4.998600000000186e-05, 5.199999999999996e-05, 4.997200000000229e-05, 5.28609999999978e-05, 5.187499999999984e-05, 4.998599999999839e-05, 5.201399999999953e-05, 5.094500000000016e-05, 5.094400000000068e-05, 5.190299999999898e-05, 5.190299999999898e-05, 5.094500000000016e-05, 5.283299999999866e-05, 5.001399999999753e-05, 5.199999999999996e-05, 5.284800000000117e-05, 5.100000000000243e-05, 5.094500000000016e-05, 5.284800000000117e-05, 5.188899999999941e-05, 5.105500000000124e-05]</msg>
<status status="PASS" starttime="20201030 18:27:46.137" endtime="20201030 18:27:46.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.132" endtime="20201030 18:27:46.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.146" endtime="20201030 18:27:46.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.145" endtime="20201030 18:27:46.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.144" endtime="20201030 18:27:46.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.779" endtime="20201030 18:27:46.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.778" endtime="20201030 18:27:46.167"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.176" endtime="20201030 18:27:46.196"></status>
</kw>
<msg timestamp="20201030 18:27:46.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.174" endtime="20201030 18:27:46.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.197" endtime="20201030 18:27:46.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.200" endtime="20201030 18:27:46.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.172" endtime="20201030 18:27:46.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.170" endtime="20201030 18:27:46.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.209" endtime="20201030 18:27:46.493"></status>
</kw>
<msg timestamp="20201030 18:27:46.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.207" endtime="20201030 18:27:46.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.497" endtime="20201030 18:27:46.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.506" endtime="20201030 18:27:46.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.205" endtime="20201030 18:27:46.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.203" endtime="20201030 18:27:46.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.512" level="INFO">${RESULT} = [{'diff': 6.640300000000307e-05}, {'diff': 5.098599999999939e-05}, {'diff': 5.009799999999842e-05}, {'diff': 5.197200000000082e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.298600000000139e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:46.509" endtime="20201030 18:27:46.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:46.517" level="INFO">${ACCURACY} = {'diff': [6.640300000000307e-05, 5.098599999999939e-05, 5.009799999999842e-05, 5.197200000000082e-05, 5.18470000000007e-05, 5.298600000000139e-05, 5.288900000000041e-05, 5.099999999999896e-05, 5.09580...</msg>
<status status="PASS" starttime="20201030 18:27:46.513" endtime="20201030 18:27:46.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.522" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:27:46.521" endtime="20201030 18:27:46.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.524" level="INFO">VALUE: [6.640300000000307e-05, 5.098599999999939e-05, 5.009799999999842e-05, 5.197200000000082e-05, 5.18470000000007e-05, 5.298600000000139e-05, 5.288900000000041e-05, 5.099999999999896e-05, 5.095800000000025e-05, 5.197200000000082e-05, 5.201300000000006e-05, 5.199999999999996e-05, 5.0987000000002336e-05, 5.091600000000154e-05, 5.197200000000082e-05, 5.094500000000016e-05, 5.10409999999982e-05, 5.199999999999996e-05, 5.097199999999982e-05, 5.10279999999981e-05, 5.001399999999753e-05, 5.197200000000082e-05, 5.191700000000202e-05, 5.104200000000114e-05, 5.28470000000017e-05, 5.194500000000116e-05, 5.1929999999998644e-05, 5.004199999999667e-05, 5.0901999999998504e-05, 5.291699999999955e-05, 5.195800000000125e-05, 5.002800000000057e-05, 5.095800000000025e-05, 5.195800000000125e-05, 4.999999999999796e-05, 5.100000000000243e-05, 5.097199999999982e-05, 5.099999999999896e-05, 5.188899999999941e-05, 5.0986999999998867e-05, 5.0014000000001e-05, 5.002800000000057e-05, 5.2929999999999644e-05, 5.099999999999896e-05, 5.283399999999813e-05, 5.290299999999998e-05, 5.1971999999997354e-05, 5.004200000000014e-05, 5.091700000000102e-05, 5.099999999999896e-05]</msg>
<status status="PASS" starttime="20201030 18:27:46.523" endtime="20201030 18:27:46.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.518" endtime="20201030 18:27:46.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.529" endtime="20201030 18:27:46.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.528" endtime="20201030 18:27:46.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.526" endtime="20201030 18:27:46.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.168" endtime="20201030 18:27:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.167" endtime="20201030 18:27:46.550"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.558" endtime="20201030 18:27:46.578"></status>
</kw>
<msg timestamp="20201030 18:27:46.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.557" endtime="20201030 18:27:46.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.579" endtime="20201030 18:27:46.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.582" endtime="20201030 18:27:46.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.554" endtime="20201030 18:27:46.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.552" endtime="20201030 18:27:46.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.591" endtime="20201030 18:27:46.878"></status>
</kw>
<msg timestamp="20201030 18:27:46.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021006111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.590" endtime="20201030 18:27:46.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021006111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.882" endtime="20201030 18:27:46.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.890" endtime="20201030 18:27:46.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.587" endtime="20201030 18:27:46.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.585" endtime="20201030 18:27:46.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.897" level="INFO">${RESULT} = [{'diff': 4.626400000000072e-05}, {'diff': 5.10279999999981e-05}, {'diff': 5.284699999999823e-05}, {'diff': 5.104100000000167e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.201399999999953e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:46.894" endtime="20201030 18:27:46.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:46.901" level="INFO">${ACCURACY} = {'diff': [4.626400000000072e-05, 5.10279999999981e-05, 5.284699999999823e-05, 5.104100000000167e-05, 5.287500000000084e-05, 5.201399999999953e-05, 5.2971999999998354e-05, 5.1943999999998214e-05, 5.095...</msg>
<status status="PASS" starttime="20201030 18:27:46.898" endtime="20201030 18:27:46.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.905" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:27:46.904" endtime="20201030 18:27:46.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.908" level="INFO">VALUE: [4.626400000000072e-05, 5.10279999999981e-05, 5.284699999999823e-05, 5.104100000000167e-05, 5.287500000000084e-05, 5.201399999999953e-05, 5.2971999999998354e-05, 5.1943999999998214e-05, 5.095800000000025e-05, 5.197200000000082e-05, 5.099999999999896e-05, 5.198600000000039e-05, 5.287500000000084e-05, 5.094400000000068e-05, 5.198699999999987e-05, 5.102800000000157e-05, 5.199999999999996e-05, 5.190299999999898e-05, 5.284699999999823e-05, 5.099999999999896e-05, 5.013899999999766e-05, 5.002800000000057e-05, 5.005500000000024e-05, 5.190299999999898e-05, 5.0014000000001e-05, 5.2943999999999214e-05, 5.094400000000068e-05, 5.294400000000268e-05, 5.2943999999999214e-05, 5.186100000000027e-05, 5.188899999999941e-05, 5.28340000000016e-05, 5.101299999999906e-05, 5.194400000000168e-05, 5.108300000000038e-05, 4.902799999999957e-05, 5.104199999999767e-05, 4.91529999999997e-05, 5.095800000000025e-05, 5.094400000000068e-05, 5.008400000000232e-05, 5.091699999999755e-05, 5.011100000000199e-05, 4.997199999999882e-05, 5.286100000000127e-05, 5.2971999999998354e-05, 5.187499999999984e-05, 5.281899999999909e-05, 5.006999999999928e-05, 5.187499999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:27:46.906" endtime="20201030 18:27:46.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.902" endtime="20201030 18:27:46.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.913" endtime="20201030 18:27:46.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.911" endtime="20201030 18:27:46.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.910" endtime="20201030 18:27:46.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.551" endtime="20201030 18:27:46.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.550" endtime="20201030 18:27:46.934"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.942" endtime="20201030 18:27:46.964"></status>
</kw>
<msg timestamp="20201030 18:27:46.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.941" endtime="20201030 18:27:46.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.966" endtime="20201030 18:27:46.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.968" endtime="20201030 18:27:46.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.938" endtime="20201030 18:27:46.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.936" endtime="20201030 18:27:46.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.977" endtime="20201030 18:27:47.263"></status>
</kw>
<msg timestamp="20201030 18:27:47.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.976" endtime="20201030 18:27:47.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024043014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024095847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.267" endtime="20201030 18:27:47.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.275" endtime="20201030 18:27:47.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.973" endtime="20201030 18:27:47.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.971" endtime="20201030 18:27:47.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.282" level="INFO">${RESULT} = [{'diff': 5.283299999999866e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.097199999999982e-05}, {'diff': 5.1901999999999504e-05}, {'diff': 5.197200000000082e-05}, {'diff': 5.004199999999667e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:47.278" endtime="20201030 18:27:47.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:47.286" level="INFO">${ACCURACY} = {'diff': [5.283299999999866e-05, 5.099999999999896e-05, 5.097199999999982e-05, 5.1901999999999504e-05, 5.197200000000082e-05, 5.004199999999667e-05, 5.1014000000002e-05, 5.2901999999997035e-05, 5.0014...</msg>
<status status="PASS" starttime="20201030 18:27:47.283" endtime="20201030 18:27:47.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.290" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:27:47.289" endtime="20201030 18:27:47.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.293" level="INFO">VALUE: [5.283299999999866e-05, 5.099999999999896e-05, 5.097199999999982e-05, 5.1901999999999504e-05, 5.197200000000082e-05, 5.004199999999667e-05, 5.1014000000002e-05, 5.2901999999997035e-05, 5.0014000000001e-05, 5.001399999999753e-05, 5.1901999999999504e-05, 5.187499999999984e-05, 5.294499999999869e-05, 4.904099999999967e-05, 5.193099999999812e-05, 5.293100000000259e-05, 5.093000000000111e-05, 5.011200000000146e-05, 5.099999999999896e-05, 5.288900000000041e-05, 5.1014000000002e-05, 5.288900000000041e-05, 5.188899999999941e-05, 5.287500000000084e-05, 5.197200000000082e-05, 5.19730000000003e-05, 5.097199999999982e-05, 5.188899999999941e-05, 5.098599999999939e-05, 5.097199999999982e-05, 5.288900000000041e-05, 5.2902000000000504e-05, 5.287500000000084e-05, 4.997199999999882e-05, 5.097199999999982e-05, 5.2916000000000074e-05, 5.287499999999737e-05, 5.006899999999981e-05, 5.101399999999853e-05, 5.188899999999941e-05, 5.097199999999982e-05, 5.006999999999928e-05, 5.100000000000243e-05, 5.281999999999856e-05, 5.102800000000157e-05, 5.098599999999939e-05, 5.28609999999978e-05, 5.188899999999941e-05, 5.2916000000000074e-05, 5.287500000000084e-05]</msg>
<status status="PASS" starttime="20201030 18:27:47.291" endtime="20201030 18:27:47.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.287" endtime="20201030 18:27:47.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.298" endtime="20201030 18:27:47.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.297" endtime="20201030 18:27:47.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.296" endtime="20201030 18:27:47.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.935" endtime="20201030 18:27:47.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.934" endtime="20201030 18:27:47.319"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.328" endtime="20201030 18:27:47.346"></status>
</kw>
<msg timestamp="20201030 18:27:47.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.326" endtime="20201030 18:27:47.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.347" endtime="20201030 18:27:47.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.350" endtime="20201030 18:27:47.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.323" endtime="20201030 18:27:47.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.321" endtime="20201030 18:27:47.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.359" endtime="20201030 18:27:47.645"></status>
</kw>
<msg timestamp="20201030 18:27:47.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020586028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.357" endtime="20201030 18:27:47.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020586028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.649" endtime="20201030 18:27:47.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.658" endtime="20201030 18:27:47.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.355" endtime="20201030 18:27:47.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.353" endtime="20201030 18:27:47.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.664" level="INFO">${RESULT} = [{'diff': 3.7583000000000755e-05}, {'diff': 4.999999999999796e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.194400000000168e-05}, {'diff': 5.097199999999982e-05}, {'diff': 5.294500000000216e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:47.661" endtime="20201030 18:27:47.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:47.669" level="INFO">${ACCURACY} = {'diff': [3.7583000000000755e-05, 4.999999999999796e-05, 5.199999999999996e-05, 5.194400000000168e-05, 5.097199999999982e-05, 5.294500000000216e-05, 4.999999999999796e-05, 5.286100000000127e-05, 5.011...</msg>
<status status="PASS" starttime="20201030 18:27:47.665" endtime="20201030 18:27:47.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.674" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:27:47.673" endtime="20201030 18:27:47.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.676" level="INFO">VALUE: [3.7583000000000755e-05, 4.999999999999796e-05, 5.199999999999996e-05, 5.194400000000168e-05, 5.097199999999982e-05, 5.294500000000216e-05, 4.999999999999796e-05, 5.286100000000127e-05, 5.011099999999852e-05, 5.288900000000041e-05, 5.09729999999993e-05, 5.1929999999998644e-05, 5.012499999999809e-05, 5.287500000000084e-05, 5.1915999999999074e-05, 5.2902000000000504e-05, 5.095899999999973e-05, 5.095800000000025e-05, 5.101399999999853e-05, 5.1943999999998214e-05, 5.197200000000082e-05, 5.095800000000025e-05, 5.187499999999984e-05, 5.101399999999853e-05, 5.000000000000143e-05, 5.291699999999955e-05, 5.193099999999812e-05, 5.293099999999912e-05, 4.998599999999839e-05, 5.009699999999895e-05, 5.2943999999999214e-05, 5.197200000000082e-05, 4.9959000000002196e-05, 5.291699999999955e-05, 5.197200000000082e-05, 5.20279999999991e-05, 5.098599999999939e-05, 5.286100000000127e-05, 5.198600000000039e-05, 5.191699999999855e-05, 5.005500000000024e-05, 5.190299999999898e-05, 5.197200000000082e-05, 4.998600000000186e-05, 5.187499999999984e-05, 5.101299999999906e-05, 5.199999999999996e-05, 5.287500000000084e-05, 5.197200000000082e-05, 5.006999999999928e-05]</msg>
<status status="PASS" starttime="20201030 18:27:47.675" endtime="20201030 18:27:47.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.670" endtime="20201030 18:27:47.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.685" endtime="20201030 18:27:47.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.684" endtime="20201030 18:27:47.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.683" endtime="20201030 18:27:47.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.320" endtime="20201030 18:27:47.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.319" endtime="20201030 18:27:47.706"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.715" endtime="20201030 18:27:47.734"></status>
</kw>
<msg timestamp="20201030 18:27:47.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.713" endtime="20201030 18:27:47.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.735" endtime="20201030 18:27:47.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.738" endtime="20201030 18:27:47.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.711" endtime="20201030 18:27:47.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.709" endtime="20201030 18:27:47.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.747" endtime="20201030 18:27:48.033"></status>
</kw>
<msg timestamp="20201030 18:27:48.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.745" endtime="20201030 18:27:48.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.038" endtime="20201030 18:27:48.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.046" endtime="20201030 18:27:48.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.743" endtime="20201030 18:27:48.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.741" endtime="20201030 18:27:48.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.052" level="INFO">${RESULT} = [{'diff': 4.426399999999872e-05}, {'diff': 5.093000000000111e-05}, {'diff': 5.28609999999978e-05}, {'diff': 5.1957999999997784e-05}, {'diff': 4.999999999999796e-05}, {'diff': 5.28470000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:48.049" endtime="20201030 18:27:48.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:48.057" level="INFO">${ACCURACY} = {'diff': [4.426399999999872e-05, 5.093000000000111e-05, 5.28609999999978e-05, 5.1957999999997784e-05, 4.999999999999796e-05, 5.28470000000017e-05, 5.095800000000025e-05, 5.183300000000113e-05, 5.19029...</msg>
<status status="PASS" starttime="20201030 18:27:48.053" endtime="20201030 18:27:48.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.061" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:27:48.060" endtime="20201030 18:27:48.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.063" level="INFO">VALUE: [4.426399999999872e-05, 5.093000000000111e-05, 5.28609999999978e-05, 5.1957999999997784e-05, 4.999999999999796e-05, 5.28470000000017e-05, 5.095800000000025e-05, 5.183300000000113e-05, 5.190299999999898e-05, 5.188899999999941e-05, 5.004200000000014e-05, 5.194400000000168e-05, 5.1943999999998214e-05, 5.099999999999896e-05, 5.195900000000073e-05, 5.093000000000111e-05, 4.999999999999796e-05, 5.001299999999806e-05, 5.28470000000017e-05, 4.990300000000045e-05, 5.000000000000143e-05, 5.190299999999898e-05, 5.108300000000038e-05, 5.193099999999812e-05, 5.098599999999939e-05, 5.194499999999769e-05, 5.187499999999984e-05, 4.998600000000186e-05, 4.998599999999839e-05, 5.291699999999955e-05, 5.195899999999726e-05, 5.094500000000016e-05, 5.095899999999973e-05, 5.188899999999941e-05, 5.188900000000288e-05, 5.2929999999999644e-05, 5.098599999999939e-05, 5.279099999999995e-05, 5.286199999999727e-05, 5.188899999999941e-05, 5.1971999999997354e-05, 5.095800000000025e-05, 5.095899999999973e-05, 5.013899999999766e-05, 5.28609999999978e-05, 5.287500000000084e-05, 4.994399999999968e-05, 4.997200000000229e-05, 5.191699999999855e-05, 5.006899999999981e-05]</msg>
<status status="PASS" starttime="20201030 18:27:48.062" endtime="20201030 18:27:48.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.057" endtime="20201030 18:27:48.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.068" endtime="20201030 18:27:48.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.067" endtime="20201030 18:27:48.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.066" endtime="20201030 18:27:48.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.707" endtime="20201030 18:27:48.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.706" endtime="20201030 18:27:48.089"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.098" endtime="20201030 18:27:48.120"></status>
</kw>
<msg timestamp="20201030 18:27:48.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.096" endtime="20201030 18:27:48.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.122" endtime="20201030 18:27:48.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.124" endtime="20201030 18:27:48.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.094" endtime="20201030 18:27:48.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.092" endtime="20201030 18:27:48.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.133" endtime="20201030 18:27:48.420"></status>
</kw>
<msg timestamp="20201030 18:27:48.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.132" endtime="20201030 18:27:48.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023991389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024055708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.424" endtime="20201030 18:27:48.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.433" endtime="20201030 18:27:48.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.129" endtime="20201030 18:27:48.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.128" endtime="20201030 18:27:48.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.439" level="INFO">${RESULT} = [{'diff': 6.431900000000018e-05}, {'diff': 5.193000000000211e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.093100000000059e-05}, {'diff': 5.095800000000025e-05}, {'diff': 5.008299999999938e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:48.436" endtime="20201030 18:27:48.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:48.443" level="INFO">${ACCURACY} = {'diff': [6.431900000000018e-05, 5.193000000000211e-05, 5.199999999999996e-05, 5.093100000000059e-05, 5.095800000000025e-05, 5.008299999999938e-05, 5.194499999999769e-05, 5.008300000000285e-05, 5.0972...</msg>
<status status="PASS" starttime="20201030 18:27:48.440" endtime="20201030 18:27:48.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.447" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:27:48.446" endtime="20201030 18:27:48.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.450" level="INFO">VALUE: [6.431900000000018e-05, 5.193000000000211e-05, 5.199999999999996e-05, 5.093100000000059e-05, 5.095800000000025e-05, 5.008299999999938e-05, 5.194499999999769e-05, 5.008300000000285e-05, 5.09729999999993e-05, 4.9973000000001766e-05, 5.094500000000016e-05, 5.1929999999998644e-05, 5.295800000000225e-05, 5.001399999999753e-05, 5.194500000000116e-05, 5.006899999999981e-05, 5.095800000000025e-05, 5.290299999999998e-05, 5.201399999999953e-05, 4.995799999999925e-05, 5.287499999999737e-05, 5.10279999999981e-05, 5.1943999999998214e-05, 4.990299999999698e-05, 5.1915999999999074e-05, 5.10409999999982e-05, 5.004199999999667e-05, 5.006899999999981e-05, 5.098599999999939e-05, 5.009700000000242e-05, 4.998600000000186e-05, 5.286100000000127e-05, 5.1957999999997784e-05, 5.190299999999898e-05, 5.104200000000114e-05, 5.286100000000127e-05, 5.002800000000057e-05, 5.2943999999999214e-05, 5.188899999999941e-05, 5.288900000000041e-05, 5.006999999999928e-05, 5.097199999999982e-05, 5.291699999999955e-05, 5.000000000000143e-05, 4.998599999999839e-05, 5.094500000000016e-05, 5.199999999999996e-05, 5.1014000000002e-05, 5.004200000000014e-05, 5.101399999999853e-05]</msg>
<status status="PASS" starttime="20201030 18:27:48.449" endtime="20201030 18:27:48.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.444" endtime="20201030 18:27:48.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.456" endtime="20201030 18:27:48.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.454" endtime="20201030 18:27:48.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.453" endtime="20201030 18:27:48.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.090" endtime="20201030 18:27:48.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.090" endtime="20201030 18:27:48.477"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.485" endtime="20201030 18:27:48.508"></status>
</kw>
<msg timestamp="20201030 18:27:48.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.484" endtime="20201030 18:27:48.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.509" endtime="20201030 18:27:48.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.512" endtime="20201030 18:27:48.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.481" endtime="20201030 18:27:48.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.479" endtime="20201030 18:27:48.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.521" endtime="20201030 18:27:48.805"></status>
</kw>
<msg timestamp="20201030 18:27:48.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023501833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023544153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.519" endtime="20201030 18:27:48.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023501833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023544153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.810" endtime="20201030 18:27:48.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.819" endtime="20201030 18:27:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.517" endtime="20201030 18:27:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.515" endtime="20201030 18:27:48.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.826" level="INFO">${RESULT} = [{'diff': 4.232000000000194e-05}, {'diff': 4.998600000000186e-05}, {'diff': 5.100000000000243e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.1887999999999934e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:48.822" endtime="20201030 18:27:48.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:48.831" level="INFO">${ACCURACY} = {'diff': [4.232000000000194e-05, 4.998600000000186e-05, 5.100000000000243e-05, 5.199999999999996e-05, 5.188899999999941e-05, 5.1887999999999934e-05, 5.09729999999993e-05, 5.199999999999996e-05, 5.0915...</msg>
<status status="PASS" starttime="20201030 18:27:48.827" endtime="20201030 18:27:48.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.835" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:27:48.834" endtime="20201030 18:27:48.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.838" level="INFO">VALUE: [4.232000000000194e-05, 4.998600000000186e-05, 5.100000000000243e-05, 5.199999999999996e-05, 5.188899999999941e-05, 5.1887999999999934e-05, 5.09729999999993e-05, 5.199999999999996e-05, 5.0915999999998074e-05, 4.993099999999959e-05, 5.1014000000002e-05, 5.286100000000127e-05, 5.095800000000025e-05, 5.102800000000157e-05, 4.9972999999998297e-05, 5.007000000000275e-05, 5.183300000000113e-05, 5.287499999999737e-05, 5.199999999999996e-05, 5.187499999999984e-05, 5.005599999999971e-05, 5.291699999999955e-05, 5.28340000000016e-05, 5.104200000000114e-05, 5.190299999999898e-05, 5.2929999999999644e-05, 5.094400000000068e-05, 5.097199999999982e-05, 5.2929999999999644e-05, 5.287499999999737e-05, 5.000000000000143e-05, 5.2943999999999214e-05, 5.095800000000025e-05, 5.290299999999998e-05, 5.093099999999712e-05, 5.095800000000025e-05, 5.1971999999997354e-05, 4.9945000000002626e-05, 5.188899999999941e-05, 5.293099999999912e-05, 5.091700000000102e-05, 5.195900000000073e-05, 5.090299999999798e-05, 5.293099999999912e-05, 5.187499999999984e-05, 5.004200000000014e-05, 5.198600000000039e-05, 5.1901999999999504e-05, 5.090300000000145e-05, 5.095800000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:27:48.836" endtime="20201030 18:27:48.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.831" endtime="20201030 18:27:48.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.843" endtime="20201030 18:27:48.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.841" endtime="20201030 18:27:48.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.840" endtime="20201030 18:27:48.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.477" endtime="20201030 18:27:48.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.477" endtime="20201030 18:27:48.863"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.872" endtime="20201030 18:27:48.894"></status>
</kw>
<msg timestamp="20201030 18:27:48.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.870" endtime="20201030 18:27:48.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.895" endtime="20201030 18:27:48.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.897" endtime="20201030 18:27:48.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.868" endtime="20201030 18:27:48.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.866" endtime="20201030 18:27:48.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.906" endtime="20201030 18:27:49.194"></status>
</kw>
<msg timestamp="20201030 18:27:49.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.905" endtime="20201030 18:27:49.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023703361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.198" endtime="20201030 18:27:49.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.206" endtime="20201030 18:27:49.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.902" endtime="20201030 18:27:49.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.901" endtime="20201030 18:27:49.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.214" level="INFO">${RESULT} = [{'diff': 6.423599999999877e-05}, {'diff': 5.1887999999999934e-05}, {'diff': 5.187499999999984e-05}, {'diff': 4.9972999999998297e-05}, {'diff': 5.288899999999694e-05}, {'diff': 5.101399999999853e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:49.210" endtime="20201030 18:27:49.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:49.218" level="INFO">${ACCURACY} = {'diff': [6.423599999999877e-05, 5.1887999999999934e-05, 5.187499999999984e-05, 4.9972999999998297e-05, 5.288899999999694e-05, 5.101399999999853e-05, 5.098599999999939e-05, 4.998600000000186e-05, 5.18...</msg>
<status status="PASS" starttime="20201030 18:27:49.215" endtime="20201030 18:27:49.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.223" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:27:49.222" endtime="20201030 18:27:49.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.225" level="INFO">VALUE: [6.423599999999877e-05, 5.1887999999999934e-05, 5.187499999999984e-05, 4.9972999999998297e-05, 5.288899999999694e-05, 5.101399999999853e-05, 5.098599999999939e-05, 4.998600000000186e-05, 5.188899999999941e-05, 5.190299999999898e-05, 5.191700000000202e-05, 5.094400000000068e-05, 5.283299999999866e-05, 5.288899999999694e-05, 5.000000000000143e-05, 5.291700000000302e-05, 4.900000000000043e-05, 5.187500000000331e-05, 4.9959000000002196e-05, 5.002800000000057e-05, 5.195800000000125e-05, 5.194400000000168e-05, 5.195800000000125e-05, 5.283399999999813e-05, 5.283300000000213e-05, 5.005599999999971e-05, 5.000000000000143e-05, 4.997199999999882e-05, 4.999999999999796e-05, 5.288900000000041e-05, 5.004100000000067e-05, 5.0929999999997644e-05, 5.099999999999896e-05, 5.193099999999812e-05, 5.093100000000059e-05, 5.0986999999998867e-05, 5.004100000000067e-05, 5.279099999999995e-05, 5.099999999999896e-05, 4.993099999999959e-05, 5.277799999999985e-05, 5.281999999999856e-05, 5.00279999999971e-05, 5.190299999999898e-05, 5.190300000000245e-05, 5.288900000000041e-05, 5.095899999999973e-05, 5.284800000000117e-05, 4.995800000000272e-05, 5.1957999999997784e-05]</msg>
<status status="PASS" starttime="20201030 18:27:49.224" endtime="20201030 18:27:49.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.219" endtime="20201030 18:27:49.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.230" endtime="20201030 18:27:49.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.228" endtime="20201030 18:27:49.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.227" endtime="20201030 18:27:49.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.864" endtime="20201030 18:27:49.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.864" endtime="20201030 18:27:49.251"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.259" endtime="20201030 18:27:49.280"></status>
</kw>
<msg timestamp="20201030 18:27:49.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.258" endtime="20201030 18:27:49.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.282" endtime="20201030 18:27:49.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.284" endtime="20201030 18:27:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.255" endtime="20201030 18:27:49.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.253" endtime="20201030 18:27:49.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.293" endtime="20201030 18:27:49.579"></status>
</kw>
<msg timestamp="20201030 18:27:49.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.292" endtime="20201030 18:27:49.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023117556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023160875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.584" endtime="20201030 18:27:49.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.592" endtime="20201030 18:27:49.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.289" endtime="20201030 18:27:49.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.287" endtime="20201030 18:27:49.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.598" level="INFO">${RESULT} = [{'diff': 4.3318999999999996e-05}, {'diff': 5.098599999999939e-05}, {'diff': 5.095899999999973e-05}, {'diff': 5.300000000000096e-05}, {'diff': 4.998599999999839e-05}, {'diff': 5.283399999999813e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:49.595" endtime="20201030 18:27:49.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:49.603" level="INFO">${ACCURACY} = {'diff': [4.3318999999999996e-05, 5.098599999999939e-05, 5.095899999999973e-05, 5.300000000000096e-05, 4.998599999999839e-05, 5.283399999999813e-05, 5.191699999999855e-05, 5.002800000000057e-05, 5.191...</msg>
<status status="PASS" starttime="20201030 18:27:49.599" endtime="20201030 18:27:49.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.607" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:27:49.606" endtime="20201030 18:27:49.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.614" level="INFO">VALUE: [4.3318999999999996e-05, 5.098599999999939e-05, 5.095899999999973e-05, 5.300000000000096e-05, 4.998599999999839e-05, 5.283399999999813e-05, 5.191699999999855e-05, 5.002800000000057e-05, 5.191699999999855e-05, 5.198600000000039e-05, 4.997199999999882e-05, 5.094400000000068e-05, 5.097199999999982e-05, 5.200000000000343e-05, 5.099999999999896e-05, 5.002800000000057e-05, 5.00279999999971e-05, 5.195900000000073e-05, 5.2916000000000074e-05, 5.094500000000016e-05, 5.28609999999978e-05, 5.001399999999753e-05, 5.28470000000017e-05, 5.193000000000211e-05, 5.195900000000073e-05, 4.997200000000229e-05, 5.097199999999982e-05, 5.197200000000082e-05, 5.2888000000000934e-05, 5.288900000000041e-05, 5.0014000000001e-05, 5.101399999999853e-05, 5.194400000000168e-05, 5.097199999999982e-05, 5.18470000000007e-05, 5.004100000000067e-05, 5.291699999999955e-05, 4.998600000000186e-05, 5.199999999999996e-05, 5.005599999999971e-05, 5.288900000000041e-05, 5.000000000000143e-05, 5.187500000000331e-05, 4.994399999999968e-05, 5.094500000000016e-05, 5.001299999999806e-05, 5.194400000000168e-05, 5.186100000000027e-05, 5.097199999999982e-05, 5.1915999999999074e-05]</msg>
<status status="PASS" starttime="20201030 18:27:49.608" endtime="20201030 18:27:49.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.603" endtime="20201030 18:27:49.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.620" endtime="20201030 18:27:49.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.618" endtime="20201030 18:27:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.617" endtime="20201030 18:27:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.252" endtime="20201030 18:27:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.251" endtime="20201030 18:27:49.641"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.649" endtime="20201030 18:27:49.670"></status>
</kw>
<msg timestamp="20201030 18:27:49.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.648" endtime="20201030 18:27:49.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.671" endtime="20201030 18:27:49.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.674" endtime="20201030 18:27:49.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.645" endtime="20201030 18:27:49.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.643" endtime="20201030 18:27:49.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.683" endtime="20201030 18:27:49.969"></status>
</kw>
<msg timestamp="20201030 18:27:49.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:49.681" endtime="20201030 18:27:49.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:49.973" endtime="20201030 18:27:49.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.981" endtime="20201030 18:27:49.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.679" endtime="20201030 18:27:49.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.677" endtime="20201030 18:27:49.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.988" level="INFO">${RESULT} = [{'diff': 6.058299999999947e-05}, {'diff': 5.191700000000202e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.094400000000068e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:49.985" endtime="20201030 18:27:49.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:49.993" level="INFO">${ACCURACY} = {'diff': [6.058299999999947e-05, 5.191700000000202e-05, 5.099999999999896e-05, 5.190299999999898e-05, 5.188899999999941e-05, 5.094400000000068e-05, 5.199999999999996e-05, 5.191700000000202e-05, 5.2930...</msg>
<status status="PASS" starttime="20201030 18:27:49.989" endtime="20201030 18:27:49.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.997" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:27:49.996" endtime="20201030 18:27:49.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.000" level="INFO">VALUE: [6.058299999999947e-05, 5.191700000000202e-05, 5.099999999999896e-05, 5.190299999999898e-05, 5.188899999999941e-05, 5.094400000000068e-05, 5.199999999999996e-05, 5.191700000000202e-05, 5.293099999999912e-05, 5.188899999999941e-05, 5.008299999999938e-05, 5.093100000000059e-05, 5.190299999999898e-05, 5.197200000000082e-05, 5.188899999999941e-05, 5.099999999999896e-05, 5.1985999999996924e-05, 5.188900000000288e-05, 4.997200000000229e-05, 5.101399999999853e-05, 5.190299999999898e-05, 5.095800000000025e-05, 5.0902000000001973e-05, 5.190300000000245e-05, 4.9972999999998297e-05, 5.199999999999996e-05, 5.188899999999941e-05, 5.288900000000041e-05, 5.095899999999973e-05, 4.912500000000056e-05, 5.190300000000245e-05, 5.283299999999866e-05, 5.0929999999997644e-05, 5.09729999999993e-05, 5.298600000000139e-05, 5.093000000000111e-05, 5.006899999999981e-05, 5.08469999999997e-05, 4.990200000000097e-05, 5.091699999999755e-05, 5.304199999999967e-05, 4.998600000000186e-05, 4.9959000000002196e-05, 5.199999999999996e-05, 5.0915999999998074e-05, 5.191699999999855e-05, 5.294499999999869e-05, 5.000000000000143e-05, 5.094400000000068e-05, 5.283299999999866e-05]</msg>
<status status="PASS" starttime="20201030 18:27:49.998" endtime="20201030 18:27:50.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.994" endtime="20201030 18:27:50.001"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.005" endtime="20201030 18:27:50.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.003" endtime="20201030 18:27:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.002" endtime="20201030 18:27:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.642" endtime="20201030 18:27:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.641" endtime="20201030 18:27:50.025"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.034" endtime="20201030 18:27:50.055"></status>
</kw>
<msg timestamp="20201030 18:27:50.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.033" endtime="20201030 18:27:50.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.056" endtime="20201030 18:27:50.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.059" endtime="20201030 18:27:50.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.030" endtime="20201030 18:27:50.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.028" endtime="20201030 18:27:50.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.068" endtime="20201030 18:27:50.354"></status>
</kw>
<msg timestamp="20201030 18:27:50.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.066" endtime="20201030 18:27:50.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022014917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.358" endtime="20201030 18:27:50.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.366" endtime="20201030 18:27:50.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.063" endtime="20201030 18:27:50.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.062" endtime="20201030 18:27:50.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.373" level="INFO">${RESULT} = [{'diff': 4.4360999999999706e-05}, {'diff': 4.9973000000001766e-05}, {'diff': 5.20279999999991e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.198600000000039e-05}, {'diff': 5.1901999999999504e-05},...</msg>
<status status="PASS" starttime="20201030 18:27:50.370" endtime="20201030 18:27:50.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:50.377" level="INFO">${ACCURACY} = {'diff': [4.4360999999999706e-05, 4.9973000000001766e-05, 5.20279999999991e-05, 5.188899999999941e-05, 5.198600000000039e-05, 5.1901999999999504e-05, 5.095899999999973e-05, 5.198600000000039e-05, 5.18...</msg>
<status status="PASS" starttime="20201030 18:27:50.374" endtime="20201030 18:27:50.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.381" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:27:50.380" endtime="20201030 18:27:50.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.384" level="INFO">VALUE: [4.4360999999999706e-05, 4.9973000000001766e-05, 5.20279999999991e-05, 5.188899999999941e-05, 5.198600000000039e-05, 5.1901999999999504e-05, 5.095899999999973e-05, 5.198600000000039e-05, 5.187499999999984e-05, 4.998600000000186e-05, 5.104100000000167e-05, 5.0014000000001e-05, 5.188899999999941e-05, 4.91529999999997e-05, 5.195800000000125e-05, 5.094500000000016e-05, 5.008299999999938e-05, 4.998600000000186e-05, 5.199999999999996e-05, 4.9915999999997074e-05, 5.093100000000059e-05, 5.198699999999987e-05, 5.000000000000143e-05, 5.10409999999982e-05, 5.286100000000127e-05, 5.294500000000216e-05, 5.094500000000016e-05, 4.997199999999882e-05, 5.10279999999981e-05, 5.0915999999998074e-05, 5.008299999999938e-05, 5.28470000000017e-05, 5.000000000000143e-05, 5.102800000000157e-05, 4.9014e-05, 5.190300000000245e-05, 5.284699999999823e-05, 5.101399999999853e-05, 5.1915999999999074e-05, 5.281999999999856e-05, 5.007000000000275e-05, 5.1957999999997784e-05, 5.190299999999898e-05, 5.10409999999982e-05, 5.093100000000059e-05, 5.10279999999981e-05, 4.999999999999796e-05, 5.391700000000055e-05, 5.091700000000102e-05, 5.006999999999928e-05]</msg>
<status status="PASS" starttime="20201030 18:27:50.382" endtime="20201030 18:27:50.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.378" endtime="20201030 18:27:50.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.389" endtime="20201030 18:27:50.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.387" endtime="20201030 18:27:50.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.386" endtime="20201030 18:27:50.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.026" endtime="20201030 18:27:50.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.026" endtime="20201030 18:27:50.409"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.419" endtime="20201030 18:27:50.441"></status>
</kw>
<msg timestamp="20201030 18:27:50.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.418" endtime="20201030 18:27:50.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.443" endtime="20201030 18:27:50.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.445" endtime="20201030 18:27:50.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.415" endtime="20201030 18:27:50.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.413" endtime="20201030 18:27:50.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.454" endtime="20201030 18:27:50.740"></status>
</kw>
<msg timestamp="20201030 18:27:50.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025043486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.453" endtime="20201030 18:27:50.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024981083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025043486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.744" endtime="20201030 18:27:50.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.753" endtime="20201030 18:27:50.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.450" endtime="20201030 18:27:50.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.448" endtime="20201030 18:27:50.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.759" level="INFO">${RESULT} = [{'diff': 6.240299999999907e-05}, {'diff': 5.097199999999982e-05}, {'diff': 5.005599999999971e-05}, {'diff': 5.281899999999909e-05}, {'diff': 5.095899999999973e-05}, {'diff': 5.195900000000073e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:50.756" endtime="20201030 18:27:50.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:50.763" level="INFO">${ACCURACY} = {'diff': [6.240299999999907e-05, 5.097199999999982e-05, 5.005599999999971e-05, 5.281899999999909e-05, 5.095899999999973e-05, 5.195900000000073e-05, 5.099999999999896e-05, 5.093000000000111e-05, 5.1902...</msg>
<status status="PASS" starttime="20201030 18:27:50.760" endtime="20201030 18:27:50.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.768" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:27:50.767" endtime="20201030 18:27:50.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.770" level="INFO">VALUE: [6.240299999999907e-05, 5.097199999999982e-05, 5.005599999999971e-05, 5.281899999999909e-05, 5.095899999999973e-05, 5.195900000000073e-05, 5.099999999999896e-05, 5.093000000000111e-05, 5.190299999999898e-05, 5.291699999999955e-05, 5.284699999999823e-05, 5.191700000000202e-05, 5.002800000000057e-05, 4.9987000000001336e-05, 5.194499999999769e-05, 5.290299999999998e-05, 5.095800000000025e-05, 5.290299999999998e-05, 5.1929999999998644e-05, 5.187499999999984e-05, 5.095800000000025e-05, 5.283300000000213e-05, 5.199999999999996e-05, 4.900000000000043e-05, 5.09729999999993e-05, 5.005599999999971e-05, 5.094400000000068e-05, 5.186100000000027e-05, 5.097199999999982e-05, 5.00279999999971e-05, 5.186100000000027e-05, 5.288900000000041e-05, 5.097199999999982e-05, 4.998599999999839e-05, 5.194500000000116e-05, 5.282000000000203e-05, 5.001299999999806e-05, 4.900000000000043e-05, 5.004200000000014e-05, 5.186100000000027e-05, 5.091699999999755e-05, 5.194499999999769e-05, 5.290299999999998e-05, 5.091700000000102e-05, 5.004200000000014e-05, 5.191700000000202e-05, 5.286100000000127e-05, 5.09729999999993e-05, 5.002800000000057e-05, 5.287500000000084e-05]</msg>
<status status="PASS" starttime="20201030 18:27:50.769" endtime="20201030 18:27:50.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.764" endtime="20201030 18:27:50.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.776" endtime="20201030 18:27:50.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.775" endtime="20201030 18:27:50.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.773" endtime="20201030 18:27:50.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.411" endtime="20201030 18:27:50.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.410" endtime="20201030 18:27:50.797"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.805" endtime="20201030 18:27:50.828"></status>
</kw>
<msg timestamp="20201030 18:27:50.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.804" endtime="20201030 18:27:50.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.829" endtime="20201030 18:27:50.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.832" endtime="20201030 18:27:50.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.801" endtime="20201030 18:27:50.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.799" endtime="20201030 18:27:50.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.841" endtime="20201030 18:27:51.127"></status>
</kw>
<msg timestamp="20201030 18:27:51.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.839" endtime="20201030 18:27:51.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024301569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024347819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.132" endtime="20201030 18:27:51.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.140" endtime="20201030 18:27:51.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.837" endtime="20201030 18:27:51.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.835" endtime="20201030 18:27:51.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.147" level="INFO">${RESULT} = [{'diff': 4.625000000000115e-05}, {'diff': 5.281999999999856e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.290299999999998e-05}, {'diff': 4.998599999999839e-05}, {'diff': 5.008299999999938e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:51.144" endtime="20201030 18:27:51.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:51.152" level="INFO">${ACCURACY} = {'diff': [4.625000000000115e-05, 5.281999999999856e-05, 5.094500000000016e-05, 5.290299999999998e-05, 4.998599999999839e-05, 5.008299999999938e-05, 5.008300000000285e-05, 5.09729999999993e-05, 5.29160...</msg>
<status status="PASS" starttime="20201030 18:27:51.148" endtime="20201030 18:27:51.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.157" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:27:51.156" endtime="20201030 18:27:51.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.159" level="INFO">VALUE: [4.625000000000115e-05, 5.281999999999856e-05, 5.094500000000016e-05, 5.290299999999998e-05, 4.998599999999839e-05, 5.008299999999938e-05, 5.008300000000285e-05, 5.09729999999993e-05, 5.2916000000000074e-05, 5.188899999999941e-05, 5.10279999999981e-05, 5.006999999999928e-05, 5.091700000000102e-05, 5.287500000000084e-05, 5.20279999999991e-05, 5.188899999999941e-05, 5.288900000000041e-05, 5.199999999999996e-05, 4.994399999999968e-05, 5.105600000000071e-05, 5.095899999999973e-05, 5.291699999999955e-05, 5.194500000000116e-05, 5.004200000000014e-05, 5.005500000000024e-05, 5.288900000000041e-05, 5.195899999999726e-05, 5.286100000000127e-05, 5.195900000000073e-05, 5.286100000000127e-05, 5.097199999999982e-05, 5.101399999999853e-05, 5.287500000000084e-05, 5.09729999999993e-05, 5.109699999999995e-05, 5.097199999999982e-05, 5.097199999999982e-05, 5.101399999999853e-05, 5.286100000000127e-05, 5.004200000000014e-05, 5.283399999999813e-05, 5.095899999999973e-05, 5.097199999999982e-05, 5.107000000000028e-05, 5.002800000000057e-05, 5.101399999999853e-05, 5.195800000000125e-05, 5.198600000000039e-05, 4.998600000000186e-05, 5.093100000000059e-05]</msg>
<status status="PASS" starttime="20201030 18:27:51.158" endtime="20201030 18:27:51.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.153" endtime="20201030 18:27:51.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.165" endtime="20201030 18:27:51.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.163" endtime="20201030 18:27:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.162" endtime="20201030 18:27:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.798" endtime="20201030 18:27:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.797" endtime="20201030 18:27:51.185"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.194" endtime="20201030 18:27:51.215"></status>
</kw>
<msg timestamp="20201030 18:27:51.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.193" endtime="20201030 18:27:51.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.216" endtime="20201030 18:27:51.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.219" endtime="20201030 18:27:51.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.190" endtime="20201030 18:27:51.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.188" endtime="20201030 18:27:51.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.230" endtime="20201030 18:27:51.518"></status>
</kw>
<msg timestamp="20201030 18:27:51.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.227" endtime="20201030 18:27:51.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022607792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.522" endtime="20201030 18:27:51.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.531" endtime="20201030 18:27:51.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.224" endtime="20201030 18:27:51.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.222" endtime="20201030 18:27:51.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.537" level="INFO">${RESULT} = [{'diff': 3.76659999999987e-05}, {'diff': 5.10279999999981e-05}, {'diff': 4.998599999999839e-05}, {'diff': 4.995799999999925e-05}, {'diff': 5.199999999999996e-05}, {'diff': 5.094400000000068e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:51.534" endtime="20201030 18:27:51.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:51.542" level="INFO">${ACCURACY} = {'diff': [3.76659999999987e-05, 5.10279999999981e-05, 4.998599999999839e-05, 4.995799999999925e-05, 5.199999999999996e-05, 5.094400000000068e-05, 5.191699999999855e-05, 5.008299999999938e-05, 5.190199...</msg>
<status status="PASS" starttime="20201030 18:27:51.538" endtime="20201030 18:27:51.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.546" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:27:51.545" endtime="20201030 18:27:51.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.549" level="INFO">VALUE: [3.76659999999987e-05, 5.10279999999981e-05, 4.998599999999839e-05, 4.995799999999925e-05, 5.199999999999996e-05, 5.094400000000068e-05, 5.191699999999855e-05, 5.008299999999938e-05, 5.1901999999999504e-05, 5.1014000000002e-05, 5.093100000000059e-05, 5.188899999999941e-05, 5.009799999999842e-05, 5.283299999999866e-05, 5.188899999999941e-05, 5.2014000000003e-05, 5.094400000000068e-05, 5.102800000000157e-05, 5.287500000000084e-05, 5.205599999999824e-05, 4.998600000000186e-05, 5.199999999999996e-05, 5.286100000000127e-05, 5.102800000000157e-05, 5.0957999999996784e-05, 5.19730000000003e-05, 5.091700000000102e-05, 5.199999999999996e-05, 5.281899999999909e-05, 5.201300000000006e-05, 5.186100000000027e-05, 5.198600000000039e-05, 4.998599999999839e-05, 4.9986999999997866e-05, 5.198600000000039e-05, 5.1901999999999504e-05, 5.199999999999996e-05, 5.095899999999973e-05, 5.2957999999998784e-05, 4.998600000000186e-05, 5.2985999999997924e-05, 5.087499999999884e-05, 5.187499999999984e-05, 5.201399999999953e-05, 5.286200000000074e-05, 4.9972999999998297e-05, 5.208400000000085e-05, 5.093100000000059e-05, 5.18470000000007e-05, 5.2943999999999214e-05]</msg>
<status status="PASS" starttime="20201030 18:27:51.547" endtime="20201030 18:27:51.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.543" endtime="20201030 18:27:51.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.554" endtime="20201030 18:27:51.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.552" endtime="20201030 18:27:51.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.551" endtime="20201030 18:27:51.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.186" endtime="20201030 18:27:51.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.186" endtime="20201030 18:27:51.575"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.584" endtime="20201030 18:27:51.611"></status>
</kw>
<msg timestamp="20201030 18:27:51.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.582" endtime="20201030 18:27:51.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.612" endtime="20201030 18:27:51.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.615" endtime="20201030 18:27:51.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.580" endtime="20201030 18:27:51.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.577" endtime="20201030 18:27:51.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.624" endtime="20201030 18:27:51.912"></status>
</kw>
<msg timestamp="20201030 18:27:51.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025040708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.623" endtime="20201030 18:27:51.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025040708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025093639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.916" endtime="20201030 18:27:51.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.925" endtime="20201030 18:27:51.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.620" endtime="20201030 18:27:51.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.618" endtime="20201030 18:27:51.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.931" level="INFO">${RESULT} = [{'diff': 5.293100000000259e-05}, {'diff': 5.1014000000002e-05}, {'diff': 5.186100000000027e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.015200000000122e-05}, {'diff': 5.291699999999955e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:51.928" endtime="20201030 18:27:51.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:51.936" level="INFO">${ACCURACY} = {'diff': [5.293100000000259e-05, 5.1014000000002e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.015200000000122e-05, 5.291699999999955e-05, 5.1957999999997784e-05, 5.1915999999999074e-05, 5.1013...</msg>
<status status="PASS" starttime="20201030 18:27:51.932" endtime="20201030 18:27:51.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.940" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:27:51.939" endtime="20201030 18:27:51.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.943" level="INFO">VALUE: [5.293100000000259e-05, 5.1014000000002e-05, 5.186100000000027e-05, 5.187499999999984e-05, 5.015200000000122e-05, 5.291699999999955e-05, 5.1957999999997784e-05, 5.1915999999999074e-05, 5.101399999999853e-05, 5.095800000000025e-05, 5.287500000000084e-05, 5.1971999999997354e-05, 5.098599999999939e-05, 4.995899999999873e-05, 5.19730000000003e-05, 5.008299999999938e-05, 5.10279999999981e-05, 4.998599999999839e-05, 5.1957999999997784e-05, 5.093000000000111e-05, 5.187499999999984e-05, 5.093000000000111e-05, 5.28470000000017e-05, 5.1014000000002e-05, 5.2902000000000504e-05, 5.104200000000114e-05, 5.18609999999968e-05, 4.997199999999882e-05, 5.2929999999999644e-05, 5.190299999999898e-05, 4.990300000000045e-05, 5.007000000000275e-05, 5.095800000000025e-05, 5.287499999999737e-05, 5.197200000000082e-05, 5.093100000000059e-05, 5.187499999999984e-05, 5.198600000000039e-05, 5.188899999999941e-05, 5.294500000000216e-05, 5.188899999999941e-05, 5.28609999999978e-05, 4.995799999999925e-05, 5.294499999999869e-05, 5.101299999999906e-05, 5.095800000000025e-05, 5.1957999999997784e-05, 5.191700000000202e-05, 5.281899999999909e-05, 5.29730000000013e-05]</msg>
<status status="PASS" starttime="20201030 18:27:51.941" endtime="20201030 18:27:51.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.937" endtime="20201030 18:27:51.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.949" endtime="20201030 18:27:51.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.947" endtime="20201030 18:27:51.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.946" endtime="20201030 18:27:51.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.576" endtime="20201030 18:27:51.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.575" endtime="20201030 18:27:51.970"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.979" endtime="20201030 18:27:51.999"></status>
</kw>
<msg timestamp="20201030 18:27:52.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.977" endtime="20201030 18:27:52.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.001" endtime="20201030 18:27:52.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.004" endtime="20201030 18:27:52.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.975" endtime="20201030 18:27:52.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.972" endtime="20201030 18:27:52.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.013" endtime="20201030 18:27:52.299"></status>
</kw>
<msg timestamp="20201030 18:27:52.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.011" endtime="20201030 18:27:52.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.304" endtime="20201030 18:27:52.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.312" endtime="20201030 18:27:52.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.009" endtime="20201030 18:27:52.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.007" endtime="20201030 18:27:52.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.319" level="INFO">${RESULT} = [{'diff': 6.620899999999763e-05}, {'diff': 5.198600000000039e-05}, {'diff': 5.097200000000329e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.197200000000082e-05}, {'diff': 5.191699999999855e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:52.316" endtime="20201030 18:27:52.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:52.325" level="INFO">${ACCURACY} = {'diff': [6.620899999999763e-05, 5.198600000000039e-05, 5.097200000000329e-05, 5.187499999999984e-05, 5.197200000000082e-05, 5.191699999999855e-05, 5.094500000000016e-05, 5.093000000000111e-05, 5.2971...</msg>
<status status="PASS" starttime="20201030 18:27:52.320" endtime="20201030 18:27:52.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.329" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:27:52.328" endtime="20201030 18:27:52.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.332" level="INFO">VALUE: [6.620899999999763e-05, 5.198600000000039e-05, 5.097200000000329e-05, 5.187499999999984e-05, 5.197200000000082e-05, 5.191699999999855e-05, 5.094500000000016e-05, 5.093000000000111e-05, 5.2971999999998354e-05, 5.099999999999896e-05, 4.998599999999839e-05, 5.095800000000025e-05, 5.1957999999997784e-05, 5.1929999999998644e-05, 5.1915999999999074e-05, 5.287500000000084e-05, 5.104200000000114e-05, 4.998600000000186e-05, 4.998600000000186e-05, 5.283399999999813e-05, 5.1971999999997354e-05, 5.281999999999856e-05, 5.286100000000127e-05, 4.997200000000229e-05, 5.28479999999977e-05, 5.199999999999996e-05, 5.195900000000073e-05, 4.999999999999796e-05, 5.187499999999984e-05, 5.097199999999982e-05, 5.095800000000025e-05, 5.190299999999898e-05, 5.006899999999981e-05, 5.187499999999984e-05, 5.1915999999999074e-05, 5.195800000000125e-05, 5.193000000000211e-05, 5.09729999999993e-05, 5.0943999999997214e-05, 5.198600000000039e-05, 5.198600000000039e-05, 4.999999999999796e-05, 5.098600000000286e-05, 5.105499999999777e-05, 5.0943999999997214e-05, 5.284800000000117e-05, 4.997200000000229e-05, 5.095800000000025e-05, 5.199999999999996e-05, 5.2887999999997465e-05]</msg>
<status status="PASS" starttime="20201030 18:27:52.330" endtime="20201030 18:27:52.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.325" endtime="20201030 18:27:52.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.337" endtime="20201030 18:27:52.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.335" endtime="20201030 18:27:52.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.334" endtime="20201030 18:27:52.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.971" endtime="20201030 18:27:52.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.970" endtime="20201030 18:27:52.358"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.367" endtime="20201030 18:27:52.386"></status>
</kw>
<msg timestamp="20201030 18:27:52.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.365" endtime="20201030 18:27:52.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.387" endtime="20201030 18:27:52.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.390" endtime="20201030 18:27:52.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.363" endtime="20201030 18:27:52.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.360" endtime="20201030 18:27:52.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.400" endtime="20201030 18:27:52.688"></status>
</kw>
<msg timestamp="20201030 18:27:52.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020803736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.398" endtime="20201030 18:27:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020758528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020803736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.692" endtime="20201030 18:27:52.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.700" endtime="20201030 18:27:52.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.395" endtime="20201030 18:27:52.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.393" endtime="20201030 18:27:52.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.706" level="INFO">${RESULT} = [{'diff': 4.520800000000144e-05}, {'diff': 5.105600000000071e-05}, {'diff': 5.094400000000068e-05}, {'diff': 5.188899999999941e-05}, {'diff': 4.997199999999882e-05}, {'diff': 5.008300000000285e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:52.703" endtime="20201030 18:27:52.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:52.710" level="INFO">${ACCURACY} = {'diff': [4.520800000000144e-05, 5.105600000000071e-05, 5.094400000000068e-05, 5.188899999999941e-05, 4.997199999999882e-05, 5.008300000000285e-05, 5.001399999999753e-05, 5.093000000000111e-05, 5.1986...</msg>
<status status="PASS" starttime="20201030 18:27:52.707" endtime="20201030 18:27:52.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.715" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:27:52.714" endtime="20201030 18:27:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.717" level="INFO">VALUE: [4.520800000000144e-05, 5.105600000000071e-05, 5.094400000000068e-05, 5.188899999999941e-05, 4.997199999999882e-05, 5.008300000000285e-05, 5.001399999999753e-05, 5.093000000000111e-05, 5.198600000000039e-05, 5.193000000000211e-05, 5.188899999999941e-05, 5.28470000000017e-05, 5.284699999999823e-05, 5.199999999999996e-05, 5.190299999999898e-05, 5.091699999999755e-05, 5.294499999999869e-05, 5.188899999999941e-05, 5.087499999999884e-05, 5.002800000000057e-05, 5.094400000000068e-05, 5.28609999999978e-05, 5.204200000000214e-05, 5.000000000000143e-05, 5.097199999999982e-05, 5.090299999999798e-05, 4.999999999999796e-05, 5.190299999999898e-05, 5.095800000000025e-05, 5.188899999999941e-05, 5.108399999999985e-05, 5.093100000000059e-05, 5.188899999999941e-05, 5.094400000000068e-05, 5.093100000000059e-05, 5.2957999999998784e-05, 5.288900000000041e-05, 5.187500000000331e-05, 5.301400000000053e-05, 5.190299999999898e-05, 5.286100000000127e-05, 5.284699999999823e-05, 5.001300000000153e-05, 5.297200000000182e-05, 5.190299999999898e-05, 5.187499999999984e-05, 5.287500000000084e-05, 5.009699999999895e-05, 5.087500000000231e-05, 5.093100000000059e-05]</msg>
<status status="PASS" starttime="20201030 18:27:52.716" endtime="20201030 18:27:52.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.711" endtime="20201030 18:27:52.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.726" endtime="20201030 18:27:52.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.724" endtime="20201030 18:27:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.723" endtime="20201030 18:27:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.359" endtime="20201030 18:27:52.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.358" endtime="20201030 18:27:52.746"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.755" endtime="20201030 18:27:52.778"></status>
</kw>
<msg timestamp="20201030 18:27:52.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.754" endtime="20201030 18:27:52.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.779" endtime="20201030 18:27:52.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.782" endtime="20201030 18:27:52.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.751" endtime="20201030 18:27:52.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.749" endtime="20201030 18:27:52.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.790" endtime="20201030 18:27:53.076"></status>
</kw>
<msg timestamp="20201030 18:27:53.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023936194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023983403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.789" endtime="20201030 18:27:53.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023936194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023983403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.080" endtime="20201030 18:27:53.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.088" endtime="20201030 18:27:53.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.786" endtime="20201030 18:27:53.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.785" endtime="20201030 18:27:53.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.095" level="INFO">${RESULT} = [{'diff': 4.7208999999999446e-05}, {'diff': 5.28609999999978e-05}, {'diff': 5.104100000000167e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.091700000000102e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:53.091" endtime="20201030 18:27:53.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:53.099" level="INFO">${ACCURACY} = {'diff': [4.7208999999999446e-05, 5.28609999999978e-05, 5.104100000000167e-05, 5.287500000000084e-05, 5.188899999999941e-05, 5.091700000000102e-05, 5.295800000000225e-05, 5.000000000000143e-05, 5.2861...</msg>
<status status="PASS" starttime="20201030 18:27:53.096" endtime="20201030 18:27:53.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.105" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:27:53.103" endtime="20201030 18:27:53.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.116" level="INFO">VALUE: [4.7208999999999446e-05, 5.28609999999978e-05, 5.104100000000167e-05, 5.287500000000084e-05, 5.188899999999941e-05, 5.091700000000102e-05, 5.295800000000225e-05, 5.000000000000143e-05, 5.286100000000127e-05, 5.283300000000213e-05, 5.198600000000039e-05, 5.093100000000059e-05, 5.095899999999973e-05, 5.011100000000199e-05, 5.280600000000246e-05, 5.193099999999812e-05, 5.284800000000117e-05, 5.005500000000024e-05, 5.188899999999941e-05, 5.0929999999997644e-05, 5.094400000000068e-05, 5.093000000000111e-05, 5.1915999999999074e-05, 5.098599999999939e-05, 5.094400000000068e-05, 5.10409999999982e-05, 5.095899999999973e-05, 5.0901999999998504e-05, 5.093000000000111e-05, 5.095899999999973e-05, 5.201399999999953e-05, 5.382000000000303e-05, 5.199999999999996e-05, 5.287500000000084e-05, 5.1901999999999504e-05, 5.093100000000059e-05, 5.2929999999999644e-05, 4.995800000000272e-05, 5.095800000000025e-05, 5.201399999999953e-05, 5.094400000000068e-05, 5.198699999999987e-05, 5.284699999999823e-05, 5.094400000000068e-05, 5.187499999999984e-05, 5.001399999999753e-05, 5.105500000000124e-05, 5.095899999999973e-05, 5.28470000000017e-05, 5.097199999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:27:53.107" endtime="20201030 18:27:53.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.099" endtime="20201030 18:27:53.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.126" endtime="20201030 18:27:53.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.123" endtime="20201030 18:27:53.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.121" endtime="20201030 18:27:53.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.747" endtime="20201030 18:27:53.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.747" endtime="20201030 18:27:53.151"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.168" endtime="20201030 18:27:53.190"></status>
</kw>
<msg timestamp="20201030 18:27:53.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.165" endtime="20201030 18:27:53.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.193" endtime="20201030 18:27:53.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.199" endtime="20201030 18:27:53.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.160" endtime="20201030 18:27:53.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.156" endtime="20201030 18:27:53.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.210" endtime="20201030 18:27:53.493"></status>
</kw>
<msg timestamp="20201030 18:27:53.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034593556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034638764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.208" endtime="20201030 18:27:53.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034593556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034638764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.497" endtime="20201030 18:27:53.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.506" endtime="20201030 18:27:53.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.206" endtime="20201030 18:27:53.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.204" endtime="20201030 18:27:53.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.512" level="INFO">${RESULT} = [{'diff': 4.520800000000491e-05}, {'diff': 5.091699999999755e-05}, {'diff': 5.100000000000243e-05}, {'diff': 5.281900000000256e-05}, {'diff': 5.0915999999998074e-05}, {'diff': 5.197200000000429e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:53.509" endtime="20201030 18:27:53.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:53.517" level="INFO">${ACCURACY} = {'diff': [4.520800000000491e-05, 5.091699999999755e-05, 5.100000000000243e-05, 5.281900000000256e-05, 5.0915999999998074e-05, 5.197200000000429e-05, 5.187499999999984e-05, 5.28340000000016e-05, 5.1110...</msg>
<status status="PASS" starttime="20201030 18:27:53.513" endtime="20201030 18:27:53.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.522" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:27:53.521" endtime="20201030 18:27:53.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.524" level="INFO">VALUE: [4.520800000000491e-05, 5.091699999999755e-05, 5.100000000000243e-05, 5.281900000000256e-05, 5.0915999999998074e-05, 5.197200000000429e-05, 5.187499999999984e-05, 5.28340000000016e-05, 5.111099999999952e-05, 5.094499999999669e-05, 5.005599999999971e-05, 5.287500000000084e-05, 5.28470000000017e-05, 5.295899999999826e-05, 4.9987000000001336e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.286200000000074e-05, 5.000000000000143e-05, 5.28470000000017e-05, 5.293099999999912e-05, 5.093000000000458e-05, 5.094499999999669e-05, 5.106900000000081e-05, 5.286099999999433e-05, 5.091699999999755e-05, 5.190299999999898e-05, 4.997200000000229e-05, 5.188899999999941e-05, 5.2957999999998784e-05, 5.190299999999898e-05, 5.286100000000127e-05, 5.1943999999998214e-05, 5.009700000000589e-05, 5.0959000000003196e-05, 4.997299999999483e-05, 4.998600000000186e-05, 5.0929999999997644e-05, 5.3013999999997063e-05, 5.093000000000458e-05, 5.293099999999912e-05, 5.187499999999984e-05, 5.2901999999993565e-05, 5.095800000000372e-05, 5.0929999999997644e-05, 5.297299999999783e-05, 5.183300000000113e-05, 5.0957999999996784e-05, 5.2957999999998784e-05, 5.283300000000213e-05]</msg>
<status status="PASS" starttime="20201030 18:27:53.523" endtime="20201030 18:27:53.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.518" endtime="20201030 18:27:53.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.529" endtime="20201030 18:27:53.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.528" endtime="20201030 18:27:53.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.526" endtime="20201030 18:27:53.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.153" endtime="20201030 18:27:53.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.151" endtime="20201030 18:27:53.550"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.558" endtime="20201030 18:27:53.581"></status>
</kw>
<msg timestamp="20201030 18:27:53.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.557" endtime="20201030 18:27:53.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.582" endtime="20201030 18:27:53.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.585" endtime="20201030 18:27:53.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.554" endtime="20201030 18:27:53.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.552" endtime="20201030 18:27:53.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.594" endtime="20201030 18:27:53.880"></status>
</kw>
<msg timestamp="20201030 18:27:53.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024550361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024603264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.592" endtime="20201030 18:27:53.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024550361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024603264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.885" endtime="20201030 18:27:53.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.893" endtime="20201030 18:27:53.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.589" endtime="20201030 18:27:53.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.588" endtime="20201030 18:27:53.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.899" level="INFO">${RESULT} = [{'diff': 5.290299999999998e-05}, {'diff': 5.009699999999895e-05}, {'diff': 5.190299999999898e-05}, {'diff': 5.097199999999982e-05}, {'diff': 5.08469999999997e-05}, {'diff': 5.188899999999941e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:53.896" endtime="20201030 18:27:53.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:53.903" level="INFO">${ACCURACY} = {'diff': [5.290299999999998e-05, 5.009699999999895e-05, 5.190299999999898e-05, 5.097199999999982e-05, 5.08469999999997e-05, 5.188899999999941e-05, 5.095899999999973e-05, 5.1929999999998644e-05, 5.2875...</msg>
<status status="PASS" starttime="20201030 18:27:53.900" endtime="20201030 18:27:53.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.908" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:27:53.907" endtime="20201030 18:27:53.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.910" level="INFO">VALUE: [5.290299999999998e-05, 5.009699999999895e-05, 5.190299999999898e-05, 5.097199999999982e-05, 5.08469999999997e-05, 5.188899999999941e-05, 5.095899999999973e-05, 5.1929999999998644e-05, 5.287500000000084e-05, 5.008300000000285e-05, 5.100000000000243e-05, 5.101399999999853e-05, 5.193099999999812e-05, 4.997199999999882e-05, 5.188899999999941e-05, 5.283399999999813e-05, 4.995799999999925e-05, 5.287499999999737e-05, 5.193099999999812e-05, 5.284800000000117e-05, 5.187499999999984e-05, 5.190299999999898e-05, 5.2929999999999644e-05, 5.097199999999982e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.1014000000002e-05, 5.002800000000057e-05, 5.191700000000202e-05, 4.993099999999959e-05, 5.2943999999999214e-05, 5.1957999999997784e-05, 5.28470000000017e-05, 5.1915999999999074e-05, 4.9972999999998297e-05, 5.098599999999939e-05, 5.283299999999866e-05, 5.19730000000003e-05, 5.095800000000025e-05, 5.286100000000127e-05, 4.995799999999925e-05, 5.005500000000024e-05, 5.290299999999998e-05, 5.009700000000242e-05, 5.005500000000024e-05, 5.0014000000001e-05, 5.098599999999939e-05, 5.281900000000256e-05, 5.28470000000017e-05, 5.101399999999853e-05]</msg>
<status status="PASS" starttime="20201030 18:27:53.909" endtime="20201030 18:27:53.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.904" endtime="20201030 18:27:53.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.915" endtime="20201030 18:27:53.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.914" endtime="20201030 18:27:53.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.913" endtime="20201030 18:27:53.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.551" endtime="20201030 18:27:53.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.550" endtime="20201030 18:27:53.936"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.945" endtime="20201030 18:27:53.970"></status>
</kw>
<msg timestamp="20201030 18:27:53.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.943" endtime="20201030 18:27:53.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.971" endtime="20201030 18:27:53.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.974" endtime="20201030 18:27:53.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.940" endtime="20201030 18:27:53.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.938" endtime="20201030 18:27:53.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.983" endtime="20201030 18:27:54.269"></status>
</kw>
<msg timestamp="20201030 18:27:54.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025055278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.981" endtime="20201030 18:27:54.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025055278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025098611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.273" endtime="20201030 18:27:54.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.282" endtime="20201030 18:27:54.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.979" endtime="20201030 18:27:54.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.977" endtime="20201030 18:27:54.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.288" level="INFO">${RESULT} = [{'diff': 4.3332999999999566e-05}, {'diff': 5.004200000000014e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.198699999999987e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.287500000000084e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:54.285" endtime="20201030 18:27:54.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:54.292" level="INFO">${ACCURACY} = {'diff': [4.3332999999999566e-05, 5.004200000000014e-05, 5.291699999999955e-05, 5.198699999999987e-05, 5.099999999999896e-05, 5.287500000000084e-05, 5.006899999999981e-05, 5.001300000000153e-05, 5.290...</msg>
<status status="PASS" starttime="20201030 18:27:54.289" endtime="20201030 18:27:54.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.297" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:27:54.296" endtime="20201030 18:27:54.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.299" level="INFO">VALUE: [4.3332999999999566e-05, 5.004200000000014e-05, 5.291699999999955e-05, 5.198699999999987e-05, 5.099999999999896e-05, 5.287500000000084e-05, 5.006899999999981e-05, 5.001300000000153e-05, 5.290299999999998e-05, 5.088899999999841e-05, 5.1916000000002543e-05, 5.00409999999972e-05, 5.290299999999998e-05, 5.095800000000025e-05, 4.904199999999914e-05, 5.194500000000116e-05, 5.0986999999998867e-05, 5.1943999999998214e-05, 5.0901999999998504e-05, 5.093100000000059e-05, 5.190299999999898e-05, 5.1916000000002543e-05, 5.281899999999909e-05, 5.195900000000073e-05, 5.097199999999982e-05, 5.197200000000082e-05, 5.291699999999955e-05, 5.198600000000039e-05, 5.002800000000057e-05, 5.09729999999993e-05, 5.1916000000002543e-05, 5.1943999999998214e-05, 5.10279999999981e-05, 5.090300000000145e-05, 4.995899999999873e-05, 5.0014000000001e-05, 5.298600000000139e-05, 5.094500000000016e-05, 5.100000000000243e-05, 5.097199999999982e-05, 5.099999999999896e-05, 5.201399999999953e-05, 5.191699999999855e-05, 5.098599999999939e-05, 5.198600000000039e-05, 5.0014000000001e-05, 5.2901999999997035e-05, 5.191700000000202e-05, 5.197200000000082e-05, 5.104100000000167e-05]</msg>
<status status="PASS" starttime="20201030 18:27:54.298" endtime="20201030 18:27:54.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.293" endtime="20201030 18:27:54.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.305" endtime="20201030 18:27:54.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.303" endtime="20201030 18:27:54.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.302" endtime="20201030 18:27:54.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.937" endtime="20201030 18:27:54.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.936" endtime="20201030 18:27:54.326"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.334" endtime="20201030 18:27:54.356"></status>
</kw>
<msg timestamp="20201030 18:27:54.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.333" endtime="20201030 18:27:54.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.357" endtime="20201030 18:27:54.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.360" endtime="20201030 18:27:54.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.330" endtime="20201030 18:27:54.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.328" endtime="20201030 18:27:54.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.369" endtime="20201030 18:27:54.662"></status>
</kw>
<msg timestamp="20201030 18:27:54.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.367" endtime="20201030 18:27:54.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022368625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.672" endtime="20201030 18:27:54.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.691" endtime="20201030 18:27:54.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.365" endtime="20201030 18:27:54.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.363" endtime="20201030 18:27:54.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.705" level="INFO">${RESULT} = [{'diff': 8.148599999999867e-05}, {'diff': 8.34720000000011e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.340299999999926e-05}, {'diff': 8.151299999999834e-05}, {'diff': 8.155599999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:54.698" endtime="20201030 18:27:54.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:54.716" level="INFO">${ACCURACY} = {'diff': [8.148599999999867e-05, 8.34720000000011e-05, 8.152800000000085e-05, 8.340299999999926e-05, 8.151299999999834e-05, 8.155599999999999e-05, 8.251399999999881e-05, 8.338899999999969e-05, 8.05420...</msg>
<status status="PASS" starttime="20201030 18:27:54.707" endtime="20201030 18:27:54.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.724" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:27:54.723" endtime="20201030 18:27:54.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.727" level="INFO">VALUE: [8.148599999999867e-05, 8.34720000000011e-05, 8.152800000000085e-05, 8.340299999999926e-05, 8.151299999999834e-05, 8.155599999999999e-05, 8.251399999999881e-05, 8.338899999999969e-05, 8.054200000000289e-05, 8.159699999999923e-05, 8.248599999999967e-05, 8.061100000000126e-05, 8.151399999999781e-05, 8.16109999999988e-05, 7.970900000000072e-05, 8.152800000000085e-05, 8.054200000000289e-05, 8.159699999999923e-05, 8.150000000000171e-05, 8.237499999999912e-05, 8.352799999999938e-05, 8.341699999999883e-05, 8.14719999999991e-05, 8.24720000000001e-05, 8.338899999999969e-05, 7.969499999999768e-05, 8.341699999999883e-05, 8.245800000000053e-05, 8.162499999999837e-05, 8.054099999999995e-05, 8.34170000000023e-05, 8.255600000000099e-05, 8.24720000000001e-05, 8.350000000000024e-05, 8.054199999999942e-05, 8.06390000000004e-05, 8.154200000000042e-05, 8.350000000000024e-05, 8.06390000000004e-05, 8.348600000000067e-05, 8.054099999999995e-05, 8.251400000000228e-05, 8.244500000000043e-05, 8.058299999999866e-05, 8.248600000000314e-05, 8.06390000000004e-05, 8.149999999999824e-05, 8.158299999999966e-05, 8.247299999999957e-05, 8.248699999999914e-05]</msg>
<status status="PASS" starttime="20201030 18:27:54.725" endtime="20201030 18:27:54.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.718" endtime="20201030 18:27:54.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.732" endtime="20201030 18:27:54.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.730" endtime="20201030 18:27:54.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.729" endtime="20201030 18:27:54.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.326" endtime="20201030 18:27:54.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.326" endtime="20201030 18:27:54.752"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.761" endtime="20201030 18:27:54.783"></status>
</kw>
<msg timestamp="20201030 18:27:54.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.759" endtime="20201030 18:27:54.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.784" endtime="20201030 18:27:54.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.786" endtime="20201030 18:27:54.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.757" endtime="20201030 18:27:54.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.755" endtime="20201030 18:27:54.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.795" endtime="20201030 18:27:55.082"></status>
</kw>
<msg timestamp="20201030 18:27:55.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.794" endtime="20201030 18:27:55.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.086" endtime="20201030 18:27:55.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.095" endtime="20201030 18:27:55.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.791" endtime="20201030 18:27:55.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.790" endtime="20201030 18:27:55.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.101" level="INFO">${RESULT} = [{'diff': 7.391699999999973e-05}, {'diff': 8.052799999999985e-05}, {'diff': 8.061100000000126e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.24170000000013e-05}, {'diff': 8.341599999999935e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:55.098" endtime="20201030 18:27:55.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:55.105" level="INFO">${ACCURACY} = {'diff': [7.391699999999973e-05, 8.052799999999985e-05, 8.061100000000126e-05, 8.166700000000054e-05, 8.24170000000013e-05, 8.341599999999935e-05, 8.16109999999988e-05, 8.245800000000053e-05, 8.350000...</msg>
<status status="PASS" starttime="20201030 18:27:55.102" endtime="20201030 18:27:55.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.109" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:27:55.108" endtime="20201030 18:27:55.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.112" level="INFO">VALUE: [7.391699999999973e-05, 8.052799999999985e-05, 8.061100000000126e-05, 8.166700000000054e-05, 8.24170000000013e-05, 8.341599999999935e-05, 8.16109999999988e-05, 8.245800000000053e-05, 8.350000000000024e-05, 8.257000000000056e-05, 8.24720000000001e-05, 8.154200000000042e-05, 8.340299999999926e-05, 8.058300000000213e-05, 8.252799999999838e-05, 8.254200000000142e-05, 8.158299999999966e-05, 8.152700000000138e-05, 8.150000000000171e-05, 8.162499999999837e-05, 8.143099999999986e-05, 8.154099999999748e-05, 8.254200000000142e-05, 8.2459e-05, 8.248599999999967e-05, 8.070799999999878e-05, 8.344500000000143e-05, 8.05970000000017e-05, 8.154099999999748e-05, 8.05970000000017e-05, 8.348600000000067e-05, 8.05970000000017e-05, 8.344399999999849e-05, 8.152799999999738e-05, 8.152800000000085e-05, 8.055599999999899e-05, 8.259700000000023e-05, 8.251299999999934e-05, 8.254200000000142e-05, 8.059699999999823e-05, 8.261100000000327e-05, 8.149999999999824e-05, 8.24170000000013e-05, 8.06390000000004e-05, 8.34859999999972e-05, 8.341699999999883e-05, 8.068000000000311e-05, 8.337500000000012e-05, 8.341600000000282e-05, 8.248599999999967e-05]</msg>
<status status="PASS" starttime="20201030 18:27:55.110" endtime="20201030 18:27:55.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.106" endtime="20201030 18:27:55.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.117" endtime="20201030 18:27:55.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.115" endtime="20201030 18:27:55.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.114" endtime="20201030 18:27:55.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.753" endtime="20201030 18:27:55.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.753" endtime="20201030 18:27:55.137"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.146" endtime="20201030 18:27:55.170"></status>
</kw>
<msg timestamp="20201030 18:27:55.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.145" endtime="20201030 18:27:55.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.172" endtime="20201030 18:27:55.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.174" endtime="20201030 18:27:55.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.142" endtime="20201030 18:27:55.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.140" endtime="20201030 18:27:55.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.183" endtime="20201030 18:27:55.469"></status>
</kw>
<msg timestamp="20201030 18:27:55.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024442236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.182" endtime="20201030 18:27:55.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024357778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024442236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.474" endtime="20201030 18:27:55.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.482" endtime="20201030 18:27:55.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.179" endtime="20201030 18:27:55.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.178" endtime="20201030 18:27:55.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.488" level="INFO">${RESULT} = [{'diff': 8.445799999999906e-05}, {'diff': 8.054099999999995e-05}, {'diff': 8.052799999999985e-05}, {'diff': 8.061100000000126e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.062500000000083e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:55.485" endtime="20201030 18:27:55.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:55.492" level="INFO">${ACCURACY} = {'diff': [8.445799999999906e-05, 8.054099999999995e-05, 8.052799999999985e-05, 8.061100000000126e-05, 8.249999999999924e-05, 8.062500000000083e-05, 8.341599999999935e-05, 8.351399999999981e-05, 8.1555...</msg>
<status status="PASS" starttime="20201030 18:27:55.489" endtime="20201030 18:27:55.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.497" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:27:55.496" endtime="20201030 18:27:55.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.499" level="INFO">VALUE: [8.445799999999906e-05, 8.054099999999995e-05, 8.052799999999985e-05, 8.061100000000126e-05, 8.249999999999924e-05, 8.062500000000083e-05, 8.341599999999935e-05, 8.351399999999981e-05, 8.155599999999999e-05, 8.152800000000085e-05, 8.151399999999781e-05, 8.151399999999781e-05, 8.259700000000023e-05, 8.254200000000142e-05, 8.248699999999914e-05, 8.158299999999966e-05, 8.054199999999942e-05, 8.151400000000128e-05, 8.249999999999924e-05, 8.150000000000171e-05, 8.073599999999792e-05, 8.148600000000214e-05, 8.343000000000239e-05, 8.06390000000004e-05, 8.255599999999752e-05, 8.055599999999899e-05, 8.15130000000018e-05, 8.24720000000001e-05, 8.15970000000027e-05, 8.343100000000186e-05, 8.152800000000085e-05, 8.249999999999924e-05, 8.340299999999926e-05, 8.055599999999899e-05, 8.145799999999953e-05, 8.244400000000096e-05, 8.344399999999849e-05, 8.256900000000109e-05, 8.344499999999797e-05, 8.154100000000095e-05, 8.344399999999849e-05, 8.151400000000128e-05, 8.154200000000042e-05, 8.162500000000183e-05, 8.150000000000171e-05, 8.15269999999979e-05, 8.06390000000004e-05, 8.24720000000001e-05, 8.150000000000171e-05, 8.15130000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:27:55.498" endtime="20201030 18:27:55.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.493" endtime="20201030 18:27:55.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.505" endtime="20201030 18:27:55.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.504" endtime="20201030 18:27:55.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.502" endtime="20201030 18:27:55.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.138" endtime="20201030 18:27:55.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.138" endtime="20201030 18:27:55.526"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.534" endtime="20201030 18:27:55.556"></status>
</kw>
<msg timestamp="20201030 18:27:55.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.533" endtime="20201030 18:27:55.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.557" endtime="20201030 18:27:55.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.560" endtime="20201030 18:27:55.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.530" endtime="20201030 18:27:55.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.528" endtime="20201030 18:27:55.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.569" endtime="20201030 18:27:55.854"></status>
</kw>
<msg timestamp="20201030 18:27:55.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023045347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.567" endtime="20201030 18:27:55.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022973375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023045347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.858" endtime="20201030 18:27:55.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.866" endtime="20201030 18:27:55.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.565" endtime="20201030 18:27:55.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.563" endtime="20201030 18:27:55.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.873" level="INFO">${RESULT} = [{'diff': 7.197200000000001e-05}, {'diff': 8.159699999999923e-05}, {'diff': 8.245800000000053e-05}, {'diff': 8.34170000000023e-05}, {'diff': 8.068000000000311e-05}, {'diff': 8.245799999999706e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:55.870" endtime="20201030 18:27:55.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:55.878" level="INFO">${ACCURACY} = {'diff': [7.197200000000001e-05, 8.159699999999923e-05, 8.245800000000053e-05, 8.34170000000023e-05, 8.068000000000311e-05, 8.245799999999706e-05, 8.248599999999967e-05, 8.255600000000099e-05, 8.24580...</msg>
<status status="PASS" starttime="20201030 18:27:55.874" endtime="20201030 18:27:55.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.882" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:27:55.881" endtime="20201030 18:27:55.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.885" level="INFO">VALUE: [7.197200000000001e-05, 8.159699999999923e-05, 8.245800000000053e-05, 8.34170000000023e-05, 8.068000000000311e-05, 8.245799999999706e-05, 8.248599999999967e-05, 8.255600000000099e-05, 8.245800000000053e-05, 8.257000000000056e-05, 8.341599999999935e-05, 8.143000000000039e-05, 8.351399999999981e-05, 8.254199999999795e-05, 8.24720000000001e-05, 8.158299999999966e-05, 8.248599999999967e-05, 8.252799999999838e-05, 8.150000000000171e-05, 8.06109999999978e-05, 8.154200000000042e-05, 8.158299999999966e-05, 8.054099999999995e-05, 8.240200000000225e-05, 8.244400000000096e-05, 8.34720000000011e-05, 8.341599999999935e-05, 8.34859999999972e-05, 8.057000000000203e-05, 8.16390000000014e-05, 8.054099999999995e-05, 8.245800000000053e-05, 8.249999999999924e-05, 8.252700000000238e-05, 8.052800000000332e-05, 8.350000000000024e-05, 8.2459e-05, 8.054199999999942e-05, 8.165300000000097e-05, 8.34309999999984e-05, 8.252799999999838e-05, 8.254100000000195e-05, 8.151399999999781e-05, 8.344399999999849e-05, 8.151399999999781e-05, 8.162499999999837e-05, 8.141699999999683e-05, 8.336100000000055e-05, 8.342999999999892e-05, 7.965300000000244e-05]</msg>
<status status="PASS" starttime="20201030 18:27:55.883" endtime="20201030 18:27:55.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.879" endtime="20201030 18:27:55.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.890" endtime="20201030 18:27:55.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.888" endtime="20201030 18:27:55.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.887" endtime="20201030 18:27:55.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.527" endtime="20201030 18:27:55.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.526" endtime="20201030 18:27:55.910"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.919" endtime="20201030 18:27:55.939"></status>
</kw>
<msg timestamp="20201030 18:27:55.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.917" endtime="20201030 18:27:55.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.940" endtime="20201030 18:27:55.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.943" endtime="20201030 18:27:55.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.915" endtime="20201030 18:27:55.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.913" endtime="20201030 18:27:55.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.952" endtime="20201030 18:27:56.238"></status>
</kw>
<msg timestamp="20201030 18:27:56.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020307764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020397042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.950" endtime="20201030 18:27:56.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020307764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020397042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.243" endtime="20201030 18:27:56.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.251" endtime="20201030 18:27:56.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.948" endtime="20201030 18:27:56.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.946" endtime="20201030 18:27:56.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.257" level="INFO">${RESULT} = [{'diff': 8.927800000000166e-05}, {'diff': 8.344399999999849e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.067999999999964e-05}, {'diff': 8.254199999999795e-05}, {'diff': 8.244400000000096e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:56.254" endtime="20201030 18:27:56.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:56.261" level="INFO">${ACCURACY} = {'diff': [8.927800000000166e-05, 8.344399999999849e-05, 8.249999999999924e-05, 8.067999999999964e-05, 8.254199999999795e-05, 8.244400000000096e-05, 8.066600000000007e-05, 8.343100000000186e-05, 8.2472...</msg>
<status status="PASS" starttime="20201030 18:27:56.258" endtime="20201030 18:27:56.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.266" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:27:56.265" endtime="20201030 18:27:56.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.268" level="INFO">VALUE: [8.927800000000166e-05, 8.344399999999849e-05, 8.249999999999924e-05, 8.067999999999964e-05, 8.254199999999795e-05, 8.244400000000096e-05, 8.066600000000007e-05, 8.343100000000186e-05, 8.24720000000001e-05, 8.254199999999795e-05, 8.163800000000193e-05, 8.244500000000043e-05, 8.051400000000028e-05, 8.438900000000069e-05, 8.058300000000213e-05, 8.062500000000083e-05, 8.055599999999899e-05, 8.158299999999966e-05, 7.961100000000026e-05, 8.341699999999883e-05, 8.165199999999803e-05, 8.2459e-05, 8.259700000000023e-05, 8.254099999999848e-05, 8.34309999999984e-05, 8.245800000000053e-05, 8.149999999999824e-05, 8.249999999999924e-05, 8.151400000000128e-05, 8.149999999999824e-05, 8.256900000000109e-05, 8.2459e-05, 8.055599999999899e-05, 8.055499999999952e-05, 8.152799999999738e-05, 8.061199999999727e-05, 8.155500000000052e-05, 8.054200000000289e-05, 8.154100000000095e-05, 8.155500000000052e-05, 8.150000000000171e-05, 8.343100000000186e-05, 8.250000000000271e-05, 8.158299999999966e-05, 8.055600000000246e-05, 8.056900000000256e-05, 8.162499999999837e-05, 8.058299999999866e-05, 8.247299999999957e-05, 8.342999999999892e-05]</msg>
<status status="PASS" starttime="20201030 18:27:56.267" endtime="20201030 18:27:56.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.262" endtime="20201030 18:27:56.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.273" endtime="20201030 18:27:56.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.272" endtime="20201030 18:27:56.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.270" endtime="20201030 18:27:56.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.911" endtime="20201030 18:27:56.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.911" endtime="20201030 18:27:56.294"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.302" endtime="20201030 18:27:56.325"></status>
</kw>
<msg timestamp="20201030 18:27:56.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.301" endtime="20201030 18:27:56.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.327" endtime="20201030 18:27:56.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.329" endtime="20201030 18:27:56.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.298" endtime="20201030 18:27:56.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.296" endtime="20201030 18:27:56.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.338" endtime="20201030 18:27:56.623"></status>
</kw>
<msg timestamp="20201030 18:27:56.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023535917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.337" endtime="20201030 18:27:56.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023535917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.628" endtime="20201030 18:27:56.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.636" endtime="20201030 18:27:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.334" endtime="20201030 18:27:56.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.332" endtime="20201030 18:27:56.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.642" level="INFO">${RESULT} = [{'diff': 7.291599999999926e-05}, {'diff': 8.154200000000042e-05}, {'diff': 8.055599999999899e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.245800000000053e-05}, {'diff': 8.343100000000186e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:56.639" endtime="20201030 18:27:56.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:56.646" level="INFO">${ACCURACY} = {'diff': [7.291599999999926e-05, 8.154200000000042e-05, 8.055599999999899e-05, 8.152800000000085e-05, 8.245800000000053e-05, 8.343100000000186e-05, 8.233399999999988e-05, 8.158299999999966e-05, 8.3443...</msg>
<status status="PASS" starttime="20201030 18:27:56.643" endtime="20201030 18:27:56.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.651" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:27:56.650" endtime="20201030 18:27:56.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.656" level="INFO">VALUE: [7.291599999999926e-05, 8.154200000000042e-05, 8.055599999999899e-05, 8.152800000000085e-05, 8.245800000000053e-05, 8.343100000000186e-05, 8.233399999999988e-05, 8.158299999999966e-05, 8.344399999999849e-05, 8.248599999999967e-05, 8.159699999999923e-05, 8.055499999999952e-05, 8.055499999999952e-05, 8.148600000000214e-05, 8.244400000000096e-05, 8.340299999999926e-05, 8.152800000000085e-05, 8.151400000000128e-05, 8.340299999999926e-05, 8.149999999999824e-05, 8.051299999999734e-05, 8.155500000000052e-05, 8.24720000000001e-05, 8.151400000000128e-05, 8.150000000000171e-05, 8.152800000000085e-05, 8.24720000000001e-05, 8.154100000000095e-05, 8.062500000000083e-05, 8.152800000000085e-05, 8.148599999999867e-05, 8.341599999999935e-05, 8.340200000000325e-05, 8.256900000000109e-05, 8.350000000000024e-05, 8.341600000000282e-05, 8.24720000000001e-05, 8.2459e-05, 8.2459e-05, 7.955600000000146e-05, 8.052799999999985e-05, 8.2459e-05, 8.34170000000023e-05, 8.054099999999995e-05, 8.249999999999924e-05, 8.151400000000128e-05, 8.341599999999935e-05, 8.24720000000001e-05, 8.34309999999984e-05, 8.245800000000053e-05]</msg>
<status status="PASS" starttime="20201030 18:27:56.652" endtime="20201030 18:27:56.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.647" endtime="20201030 18:27:56.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.662" endtime="20201030 18:27:56.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.660" endtime="20201030 18:27:56.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.659" endtime="20201030 18:27:56.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.295" endtime="20201030 18:27:56.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.294" endtime="20201030 18:27:56.682"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.691" endtime="20201030 18:27:56.712"></status>
</kw>
<msg timestamp="20201030 18:27:56.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.689" endtime="20201030 18:27:56.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.714" endtime="20201030 18:27:56.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.716" endtime="20201030 18:27:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.687" endtime="20201030 18:27:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.685" endtime="20201030 18:27:56.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.725" endtime="20201030 18:27:57.012"></status>
</kw>
<msg timestamp="20201030 18:27:57.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.723" endtime="20201030 18:27:57.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021818556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.016" endtime="20201030 18:27:57.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.024" endtime="20201030 18:27:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.721" endtime="20201030 18:27:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.719" endtime="20201030 18:27:57.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.031" level="INFO">${RESULT} = [{'diff': 8.823600000000195e-05}, {'diff': 8.055499999999952e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.245799999999706e-05}, {'diff': 8.334700000000098e-05}, {'diff': 8.057000000000203e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:57.027" endtime="20201030 18:27:57.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.036" level="INFO">${ACCURACY} = {'diff': [8.823600000000195e-05, 8.055499999999952e-05, 8.248599999999967e-05, 8.245799999999706e-05, 8.334700000000098e-05, 8.057000000000203e-05, 8.152800000000085e-05, 8.345799999999806e-05, 8.1499...</msg>
<status status="PASS" starttime="20201030 18:27:57.032" endtime="20201030 18:27:57.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.040" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.039" endtime="20201030 18:27:57.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.043" level="INFO">VALUE: [8.823600000000195e-05, 8.055499999999952e-05, 8.248599999999967e-05, 8.245799999999706e-05, 8.334700000000098e-05, 8.057000000000203e-05, 8.152800000000085e-05, 8.345799999999806e-05, 8.149999999999824e-05, 8.24720000000001e-05, 8.255500000000152e-05, 8.05979999999977e-05, 8.145799999999953e-05, 8.247299999999957e-05, 8.05979999999977e-05, 8.055499999999952e-05, 8.249999999999924e-05, 8.34170000000023e-05, 8.248599999999967e-05, 7.966600000000254e-05, 8.245800000000053e-05, 8.06390000000004e-05, 8.34309999999984e-05, 8.137499999999812e-05, 8.067999999999964e-05, 8.150000000000171e-05, 8.152799999999738e-05, 8.245800000000053e-05, 8.056899999999909e-05, 8.2459e-05, 8.256899999999762e-05, 8.338899999999969e-05, 8.2459e-05, 8.342999999999892e-05, 8.152800000000085e-05, 8.341699999999883e-05, 8.248599999999967e-05, 8.34170000000023e-05, 8.054199999999942e-05, 8.248600000000314e-05, 8.352699999999991e-05, 8.24170000000013e-05, 8.24720000000001e-05, 8.148599999999867e-05, 8.051400000000028e-05, 8.258299999999719e-05, 8.152800000000085e-05, 8.248599999999967e-05, 8.34170000000023e-05, 8.055600000000246e-05]</msg>
<status status="PASS" starttime="20201030 18:27:57.041" endtime="20201030 18:27:57.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.037" endtime="20201030 18:27:57.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.047" endtime="20201030 18:27:57.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.046" endtime="20201030 18:27:57.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.045" endtime="20201030 18:27:57.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.683" endtime="20201030 18:27:57.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.683" endtime="20201030 18:27:57.068"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.077" endtime="20201030 18:27:57.102"></status>
</kw>
<msg timestamp="20201030 18:27:57.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.075" endtime="20201030 18:27:57.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.104" endtime="20201030 18:27:57.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.106" endtime="20201030 18:27:57.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.073" endtime="20201030 18:27:57.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.071" endtime="20201030 18:27:57.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.115" endtime="20201030 18:27:57.403"></status>
</kw>
<msg timestamp="20201030 18:27:57.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.114" endtime="20201030 18:27:57.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.407" endtime="20201030 18:27:57.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.415" endtime="20201030 18:27:57.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.111" endtime="20201030 18:27:57.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.109" endtime="20201030 18:27:57.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.422" level="INFO">${RESULT} = [{'diff': 9.590300000000135e-05}, {'diff': 8.148600000000214e-05}, {'diff': 8.344399999999849e-05}, {'diff': 8.247299999999957e-05}, {'diff': 8.161100000000227e-05}, {'diff': 8.055599999999899e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:57.419" endtime="20201030 18:27:57.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.426" level="INFO">${ACCURACY} = {'diff': [9.590300000000135e-05, 8.148600000000214e-05, 8.344399999999849e-05, 8.247299999999957e-05, 8.161100000000227e-05, 8.055599999999899e-05, 8.34309999999984e-05, 8.248699999999914e-05, 8.05700...</msg>
<status status="PASS" starttime="20201030 18:27:57.423" endtime="20201030 18:27:57.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.430" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.429" endtime="20201030 18:27:57.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.433" level="INFO">VALUE: [9.590300000000135e-05, 8.148600000000214e-05, 8.344399999999849e-05, 8.247299999999957e-05, 8.161100000000227e-05, 8.055599999999899e-05, 8.34309999999984e-05, 8.248699999999914e-05, 8.057000000000203e-05, 8.062500000000083e-05, 8.152800000000085e-05, 8.151400000000128e-05, 8.334800000000045e-05, 8.341699999999883e-05, 8.15970000000027e-05, 8.156900000000009e-05, 8.06390000000004e-05, 8.340299999999926e-05, 8.155500000000052e-05, 8.341699999999883e-05, 8.248599999999967e-05, 8.252800000000185e-05, 8.05970000000017e-05, 8.344399999999849e-05, 8.24720000000001e-05, 8.251299999999934e-05, 8.251399999999881e-05, 8.051299999999734e-05, 8.054199999999942e-05, 8.154200000000042e-05, 8.341599999999935e-05, 8.061100000000126e-05, 8.343000000000239e-05, 8.26109999999998e-05, 8.148600000000214e-05, 7.95970000000007e-05, 8.244500000000043e-05, 8.34309999999984e-05, 8.248600000000314e-05, 8.249999999999924e-05, 7.961100000000026e-05, 8.248599999999967e-05, 8.245799999999706e-05, 8.34170000000023e-05, 8.152799999999738e-05, 8.15269999999979e-05, 8.059699999999823e-05, 8.152800000000085e-05, 8.055599999999899e-05, 8.258300000000066e-05]</msg>
<status status="PASS" starttime="20201030 18:27:57.432" endtime="20201030 18:27:57.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.427" endtime="20201030 18:27:57.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.438" endtime="20201030 18:27:57.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.436" endtime="20201030 18:27:57.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.435" endtime="20201030 18:27:57.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.069" endtime="20201030 18:27:57.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.068" endtime="20201030 18:27:57.458"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.467" endtime="20201030 18:27:57.490"></status>
</kw>
<msg timestamp="20201030 18:27:57.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.465" endtime="20201030 18:27:57.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.492" endtime="20201030 18:27:57.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.494" endtime="20201030 18:27:57.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.463" endtime="20201030 18:27:57.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.461" endtime="20201030 18:27:57.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.503" endtime="20201030 18:27:57.789"></status>
</kw>
<msg timestamp="20201030 18:27:57.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024589528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024666278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.502" endtime="20201030 18:27:57.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024589528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024666278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.793" endtime="20201030 18:27:57.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.801" endtime="20201030 18:27:57.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.499" endtime="20201030 18:27:57.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.498" endtime="20201030 18:27:57.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.807" level="INFO">${RESULT} = [{'diff': 7.675000000000043e-05}, {'diff': 8.069399999999921e-05}, {'diff': 8.341699999999883e-05}, {'diff': 8.163899999999794e-05}, {'diff': 8.2459e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.1...</msg>
<status status="PASS" starttime="20201030 18:27:57.804" endtime="20201030 18:27:57.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.812" level="INFO">${ACCURACY} = {'diff': [7.675000000000043e-05, 8.069399999999921e-05, 8.341699999999883e-05, 8.163899999999794e-05, 8.2459e-05, 8.248599999999967e-05, 8.149999999999824e-05, 8.257000000000056e-05, 8.152800000000085...</msg>
<status status="PASS" starttime="20201030 18:27:57.808" endtime="20201030 18:27:57.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.816" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.815" endtime="20201030 18:27:57.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.818" level="INFO">VALUE: [7.675000000000043e-05, 8.069399999999921e-05, 8.341699999999883e-05, 8.163899999999794e-05, 8.2459e-05, 8.248599999999967e-05, 8.149999999999824e-05, 8.257000000000056e-05, 8.152800000000085e-05, 8.34309999999984e-05, 8.344400000000196e-05, 8.344500000000143e-05, 8.159699999999923e-05, 8.248599999999967e-05, 8.344500000000143e-05, 8.348600000000067e-05, 8.156999999999956e-05, 8.343100000000186e-05, 8.144399999999996e-05, 8.2459e-05, 8.259700000000023e-05, 8.2459e-05, 8.150000000000171e-05, 8.16109999999988e-05, 8.344400000000196e-05, 8.258400000000013e-05, 8.165300000000097e-05, 8.341699999999883e-05, 8.352799999999938e-05, 8.247299999999957e-05, 8.057000000000203e-05, 8.352799999999938e-05, 8.148599999999867e-05, 8.352799999999938e-05, 8.150000000000171e-05, 8.254100000000195e-05, 8.152800000000085e-05, 8.06109999999978e-05, 8.054199999999942e-05, 8.16109999999988e-05, 8.338899999999969e-05, 8.162500000000183e-05, 8.152800000000085e-05, 8.255600000000099e-05, 8.15269999999979e-05, 8.354200000000242e-05, 8.342999999999892e-05, 8.159699999999923e-05, 8.165300000000097e-05, 8.148599999999867e-05]</msg>
<status status="PASS" starttime="20201030 18:27:57.817" endtime="20201030 18:27:57.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.813" endtime="20201030 18:27:57.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.829" endtime="20201030 18:27:57.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.827" endtime="20201030 18:27:57.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.826" endtime="20201030 18:27:57.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.459" endtime="20201030 18:27:57.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.459" endtime="20201030 18:27:57.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.935" endtime="20201030 18:27:57.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.853" endtime="20201030 18:27:57.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.852" endtime="20201030 18:27:57.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.851" endtime="20201030 18:27:57.874"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:18.842" endtime="20201030 18:27:57.874" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.881" endtime="20201030 18:27:57.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.879" endtime="20201030 18:27:57.901"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.913" endtime="20201030 18:27:57.933"></status>
</kw>
<msg timestamp="20201030 18:27:57.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.912" endtime="20201030 18:27:57.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.935" endtime="20201030 18:27:57.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.939" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:57.937" endtime="20201030 18:27:57.940"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:57.909" endtime="20201030 18:27:57.940"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:57.907" endtime="20201030 18:27:57.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.906" endtime="20201030 18:27:57.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:57.945" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:57.944" endtime="20201030 18:27:57.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.942" endtime="20201030 18:27:57.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.905" endtime="20201030 18:27:57.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.904" endtime="20201030 18:27:57.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.946" endtime="20201030 18:27:57.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.903" endtime="20201030 18:27:57.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.901" endtime="20201030 18:27:57.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.878" endtime="20201030 18:27:57.949"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.960" endtime="20201030 18:27:57.983"></status>
</kw>
<msg timestamp="20201030 18:27:57.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.958" endtime="20201030 18:27:57.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.985" endtime="20201030 18:27:57.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.987" endtime="20201030 18:27:57.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.956" endtime="20201030 18:27:57.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.952" endtime="20201030 18:27:57.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.996" endtime="20201030 18:27:58.282"></status>
</kw>
<msg timestamp="20201030 18:27:58.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074038097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074046778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.995" endtime="20201030 18:27:58.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074038097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074046778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.286" endtime="20201030 18:27:58.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.295" endtime="20201030 18:27:58.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.992" endtime="20201030 18:27:58.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.990" endtime="20201030 18:27:58.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.301" level="INFO">${RESULT} = [{'diff': 8.680999999996497e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.735999999995303e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.708000000010041e-06}, {'diff': 8.707999999996163e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:58.298" endtime="20201030 18:27:58.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.306" level="INFO">${ACCURACY} = {'diff': [8.680999999996497e-06, 8.707999999996163e-06, 8.735999999995303e-06, 8.695000000003006e-06, 8.708000000010041e-06, 8.707999999996163e-06, 8.723000000002146e-06, 8.680999999996497e-06, 8.7500...</msg>
<status status="PASS" starttime="20201030 18:27:58.302" endtime="20201030 18:27:58.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.310" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:27:58.309" endtime="20201030 18:27:58.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.313" level="INFO">VALUE: [8.680999999996497e-06, 8.707999999996163e-06, 8.735999999995303e-06, 8.695000000003006e-06, 8.708000000010041e-06, 8.707999999996163e-06, 8.723000000002146e-06, 8.680999999996497e-06, 8.750000000001812e-06, 8.652999999997357e-06, 8.694999999989128e-06, 8.681000000010375e-06, 8.638999999990848e-06, 8.695000000003006e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.709000000009515e-06, 8.695000000003006e-06, 8.652999999997357e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.722000000002672e-06, 8.679999999997023e-06, 8.667000000003866e-06, 8.709000000009515e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.695000000003006e-06, 8.708000000010041e-06, 8.695000000003006e-06, 8.639000000004726e-06, 8.736000000009181e-06, 8.666000000004392e-06, 8.707999999996163e-06, 8.709000000009515e-06, 8.735999999995303e-06, 8.681000000010375e-06, 8.652999999997357e-06, 8.680999999996497e-06, 8.638999999990848e-06, 8.639000000004726e-06, 8.652999999997357e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.694000000003532e-06, 8.736000000009181e-06, 8.736000000009181e-06]</msg>
<status status="PASS" starttime="20201030 18:27:58.311" endtime="20201030 18:27:58.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.307" endtime="20201030 18:27:58.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.317" endtime="20201030 18:27:58.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.316" endtime="20201030 18:27:58.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.315" endtime="20201030 18:27:58.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.951" endtime="20201030 18:27:58.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.950" endtime="20201030 18:27:58.338"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.347" endtime="20201030 18:27:58.366"></status>
</kw>
<msg timestamp="20201030 18:27:58.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.345" endtime="20201030 18:27:58.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.367" endtime="20201030 18:27:58.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.369" endtime="20201030 18:27:58.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.343" endtime="20201030 18:27:58.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.340" endtime="20201030 18:27:58.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.378" endtime="20201030 18:27:58.663"></status>
</kw>
<msg timestamp="20201030 18:27:58.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024218458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.377" endtime="20201030 18:27:58.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024209764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024218458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.668" endtime="20201030 18:27:58.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.676" endtime="20201030 18:27:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.374" endtime="20201030 18:27:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.373" endtime="20201030 18:27:58.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.683" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:58.679" endtime="20201030 18:27:58.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.688" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.625000000001687e-06, 8.6669...</msg>
<status status="PASS" starttime="20201030 18:27:58.684" endtime="20201030 18:27:58.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.692" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:27:58.691" endtime="20201030 18:27:58.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.695" level="INFO">VALUE: [8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.778000000000952e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.625000000001687e-06, 8.666999999996927e-06, 8.736000000002242e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.695000000003006e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.638999999997787e-06, 8.778000000000952e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.666999999996927e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201030 18:27:58.693" endtime="20201030 18:27:58.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.689" endtime="20201030 18:27:58.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.699" endtime="20201030 18:27:58.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.698" endtime="20201030 18:27:58.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.697" endtime="20201030 18:27:58.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.339" endtime="20201030 18:27:58.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.338" endtime="20201030 18:27:58.720"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.729" endtime="20201030 18:27:58.747"></status>
</kw>
<msg timestamp="20201030 18:27:58.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.727" endtime="20201030 18:27:58.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.749" endtime="20201030 18:27:58.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.751" endtime="20201030 18:27:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.725" endtime="20201030 18:27:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.723" endtime="20201030 18:27:58.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.760" endtime="20201030 18:27:59.047"></status>
</kw>
<msg timestamp="20201030 18:27:59.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024193597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024202306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.758" endtime="20201030 18:27:59.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024193597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024202306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.051" endtime="20201030 18:27:59.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.059" endtime="20201030 18:27:59.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.756" endtime="20201030 18:27:59.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.754" endtime="20201030 18:27:59.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.066" level="INFO">${RESULT} = [{'diff': 8.708999999999106e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.665999999997454e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:59.063" endtime="20201030 18:27:59.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.070" level="INFO">${ACCURACY} = {'diff': [8.708999999999106e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 18:27:59.067" endtime="20201030 18:27:59.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.074" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.073" endtime="20201030 18:27:59.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.077" level="INFO">VALUE: [8.708999999999106e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.610999999998648e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.749999999998342e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.624999999998217e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.722000000002672e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.625000000001687e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.763000000001908e-06, 8.709000000002576e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.075" endtime="20201030 18:27:59.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.071" endtime="20201030 18:27:59.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.082" endtime="20201030 18:27:59.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.080" endtime="20201030 18:27:59.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.079" endtime="20201030 18:27:59.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.721" endtime="20201030 18:27:59.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.721" endtime="20201030 18:27:59.102"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.112" endtime="20201030 18:27:59.129"></status>
</kw>
<msg timestamp="20201030 18:27:59.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.110" endtime="20201030 18:27:59.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.130" endtime="20201030 18:27:59.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.133" endtime="20201030 18:27:59.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.107" endtime="20201030 18:27:59.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.105" endtime="20201030 18:27:59.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.142" endtime="20201030 18:27:59.427"></status>
</kw>
<msg timestamp="20201030 18:27:59.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.140" endtime="20201030 18:27:59.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023524778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.432" endtime="20201030 18:27:59.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.440" endtime="20201030 18:27:59.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.137" endtime="20201030 18:27:59.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.136" endtime="20201030 18:27:59.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.447" level="INFO">${RESULT} = [{'diff': 8.764000000001382e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.737000000001716e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.666000000000923e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:59.444" endtime="20201030 18:27:59.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.451" level="INFO">${ACCURACY} = {'diff': [8.764000000001382e-06, 8.721999999999203e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.6800...</msg>
<status status="PASS" starttime="20201030 18:27:59.448" endtime="20201030 18:27:59.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.457" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.455" endtime="20201030 18:27:59.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.459" level="INFO">VALUE: [8.764000000001382e-06, 8.721999999999203e-06, 8.737000000001716e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.625000000001687e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.652000000001353e-06, 8.680000000000493e-06, 8.708000000003102e-06, 8.667000000000397e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.458" endtime="20201030 18:27:59.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.452" endtime="20201030 18:27:59.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.465" endtime="20201030 18:27:59.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.463" endtime="20201030 18:27:59.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.462" endtime="20201030 18:27:59.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.103" endtime="20201030 18:27:59.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.103" endtime="20201030 18:27:59.486"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.501" endtime="20201030 18:27:59.522"></status>
</kw>
<msg timestamp="20201030 18:27:59.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.497" endtime="20201030 18:27:59.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.523" endtime="20201030 18:27:59.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.526" endtime="20201030 18:27:59.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.494" endtime="20201030 18:27:59.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.489" endtime="20201030 18:27:59.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.535" endtime="20201030 18:27:59.843"></status>
</kw>
<msg timestamp="20201030 18:27:59.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032295694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032304375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.534" endtime="20201030 18:27:59.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032295694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032304375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.850" endtime="20201030 18:27:59.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.859" endtime="20201030 18:27:59.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.531" endtime="20201030 18:27:59.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.529" endtime="20201030 18:27:59.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.866" level="INFO">${RESULT} = [{'diff': 8.681000000003436e-06}, {'diff': 8.708999999995637e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.721999999995733e-06}, {'diff': 8.666999999996927e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:59.863" endtime="20201030 18:27:59.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.871" level="INFO">${ACCURACY} = {'diff': [8.681000000003436e-06, 8.708999999995637e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.721999999995733e-06, 8.666999999996927e-06, 8.708000000003102e-06, 8.681000000003436e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 18:27:59.867" endtime="20201030 18:27:59.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.876" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.875" endtime="20201030 18:27:59.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.879" level="INFO">VALUE: [8.681000000003436e-06, 8.708999999995637e-06, 8.722000000002672e-06, 8.695000000003006e-06, 8.721999999995733e-06, 8.666999999996927e-06, 8.708000000003102e-06, 8.681000000003436e-06, 8.694000000003532e-06, 8.637999999998314e-06, 8.723000000002146e-06, 8.694000000003532e-06, 8.665999999997454e-06, 8.679999999997023e-06, 8.665999999997454e-06, 8.708000000003102e-06, 8.680999999996497e-06, 8.721999999995733e-06, 8.667000000003866e-06, 8.624999999998217e-06, 8.709000000002576e-06, 8.695000000003006e-06, 8.693999999996593e-06, 8.694000000003532e-06, 8.693999999996593e-06, 8.680000000003962e-06, 8.693999999996593e-06, 8.653000000004296e-06, 8.707999999996163e-06, 8.666999999996927e-06, 8.694999999996067e-06, 8.680000000003962e-06, 8.666999999996927e-06, 8.667000000003866e-06, 8.695000000003006e-06, 8.666999999996927e-06, 8.708999999995637e-06, 8.708000000003102e-06, 8.693999999996593e-06, 8.708999999995637e-06, 8.708000000003102e-06, 8.708000000003102e-06, 8.693999999996593e-06, 8.750000000001812e-06, 8.709000000002576e-06, 8.764000000001382e-06, 8.735999999995303e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.721999999995733e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.877" endtime="20201030 18:27:59.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.872" endtime="20201030 18:27:59.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.884" endtime="20201030 18:27:59.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.882" endtime="20201030 18:27:59.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.881" endtime="20201030 18:27:59.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.487" endtime="20201030 18:27:59.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.486" endtime="20201030 18:27:59.905"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.914" endtime="20201030 18:27:59.933"></status>
</kw>
<msg timestamp="20201030 18:27:59.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.912" endtime="20201030 18:27:59.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.935" endtime="20201030 18:27:59.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.937" endtime="20201030 18:27:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.910" endtime="20201030 18:27:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.907" endtime="20201030 18:27:59.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.946" endtime="20201030 18:28:00.239"></status>
</kw>
<msg timestamp="20201030 18:28:00.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.945" endtime="20201030 18:28:00.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024862458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024871153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.245" endtime="20201030 18:28:00.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.254" endtime="20201030 18:28:00.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.942" endtime="20201030 18:28:00.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.940" endtime="20201030 18:28:00.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.261" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.666999999996927e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.750000000001812e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:00.258" endtime="20201030 18:28:00.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.265" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 18:28:00.262" endtime="20201030 18:28:00.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.270" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.269" endtime="20201030 18:28:00.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.273" level="INFO">VALUE: [8.694999999999536e-06, 8.667000000000397e-06, 8.666999999996927e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.735999999998773e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 18:28:00.271" endtime="20201030 18:28:00.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.266" endtime="20201030 18:28:00.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.278" endtime="20201030 18:28:00.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.276" endtime="20201030 18:28:00.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.275" endtime="20201030 18:28:00.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.906" endtime="20201030 18:28:00.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.905" endtime="20201030 18:28:00.299"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.308" endtime="20201030 18:28:00.326"></status>
</kw>
<msg timestamp="20201030 18:28:00.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.306" endtime="20201030 18:28:00.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.327" endtime="20201030 18:28:00.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.330" endtime="20201030 18:28:00.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.303" endtime="20201030 18:28:00.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.301" endtime="20201030 18:28:00.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.339" endtime="20201030 18:28:00.625"></status>
</kw>
<msg timestamp="20201030 18:28:00.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.338" endtime="20201030 18:28:00.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023216458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.629" endtime="20201030 18:28:00.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.638" endtime="20201030 18:28:00.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.335" endtime="20201030 18:28:00.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.333" endtime="20201030 18:28:00.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.645" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:00.642" endtime="20201030 18:28:00.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.649" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.7219...</msg>
<status status="PASS" starttime="20201030 18:28:00.646" endtime="20201030 18:28:00.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.654" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.653" endtime="20201030 18:28:00.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.656" level="INFO">VALUE: [8.694000000000063e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.610999999998648e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201030 18:28:00.655" endtime="20201030 18:28:00.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.650" endtime="20201030 18:28:00.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.662" endtime="20201030 18:28:00.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.661" endtime="20201030 18:28:00.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.660" endtime="20201030 18:28:00.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.299" endtime="20201030 18:28:00.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.299" endtime="20201030 18:28:00.685"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.702" endtime="20201030 18:28:00.722"></status>
</kw>
<msg timestamp="20201030 18:28:00.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.701" endtime="20201030 18:28:00.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.724" endtime="20201030 18:28:00.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.727" endtime="20201030 18:28:00.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.697" endtime="20201030 18:28:00.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.691" endtime="20201030 18:28:00.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.736" endtime="20201030 18:28:01.022"></status>
</kw>
<msg timestamp="20201030 18:28:01.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035232194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035240861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.734" endtime="20201030 18:28:01.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035232194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035240861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.026" endtime="20201030 18:28:01.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.035" endtime="20201030 18:28:01.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.732" endtime="20201030 18:28:01.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.730" endtime="20201030 18:28:01.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.042" level="INFO">${RESULT} = [{'diff': 8.666999999996927e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.680000000003962e-06}, {'diff': 8.680999999996497e-06}, {'diff': 8.680000000003962e-06}, {'diff': 8.681000000003436e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:01.039" endtime="20201030 18:28:01.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.047" level="INFO">${ACCURACY} = {'diff': [8.666999999996927e-06, 8.707999999996163e-06, 8.680000000003962e-06, 8.680999999996497e-06, 8.680000000003962e-06, 8.681000000003436e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.6249...</msg>
<status status="PASS" starttime="20201030 18:28:01.043" endtime="20201030 18:28:01.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.052" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.051" endtime="20201030 18:28:01.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.054" level="INFO">VALUE: [8.666999999996927e-06, 8.707999999996163e-06, 8.680000000003962e-06, 8.680999999996497e-06, 8.680000000003962e-06, 8.681000000003436e-06, 8.680999999996497e-06, 8.707999999996163e-06, 8.624999999998217e-06, 8.708000000003102e-06, 8.722000000002672e-06, 8.736000000002242e-06, 8.679999999997023e-06, 8.680999999996497e-06, 8.708000000003102e-06, 8.694000000003532e-06, 8.610999999998648e-06, 8.694999999996067e-06, 8.693999999996593e-06, 8.694000000003532e-06, 8.693999999996593e-06, 8.693999999996593e-06, 8.694000000003532e-06, 8.681000000003436e-06, 8.707999999996163e-06, 8.680999999996497e-06, 8.680000000003962e-06, 8.694000000003532e-06, 8.667000000003866e-06, 8.695000000003006e-06, 8.735999999995303e-06, 8.736000000002242e-06, 8.778000000000952e-06, 8.680000000003962e-06, 8.679999999997023e-06, 8.639000000004726e-06, 8.680000000003962e-06, 8.722000000002672e-06, 8.707999999996163e-06, 8.723000000002146e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.681000000003436e-06, 8.693999999996593e-06, 8.681000000003436e-06, 8.722000000002672e-06, 8.694000000003532e-06, 8.680999999996497e-06, 8.681000000003436e-06, 8.749999999994873e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.053" endtime="20201030 18:28:01.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.048" endtime="20201030 18:28:01.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.060" endtime="20201030 18:28:01.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.058" endtime="20201030 18:28:01.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.057" endtime="20201030 18:28:01.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.688" endtime="20201030 18:28:01.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.685" endtime="20201030 18:28:01.080"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.089" endtime="20201030 18:28:01.109"></status>
</kw>
<msg timestamp="20201030 18:28:01.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.088" endtime="20201030 18:28:01.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.110" endtime="20201030 18:28:01.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.113" endtime="20201030 18:28:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.085" endtime="20201030 18:28:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.083" endtime="20201030 18:28:01.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.122" endtime="20201030 18:28:01.415"></status>
</kw>
<msg timestamp="20201030 18:28:01.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025030542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02503925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:01.121" endtime="20201030 18:28:01.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025030542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02503925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:01.419" endtime="20201030 18:28:01.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.427" endtime="20201030 18:28:01.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.118" endtime="20201030 18:28:01.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.116" endtime="20201030 18:28:01.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.434" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.680000000000493e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:01.430" endtime="20201030 18:28:01.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.438" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 18:28:01.435" endtime="20201030 18:28:01.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.442" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.441" endtime="20201030 18:28:01.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.445" level="INFO">VALUE: [8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.638999999997787e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.694999999999536e-06, 8.722999999998676e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.611000000002117e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.708000000003102e-06, 8.680000000000493e-06, 8.651999999997884e-06, 8.694999999999536e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.597999999998551e-06, 8.680999999999967e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.443" endtime="20201030 18:28:01.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.439" endtime="20201030 18:28:01.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.450" endtime="20201030 18:28:01.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.448" endtime="20201030 18:28:01.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.447" endtime="20201030 18:28:01.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.081" endtime="20201030 18:28:01.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.081" endtime="20201030 18:28:01.470"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.479" endtime="20201030 18:28:01.497"></status>
</kw>
<msg timestamp="20201030 18:28:01.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.477" endtime="20201030 18:28:01.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.499" endtime="20201030 18:28:01.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.501" endtime="20201030 18:28:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.475" endtime="20201030 18:28:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.473" endtime="20201030 18:28:01.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.510" endtime="20201030 18:28:01.798"></status>
</kw>
<msg timestamp="20201030 18:28:01.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.509" endtime="20201030 18:28:01.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.803" endtime="20201030 18:28:01.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.812" endtime="20201030 18:28:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.506" endtime="20201030 18:28:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.504" endtime="20201030 18:28:01.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.819" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.610999999998648e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.653000000000827e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:01.816" endtime="20201030 18:28:01.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.824" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.610999999998648e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 18:28:01.820" endtime="20201030 18:28:01.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.829" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.828" endtime="20201030 18:28:01.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.832" level="INFO">VALUE: [8.694999999999536e-06, 8.610999999998648e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.778000000000952e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.665999999997454e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.625000000001687e-06, 8.653000000000827e-06, 8.666999999996927e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.680000000000493e-06, 8.679999999997023e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.830" endtime="20201030 18:28:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.825" endtime="20201030 18:28:01.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.838" endtime="20201030 18:28:01.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.836" endtime="20201030 18:28:01.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.835" endtime="20201030 18:28:01.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.471" endtime="20201030 18:28:01.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.471" endtime="20201030 18:28:01.859"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.868" endtime="20201030 18:28:01.893"></status>
</kw>
<msg timestamp="20201030 18:28:01.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.866" endtime="20201030 18:28:01.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.902" endtime="20201030 18:28:01.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.911" endtime="20201030 18:28:01.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.863" endtime="20201030 18:28:01.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.861" endtime="20201030 18:28:01.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.936" endtime="20201030 18:28:02.230"></status>
</kw>
<msg timestamp="20201030 18:28:02.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025538306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025547014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.932" endtime="20201030 18:28:02.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025538306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025547014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.234" endtime="20201030 18:28:02.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.243" endtime="20201030 18:28:02.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.925" endtime="20201030 18:28:02.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.920" endtime="20201030 18:28:02.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.249" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.777000000001478e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.611999999998121e-06}, {'diff': 8.694000000000063e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:02.246" endtime="20201030 18:28:02.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.254" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.777000000001478e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.611999999998121e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.6380...</msg>
<status status="PASS" starttime="20201030 18:28:02.250" endtime="20201030 18:28:02.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.259" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.258" endtime="20201030 18:28:02.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.261" level="INFO">VALUE: [8.707999999999633e-06, 8.777000000001478e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.611999999998121e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.638000000001783e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.679999999997023e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 18:28:02.260" endtime="20201030 18:28:02.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.255" endtime="20201030 18:28:02.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.266" endtime="20201030 18:28:02.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.264" endtime="20201030 18:28:02.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.263" endtime="20201030 18:28:02.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.860" endtime="20201030 18:28:02.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.859" endtime="20201030 18:28:02.287"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.295" endtime="20201030 18:28:02.318"></status>
</kw>
<msg timestamp="20201030 18:28:02.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.294" endtime="20201030 18:28:02.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.320" endtime="20201030 18:28:02.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.323" endtime="20201030 18:28:02.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.291" endtime="20201030 18:28:02.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.289" endtime="20201030 18:28:02.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.331" endtime="20201030 18:28:02.619"></status>
</kw>
<msg timestamp="20201030 18:28:02.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.330" endtime="20201030 18:28:02.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024531097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.623" endtime="20201030 18:28:02.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.632" endtime="20201030 18:28:02.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.327" endtime="20201030 18:28:02.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.326" endtime="20201030 18:28:02.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.638" level="INFO">${RESULT} = [{'diff': 8.722000000002672e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:02.635" endtime="20201030 18:28:02.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.643" level="INFO">${ACCURACY} = {'diff': [8.722000000002672e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.6950...</msg>
<status status="PASS" starttime="20201030 18:28:02.639" endtime="20201030 18:28:02.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.647" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.646" endtime="20201030 18:28:02.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.650" level="INFO">VALUE: [8.722000000002672e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.736999999998246e-06, 8.695000000003006e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.736000000002242e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.708999999999106e-06, 8.723000000002146e-06, 8.708000000003102e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.625000000001687e-06, 8.722000000002672e-06, 8.750000000001812e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201030 18:28:02.649" endtime="20201030 18:28:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.644" endtime="20201030 18:28:02.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.655" endtime="20201030 18:28:02.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.654" endtime="20201030 18:28:02.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.652" endtime="20201030 18:28:02.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.288" endtime="20201030 18:28:02.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.287" endtime="20201030 18:28:02.676"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.685" endtime="20201030 18:28:02.707"></status>
</kw>
<msg timestamp="20201030 18:28:02.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.684" endtime="20201030 18:28:02.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.710" endtime="20201030 18:28:02.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.716" endtime="20201030 18:28:02.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.681" endtime="20201030 18:28:02.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.679" endtime="20201030 18:28:02.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.746" endtime="20201030 18:28:03.042"></status>
</kw>
<msg timestamp="20201030 18:28:03.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.739" endtime="20201030 18:28:03.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022086472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.046" endtime="20201030 18:28:03.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.055" endtime="20201030 18:28:03.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.733" endtime="20201030 18:28:03.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.724" endtime="20201030 18:28:03.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.061" level="INFO">${RESULT} = [{'diff': 8.638999999997787e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680000000000493e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:03.058" endtime="20201030 18:28:03.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.065" level="INFO">${ACCURACY} = {'diff': [8.638999999997787e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 18:28:03.062" endtime="20201030 18:28:03.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.070" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.069" endtime="20201030 18:28:03.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.072" level="INFO">VALUE: [8.638999999997787e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.694999999999536e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.652999999997357e-06, 8.597999999998551e-06, 8.723000000002146e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.709000000002576e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201030 18:28:03.071" endtime="20201030 18:28:03.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.066" endtime="20201030 18:28:03.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.078" endtime="20201030 18:28:03.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.076" endtime="20201030 18:28:03.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.075" endtime="20201030 18:28:03.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.677" endtime="20201030 18:28:03.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.676" endtime="20201030 18:28:03.098"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.107" endtime="20201030 18:28:03.123"></status>
</kw>
<msg timestamp="20201030 18:28:03.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.106" endtime="20201030 18:28:03.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.124" endtime="20201030 18:28:03.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.127" endtime="20201030 18:28:03.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.103" endtime="20201030 18:28:03.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.101" endtime="20201030 18:28:03.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.136" endtime="20201030 18:28:03.420"></status>
</kw>
<msg timestamp="20201030 18:28:03.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.134" endtime="20201030 18:28:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.425" endtime="20201030 18:28:03.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.433" endtime="20201030 18:28:03.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.132" endtime="20201030 18:28:03.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.130" endtime="20201030 18:28:03.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.439" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:03.436" endtime="20201030 18:28:03.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.444" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.6949...</msg>
<status status="PASS" starttime="20201030 18:28:03.440" endtime="20201030 18:28:03.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.449" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.448" endtime="20201030 18:28:03.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.451" level="INFO">VALUE: [8.680999999999967e-06, 8.735999999998773e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.625000000001687e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.750000000001812e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.679999999997023e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.679999999997023e-06, 8.721999999999203e-06, 8.625000000001687e-06, 8.680000000000493e-06, 8.651999999997884e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.666999999996927e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201030 18:28:03.450" endtime="20201030 18:28:03.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.445" endtime="20201030 18:28:03.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.456" endtime="20201030 18:28:03.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.455" endtime="20201030 18:28:03.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.453" endtime="20201030 18:28:03.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.099" endtime="20201030 18:28:03.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.099" endtime="20201030 18:28:03.477"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.485" endtime="20201030 18:28:03.505"></status>
</kw>
<msg timestamp="20201030 18:28:03.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.484" endtime="20201030 18:28:03.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.507" endtime="20201030 18:28:03.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.509" endtime="20201030 18:28:03.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.481" endtime="20201030 18:28:03.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.479" endtime="20201030 18:28:03.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.518" endtime="20201030 18:28:03.808"></status>
</kw>
<msg timestamp="20201030 18:28:03.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.517" endtime="20201030 18:28:03.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020097653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.812" endtime="20201030 18:28:03.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.821" endtime="20201030 18:28:03.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.514" endtime="20201030 18:28:03.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.513" endtime="20201030 18:28:03.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.828" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.666000000000923e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:03.824" endtime="20201030 18:28:03.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.832" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.6670...</msg>
<status status="PASS" starttime="20201030 18:28:03.829" endtime="20201030 18:28:03.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.837" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.836" endtime="20201030 18:28:03.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.839" level="INFO">VALUE: [8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.735999999998773e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.709000000002576e-06, 8.653000000000827e-06, 8.723000000002146e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.708000000003102e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 18:28:03.838" endtime="20201030 18:28:03.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.833" endtime="20201030 18:28:03.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.845" endtime="20201030 18:28:03.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.843" endtime="20201030 18:28:03.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.842" endtime="20201030 18:28:03.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.478" endtime="20201030 18:28:03.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.477" endtime="20201030 18:28:03.866"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.875" endtime="20201030 18:28:03.892"></status>
</kw>
<msg timestamp="20201030 18:28:03.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.874" endtime="20201030 18:28:03.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.894" endtime="20201030 18:28:03.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.896" endtime="20201030 18:28:03.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.871" endtime="20201030 18:28:03.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.868" endtime="20201030 18:28:03.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.906" endtime="20201030 18:28:04.192"></status>
</kw>
<msg timestamp="20201030 18:28:04.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023043361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.904" endtime="20201030 18:28:04.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023043361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023052083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.197" endtime="20201030 18:28:04.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.210" endtime="20201030 18:28:04.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.902" endtime="20201030 18:28:04.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.900" endtime="20201030 18:28:04.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.225" level="INFO">${RESULT} = [{'diff': 8.722000000002672e-06}, {'diff': 8.708000000003102e-06}, {'diff': 8.722999999998676e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.721999999999203e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:04.218" endtime="20201030 18:28:04.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.234" level="INFO">${ACCURACY} = {'diff': [8.722000000002672e-06, 8.708000000003102e-06, 8.722999999998676e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 18:28:04.227" endtime="20201030 18:28:04.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.244" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.242" endtime="20201030 18:28:04.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.250" level="INFO">VALUE: [8.722000000002672e-06, 8.708000000003102e-06, 8.722999999998676e-06, 8.778000000000952e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.805999999996622e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.763999999997912e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.651999999997884e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 18:28:04.247" endtime="20201030 18:28:04.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.236" endtime="20201030 18:28:04.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.262" endtime="20201030 18:28:04.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.259" endtime="20201030 18:28:04.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.256" endtime="20201030 18:28:04.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.867" endtime="20201030 18:28:04.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.866" endtime="20201030 18:28:04.288"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.305" endtime="20201030 18:28:04.324"></status>
</kw>
<msg timestamp="20201030 18:28:04.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.303" endtime="20201030 18:28:04.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.325" endtime="20201030 18:28:04.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.328" endtime="20201030 18:28:04.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.297" endtime="20201030 18:28:04.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.293" endtime="20201030 18:28:04.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.336" endtime="20201030 18:28:04.622"></status>
</kw>
<msg timestamp="20201030 18:28:04.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036892958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036901722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.335" endtime="20201030 18:28:04.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036892958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036901722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.627" endtime="20201030 18:28:04.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.635" endtime="20201030 18:28:04.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.332" endtime="20201030 18:28:04.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.331" endtime="20201030 18:28:04.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.641" level="INFO">${RESULT} = [{'diff': 8.764000000001382e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.695000000003006e-06}, {'diff': 8.665999999997454e-06}, {'diff': 8.666999999996927e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:04.638" endtime="20201030 18:28:04.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.646" level="INFO">${ACCURACY} = {'diff': [8.764000000001382e-06, 8.707999999996163e-06, 8.792000000000522e-06, 8.695000000003006e-06, 8.665999999997454e-06, 8.666999999996927e-06, 8.679999999997023e-06, 8.708000000003102e-06, 8.6109...</msg>
<status status="PASS" starttime="20201030 18:28:04.642" endtime="20201030 18:28:04.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.651" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.650" endtime="20201030 18:28:04.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.653" level="INFO">VALUE: [8.764000000001382e-06, 8.707999999996163e-06, 8.792000000000522e-06, 8.695000000003006e-06, 8.665999999997454e-06, 8.666999999996927e-06, 8.679999999997023e-06, 8.708000000003102e-06, 8.610999999998648e-06, 8.666999999996927e-06, 8.679999999997023e-06, 8.667000000003866e-06, 8.750000000001812e-06, 8.679999999997023e-06, 8.666999999996927e-06, 8.707999999996163e-06, 8.680999999996497e-06, 8.679999999997023e-06, 8.721999999995733e-06, 8.681000000003436e-06, 8.707999999996163e-06, 8.723000000002146e-06, 8.695000000003006e-06, 8.666999999996927e-06, 8.679999999997023e-06, 8.708000000003102e-06, 8.694000000003532e-06, 8.681000000003436e-06, 8.680999999996497e-06, 8.693999999996593e-06, 8.651999999997884e-06, 8.681000000003436e-06, 8.638999999997787e-06, 8.709000000002576e-06, 8.652999999997357e-06, 8.694999999996067e-06, 8.667000000003866e-06, 8.665999999997454e-06, 8.679999999997023e-06, 8.653000000004296e-06, 8.694999999996067e-06, 8.709000000002576e-06, 8.679999999997023e-06, 8.709000000002576e-06, 8.694999999996067e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.693999999996593e-06, 8.708000000003102e-06, 8.665999999997454e-06]</msg>
<status status="PASS" starttime="20201030 18:28:04.652" endtime="20201030 18:28:04.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.647" endtime="20201030 18:28:04.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.658" endtime="20201030 18:28:04.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.657" endtime="20201030 18:28:04.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.656" endtime="20201030 18:28:04.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.290" endtime="20201030 18:28:04.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.288" endtime="20201030 18:28:04.679"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.687" endtime="20201030 18:28:04.708"></status>
</kw>
<msg timestamp="20201030 18:28:04.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.686" endtime="20201030 18:28:04.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.709" endtime="20201030 18:28:04.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.712" endtime="20201030 18:28:04.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.683" endtime="20201030 18:28:04.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.681" endtime="20201030 18:28:04.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.721" endtime="20201030 18:28:05.008"></status>
</kw>
<msg timestamp="20201030 18:28:05.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023608431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.719" endtime="20201030 18:28:05.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023608431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.013" endtime="20201030 18:28:05.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.021" endtime="20201030 18:28:05.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.716" endtime="20201030 18:28:05.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.715" endtime="20201030 18:28:05.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.028" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.763999999997912e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:05.025" endtime="20201030 18:28:05.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.032" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.6949...</msg>
<status status="PASS" starttime="20201030 18:28:05.029" endtime="20201030 18:28:05.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.036" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.035" endtime="20201030 18:28:05.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.039" level="INFO">VALUE: [8.680000000000493e-06, 8.694999999999536e-06, 8.763999999997912e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.750000000001812e-06, 8.708000000003102e-06, 8.639000000001257e-06, 8.763999999997912e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.624999999998217e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.736000000002242e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.695000000003006e-06, 8.639000000001257e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.596999999999078e-06, 8.666000000000923e-06, 8.625000000001687e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.707999999999633e-06, 8.723000000002146e-06]</msg>
<status status="PASS" starttime="20201030 18:28:05.038" endtime="20201030 18:28:05.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.033" endtime="20201030 18:28:05.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.044" endtime="20201030 18:28:05.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.042" endtime="20201030 18:28:05.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.041" endtime="20201030 18:28:05.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.680" endtime="20201030 18:28:05.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.679" endtime="20201030 18:28:05.065"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.073" endtime="20201030 18:28:05.093"></status>
</kw>
<msg timestamp="20201030 18:28:05.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.072" endtime="20201030 18:28:05.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.095" endtime="20201030 18:28:05.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.097" endtime="20201030 18:28:05.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.069" endtime="20201030 18:28:05.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.067" endtime="20201030 18:28:05.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.106" endtime="20201030 18:28:05.392"></status>
</kw>
<msg timestamp="20201030 18:28:05.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024702264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024710972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.105" endtime="20201030 18:28:05.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024702264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024710972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.396" endtime="20201030 18:28:05.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.404" endtime="20201030 18:28:05.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.102" endtime="20201030 18:28:05.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.100" endtime="20201030 18:28:05.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.412" level="INFO">${RESULT} = [{'diff': 8.707999999999633e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.679999999997023e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680000000000493e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:05.408" endtime="20201030 18:28:05.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.416" level="INFO">${ACCURACY} = {'diff': [8.707999999999633e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.6660...</msg>
<status status="PASS" starttime="20201030 18:28:05.413" endtime="20201030 18:28:05.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.420" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.419" endtime="20201030 18:28:05.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.423" level="INFO">VALUE: [8.707999999999633e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.651999999997884e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.764000000001382e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.736999999998246e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.652000000001353e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.638999999997787e-06, 8.708999999999106e-06]</msg>
<status status="PASS" starttime="20201030 18:28:05.421" endtime="20201030 18:28:05.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.417" endtime="20201030 18:28:05.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.428" endtime="20201030 18:28:05.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.427" endtime="20201030 18:28:05.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.426" endtime="20201030 18:28:05.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.066" endtime="20201030 18:28:05.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.065" endtime="20201030 18:28:05.449"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.458" endtime="20201030 18:28:05.478"></status>
</kw>
<msg timestamp="20201030 18:28:05.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.456" endtime="20201030 18:28:05.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.479" endtime="20201030 18:28:05.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.481" endtime="20201030 18:28:05.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.454" endtime="20201030 18:28:05.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.452" endtime="20201030 18:28:05.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.490" endtime="20201030 18:28:05.776"></status>
</kw>
<msg timestamp="20201030 18:28:05.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.489" endtime="20201030 18:28:05.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.780" endtime="20201030 18:28:05.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.789" endtime="20201030 18:28:05.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.486" endtime="20201030 18:28:05.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.485" endtime="20201030 18:28:05.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.795" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.708999999999106e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:05.792" endtime="20201030 18:28:05.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.800" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.778000000000952e-06, 8.680999999999967e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 18:28:05.796" endtime="20201030 18:28:05.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.805" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.804" endtime="20201030 18:28:05.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.807" level="INFO">VALUE: [8.680000000000493e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.778000000000952e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.722999999998676e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.722999999998676e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.652000000001353e-06]</msg>
<status status="PASS" starttime="20201030 18:28:05.806" endtime="20201030 18:28:05.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.801" endtime="20201030 18:28:05.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.813" endtime="20201030 18:28:05.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.812" endtime="20201030 18:28:05.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.810" endtime="20201030 18:28:05.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.450" endtime="20201030 18:28:05.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.450" endtime="20201030 18:28:05.834"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.843" endtime="20201030 18:28:05.861"></status>
</kw>
<msg timestamp="20201030 18:28:05.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.841" endtime="20201030 18:28:05.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.863" endtime="20201030 18:28:05.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.865" endtime="20201030 18:28:05.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.839" endtime="20201030 18:28:05.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.837" endtime="20201030 18:28:05.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.874" endtime="20201030 18:28:06.168"></status>
</kw>
<msg timestamp="20201030 18:28:06.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024065569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02407425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:05.873" endtime="20201030 18:28:06.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024065569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02407425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:06.172" endtime="20201030 18:28:06.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.181" endtime="20201030 18:28:06.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.870" endtime="20201030 18:28:06.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.868" endtime="20201030 18:28:06.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.188" level="INFO">${RESULT} = [{'diff': 8.680999999999967e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.707999999999633e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:06.185" endtime="20201030 18:28:06.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.192" level="INFO">${ACCURACY} = {'diff': [8.680999999999967e-06, 8.736000000002242e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.7079...</msg>
<status status="PASS" starttime="20201030 18:28:06.189" endtime="20201030 18:28:06.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.197" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.196" endtime="20201030 18:28:06.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.199" level="INFO">VALUE: [8.680999999999967e-06, 8.736000000002242e-06, 8.708999999999106e-06, 8.708999999999106e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.709000000002576e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.764000000001382e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.625000000001687e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.708000000003102e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.749999999998342e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.763999999997912e-06, 8.722999999998676e-06, 8.764000000001382e-06]</msg>
<status status="PASS" starttime="20201030 18:28:06.198" endtime="20201030 18:28:06.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.193" endtime="20201030 18:28:06.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.205" endtime="20201030 18:28:06.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.203" endtime="20201030 18:28:06.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.202" endtime="20201030 18:28:06.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.835" endtime="20201030 18:28:06.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.834" endtime="20201030 18:28:06.247"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.274" endtime="20201030 18:28:06.295"></status>
</kw>
<msg timestamp="20201030 18:28:06.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.273" endtime="20201030 18:28:06.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.297" endtime="20201030 18:28:06.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.301" endtime="20201030 18:28:06.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.269" endtime="20201030 18:28:06.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.266" endtime="20201030 18:28:06.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.314" endtime="20201030 18:28:06.625"></status>
</kw>
<msg timestamp="20201030 18:28:06.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064753833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.311" endtime="20201030 18:28:06.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064753833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.629" endtime="20201030 18:28:06.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.638" endtime="20201030 18:28:06.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.307" endtime="20201030 18:28:06.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.304" endtime="20201030 18:28:06.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.645" level="INFO">${RESULT} = [{'diff': 8.679999999997023e-06}, {'diff': 8.680000000010901e-06}, {'diff': 8.583000000006447e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.722000000002672e-06}, {'diff': 8.708999999995637e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:06.641" endtime="20201030 18:28:06.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.649" level="INFO">${ACCURACY} = {'diff': [8.679999999997023e-06, 8.680000000010901e-06, 8.583000000006447e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.76400000000832e-06, 8.66700...</msg>
<status status="PASS" starttime="20201030 18:28:06.646" endtime="20201030 18:28:06.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.654" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.653" endtime="20201030 18:28:06.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.656" level="INFO">VALUE: [8.679999999997023e-06, 8.680000000010901e-06, 8.583000000006447e-06, 8.722000000002672e-06, 8.722000000002672e-06, 8.708999999995637e-06, 8.695000000003006e-06, 8.76400000000832e-06, 8.667000000003866e-06, 8.693999999989654e-06, 8.679999999997023e-06, 8.651999999997884e-06, 8.695000000003006e-06, 8.750000000001812e-06, 8.624999999998217e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.681000000010375e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.722000000002672e-06, 8.667000000003866e-06, 8.76400000000832e-06, 8.749999999987934e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.693999999989654e-06, 8.695000000003006e-06, 8.695000000003006e-06, 8.665999999990515e-06, 8.681000000010375e-06, 8.680999999996497e-06, 8.694000000003532e-06, 8.695000000003006e-06, 8.749999999987934e-06, 8.735999999995303e-06, 8.723000000002146e-06, 8.667000000003866e-06, 8.723000000002146e-06, 8.707999999996163e-06, 8.679999999997023e-06, 8.707999999996163e-06, 8.723000000002146e-06, 8.695000000003006e-06, 8.652999999997357e-06, 8.722999999988268e-06, 8.679999999997023e-06, 8.680999999996497e-06, 8.708999999995637e-06, 8.652999999997357e-06]</msg>
<status status="PASS" starttime="20201030 18:28:06.655" endtime="20201030 18:28:06.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.650" endtime="20201030 18:28:06.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.662" endtime="20201030 18:28:06.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.661" endtime="20201030 18:28:06.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.659" endtime="20201030 18:28:06.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.255" endtime="20201030 18:28:06.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.250" endtime="20201030 18:28:06.683"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.692" endtime="20201030 18:28:06.715"></status>
</kw>
<msg timestamp="20201030 18:28:06.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.691" endtime="20201030 18:28:06.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.716" endtime="20201030 18:28:06.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.719" endtime="20201030 18:28:06.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.688" endtime="20201030 18:28:06.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.686" endtime="20201030 18:28:06.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.728" endtime="20201030 18:28:07.014"></status>
</kw>
<msg timestamp="20201030 18:28:07.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.727" endtime="20201030 18:28:07.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024062847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.019" endtime="20201030 18:28:07.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.027" endtime="20201030 18:28:07.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.724" endtime="20201030 18:28:07.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.722" endtime="20201030 18:28:07.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.034" level="INFO">${RESULT} = [{'diff': 8.665999999997454e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.653000000000827e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:07.031" endtime="20201030 18:28:07.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.039" level="INFO">${ACCURACY} = {'diff': [8.665999999997454e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 18:28:07.035" endtime="20201030 18:28:07.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.044" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.043" endtime="20201030 18:28:07.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.047" level="INFO">VALUE: [8.665999999997454e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.722999999998676e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.665999999997454e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201030 18:28:07.045" endtime="20201030 18:28:07.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.040" endtime="20201030 18:28:07.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.052" endtime="20201030 18:28:07.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.050" endtime="20201030 18:28:07.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.049" endtime="20201030 18:28:07.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.684" endtime="20201030 18:28:07.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.684" endtime="20201030 18:28:07.073"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.082" endtime="20201030 18:28:07.097"></status>
</kw>
<msg timestamp="20201030 18:28:07.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.080" endtime="20201030 18:28:07.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.099" endtime="20201030 18:28:07.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.101" endtime="20201030 18:28:07.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.077" endtime="20201030 18:28:07.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.075" endtime="20201030 18:28:07.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.111" endtime="20201030 18:28:07.400"></status>
</kw>
<msg timestamp="20201030 18:28:07.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021500444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.109" endtime="20201030 18:28:07.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021500444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021509111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.405" endtime="20201030 18:28:07.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.413" endtime="20201030 18:28:07.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.106" endtime="20201030 18:28:07.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.105" endtime="20201030 18:28:07.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.420" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.735999999998773e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.723000000002146e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.707999999999633e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:07.417" endtime="20201030 18:28:07.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.424" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.736000000002242e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 18:28:07.421" endtime="20201030 18:28:07.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.429" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.428" endtime="20201030 18:28:07.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.432" level="INFO">VALUE: [8.667000000000397e-06, 8.735999999998773e-06, 8.680000000000493e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.736000000002242e-06, 8.694000000000063e-06, 8.597999999998551e-06, 8.651999999997884e-06, 8.666000000000923e-06, 8.625000000001687e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.652000000001353e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.735999999998773e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.749999999998342e-06, 8.708999999999106e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.694000000000063e-06]</msg>
<status status="PASS" starttime="20201030 18:28:07.430" endtime="20201030 18:28:07.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.425" endtime="20201030 18:28:07.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.437" endtime="20201030 18:28:07.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.435" endtime="20201030 18:28:07.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.434" endtime="20201030 18:28:07.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.074" endtime="20201030 18:28:07.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.073" endtime="20201030 18:28:07.458"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.467" endtime="20201030 18:28:07.484"></status>
</kw>
<msg timestamp="20201030 18:28:07.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.465" endtime="20201030 18:28:07.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.485" endtime="20201030 18:28:07.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.488" endtime="20201030 18:28:07.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.462" endtime="20201030 18:28:07.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.460" endtime="20201030 18:28:07.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.497" endtime="20201030 18:28:07.784"></status>
</kw>
<msg timestamp="20201030 18:28:07.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023337139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.496" endtime="20201030 18:28:07.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023328444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023337139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.788" endtime="20201030 18:28:07.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.797" endtime="20201030 18:28:07.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.493" endtime="20201030 18:28:07.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.491" endtime="20201030 18:28:07.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.804" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.638999999997787e-06}, {'diff': 8.749999999998342e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:07.800" endtime="20201030 18:28:07.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.808" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.638999999997787e-06, 8.749999999998342e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.7219...</msg>
<status status="PASS" starttime="20201030 18:28:07.805" endtime="20201030 18:28:07.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.813" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.812" endtime="20201030 18:28:07.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.815" level="INFO">VALUE: [8.694999999999536e-06, 8.638999999997787e-06, 8.749999999998342e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.723000000002146e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.695000000003006e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.695000000003006e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.722000000002672e-06, 8.694999999999536e-06]</msg>
<status status="PASS" starttime="20201030 18:28:07.814" endtime="20201030 18:28:07.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.809" endtime="20201030 18:28:07.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.821" endtime="20201030 18:28:07.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.820" endtime="20201030 18:28:07.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.819" endtime="20201030 18:28:07.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.459" endtime="20201030 18:28:07.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.458" endtime="20201030 18:28:07.842"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.851" endtime="20201030 18:28:07.871"></status>
</kw>
<msg timestamp="20201030 18:28:07.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.850" endtime="20201030 18:28:07.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.873" endtime="20201030 18:28:07.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.876" endtime="20201030 18:28:07.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.847" endtime="20201030 18:28:07.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.845" endtime="20201030 18:28:07.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.885" endtime="20201030 18:28:08.171"></status>
</kw>
<msg timestamp="20201030 18:28:08.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025461306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.883" endtime="20201030 18:28:08.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025452639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025461306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.176" endtime="20201030 18:28:08.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.184" endtime="20201030 18:28:08.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.881" endtime="20201030 18:28:08.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.879" endtime="20201030 18:28:08.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.191" level="INFO">${RESULT} = [{'diff': 8.667000000000397e-06}, {'diff': 8.750000000001812e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.721999999999203e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:08.188" endtime="20201030 18:28:08.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.196" level="INFO">${ACCURACY} = {'diff': [8.667000000000397e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.6809...</msg>
<status status="PASS" starttime="20201030 18:28:08.192" endtime="20201030 18:28:08.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.201" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.200" endtime="20201030 18:28:08.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.204" level="INFO">VALUE: [8.667000000000397e-06, 8.750000000001812e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.680000000000493e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.708999999999106e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.721999999999203e-06, 8.651999999997884e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.721999999999203e-06, 8.722999999998676e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.778000000000952e-06, 8.722000000002672e-06, 8.680000000000493e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201030 18:28:08.202" endtime="20201030 18:28:08.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.197" endtime="20201030 18:28:08.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.213" endtime="20201030 18:28:08.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.212" endtime="20201030 18:28:08.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.210" endtime="20201030 18:28:08.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.843" endtime="20201030 18:28:08.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.843" endtime="20201030 18:28:08.234"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.243" endtime="20201030 18:28:08.263"></status>
</kw>
<msg timestamp="20201030 18:28:08.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.242" endtime="20201030 18:28:08.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.265" endtime="20201030 18:28:08.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.267" endtime="20201030 18:28:08.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.239" endtime="20201030 18:28:08.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.237" endtime="20201030 18:28:08.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.277" endtime="20201030 18:28:08.563"></status>
</kw>
<msg timestamp="20201030 18:28:08.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025328431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025337125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.275" endtime="20201030 18:28:08.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025328431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025337125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.568" endtime="20201030 18:28:08.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.576" endtime="20201030 18:28:08.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.272" endtime="20201030 18:28:08.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.270" endtime="20201030 18:28:08.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.583" level="INFO">${RESULT} = [{'diff': 8.694000000000063e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:08.580" endtime="20201030 18:28:08.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.587" level="INFO">${ACCURACY} = {'diff': [8.694000000000063e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.6670...</msg>
<status status="PASS" starttime="20201030 18:28:08.584" endtime="20201030 18:28:08.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.592" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.591" endtime="20201030 18:28:08.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.595" level="INFO">VALUE: [8.694000000000063e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.667000000000397e-06, 8.695000000003006e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.764000000001382e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.778000000000952e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.695000000003006e-06, 8.735999999998773e-06, 8.805000000000618e-06, 8.694000000000063e-06, 8.693999999996593e-06, 8.736000000002242e-06, 8.777000000001478e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.736000000002242e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201030 18:28:08.593" endtime="20201030 18:28:08.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.588" endtime="20201030 18:28:08.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.600" endtime="20201030 18:28:08.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.598" endtime="20201030 18:28:08.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.597" endtime="20201030 18:28:08.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.235" endtime="20201030 18:28:08.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.235" endtime="20201030 18:28:08.621"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.630" endtime="20201030 18:28:08.649"></status>
</kw>
<msg timestamp="20201030 18:28:08.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.628" endtime="20201030 18:28:08.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.651" endtime="20201030 18:28:08.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.654" endtime="20201030 18:28:08.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.625" endtime="20201030 18:28:08.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.623" endtime="20201030 18:28:08.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.663" endtime="20201030 18:28:08.950"></status>
</kw>
<msg timestamp="20201030 18:28:08.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025850333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025859028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.661" endtime="20201030 18:28:08.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025850333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025859028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.955" endtime="20201030 18:28:08.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.963" endtime="20201030 18:28:08.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.659" endtime="20201030 18:28:08.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.657" endtime="20201030 18:28:08.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.970" level="INFO">${RESULT} = [{'diff': 8.694999999999536e-06}, {'diff': 8.652999999997357e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.653000000000827e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.722000000002672e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:08.967" endtime="20201030 18:28:08.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.974" level="INFO">${ACCURACY} = {'diff': [8.694999999999536e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.6529...</msg>
<status status="PASS" starttime="20201030 18:28:08.971" endtime="20201030 18:28:08.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.979" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.978" endtime="20201030 18:28:08.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.982" level="INFO">VALUE: [8.694999999999536e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.694000000000063e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.708000000003102e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.694999999999536e-06, 8.722000000002672e-06, 8.735999999998773e-06, 8.721999999999203e-06, 8.694000000000063e-06, 8.624999999998217e-06, 8.749999999998342e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.707999999999633e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.735999999998773e-06, 8.694999999999536e-06, 8.749999999998342e-06, 8.776999999998009e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.749999999998342e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.750000000001812e-06, 8.667000000000397e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 18:28:08.980" endtime="20201030 18:28:08.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.975" endtime="20201030 18:28:08.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.988" endtime="20201030 18:28:09.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.986" endtime="20201030 18:28:09.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.985" endtime="20201030 18:28:09.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.622" endtime="20201030 18:28:09.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.621" endtime="20201030 18:28:09.009"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.018" endtime="20201030 18:28:09.039"></status>
</kw>
<msg timestamp="20201030 18:28:09.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.016" endtime="20201030 18:28:09.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.040" endtime="20201030 18:28:09.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.043" endtime="20201030 18:28:09.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.013" endtime="20201030 18:28:09.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.011" endtime="20201030 18:28:09.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.052" endtime="20201030 18:28:09.339"></status>
</kw>
<msg timestamp="20201030 18:28:09.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024909014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.051" endtime="20201030 18:28:09.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024909014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024917694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.344" endtime="20201030 18:28:09.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.352" endtime="20201030 18:28:09.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.048" endtime="20201030 18:28:09.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.046" endtime="20201030 18:28:09.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.359" level="INFO">${RESULT} = [{'diff': 8.680000000000493e-06}, {'diff': 8.680000000000493e-06}, {'diff': 8.666000000000923e-06}, {'diff': 8.667000000000397e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.680999999999967e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:09.356" endtime="20201030 18:28:09.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.364" level="INFO">${ACCURACY} = {'diff': [8.680000000000493e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.7220...</msg>
<status status="PASS" starttime="20201030 18:28:09.360" endtime="20201030 18:28:09.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.369" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.368" endtime="20201030 18:28:09.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.372" level="INFO">VALUE: [8.680000000000493e-06, 8.680000000000493e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.722000000002672e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.723000000002146e-06, 8.680000000000493e-06, 8.735999999998773e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.722000000002672e-06, 8.764000000001382e-06, 8.680000000000493e-06, 8.610999999998648e-06, 8.680000000000493e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.722000000002672e-06, 8.638999999997787e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.708000000003102e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.694000000000063e-06, 8.707999999999633e-06, 8.666999999996927e-06, 8.694999999999536e-06, 8.680000000000493e-06]</msg>
<status status="PASS" starttime="20201030 18:28:09.370" endtime="20201030 18:28:09.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.365" endtime="20201030 18:28:09.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.377" endtime="20201030 18:28:09.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.375" endtime="20201030 18:28:09.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.374" endtime="20201030 18:28:09.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.009" endtime="20201030 18:28:09.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.009" endtime="20201030 18:28:09.398"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.407" endtime="20201030 18:28:09.424"></status>
</kw>
<msg timestamp="20201030 18:28:09.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.405" endtime="20201030 18:28:09.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.425" endtime="20201030 18:28:09.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.428" endtime="20201030 18:28:09.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.402" endtime="20201030 18:28:09.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.400" endtime="20201030 18:28:09.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.437" endtime="20201030 18:28:09.726"></status>
</kw>
<msg timestamp="20201030 18:28:09.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.436" endtime="20201030 18:28:09.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022677653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.730" endtime="20201030 18:28:09.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.738" endtime="20201030 18:28:09.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.433" endtime="20201030 18:28:09.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.431" endtime="20201030 18:28:09.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.745" level="INFO">${RESULT} = [{'diff': 8.736000000002242e-06}, {'diff': 8.694000000000063e-06}, {'diff': 8.680999999999967e-06}, {'diff': 8.694999999999536e-06}, {'diff': 8.708999999999106e-06}, {'diff': 8.694999999999536e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:09.742" endtime="20201030 18:28:09.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.749" level="INFO">${ACCURACY} = {'diff': [8.736000000002242e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.7089...</msg>
<status status="PASS" starttime="20201030 18:28:09.746" endtime="20201030 18:28:09.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.753" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.752" endtime="20201030 18:28:09.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.756" level="INFO">VALUE: [8.736000000002242e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.694999999999536e-06, 8.708999999999106e-06, 8.694999999999536e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.736000000002242e-06, 8.680999999999967e-06, 8.679999999997023e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.721999999999203e-06, 8.722000000002672e-06, 8.679999999997023e-06, 8.694000000000063e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.708999999999106e-06, 8.680999999999967e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.749999999998342e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.666000000000923e-06, 8.695000000003006e-06, 8.679999999997023e-06, 8.722999999998676e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.707999999999633e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.791000000001048e-06, 8.722999999998676e-06, 8.707999999999633e-06, 8.680000000000493e-06, 8.708000000003102e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.707999999999633e-06]</msg>
<status status="PASS" starttime="20201030 18:28:09.755" endtime="20201030 18:28:09.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.750" endtime="20201030 18:28:09.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.761" endtime="20201030 18:28:09.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.759" endtime="20201030 18:28:09.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.758" endtime="20201030 18:28:09.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.398" endtime="20201030 18:28:09.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.398" endtime="20201030 18:28:09.782"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.790" endtime="20201030 18:28:09.813"></status>
</kw>
<msg timestamp="20201030 18:28:09.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.789" endtime="20201030 18:28:09.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.815" endtime="20201030 18:28:09.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.817" endtime="20201030 18:28:09.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.786" endtime="20201030 18:28:09.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.784" endtime="20201030 18:28:09.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.826" endtime="20201030 18:28:10.120"></status>
</kw>
<msg timestamp="20201030 18:28:10.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025383903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.825" endtime="20201030 18:28:10.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025383903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025414542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.130" endtime="20201030 18:28:10.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.148" endtime="20201030 18:28:10.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.822" endtime="20201030 18:28:10.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.820" endtime="20201030 18:28:10.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.162" level="INFO">${RESULT} = [{'diff': 3.063899999999897e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.106899999999856e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.118099999999859e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:10.155" endtime="20201030 18:28:10.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.171" level="INFO">${ACCURACY} = {'diff': [3.063899999999897e-05, 2.2028000000000325e-05, 2.106899999999856e-05, 2.111100000000074e-05, 2.2055999999999465e-05, 2.118099999999859e-05, 2.3000000000002185e-05, 2.113899999999988e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:28:10.164" endtime="20201030 18:28:10.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.177" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.176" endtime="20201030 18:28:10.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.179" level="INFO">VALUE: [3.063899999999897e-05, 2.2028000000000325e-05, 2.106899999999856e-05, 2.111100000000074e-05, 2.2055999999999465e-05, 2.118099999999859e-05, 2.3000000000002185e-05, 2.113899999999988e-05, 2.297299999999905e-05, 2.10830000000016e-05, 2.016700000000149e-05, 2.112500000000031e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2014000000000755e-05, 2.3028000000001325e-05, 2.013900000000235e-05, 2.205499999999999e-05, 2.018099999999759e-05, 2.106899999999856e-05, 2.1097999999997175e-05, 2.2028000000000325e-05, 2.108299999999813e-05, 2.2069999999999035e-05, 2.111100000000074e-05, 2.2084000000002074e-05, 2.2055999999999465e-05, 2.1084000000001074e-05, 2.106899999999856e-05, 2.2041999999999895e-05, 2.111100000000074e-05, 2.2112000000001214e-05, 2.0151999999998976e-05, 2.108299999999813e-05, 2.2041999999999895e-05, 2.304100000000142e-05, 2.015299999999845e-05, 2.113899999999988e-05, 2.2069999999999035e-05, 2.0138000000002876e-05, 2.204100000000042e-05, 2.2986000000002615e-05, 2.206899999999956e-05, 2.1138000000000406e-05, 2.115299999999945e-05, 2.10830000000016e-05, 2.112499999999684e-05, 2.3014000000001755e-05, 2.109700000000117e-05, 2.2971999999999576e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.178" endtime="20201030 18:28:10.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.173" endtime="20201030 18:28:10.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.185" endtime="20201030 18:28:10.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.183" endtime="20201030 18:28:10.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.182" endtime="20201030 18:28:10.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.783" endtime="20201030 18:28:10.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.782" endtime="20201030 18:28:10.206"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.214" endtime="20201030 18:28:10.235"></status>
</kw>
<msg timestamp="20201030 18:28:10.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.213" endtime="20201030 18:28:10.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.236" endtime="20201030 18:28:10.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.239" endtime="20201030 18:28:10.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.210" endtime="20201030 18:28:10.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.208" endtime="20201030 18:28:10.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.248" endtime="20201030 18:28:10.533"></status>
</kw>
<msg timestamp="20201030 18:28:10.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023441347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023463431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.246" endtime="20201030 18:28:10.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023441347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023463431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.537" endtime="20201030 18:28:10.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.545" endtime="20201030 18:28:10.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.244" endtime="20201030 18:28:10.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.242" endtime="20201030 18:28:10.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.552" level="INFO">${RESULT} = [{'diff': 2.2083999999998605e-05}, {'diff': 2.109700000000117e-05}, {'diff': 2.015300000000192e-05}, {'diff': 2.2027999999996856e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.112500000000031e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:10.548" endtime="20201030 18:28:10.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.557" level="INFO">${ACCURACY} = {'diff': [2.2083999999998605e-05, 2.109700000000117e-05, 2.015300000000192e-05, 2.2027999999996856e-05, 2.2971999999999576e-05, 2.112500000000031e-05, 2.3013999999998286e-05, 2.1056000000001934e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:10.553" endtime="20201030 18:28:10.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.561" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.560" endtime="20201030 18:28:10.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.564" level="INFO">VALUE: [2.2083999999998605e-05, 2.109700000000117e-05, 2.015300000000192e-05, 2.2027999999996856e-05, 2.2971999999999576e-05, 2.112500000000031e-05, 2.3013999999998286e-05, 2.1056000000001934e-05, 2.011099999999974e-05, 2.015299999999845e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.213899999999741e-05, 2.202700000000085e-05, 2.204100000000042e-05, 2.012499999999931e-05, 2.112500000000031e-05, 2.2097999999998175e-05, 2.012499999999931e-05, 2.011099999999974e-05, 2.1098000000000644e-05, 2.2985999999999146e-05, 2.2958000000000006e-05, 2.112500000000031e-05, 2.1056000000001934e-05, 2.106900000000203e-05, 2.2972000000003046e-05, 2.2986000000002615e-05, 2.111099999999727e-05, 2.308300000000013e-05, 2.2985999999999146e-05, 2.2971999999999576e-05, 2.202700000000085e-05, 2.012499999999931e-05, 2.3014000000001755e-05, 2.016700000000149e-05, 2.105500000000246e-05, 2.108299999999813e-05, 2.390299999999873e-05, 2.202700000000085e-05, 2.011099999999974e-05, 2.2999999999998716e-05, 2.111100000000074e-05, 2.0180000000001586e-05, 2.1098000000000644e-05, 2.112500000000031e-05, 2.111100000000074e-05, 2.013899999999888e-05, 2.019500000000063e-05, 2.208299999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.562" endtime="20201030 18:28:10.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.558" endtime="20201030 18:28:10.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.568" endtime="20201030 18:28:10.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.567" endtime="20201030 18:28:10.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.566" endtime="20201030 18:28:10.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.206" endtime="20201030 18:28:10.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.206" endtime="20201030 18:28:10.589"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.598" endtime="20201030 18:28:10.616"></status>
</kw>
<msg timestamp="20201030 18:28:10.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.596" endtime="20201030 18:28:10.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.618" endtime="20201030 18:28:10.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.620" endtime="20201030 18:28:10.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.594" endtime="20201030 18:28:10.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.592" endtime="20201030 18:28:10.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.629" endtime="20201030 18:28:10.918"></status>
</kw>
<msg timestamp="20201030 18:28:10.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.628" endtime="20201030 18:28:10.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021726653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.922" endtime="20201030 18:28:10.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.930" endtime="20201030 18:28:10.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.625" endtime="20201030 18:28:10.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.624" endtime="20201030 18:28:10.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.937" level="INFO">${RESULT} = [{'diff': 3.4611000000000364e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.1097999999997175e-05}, {'diff': 2.206899999999956e-0...</msg>
<status status="PASS" starttime="20201030 18:28:10.934" endtime="20201030 18:28:10.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.941" level="INFO">${ACCURACY} = {'diff': [3.4611000000000364e-05, 2.3028000000001325e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.1097999999997175e-05, 2.206899999999956e-05, 2.2944000000000436e-05, 2.1151999999999976e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:10.938" endtime="20201030 18:28:10.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.945" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.944" endtime="20201030 18:28:10.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.948" level="INFO">VALUE: [3.4611000000000364e-05, 2.3028000000001325e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.1097999999997175e-05, 2.206899999999956e-05, 2.2944000000000436e-05, 2.1151999999999976e-05, 2.311099999999927e-05, 2.0152000000002446e-05, 2.2986000000002615e-05, 2.013899999999888e-05, 2.2014000000000755e-05, 2.202700000000085e-05, 2.10969999999977e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.2999999999998716e-05, 2.1055999999998465e-05, 2.2070000000002504e-05, 2.2070000000002504e-05, 2.015300000000192e-05, 2.2028000000000325e-05, 2.10969999999977e-05, 2.2985999999999146e-05, 2.204100000000042e-05, 2.111100000000074e-05, 2.2069999999999035e-05, 2.2999999999998716e-05, 2.0138000000002876e-05, 2.211099999999827e-05, 2.013899999999888e-05, 2.3026999999998382e-05, 2.10830000000016e-05, 2.2069999999999035e-05, 2.3014000000001755e-05, 2.013899999999888e-05, 2.2028000000000325e-05, 2.3000000000002185e-05, 2.10830000000016e-05, 2.1084000000001074e-05, 2.016699999999802e-05, 2.113899999999988e-05, 2.3000000000002185e-05, 2.297300000000252e-05, 2.2055999999999465e-05, 2.213900000000088e-05, 2.112500000000031e-05, 2.2028000000000325e-05, 2.305500000000099e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.946" endtime="20201030 18:28:10.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.942" endtime="20201030 18:28:10.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.953" endtime="20201030 18:28:10.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.952" endtime="20201030 18:28:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.950" endtime="20201030 18:28:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.590" endtime="20201030 18:28:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.589" endtime="20201030 18:28:10.974"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.983" endtime="20201030 18:28:11.006"></status>
</kw>
<msg timestamp="20201030 18:28:11.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.981" endtime="20201030 18:28:11.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.007" endtime="20201030 18:28:11.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.010" endtime="20201030 18:28:11.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.979" endtime="20201030 18:28:11.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.977" endtime="20201030 18:28:11.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.019" endtime="20201030 18:28:11.303"></status>
</kw>
<msg timestamp="20201030 18:28:11.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.017" endtime="20201030 18:28:11.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.307" endtime="20201030 18:28:11.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.315" endtime="20201030 18:28:11.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.015" endtime="20201030 18:28:11.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.013" endtime="20201030 18:28:11.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.322" level="INFO">${RESULT} = [{'diff': 3.6360999999998644e-05}, {'diff': 2.108299999999813e-05}, {'diff': 2.393099999999787e-05}, {'diff': 2.011099999999974e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.2055999999999465e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:11.319" endtime="20201030 18:28:11.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.326" level="INFO">${ACCURACY} = {'diff': [3.6360999999998644e-05, 2.108299999999813e-05, 2.393099999999787e-05, 2.011099999999974e-05, 2.2014000000000755e-05, 2.2055999999999465e-05, 2.3014000000001755e-05, 2.2013999999997286e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:11.323" endtime="20201030 18:28:11.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.330" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.329" endtime="20201030 18:28:11.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.333" level="INFO">VALUE: [3.6360999999998644e-05, 2.108299999999813e-05, 2.393099999999787e-05, 2.011099999999974e-05, 2.2014000000000755e-05, 2.2055999999999465e-05, 2.3014000000001755e-05, 2.2013999999997286e-05, 2.2944000000000436e-05, 2.2999999999998716e-05, 2.013899999999888e-05, 2.2971999999999576e-05, 2.011099999999974e-05, 2.2971999999999576e-05, 2.0165999999998546e-05, 2.0151999999998976e-05, 2.395900000000048e-05, 2.206899999999956e-05, 2.009700000000017e-05, 2.2971999999999576e-05, 2.202700000000085e-05, 2.2014000000000755e-05, 2.2069999999999035e-05, 2.311099999999927e-05, 2.111100000000074e-05, 2.1069999999998035e-05, 2.2069999999999035e-05, 2.2070000000002504e-05, 2.013899999999888e-05, 2.015299999999845e-05, 2.2986000000002615e-05, 2.1083999999997605e-05, 2.113899999999988e-05, 2.2055999999999465e-05, 2.1042000000002364e-05, 2.3013999999998286e-05, 2.1097999999997175e-05, 2.205499999999999e-05, 2.119499999999816e-05, 2.111100000000074e-05, 2.2028000000000325e-05, 2.2000000000001185e-05, 2.305500000000099e-05, 2.305500000000099e-05, 2.106899999999856e-05, 2.2985999999999146e-05, 2.013899999999888e-05, 2.106899999999856e-05, 2.3026999999998382e-05, 2.206899999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.331" endtime="20201030 18:28:11.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.327" endtime="20201030 18:28:11.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.338" endtime="20201030 18:28:11.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.337" endtime="20201030 18:28:11.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.336" endtime="20201030 18:28:11.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.975" endtime="20201030 18:28:11.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.975" endtime="20201030 18:28:11.359"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.368" endtime="20201030 18:28:11.386"></status>
</kw>
<msg timestamp="20201030 18:28:11.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.366" endtime="20201030 18:28:11.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.387" endtime="20201030 18:28:11.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.390" endtime="20201030 18:28:11.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.364" endtime="20201030 18:28:11.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.362" endtime="20201030 18:28:11.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.399" endtime="20201030 18:28:11.685"></status>
</kw>
<msg timestamp="20201030 18:28:11.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.397" endtime="20201030 18:28:11.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020368708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.689" endtime="20201030 18:28:11.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.697" endtime="20201030 18:28:11.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.395" endtime="20201030 18:28:11.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.393" endtime="20201030 18:28:11.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.703" level="INFO">${RESULT} = [{'diff': 3.348599999999924e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.212500000000131e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.013899999999888e-05}, {'diff': 2.113899999999988e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:11.700" endtime="20201030 18:28:11.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.708" level="INFO">${ACCURACY} = {'diff': [3.348599999999924e-05, 2.2055999999999465e-05, 2.212500000000131e-05, 2.2041999999999895e-05, 2.013899999999888e-05, 2.113899999999988e-05, 2.106899999999856e-05, 2.2041999999999895e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:28:11.704" endtime="20201030 18:28:11.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.713" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.712" endtime="20201030 18:28:11.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.715" level="INFO">VALUE: [3.348599999999924e-05, 2.2055999999999465e-05, 2.212500000000131e-05, 2.2041999999999895e-05, 2.013899999999888e-05, 2.113899999999988e-05, 2.106899999999856e-05, 2.2041999999999895e-05, 2.2042000000003364e-05, 2.2041999999999895e-05, 2.1151999999999976e-05, 2.2028000000000325e-05, 2.116700000000249e-05, 2.3014000000001755e-05, 2.015299999999845e-05, 2.106900000000203e-05, 2.2041999999999895e-05, 2.208299999999913e-05, 2.3028000000001325e-05, 2.106900000000203e-05, 2.012499999999931e-05, 2.2985999999999146e-05, 2.105499999999899e-05, 2.1098000000000644e-05, 2.298699999999862e-05, 2.0112000000002683e-05, 2.112500000000031e-05, 2.116699999999902e-05, 2.0151999999998976e-05, 2.1069999999998035e-05, 2.298700000000209e-05, 2.3027999999997856e-05, 2.3042000000000895e-05, 2.1112000000000214e-05, 2.1097999999997175e-05, 2.308300000000013e-05, 2.113899999999988e-05, 2.2070000000002504e-05, 2.10969999999977e-05, 2.10969999999977e-05, 2.304100000000142e-05, 2.2055999999999465e-05, 2.3000000000002185e-05, 2.109700000000117e-05, 2.1098000000000644e-05, 2.015300000000192e-05, 2.10969999999977e-05, 2.2971999999999576e-05, 2.1056000000001934e-05, 2.2055999999999465e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.714" endtime="20201030 18:28:11.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.709" endtime="20201030 18:28:11.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.720" endtime="20201030 18:28:11.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.719" endtime="20201030 18:28:11.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.718" endtime="20201030 18:28:11.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.360" endtime="20201030 18:28:11.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.359" endtime="20201030 18:28:11.741"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.749" endtime="20201030 18:28:11.767"></status>
</kw>
<msg timestamp="20201030 18:28:11.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.748" endtime="20201030 18:28:11.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.769" endtime="20201030 18:28:11.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.771" endtime="20201030 18:28:11.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.745" endtime="20201030 18:28:11.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.743" endtime="20201030 18:28:11.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.780" endtime="20201030 18:28:12.072"></status>
</kw>
<msg timestamp="20201030 18:28:12.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.779" endtime="20201030 18:28:12.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.076" endtime="20201030 18:28:12.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.085" endtime="20201030 18:28:12.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.776" endtime="20201030 18:28:12.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.775" endtime="20201030 18:28:12.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.091" level="INFO">${RESULT} = [{'diff': 2.209700000000217e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.3041999999997426e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.113899999999988e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:12.088" endtime="20201030 18:28:12.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.096" level="INFO">${ACCURACY} = {'diff': [2.209700000000217e-05, 2.112500000000031e-05, 2.3041999999997426e-05, 2.10969999999977e-05, 2.2041999999999895e-05, 2.113899999999988e-05, 2.015300000000192e-05, 2.10830000000016e-05, 2.2041...</msg>
<status status="PASS" starttime="20201030 18:28:12.092" endtime="20201030 18:28:12.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.100" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.099" endtime="20201030 18:28:12.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.103" level="INFO">VALUE: [2.209700000000217e-05, 2.112500000000031e-05, 2.3041999999997426e-05, 2.10969999999977e-05, 2.2041999999999895e-05, 2.113899999999988e-05, 2.015300000000192e-05, 2.10830000000016e-05, 2.204100000000042e-05, 2.02090000000002e-05, 2.211099999999827e-05, 2.106899999999856e-05, 2.113899999999988e-05, 2.2985999999999146e-05, 2.013899999999888e-05, 2.015300000000192e-05, 2.0166000000002016e-05, 2.10830000000016e-05, 2.108299999999813e-05, 2.2055999999999465e-05, 2.20830000000026e-05, 2.2055999999999465e-05, 2.0042000000001364e-05, 2.112500000000031e-05, 2.20830000000026e-05, 2.205499999999999e-05, 2.011099999999974e-05, 2.305500000000099e-05, 2.211099999999827e-05, 2.0151999999998976e-05, 2.204100000000042e-05, 2.3028000000001325e-05, 2.1179999999999116e-05, 2.115299999999945e-05, 2.2986000000002615e-05, 2.3042000000000895e-05, 2.0180000000001586e-05, 2.108299999999813e-05, 2.109700000000117e-05, 2.113899999999988e-05, 2.304100000000142e-05, 2.015299999999845e-05, 2.013900000000235e-05, 2.2985999999999146e-05, 2.10969999999977e-05, 2.208299999999913e-05, 2.019500000000063e-05, 2.2985999999999146e-05, 2.3014000000001755e-05, 2.2069999999999035e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.101" endtime="20201030 18:28:12.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.096" endtime="20201030 18:28:12.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.108" endtime="20201030 18:28:12.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.106" endtime="20201030 18:28:12.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.105" endtime="20201030 18:28:12.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.742" endtime="20201030 18:28:12.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.741" endtime="20201030 18:28:12.129"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.138" endtime="20201030 18:28:12.162"></status>
</kw>
<msg timestamp="20201030 18:28:12.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.136" endtime="20201030 18:28:12.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.163" endtime="20201030 18:28:12.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.166" endtime="20201030 18:28:12.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.134" endtime="20201030 18:28:12.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.132" endtime="20201030 18:28:12.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.175" endtime="20201030 18:28:12.483"></status>
</kw>
<msg timestamp="20201030 18:28:12.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024317875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024353208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.174" endtime="20201030 18:28:12.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024317875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024353208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.487" endtime="20201030 18:28:12.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.496" endtime="20201030 18:28:12.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.171" endtime="20201030 18:28:12.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.169" endtime="20201030 18:28:12.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.502" level="INFO">${RESULT} = [{'diff': 3.5333000000001974e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.1070000000001504e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.213899999999741e-05}, {'diff': 2.2041999999999895e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:12.499" endtime="20201030 18:28:12.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.507" level="INFO">${ACCURACY} = {'diff': [3.5333000000001974e-05, 2.205499999999999e-05, 2.1070000000001504e-05, 2.213900000000088e-05, 2.213899999999741e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:12.503" endtime="20201030 18:28:12.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.511" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.510" endtime="20201030 18:28:12.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.514" level="INFO">VALUE: [3.5333000000001974e-05, 2.205499999999999e-05, 2.1070000000001504e-05, 2.213900000000088e-05, 2.213899999999741e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.10969999999977e-05, 2.211100000000174e-05, 2.209700000000217e-05, 2.106899999999856e-05, 2.106899999999856e-05, 2.2999999999998716e-05, 2.2040999999996952e-05, 2.0194000000001155e-05, 2.1138000000000406e-05, 2.2985999999999146e-05, 2.297299999999905e-05, 2.106900000000203e-05, 2.109700000000117e-05, 2.1112000000000214e-05, 2.3028000000001325e-05, 2.108299999999813e-05, 2.1083999999997605e-05, 2.1055999999998465e-05, 2.205499999999999e-05, 2.0194000000001155e-05, 2.209700000000217e-05, 2.2986000000002615e-05, 2.109700000000117e-05, 2.2041999999999895e-05, 2.013900000000235e-05, 2.306900000000056e-05, 2.3070000000000035e-05, 2.1083999999997605e-05, 2.2041999999999895e-05, 2.012499999999931e-05, 2.297299999999905e-05, 2.009700000000017e-05, 2.2028000000000325e-05, 2.215300000000045e-05, 2.015299999999845e-05, 2.109700000000117e-05, 2.016700000000149e-05, 2.2028000000000325e-05, 2.3972000000000576e-05, 2.2971999999999576e-05, 2.2040999999996952e-05, 2.3000000000002185e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.513" endtime="20201030 18:28:12.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.508" endtime="20201030 18:28:12.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.520" endtime="20201030 18:28:12.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.518" endtime="20201030 18:28:12.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.517" endtime="20201030 18:28:12.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.130" endtime="20201030 18:28:12.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.129" endtime="20201030 18:28:12.541"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.550" endtime="20201030 18:28:12.571"></status>
</kw>
<msg timestamp="20201030 18:28:12.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.548" endtime="20201030 18:28:12.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.572" endtime="20201030 18:28:12.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.575" endtime="20201030 18:28:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.546" endtime="20201030 18:28:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.543" endtime="20201030 18:28:12.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.584" endtime="20201030 18:28:12.869"></status>
</kw>
<msg timestamp="20201030 18:28:12.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024417569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.583" endtime="20201030 18:28:12.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024380181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024417569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.873" endtime="20201030 18:28:12.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.882" endtime="20201030 18:28:12.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.580" endtime="20201030 18:28:12.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.578" endtime="20201030 18:28:12.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.889" level="INFO">${RESULT} = [{'diff': 3.738799999999931e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.297300000000252e-05}, {'diff': 2.2027999999996856e-05}, {'diff': 2.211099999999827e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:12.885" endtime="20201030 18:28:12.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.894" level="INFO">${ACCURACY} = {'diff': [3.738799999999931e-05, 2.3027999999997856e-05, 2.3000000000002185e-05, 2.297300000000252e-05, 2.2027999999996856e-05, 2.211099999999827e-05, 2.113899999999988e-05, 2.209700000000217e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:28:12.890" endtime="20201030 18:28:12.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.899" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.898" endtime="20201030 18:28:12.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.901" level="INFO">VALUE: [3.738799999999931e-05, 2.3027999999997856e-05, 2.3000000000002185e-05, 2.297300000000252e-05, 2.2027999999996856e-05, 2.211099999999827e-05, 2.113899999999988e-05, 2.209700000000217e-05, 2.116699999999902e-05, 2.204100000000042e-05, 2.209700000000217e-05, 2.2014000000000755e-05, 2.3013999999998286e-05, 2.2985999999999146e-05, 2.2027999999996856e-05, 2.2041999999999895e-05, 2.0179999999998116e-05, 2.0166000000002016e-05, 2.015299999999845e-05, 2.2014000000000755e-05, 2.013899999999888e-05, 2.2986000000002615e-05, 2.111100000000074e-05, 2.20830000000026e-05, 2.2999999999998716e-05, 2.011099999999974e-05, 2.298699999999862e-05, 2.013899999999888e-05, 2.115299999999945e-05, 2.3054999999997522e-05, 2.205499999999999e-05, 2.2985999999999146e-05, 2.2055999999999465e-05, 2.2985999999999146e-05, 2.109700000000117e-05, 2.116699999999902e-05, 2.2083999999998605e-05, 2.112500000000031e-05, 2.2985999999999146e-05, 2.112500000000031e-05, 2.3014000000001755e-05, 2.2069999999999035e-05, 2.013899999999888e-05, 2.206900000000303e-05, 2.011099999999974e-05, 2.2999999999998716e-05, 2.109700000000117e-05, 2.3000000000002185e-05, 2.204100000000042e-05, 2.2055999999999465e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.900" endtime="20201030 18:28:12.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.895" endtime="20201030 18:28:12.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.906" endtime="20201030 18:28:12.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.905" endtime="20201030 18:28:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.904" endtime="20201030 18:28:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.542" endtime="20201030 18:28:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.541" endtime="20201030 18:28:12.927"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.936" endtime="20201030 18:28:12.959"></status>
</kw>
<msg timestamp="20201030 18:28:12.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.935" endtime="20201030 18:28:12.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.960" endtime="20201030 18:28:12.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.963" endtime="20201030 18:28:12.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.932" endtime="20201030 18:28:12.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.930" endtime="20201030 18:28:12.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.972" endtime="20201030 18:28:13.260"></status>
</kw>
<msg timestamp="20201030 18:28:13.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024765264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.971" endtime="20201030 18:28:13.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024765264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024791125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.265" endtime="20201030 18:28:13.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.273" endtime="20201030 18:28:13.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.968" endtime="20201030 18:28:13.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.966" endtime="20201030 18:28:13.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.280" level="INFO">${RESULT} = [{'diff': 2.586100000000202e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.2943999999996967e-05}, {'diff': 2.2958000000000006e-05...</msg>
<status status="PASS" starttime="20201030 18:28:13.277" endtime="20201030 18:28:13.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.285" level="INFO">${ACCURACY} = {'diff': [2.586100000000202e-05, 2.016699999999802e-05, 2.3028000000001325e-05, 2.3028000000001325e-05, 2.2943999999996967e-05, 2.2958000000000006e-05, 2.011099999999974e-05, 2.208299999999913e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:13.281" endtime="20201030 18:28:13.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.289" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.288" endtime="20201030 18:28:13.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.292" level="INFO">VALUE: [2.586100000000202e-05, 2.016699999999802e-05, 2.3028000000001325e-05, 2.3028000000001325e-05, 2.2943999999996967e-05, 2.2958000000000006e-05, 2.011099999999974e-05, 2.208299999999913e-05, 2.3055999999996996e-05, 2.012499999999931e-05, 2.204100000000042e-05, 2.2041999999999895e-05, 2.108299999999813e-05, 2.2055999999999465e-05, 2.1985999999998146e-05, 2.111100000000074e-05, 2.2097999999998175e-05, 2.106899999999856e-05, 2.013899999999888e-05, 2.106900000000203e-05, 2.2055999999999465e-05, 2.3027999999997856e-05, 2.3028000000001325e-05, 2.016700000000149e-05, 2.109700000000117e-05, 2.294499999999991e-05, 2.2055999999999465e-05, 2.108299999999813e-05, 2.2055999999999465e-05, 2.012499999999931e-05, 2.3027999999997856e-05, 2.1069999999998035e-05, 2.009700000000017e-05, 2.015300000000192e-05, 2.2986000000002615e-05, 2.204100000000042e-05, 2.2985999999999146e-05, 2.009700000000017e-05, 2.3014000000001755e-05, 2.2028000000000325e-05, 2.109700000000117e-05, 2.015300000000192e-05, 2.113899999999988e-05, 2.102699999999985e-05, 2.2999999999998716e-05, 2.3000000000002185e-05, 2.115299999999945e-05, 2.2028000000000325e-05, 2.2026999999997382e-05, 2.2028000000000325e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.290" endtime="20201030 18:28:13.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.285" endtime="20201030 18:28:13.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.302" endtime="20201030 18:28:13.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.301" endtime="20201030 18:28:13.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.299" endtime="20201030 18:28:13.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.928" endtime="20201030 18:28:13.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.928" endtime="20201030 18:28:13.323"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.332" endtime="20201030 18:28:13.355"></status>
</kw>
<msg timestamp="20201030 18:28:13.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.331" endtime="20201030 18:28:13.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.357" endtime="20201030 18:28:13.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.360" endtime="20201030 18:28:13.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.328" endtime="20201030 18:28:13.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.326" endtime="20201030 18:28:13.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.369" endtime="20201030 18:28:13.656"></status>
</kw>
<msg timestamp="20201030 18:28:13.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025783486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025803653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.367" endtime="20201030 18:28:13.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025783486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025803653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.661" endtime="20201030 18:28:13.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.670" endtime="20201030 18:28:13.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.365" endtime="20201030 18:28:13.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.363" endtime="20201030 18:28:13.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.677" level="INFO">${RESULT} = [{'diff': 2.016699999999802e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.195899999999848e-05}, {'diff': 2.2028000000000325e-05}, {'diff': 2.3028000000001325e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:13.674" endtime="20201030 18:28:13.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.681" level="INFO">${ACCURACY} = {'diff': [2.016699999999802e-05, 2.016699999999802e-05, 2.2041999999999895e-05, 2.195899999999848e-05, 2.2028000000000325e-05, 2.3028000000001325e-05, 2.3083999999999605e-05, 2.009700000000017e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:13.678" endtime="20201030 18:28:13.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.686" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.685" endtime="20201030 18:28:13.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.688" level="INFO">VALUE: [2.016699999999802e-05, 2.016699999999802e-05, 2.2041999999999895e-05, 2.195899999999848e-05, 2.2028000000000325e-05, 2.3028000000001325e-05, 2.3083999999999605e-05, 2.009700000000017e-05, 2.3028000000001325e-05, 2.2999999999998716e-05, 2.3027999999997856e-05, 2.2028000000000325e-05, 2.202700000000085e-05, 2.2028000000000325e-05, 2.2055999999999465e-05, 2.213900000000088e-05, 2.3041999999997426e-05, 2.2971999999999576e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.105499999999899e-05, 2.0137999999999406e-05, 2.3013999999998286e-05, 2.3014000000001755e-05, 2.2999999999998716e-05, 2.3084000000003074e-05, 2.015300000000192e-05, 2.194500000000238e-05, 2.1098000000000644e-05, 2.2985999999999146e-05, 2.2055999999999465e-05, 2.116699999999902e-05, 2.3041999999997426e-05, 2.009700000000017e-05, 2.10830000000016e-05, 2.0193999999997686e-05, 2.297299999999905e-05, 2.2985999999999146e-05, 2.2028000000000325e-05, 2.113899999999988e-05, 2.3042000000000895e-05, 2.2041999999999895e-05, 2.2013999999997286e-05, 2.2971999999999576e-05, 2.013899999999888e-05, 2.009700000000017e-05, 2.2070000000002504e-05, 2.2013999999997286e-05, 2.2999999999998716e-05, 2.109700000000117e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.687" endtime="20201030 18:28:13.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.682" endtime="20201030 18:28:13.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.694" endtime="20201030 18:28:13.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.692" endtime="20201030 18:28:13.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.691" endtime="20201030 18:28:13.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.324" endtime="20201030 18:28:13.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.324" endtime="20201030 18:28:13.715"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.723" endtime="20201030 18:28:13.742"></status>
</kw>
<msg timestamp="20201030 18:28:13.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.722" endtime="20201030 18:28:13.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.744" endtime="20201030 18:28:13.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.747" endtime="20201030 18:28:13.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.719" endtime="20201030 18:28:13.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.717" endtime="20201030 18:28:13.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.756" endtime="20201030 18:28:14.064"></status>
</kw>
<msg timestamp="20201030 18:28:14.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021219972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.755" endtime="20201030 18:28:14.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021219972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021231528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.068" endtime="20201030 18:28:14.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.077" endtime="20201030 18:28:14.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.752" endtime="20201030 18:28:14.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.750" endtime="20201030 18:28:14.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.084" level="INFO">${RESULT} = [{'diff': 1.1555999999999372e-05}, {'diff': 2.115299999999945e-05}, {'diff': 2.202700000000085e-05}, {'diff': 2.10830000000016e-05}, {'diff': 2.2026999999997382e-05}, {'diff': 2.2055999999999465e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:14.081" endtime="20201030 18:28:14.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.089" level="INFO">${ACCURACY} = {'diff': [1.1555999999999372e-05, 2.115299999999945e-05, 2.202700000000085e-05, 2.10830000000016e-05, 2.2026999999997382e-05, 2.2055999999999465e-05, 2.012499999999931e-05, 2.298700000000209e-05, 2.01...</msg>
<status status="PASS" starttime="20201030 18:28:14.085" endtime="20201030 18:28:14.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.094" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.093" endtime="20201030 18:28:14.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.096" level="INFO">VALUE: [1.1555999999999372e-05, 2.115299999999945e-05, 2.202700000000085e-05, 2.10830000000016e-05, 2.2026999999997382e-05, 2.2055999999999465e-05, 2.012499999999931e-05, 2.298700000000209e-05, 2.018100000000106e-05, 2.018100000000106e-05, 2.10969999999977e-05, 2.2999999999998716e-05, 2.111100000000074e-05, 2.20969999999987e-05, 2.3014000000001755e-05, 2.297299999999905e-05, 2.111099999999727e-05, 2.405500000000199e-05, 2.205499999999999e-05, 2.3013999999998286e-05, 2.118099999999859e-05, 2.011099999999974e-05, 2.206899999999956e-05, 2.012499999999931e-05, 2.2069999999999035e-05, 2.111100000000074e-05, 2.104099999999942e-05, 2.1069999999998035e-05, 2.205499999999999e-05, 2.2083999999998605e-05, 2.1138000000000406e-05, 2.112500000000031e-05, 2.2027999999996856e-05, 2.018100000000106e-05, 2.215300000000045e-05, 2.015300000000192e-05, 2.016699999999802e-05, 2.113899999999988e-05, 2.012499999999931e-05, 2.10830000000016e-05, 2.111100000000074e-05, 2.0235999999999865e-05, 2.108299999999813e-05, 2.295899999999948e-05, 2.3013999999998286e-05, 2.113899999999988e-05, 2.301300000000228e-05, 2.3055999999996996e-05, 2.012499999999931e-05, 2.011099999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.095" endtime="20201030 18:28:14.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.090" endtime="20201030 18:28:14.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.102" endtime="20201030 18:28:14.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.100" endtime="20201030 18:28:14.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.099" endtime="20201030 18:28:14.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.715" endtime="20201030 18:28:14.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.715" endtime="20201030 18:28:14.122"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.132" endtime="20201030 18:28:14.154"></status>
</kw>
<msg timestamp="20201030 18:28:14.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.130" endtime="20201030 18:28:14.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.156" endtime="20201030 18:28:14.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.158" endtime="20201030 18:28:14.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.127" endtime="20201030 18:28:14.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.125" endtime="20201030 18:28:14.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.168" endtime="20201030 18:28:14.457"></status>
</kw>
<msg timestamp="20201030 18:28:14.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025375125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.166" endtime="20201030 18:28:14.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025375125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025386639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.461" endtime="20201030 18:28:14.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.470" endtime="20201030 18:28:14.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.164" endtime="20201030 18:28:14.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.162" endtime="20201030 18:28:14.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.476" level="INFO">${RESULT} = [{'diff': 1.1514000000000663e-05}, {'diff': 2.115300000000292e-05}, {'diff': 2.206900000000303e-05}, {'diff': 2.0152000000002446e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.1069999999998035e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:14.473" endtime="20201030 18:28:14.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.481" level="INFO">${ACCURACY} = {'diff': [1.1514000000000663e-05, 2.115300000000292e-05, 2.206900000000303e-05, 2.0152000000002446e-05, 2.111100000000074e-05, 2.1069999999998035e-05, 2.2055999999999465e-05, 2.3042000000000895e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:14.477" endtime="20201030 18:28:14.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.485" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.484" endtime="20201030 18:28:14.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.488" level="INFO">VALUE: [1.1514000000000663e-05, 2.115300000000292e-05, 2.206900000000303e-05, 2.0152000000002446e-05, 2.111100000000074e-05, 2.1069999999998035e-05, 2.2055999999999465e-05, 2.3042000000000895e-05, 2.113899999999988e-05, 2.10830000000016e-05, 2.2958000000000006e-05, 2.2000000000001185e-05, 2.3014000000001755e-05, 2.0180000000001586e-05, 2.116700000000249e-05, 2.2014000000000755e-05, 2.295899999999948e-05, 2.2986000000002615e-05, 2.204100000000042e-05, 2.304100000000142e-05, 2.211100000000174e-05, 2.2971999999999576e-05, 2.3014000000001755e-05, 2.2944000000000436e-05, 2.2041999999999895e-05, 2.015300000000192e-05, 2.2097999999998175e-05, 2.3915999999998827e-05, 2.3013999999998286e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.2014000000000755e-05, 2.2013999999997286e-05, 2.3000000000002185e-05, 2.206899999999956e-05, 2.305500000000099e-05, 2.2083999999998605e-05, 2.108299999999813e-05, 2.2985999999999146e-05, 2.2972000000003046e-05, 2.2042000000003364e-05, 2.115299999999945e-05, 2.018100000000106e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.111100000000074e-05, 2.3042000000000895e-05, 2.2999999999998716e-05, 2.0084000000000074e-05, 2.302700000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.486" endtime="20201030 18:28:14.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.482" endtime="20201030 18:28:14.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.493" endtime="20201030 18:28:14.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.492" endtime="20201030 18:28:14.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.490" endtime="20201030 18:28:14.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.123" endtime="20201030 18:28:14.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.123" endtime="20201030 18:28:14.514"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.523" endtime="20201030 18:28:14.592"></status>
</kw>
<msg timestamp="20201030 18:28:14.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.521" endtime="20201030 18:28:14.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.593" endtime="20201030 18:28:14.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.597" endtime="20201030 18:28:14.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.519" endtime="20201030 18:28:14.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.516" endtime="20201030 18:28:14.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.608" endtime="20201030 18:28:14.893"></status>
</kw>
<msg timestamp="20201030 18:28:14.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070923153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070953792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.606" endtime="20201030 18:28:14.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070923153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070953792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.897" endtime="20201030 18:28:14.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.906" endtime="20201030 18:28:14.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.603" endtime="20201030 18:28:14.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.601" endtime="20201030 18:28:14.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.912" level="INFO">${RESULT} = [{'diff': 3.063899999999897e-05}, {'diff': 2.2999999999995246e-05}, {'diff': 2.3014000000001755e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.015299999999498e-05}, {'diff': 2.2041999999999895e-05...</msg>
<status status="PASS" starttime="20201030 18:28:14.909" endtime="20201030 18:28:14.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.917" level="INFO">${ACCURACY} = {'diff': [3.063899999999897e-05, 2.2999999999995246e-05, 2.3014000000001755e-05, 2.3042000000000895e-05, 2.015299999999498e-05, 2.2041999999999895e-05, 2.3943999999997967e-05, 1.9208000000006664e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:14.913" endtime="20201030 18:28:14.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.921" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.920" endtime="20201030 18:28:14.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.924" level="INFO">VALUE: [3.063899999999897e-05, 2.2999999999995246e-05, 2.3014000000001755e-05, 2.3042000000000895e-05, 2.015299999999498e-05, 2.2041999999999895e-05, 2.3943999999997967e-05, 1.9208000000006664e-05, 2.1098000000011052e-05, 2.012500000000972e-05, 2.302700000000879e-05, 2.1082999999991192e-05, 2.3013999999987877e-05, 2.0999999999993246e-05, 2.018099999999412e-05, 2.3013999999987877e-05, 2.1082999999991192e-05, 2.111100000000421e-05, 2.10969999999977e-05, 2.018099999999412e-05, 2.113900000000335e-05, 2.1999999999994246e-05, 2.013899999998847e-05, 2.1069999999998035e-05, 2.2055999999992526e-05, 2.015299999999498e-05, 2.1137999999989998e-05, 2.10969999999977e-05, 2.2986000000002615e-05, 2.2999999999995246e-05, 2.1083999999990666e-05, 2.2028000000007264e-05, 2.106899999999856e-05, 2.206899999999956e-05, 2.106899999999856e-05, 2.39169999999983e-05, 2.1083999999990666e-05, 2.112499999999684e-05, 2.112499999999684e-05, 2.3014000000001755e-05, 2.015299999999498e-05, 2.306900000000056e-05, 2.30969999999997e-05, 2.1069999999998035e-05, 2.2973000000009458e-05, 2.208300000000607e-05, 2.202700000000779e-05, 2.108300000000507e-05, 2.2055999999992526e-05, 2.113900000000335e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.923" endtime="20201030 18:28:14.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.918" endtime="20201030 18:28:14.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.929" endtime="20201030 18:28:14.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.927" endtime="20201030 18:28:14.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.926" endtime="20201030 18:28:14.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.515" endtime="20201030 18:28:14.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.514" endtime="20201030 18:28:14.950"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.958" endtime="20201030 18:28:14.978"></status>
</kw>
<msg timestamp="20201030 18:28:14.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.957" endtime="20201030 18:28:14.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.980" endtime="20201030 18:28:14.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.982" endtime="20201030 18:28:14.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.954" endtime="20201030 18:28:14.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.952" endtime="20201030 18:28:14.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.991" endtime="20201030 18:28:15.278"></status>
</kw>
<msg timestamp="20201030 18:28:15.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.990" endtime="20201030 18:28:15.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022078944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.282" endtime="20201030 18:28:15.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.290" endtime="20201030 18:28:15.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.987" endtime="20201030 18:28:15.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.985" endtime="20201030 18:28:15.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.297" level="INFO">${RESULT} = [{'diff': 1.7277999999999044e-05}, {'diff': 2.106900000000203e-05}, {'diff': 2.0194000000001155e-05}, {'diff': 2.306900000000056e-05}, {'diff': 2.012499999999931e-05}, {'diff': 2.1070000000001504e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:15.293" endtime="20201030 18:28:15.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.302" level="INFO">${ACCURACY} = {'diff': [1.7277999999999044e-05, 2.106900000000203e-05, 2.0194000000001155e-05, 2.306900000000056e-05, 2.012499999999931e-05, 2.1070000000001504e-05, 2.106900000000203e-05, 2.1083999999997605e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:15.298" endtime="20201030 18:28:15.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.306" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.305" endtime="20201030 18:28:15.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.308" level="INFO">VALUE: [1.7277999999999044e-05, 2.106900000000203e-05, 2.0194000000001155e-05, 2.306900000000056e-05, 2.012499999999931e-05, 2.1070000000001504e-05, 2.106900000000203e-05, 2.1083999999997605e-05, 2.20830000000026e-05, 2.3027999999997856e-05, 2.106899999999856e-05, 2.112500000000031e-05, 2.116700000000249e-05, 2.20969999999987e-05, 2.1056000000001934e-05, 2.2069999999999035e-05, 2.206899999999956e-05, 2.304100000000142e-05, 2.112500000000031e-05, 2.2999999999998716e-05, 2.1098000000000644e-05, 2.111100000000074e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.109700000000117e-05, 2.015300000000192e-05, 2.1069999999998035e-05, 2.015299999999845e-05, 2.113900000000335e-05, 2.012500000000278e-05, 2.113899999999988e-05, 2.2999999999998716e-05, 2.015299999999845e-05, 2.012499999999931e-05, 2.018100000000106e-05, 2.2999999999998716e-05, 2.2055999999999465e-05, 2.394499999999744e-05, 2.111100000000074e-05, 2.298699999999862e-05, 2.2041999999999895e-05, 2.112500000000031e-05, 2.205499999999999e-05, 2.109700000000117e-05, 2.2958000000000006e-05, 2.1055999999998465e-05, 2.1083999999997605e-05, 2.2028000000000325e-05, 2.015299999999845e-05, 2.10830000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.307" endtime="20201030 18:28:15.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.303" endtime="20201030 18:28:15.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.314" endtime="20201030 18:28:15.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.312" endtime="20201030 18:28:15.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.311" endtime="20201030 18:28:15.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.950" endtime="20201030 18:28:15.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.950" endtime="20201030 18:28:15.337"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.355" endtime="20201030 18:28:15.379"></status>
</kw>
<msg timestamp="20201030 18:28:15.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.352" endtime="20201030 18:28:15.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.382" endtime="20201030 18:28:15.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.387" endtime="20201030 18:28:15.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.347" endtime="20201030 18:28:15.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.342" endtime="20201030 18:28:15.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.408" endtime="20201030 18:28:15.694"></status>
</kw>
<msg timestamp="20201030 18:28:15.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034289403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034310472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.403" endtime="20201030 18:28:15.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034289403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034310472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.698" endtime="20201030 18:28:15.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.706" endtime="20201030 18:28:15.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.397" endtime="20201030 18:28:15.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.394" endtime="20201030 18:28:15.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.713" level="INFO">${RESULT} = [{'diff': 2.106899999999856e-05}, {'diff': 2.115300000000292e-05}, {'diff': 2.108299999999813e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.013900000000235e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:15.710" endtime="20201030 18:28:15.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.717" level="INFO">${ACCURACY} = {'diff': [2.106899999999856e-05, 2.115300000000292e-05, 2.108299999999813e-05, 2.3028000000001325e-05, 2.2069999999999035e-05, 2.013900000000235e-05, 2.011099999999627e-05, 2.3957999999997537e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 18:28:15.714" endtime="20201030 18:28:15.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.722" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.720" endtime="20201030 18:28:15.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.724" level="INFO">VALUE: [2.106899999999856e-05, 2.115300000000292e-05, 2.108299999999813e-05, 2.3028000000001325e-05, 2.2069999999999035e-05, 2.013900000000235e-05, 2.011099999999627e-05, 2.3957999999997537e-05, 2.2069999999999035e-05, 2.2028000000000325e-05, 2.106899999999856e-05, 2.10969999999977e-05, 2.206899999999956e-05, 2.2999999999995246e-05, 2.206899999999956e-05, 2.308300000000013e-05, 2.10969999999977e-05, 2.104099999999942e-05, 2.1069999999998035e-05, 2.008299999999713e-05, 2.2930000000004336e-05, 2.2055999999999465e-05, 2.016700000000149e-05, 2.1000000000000185e-05, 2.015300000000192e-05, 2.106899999999856e-05, 2.1097999999997175e-05, 2.112500000000378e-05, 2.208299999999913e-05, 2.012500000000278e-05, 2.3000000000002185e-05, 2.012499999999584e-05, 2.2014000000000755e-05, 2.3027999999994386e-05, 2.208299999999913e-05, 2.112499999999684e-05, 2.202700000000085e-05, 2.2999999999995246e-05, 2.202700000000085e-05, 2.306900000000056e-05, 2.208299999999913e-05, 2.2028000000000325e-05, 2.106899999999856e-05, 2.10969999999977e-05, 2.108299999999813e-05, 2.2041999999999895e-05, 2.2000000000001185e-05, 2.113900000000335e-05, 2.20969999999987e-05, 2.2986000000002615e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.723" endtime="20201030 18:28:15.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.718" endtime="20201030 18:28:15.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.729" endtime="20201030 18:28:15.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.727" endtime="20201030 18:28:15.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.726" endtime="20201030 18:28:15.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.339" endtime="20201030 18:28:15.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.338" endtime="20201030 18:28:15.749"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.759" endtime="20201030 18:28:15.776"></status>
</kw>
<msg timestamp="20201030 18:28:15.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.757" endtime="20201030 18:28:15.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.778" endtime="20201030 18:28:15.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.780" endtime="20201030 18:28:15.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.755" endtime="20201030 18:28:15.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.752" endtime="20201030 18:28:15.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.789" endtime="20201030 18:28:16.074"></status>
</kw>
<msg timestamp="20201030 18:28:16.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.788" endtime="20201030 18:28:16.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020977472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.078" endtime="20201030 18:28:16.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.086" endtime="20201030 18:28:16.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.785" endtime="20201030 18:28:16.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.784" endtime="20201030 18:28:16.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.093" level="INFO">${RESULT} = [{'diff': 3.443000000000196e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.3040999999997952e-05}, {'diff': 2.304100000000142e-05}, {'diff': 2.3055999999996996e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:16.090" endtime="20201030 18:28:16.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.098" level="INFO">${ACCURACY} = {'diff': [3.443000000000196e-05, 2.2014000000000755e-05, 2.112500000000031e-05, 2.3040999999997952e-05, 2.304100000000142e-05, 2.3055999999996996e-05, 2.013899999999888e-05, 2.2041999999999895e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:16.094" endtime="20201030 18:28:16.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.102" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.101" endtime="20201030 18:28:16.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.105" level="INFO">VALUE: [3.443000000000196e-05, 2.2014000000000755e-05, 2.112500000000031e-05, 2.3040999999997952e-05, 2.304100000000142e-05, 2.3055999999996996e-05, 2.013899999999888e-05, 2.2041999999999895e-05, 2.208299999999913e-05, 2.209700000000217e-05, 2.3070000000000035e-05, 2.206899999999956e-05, 2.1070000000001504e-05, 2.011099999999974e-05, 2.3042000000000895e-05, 2.118099999999859e-05, 2.1986000000001615e-05, 2.208299999999913e-05, 2.113899999999988e-05, 2.106899999999856e-05, 2.2055999999999465e-05, 2.108299999999813e-05, 2.2985999999999146e-05, 2.2041999999999895e-05, 1.9207999999999725e-05, 2.3013999999998286e-05, 2.20830000000026e-05, 2.018100000000106e-05, 2.106900000000203e-05, 2.2055999999999465e-05, 2.3986000000000146e-05, 2.2041999999999895e-05, 2.208299999999913e-05, 2.2069999999999035e-05, 2.102699999999985e-05, 2.016700000000149e-05, 2.112500000000031e-05, 2.3070000000000035e-05, 2.218099999999959e-05, 2.3000000000002185e-05, 2.1069999999998035e-05, 2.013899999999888e-05, 2.1151999999999976e-05, 2.3041999999997426e-05, 2.111100000000074e-05, 2.2112000000001214e-05, 2.013900000000235e-05, 2.015300000000192e-05, 2.4013999999999286e-05, 2.2971999999999576e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.103" endtime="20201030 18:28:16.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.098" endtime="20201030 18:28:16.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.109" endtime="20201030 18:28:16.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.108" endtime="20201030 18:28:16.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.107" endtime="20201030 18:28:16.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.750" endtime="20201030 18:28:16.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.750" endtime="20201030 18:28:16.130"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.139" endtime="20201030 18:28:16.158"></status>
</kw>
<msg timestamp="20201030 18:28:16.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.137" endtime="20201030 18:28:16.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.159" endtime="20201030 18:28:16.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.162" endtime="20201030 18:28:16.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.135" endtime="20201030 18:28:16.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.133" endtime="20201030 18:28:16.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.171" endtime="20201030 18:28:16.456"></status>
</kw>
<msg timestamp="20201030 18:28:16.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022217681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.169" endtime="20201030 18:28:16.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022217681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.461" endtime="20201030 18:28:16.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.469" endtime="20201030 18:28:16.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.167" endtime="20201030 18:28:16.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.165" endtime="20201030 18:28:16.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.476" level="INFO">${RESULT} = [{'diff': 1.8236000000001334e-05}, {'diff': 2.012499999999931e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.10830000000016e-05}, {'diff': 2.2084000000002074e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:16.472" endtime="20201030 18:28:16.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.481" level="INFO">${ACCURACY} = {'diff': [1.8236000000001334e-05, 2.012499999999931e-05, 2.2971999999999576e-05, 2.3042000000000895e-05, 2.10830000000016e-05, 2.2084000000002074e-05, 2.2041999999999895e-05, 2.2028000000000325e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:16.476" endtime="20201030 18:28:16.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.485" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.484" endtime="20201030 18:28:16.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.488" level="INFO">VALUE: [1.8236000000001334e-05, 2.012499999999931e-05, 2.2971999999999576e-05, 2.3042000000000895e-05, 2.10830000000016e-05, 2.2084000000002074e-05, 2.2041999999999895e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.3027999999997856e-05, 2.2070000000002504e-05, 2.2084000000002074e-05, 2.1070000000001504e-05, 2.106899999999856e-05, 2.011099999999974e-05, 2.012499999999931e-05, 2.2041999999999895e-05, 2.3014000000001755e-05, 2.304100000000142e-05, 2.3055999999996996e-05, 2.015300000000192e-05, 2.1985999999998146e-05, 2.1986000000001615e-05, 2.3028000000001325e-05, 2.20969999999987e-05, 2.2070000000002504e-05, 2.3028000000001325e-05, 2.109700000000117e-05, 2.3042000000000895e-05, 2.011099999999974e-05, 2.3056000000000465e-05, 2.2041999999999895e-05, 2.3026999999998382e-05, 2.3070000000000035e-05, 2.013899999999888e-05, 2.113899999999988e-05, 2.10830000000016e-05, 2.0137999999999406e-05, 2.012499999999931e-05, 2.297299999999905e-05, 2.30969999999997e-05, 2.1013999999999755e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2014000000000755e-05, 2.206899999999956e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.2985999999999146e-05, 2.306900000000056e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.486" endtime="20201030 18:28:16.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.482" endtime="20201030 18:28:16.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.492" endtime="20201030 18:28:16.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.491" endtime="20201030 18:28:16.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.490" endtime="20201030 18:28:16.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.131" endtime="20201030 18:28:16.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.130" endtime="20201030 18:28:16.513"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.522" endtime="20201030 18:28:16.540"></status>
</kw>
<msg timestamp="20201030 18:28:16.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.520" endtime="20201030 18:28:16.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.541" endtime="20201030 18:28:16.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.544" endtime="20201030 18:28:16.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.518" endtime="20201030 18:28:16.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.516" endtime="20201030 18:28:16.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.553" endtime="20201030 18:28:16.839"></status>
</kw>
<msg timestamp="20201030 18:28:16.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020926972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.551" endtime="20201030 18:28:16.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020926972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.843" endtime="20201030 18:28:16.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.852" endtime="20201030 18:28:16.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.548" endtime="20201030 18:28:16.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.547" endtime="20201030 18:28:16.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.858" level="INFO">${RESULT} = [{'diff': 3.541700000000286e-05}, {'diff': 2.015300000000192e-05}, {'diff': 2.2069999999999035e-05}, {'diff': 2.011100000000321e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.112500000000031e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:16.855" endtime="20201030 18:28:16.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.862" level="INFO">${ACCURACY} = {'diff': [3.541700000000286e-05, 2.015300000000192e-05, 2.2069999999999035e-05, 2.011100000000321e-05, 2.3027999999997856e-05, 2.112500000000031e-05, 2.2041999999999895e-05, 2.2014000000000755e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:16.859" endtime="20201030 18:28:16.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.867" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.866" endtime="20201030 18:28:16.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.869" level="INFO">VALUE: [3.541700000000286e-05, 2.015300000000192e-05, 2.2069999999999035e-05, 2.011100000000321e-05, 2.3027999999997856e-05, 2.112500000000031e-05, 2.2041999999999895e-05, 2.2014000000000755e-05, 2.109700000000117e-05, 2.1179999999999116e-05, 2.211100000000174e-05, 2.2069999999999035e-05, 2.013899999999888e-05, 2.293099999999687e-05, 2.2999999999998716e-05, 2.2971999999999576e-05, 2.0165999999998546e-05, 2.3070000000000035e-05, 2.013899999999888e-05, 2.2000000000001185e-05, 2.016699999999802e-05, 2.111100000000074e-05, 2.1999999999997716e-05, 2.2014000000000755e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.016699999999802e-05, 2.3012999999998812e-05, 2.1056000000001934e-05, 2.2014000000000755e-05, 2.1069999999998035e-05, 2.012499999999931e-05, 2.019500000000063e-05, 2.3013999999998286e-05, 2.3040999999997952e-05, 2.2986000000002615e-05, 2.109700000000117e-05, 2.1097999999997175e-05, 2.1084000000001074e-05, 2.111100000000074e-05, 2.011099999999974e-05, 2.2026999999997382e-05, 2.111099999999727e-05, 2.1112000000000214e-05, 2.10830000000016e-05, 2.206899999999956e-05, 2.295899999999948e-05, 2.297299999999905e-05, 2.1056000000001934e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.868" endtime="20201030 18:28:16.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.863" endtime="20201030 18:28:16.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.874" endtime="20201030 18:28:16.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.873" endtime="20201030 18:28:16.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.872" endtime="20201030 18:28:16.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.514" endtime="20201030 18:28:16.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.513" endtime="20201030 18:28:16.895"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.904" endtime="20201030 18:28:16.922"></status>
</kw>
<msg timestamp="20201030 18:28:16.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.903" endtime="20201030 18:28:16.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.924" endtime="20201030 18:28:16.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.926" endtime="20201030 18:28:16.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.899" endtime="20201030 18:28:16.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.897" endtime="20201030 18:28:16.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.935" endtime="20201030 18:28:17.221"></status>
</kw>
<msg timestamp="20201030 18:28:17.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021061472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.934" endtime="20201030 18:28:17.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021061472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.225" endtime="20201030 18:28:17.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.233" endtime="20201030 18:28:17.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.931" endtime="20201030 18:28:17.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.930" endtime="20201030 18:28:17.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.240" level="INFO">${RESULT} = [{'diff': 2.9750000000001997e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.3070000000000035e-05}, {'diff': 2.10830000000016e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:17.237" endtime="20201030 18:28:17.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.244" level="INFO">${ACCURACY} = {'diff': [2.9750000000001997e-05, 2.2055999999999465e-05, 2.3000000000002185e-05, 2.016699999999802e-05, 2.3070000000000035e-05, 2.10830000000016e-05, 2.2971999999999576e-05, 2.3056000000000465e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:17.241" endtime="20201030 18:28:17.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.249" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.248" endtime="20201030 18:28:17.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.252" level="INFO">VALUE: [2.9750000000001997e-05, 2.2055999999999465e-05, 2.3000000000002185e-05, 2.016699999999802e-05, 2.3070000000000035e-05, 2.10830000000016e-05, 2.2971999999999576e-05, 2.3056000000000465e-05, 2.1151999999999976e-05, 2.3041999999997426e-05, 2.115299999999945e-05, 2.297300000000252e-05, 2.108299999999813e-05, 2.2999999999998716e-05, 2.012499999999931e-05, 2.208299999999913e-05, 2.015299999999845e-05, 2.206900000000303e-05, 2.3014000000001755e-05, 2.0137999999999406e-05, 2.013899999999888e-05, 2.10830000000016e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.109700000000117e-05, 2.016700000000149e-05, 2.3042000000000895e-05, 2.012499999999931e-05, 2.113899999999988e-05, 2.10969999999977e-05, 2.10830000000016e-05, 2.106899999999856e-05, 2.2986000000002615e-05, 2.3042000000000895e-05, 2.109700000000117e-05, 2.2971999999999576e-05, 2.2055999999999465e-05, 2.106900000000203e-05, 2.109700000000117e-05, 2.206899999999956e-05, 2.213900000000088e-05, 2.3068999999997092e-05, 2.2026999999997382e-05, 2.3012999999998812e-05, 2.1958000000002476e-05, 2.3916000000002297e-05, 2.106899999999856e-05, 2.0151999999998976e-05, 2.109700000000117e-05, 2.012499999999931e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.250" endtime="20201030 18:28:17.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.245" endtime="20201030 18:28:17.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.256" endtime="20201030 18:28:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.255" endtime="20201030 18:28:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.254" endtime="20201030 18:28:17.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.896" endtime="20201030 18:28:17.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.895" endtime="20201030 18:28:17.277"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.286" endtime="20201030 18:28:17.304"></status>
</kw>
<msg timestamp="20201030 18:28:17.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.284" endtime="20201030 18:28:17.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.306" endtime="20201030 18:28:17.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.308" endtime="20201030 18:28:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.282" endtime="20201030 18:28:17.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.280" endtime="20201030 18:28:17.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.317" endtime="20201030 18:28:17.602"></status>
</kw>
<msg timestamp="20201030 18:28:17.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020596819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.316" endtime="20201030 18:28:17.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020596819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.606" endtime="20201030 18:28:17.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.615" endtime="20201030 18:28:17.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.313" endtime="20201030 18:28:17.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.311" endtime="20201030 18:28:17.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.621" level="INFO">${RESULT} = [{'diff': 1.4402999999999638e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.0137999999999406e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:17.618" endtime="20201030 18:28:17.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.626" level="INFO">${ACCURACY} = {'diff': [1.4402999999999638e-05, 2.10969999999977e-05, 2.113899999999988e-05, 2.20969999999987e-05, 2.111100000000074e-05, 2.0137999999999406e-05, 2.304100000000142e-05, 2.302700000000185e-05, 2.2986...</msg>
<status status="PASS" starttime="20201030 18:28:17.622" endtime="20201030 18:28:17.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.630" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.629" endtime="20201030 18:28:17.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.633" level="INFO">VALUE: [1.4402999999999638e-05, 2.10969999999977e-05, 2.113899999999988e-05, 2.20969999999987e-05, 2.111100000000074e-05, 2.0137999999999406e-05, 2.304100000000142e-05, 2.302700000000185e-05, 2.2986000000002615e-05, 2.2013999999997286e-05, 2.2958000000000006e-05, 2.108299999999813e-05, 2.015300000000192e-05, 2.297299999999905e-05, 2.1084000000001074e-05, 2.3013999999998286e-05, 2.2112000000001214e-05, 2.113899999999988e-05, 2.2985999999999146e-05, 2.2055999999999465e-05, 2.311099999999927e-05, 2.016699999999802e-05, 2.1070000000001504e-05, 2.019500000000063e-05, 2.1070000000001504e-05, 2.2028000000000325e-05, 2.213900000000088e-05, 2.113899999999988e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.112500000000031e-05, 2.3042000000000895e-05, 2.2056000000002934e-05, 2.0151999999998976e-05, 2.2042000000003364e-05, 2.109700000000117e-05, 2.2944000000000436e-05, 2.3012999999998812e-05, 2.111099999999727e-05, 2.10969999999977e-05, 2.112499999999684e-05, 2.30969999999997e-05, 2.0137999999999406e-05, 2.202700000000085e-05, 2.1069999999998035e-05, 2.109700000000117e-05, 2.2041999999999895e-05, 2.108299999999813e-05, 2.213899999999741e-05, 2.208299999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.632" endtime="20201030 18:28:17.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.627" endtime="20201030 18:28:17.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.638" endtime="20201030 18:28:17.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.636" endtime="20201030 18:28:17.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.635" endtime="20201030 18:28:17.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.278" endtime="20201030 18:28:17.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.278" endtime="20201030 18:28:17.659"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.667" endtime="20201030 18:28:17.686"></status>
</kw>
<msg timestamp="20201030 18:28:17.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.666" endtime="20201030 18:28:17.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.687" endtime="20201030 18:28:17.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.690" endtime="20201030 18:28:17.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.663" endtime="20201030 18:28:17.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.661" endtime="20201030 18:28:17.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.699" endtime="20201030 18:28:17.986"></status>
</kw>
<msg timestamp="20201030 18:28:17.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020980875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021015278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.697" endtime="20201030 18:28:17.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020980875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021015278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.990" endtime="20201030 18:28:17.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.998" endtime="20201030 18:28:18.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.695" endtime="20201030 18:28:18.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.693" endtime="20201030 18:28:18.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.005" level="INFO">${RESULT} = [{'diff': 3.4402999999998823e-05}, {'diff': 2.0151999999998976e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2915999999997827e-05}, {'diff': 2.1084000000001074e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:18.001" endtime="20201030 18:28:18.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.009" level="INFO">${ACCURACY} = {'diff': [3.4402999999998823e-05, 2.0151999999998976e-05, 2.20969999999987e-05, 2.205499999999999e-05, 2.2915999999997827e-05, 2.1084000000001074e-05, 2.3014000000001755e-05, 2.115299999999945e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:18.006" endtime="20201030 18:28:18.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.013" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.012" endtime="20201030 18:28:18.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.016" level="INFO">VALUE: [3.4402999999998823e-05, 2.0151999999998976e-05, 2.20969999999987e-05, 2.205499999999999e-05, 2.2915999999997827e-05, 2.1084000000001074e-05, 2.3014000000001755e-05, 2.115299999999945e-05, 2.113899999999988e-05, 2.202700000000085e-05, 2.109700000000117e-05, 2.011099999999974e-05, 2.3000000000002185e-05, 2.0222000000000295e-05, 2.111100000000074e-05, 2.013899999999888e-05, 2.3972000000000576e-05, 2.2014000000000755e-05, 2.2999999999998716e-05, 2.201300000000128e-05, 2.3013999999998286e-05, 2.3013999999998286e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.297300000000252e-05, 2.111100000000074e-05, 2.3000000000002185e-05, 2.10969999999977e-05, 2.112500000000031e-05, 2.2056000000002934e-05, 2.10969999999977e-05, 2.012499999999931e-05, 2.306900000000056e-05, 2.016699999999802e-05, 2.2069999999999035e-05, 2.1098000000000644e-05, 2.2028000000000325e-05, 2.109700000000117e-05, 2.206899999999956e-05, 2.015300000000192e-05, 2.208299999999913e-05, 2.10969999999977e-05, 2.015299999999845e-05, 2.1027999999999325e-05, 2.2971999999999576e-05, 2.204100000000042e-05, 2.2986000000002615e-05, 2.2999999999998716e-05, 2.013899999999888e-05, 2.0180000000001586e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.014" endtime="20201030 18:28:18.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.010" endtime="20201030 18:28:18.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.020" endtime="20201030 18:28:18.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.019" endtime="20201030 18:28:18.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.018" endtime="20201030 18:28:18.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.659" endtime="20201030 18:28:18.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.659" endtime="20201030 18:28:18.046"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.059" endtime="20201030 18:28:18.083"></status>
</kw>
<msg timestamp="20201030 18:28:18.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.057" endtime="20201030 18:28:18.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.084" endtime="20201030 18:28:18.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.087" endtime="20201030 18:28:18.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.054" endtime="20201030 18:28:18.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.049" endtime="20201030 18:28:18.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.096" endtime="20201030 18:28:18.404"></status>
</kw>
<msg timestamp="20201030 18:28:18.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035222139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.095" endtime="20201030 18:28:18.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035222139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035243222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.408" endtime="20201030 18:28:18.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.417" endtime="20201030 18:28:18.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.092" endtime="20201030 18:28:18.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.090" endtime="20201030 18:28:18.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.424" level="INFO">${RESULT} = [{'diff': 2.108299999999813e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.0151999999995507e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.1070000000004974e-05}, {'diff': 2.109700000000464e-05...</msg>
<status status="PASS" starttime="20201030 18:28:18.420" endtime="20201030 18:28:18.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.428" level="INFO">${ACCURACY} = {'diff': [2.108299999999813e-05, 2.3028000000001325e-05, 2.0151999999995507e-05, 2.2041999999999895e-05, 2.1070000000004974e-05, 2.109700000000464e-05, 2.2028000000000325e-05, 2.2930000000004336e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:18.425" endtime="20201030 18:28:18.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.433" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.432" endtime="20201030 18:28:18.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.435" level="INFO">VALUE: [2.108299999999813e-05, 2.3028000000001325e-05, 2.0151999999995507e-05, 2.2041999999999895e-05, 2.1070000000004974e-05, 2.109700000000464e-05, 2.2028000000000325e-05, 2.2930000000004336e-05, 2.2041999999999895e-05, 2.108299999999813e-05, 2.0263999999999005e-05, 2.394499999999744e-05, 2.2041999999999895e-05, 2.2986000000002615e-05, 2.1112000000003683e-05, 2.111100000000421e-05, 2.3014000000001755e-05, 2.0180000000001586e-05, 2.308300000000013e-05, 2.1070000000004974e-05, 2.011099999999627e-05, 2.297300000000252e-05, 2.10690000000055e-05, 2.015300000000192e-05, 2.1111999999996744e-05, 2.10969999999977e-05, 2.0112000000002683e-05, 2.1013999999999755e-05, 2.00969999999967e-05, 2.3000000000002185e-05, 2.2971999999996107e-05, 2.1069999999998035e-05, 2.009700000000364e-05, 2.106899999999856e-05, 2.204100000000042e-05, 2.3014000000001755e-05, 2.112499999999684e-05, 2.2055999999999465e-05, 2.2916000000004766e-05, 2.2972000000003046e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.108299999999813e-05, 2.202700000000085e-05, 2.3028000000001325e-05, 2.012499999999584e-05, 2.2028000000000325e-05, 2.2986000000002615e-05, 2.1055999999998465e-05, 2.1069999999998035e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.434" endtime="20201030 18:28:18.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.429" endtime="20201030 18:28:18.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.446" endtime="20201030 18:28:18.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.444" endtime="20201030 18:28:18.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.443" endtime="20201030 18:28:18.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.047" endtime="20201030 18:28:18.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.046" endtime="20201030 18:28:18.467"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.476" endtime="20201030 18:28:18.495"></status>
</kw>
<msg timestamp="20201030 18:28:18.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.474" endtime="20201030 18:28:18.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.497" endtime="20201030 18:28:18.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.499" endtime="20201030 18:28:18.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.471" endtime="20201030 18:28:18.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.469" endtime="20201030 18:28:18.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.508" endtime="20201030 18:28:18.793"></status>
</kw>
<msg timestamp="20201030 18:28:18.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.507" endtime="20201030 18:28:18.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021939958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.798" endtime="20201030 18:28:18.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.806" endtime="20201030 18:28:18.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.504" endtime="20201030 18:28:18.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.502" endtime="20201030 18:28:18.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.813" level="INFO">${RESULT} = [{'diff': 1.355499999999843e-05}, {'diff': 2.1069999999998035e-05}, {'diff': 2.0151999999998976e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.209700000000217e-05}, {'diff': 2.298699999999862e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:18.810" endtime="20201030 18:28:18.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.818" level="INFO">${ACCURACY} = {'diff': [1.355499999999843e-05, 2.1069999999998035e-05, 2.0151999999998976e-05, 2.112500000000031e-05, 2.209700000000217e-05, 2.298699999999862e-05, 2.208299999999913e-05, 2.015299999999845e-05, 2.20...</msg>
<status status="PASS" starttime="20201030 18:28:18.814" endtime="20201030 18:28:18.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.823" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.822" endtime="20201030 18:28:18.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.826" level="INFO">VALUE: [1.355499999999843e-05, 2.1069999999998035e-05, 2.0151999999998976e-05, 2.112500000000031e-05, 2.209700000000217e-05, 2.298699999999862e-05, 2.208299999999913e-05, 2.015299999999845e-05, 2.2098000000001644e-05, 2.1098000000000644e-05, 2.012499999999931e-05, 2.20830000000026e-05, 2.204100000000042e-05, 2.0137999999999406e-05, 2.3000000000002185e-05, 2.3042000000000895e-05, 2.3028000000001325e-05, 2.2999999999998716e-05, 2.2028000000000325e-05, 2.3070000000000035e-05, 2.106900000000203e-05, 2.113899999999988e-05, 2.0166000000002016e-05, 2.011099999999974e-05, 2.2069999999999035e-05, 2.1069999999998035e-05, 2.2041999999999895e-05, 2.109700000000117e-05, 2.0179999999998116e-05, 2.106899999999856e-05, 2.012499999999931e-05, 2.297300000000252e-05, 2.10969999999977e-05, 2.111100000000074e-05, 2.1138000000000406e-05, 2.2999999999998716e-05, 2.3014000000001755e-05, 2.205499999999999e-05, 2.015300000000192e-05, 2.1083999999997605e-05, 2.011100000000321e-05, 2.3999999999999716e-05, 2.008299999999713e-05, 2.205499999999999e-05, 2.10969999999977e-05, 2.0179999999998116e-05, 2.20830000000026e-05, 2.2014000000000755e-05, 2.3000000000002185e-05, 2.1084000000001074e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.824" endtime="20201030 18:28:18.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.819" endtime="20201030 18:28:18.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.831" endtime="20201030 18:28:18.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.829" endtime="20201030 18:28:18.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.828" endtime="20201030 18:28:18.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.468" endtime="20201030 18:28:18.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.467" endtime="20201030 18:28:18.852"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.861" endtime="20201030 18:28:18.882"></status>
</kw>
<msg timestamp="20201030 18:28:18.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.859" endtime="20201030 18:28:18.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.884" endtime="20201030 18:28:18.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.886" endtime="20201030 18:28:18.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.856" endtime="20201030 18:28:18.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.854" endtime="20201030 18:28:18.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.896" endtime="20201030 18:28:19.183"></status>
</kw>
<msg timestamp="20201030 18:28:19.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023663764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023685778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.894" endtime="20201030 18:28:19.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023663764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023685778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.188" endtime="20201030 18:28:19.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.196" endtime="20201030 18:28:19.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.891" endtime="20201030 18:28:19.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.889" endtime="20201030 18:28:19.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.203" level="INFO">${RESULT} = [{'diff': 2.2014000000000755e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.1070000000001504e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.106899999999856e-05}, {'diff': 2.304100000000142e-05...</msg>
<status status="PASS" starttime="20201030 18:28:19.200" endtime="20201030 18:28:19.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.208" level="INFO">${ACCURACY} = {'diff': [2.2014000000000755e-05, 2.2041999999999895e-05, 2.1070000000001504e-05, 2.2985999999999146e-05, 2.106899999999856e-05, 2.304100000000142e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:19.204" endtime="20201030 18:28:19.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.212" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.211" endtime="20201030 18:28:19.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.215" level="INFO">VALUE: [2.2014000000000755e-05, 2.2041999999999895e-05, 2.1070000000001504e-05, 2.2985999999999146e-05, 2.106899999999856e-05, 2.304100000000142e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.2999999999998716e-05, 2.012499999999931e-05, 2.1070000000001504e-05, 2.208299999999913e-05, 2.3083999999999605e-05, 2.2986000000002615e-05, 2.105500000000246e-05, 2.105499999999899e-05, 2.2028000000000325e-05, 2.2999999999998716e-05, 2.109700000000117e-05, 2.2069999999999035e-05, 2.012499999999931e-05, 2.016699999999802e-05, 2.015299999999845e-05, 2.2041999999999895e-05, 2.295899999999948e-05, 2.2999999999998716e-05, 2.112500000000031e-05, 2.304100000000142e-05, 2.112499999999684e-05, 2.2971999999999576e-05, 2.393100000000134e-05, 2.012500000000278e-05, 2.2999999999998716e-05, 2.2985999999999146e-05, 2.108299999999813e-05, 2.3056000000000465e-05, 2.3028000000001325e-05, 2.1070000000001504e-05, 2.2028000000000325e-05, 2.10830000000016e-05, 2.2027999999996856e-05, 2.209700000000217e-05, 2.111100000000074e-05, 2.3000000000002185e-05, 2.105499999999899e-05, 2.1056000000001934e-05, 2.3929999999998397e-05, 2.3042000000000895e-05, 2.206899999999956e-05, 2.015299999999845e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.213" endtime="20201030 18:28:19.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.209" endtime="20201030 18:28:19.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.220" endtime="20201030 18:28:19.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.219" endtime="20201030 18:28:19.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.217" endtime="20201030 18:28:19.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.853" endtime="20201030 18:28:19.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.852" endtime="20201030 18:28:19.241"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.250" endtime="20201030 18:28:19.274"></status>
</kw>
<msg timestamp="20201030 18:28:19.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.248" endtime="20201030 18:28:19.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.275" endtime="20201030 18:28:19.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.278" endtime="20201030 18:28:19.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.246" endtime="20201030 18:28:19.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.244" endtime="20201030 18:28:19.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.287" endtime="20201030 18:28:19.574"></status>
</kw>
<msg timestamp="20201030 18:28:19.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026252069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.286" endtime="20201030 18:28:19.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026252069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026286639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.578" endtime="20201030 18:28:19.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.586" endtime="20201030 18:28:19.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.283" endtime="20201030 18:28:19.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.281" endtime="20201030 18:28:19.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.593" level="INFO">${RESULT} = [{'diff': 3.457000000000113e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.012500000000278e-05}, {'diff': 2.39030000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:19.590" endtime="20201030 18:28:19.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.598" level="INFO">${ACCURACY} = {'diff': [3.457000000000113e-05, 2.016699999999802e-05, 2.111100000000074e-05, 2.116700000000249e-05, 2.012500000000278e-05, 2.39030000000022e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.2999...</msg>
<status status="PASS" starttime="20201030 18:28:19.594" endtime="20201030 18:28:19.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.602" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.601" endtime="20201030 18:28:19.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.606" level="INFO">VALUE: [3.457000000000113e-05, 2.016699999999802e-05, 2.111100000000074e-05, 2.116700000000249e-05, 2.012500000000278e-05, 2.39030000000022e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.2999999999998716e-05, 2.112500000000031e-05, 2.208299999999913e-05, 2.111099999999727e-05, 2.113899999999988e-05, 2.013899999999888e-05, 2.112500000000031e-05, 2.106900000000203e-05, 2.2958000000000006e-05, 2.3014000000001755e-05, 2.115299999999945e-05, 2.0165999999998546e-05, 2.205499999999999e-05, 2.013899999999888e-05, 2.204100000000042e-05, 2.2084000000002074e-05, 2.2014000000000755e-05, 2.012499999999931e-05, 2.1069999999998035e-05, 2.2055999999999465e-05, 2.015300000000192e-05, 2.206899999999956e-05, 2.306900000000056e-05, 2.2985999999999146e-05, 2.202700000000085e-05, 2.113899999999988e-05, 2.2069999999999035e-05, 2.0180000000001586e-05, 2.2056000000002934e-05, 2.2028000000000325e-05, 2.2028000000000325e-05, 2.3014000000001755e-05, 2.013899999999888e-05, 2.2013999999997286e-05, 2.3028000000001325e-05, 2.2083999999998605e-05, 2.111100000000074e-05, 2.2971999999999576e-05, 2.3000000000002185e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.205499999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.603" endtime="20201030 18:28:19.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.598" endtime="20201030 18:28:19.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.611" endtime="20201030 18:28:19.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.609" endtime="20201030 18:28:19.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.608" endtime="20201030 18:28:19.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.242" endtime="20201030 18:28:19.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.241" endtime="20201030 18:28:19.632"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.641" endtime="20201030 18:28:19.662"></status>
</kw>
<msg timestamp="20201030 18:28:19.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.639" endtime="20201030 18:28:19.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.664" endtime="20201030 18:28:19.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.666" endtime="20201030 18:28:19.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.636" endtime="20201030 18:28:19.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.634" endtime="20201030 18:28:19.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.676" endtime="20201030 18:28:19.963"></status>
</kw>
<msg timestamp="20201030 18:28:19.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.674" endtime="20201030 18:28:19.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022299556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.967" endtime="20201030 18:28:19.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.976" endtime="20201030 18:28:19.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.672" endtime="20201030 18:28:19.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.670" endtime="20201030 18:28:19.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.983" level="INFO">${RESULT} = [{'diff': 2.5874999999998122e-05}, {'diff': 2.015300000000192e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.113899999999988e-05}, {'diff': 2.3014000000001755e-05}, {'diff': 2.2985999999999146e-05...</msg>
<status status="PASS" starttime="20201030 18:28:19.979" endtime="20201030 18:28:19.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.988" level="INFO">${ACCURACY} = {'diff': [2.5874999999998122e-05, 2.015300000000192e-05, 2.2041999999999895e-05, 2.113899999999988e-05, 2.3014000000001755e-05, 2.2985999999999146e-05, 2.2000000000001185e-05, 2.109700000000117e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:19.984" endtime="20201030 18:28:19.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.993" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.992" endtime="20201030 18:28:19.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.995" level="INFO">VALUE: [2.5874999999998122e-05, 2.015300000000192e-05, 2.2041999999999895e-05, 2.113899999999988e-05, 2.3014000000001755e-05, 2.2985999999999146e-05, 2.2000000000001185e-05, 2.109700000000117e-05, 2.2999999999998716e-05, 2.206899999999956e-05, 2.206899999999956e-05, 2.1070000000001504e-05, 2.012500000000278e-05, 2.105499999999899e-05, 2.011099999999974e-05, 2.3056000000000465e-05, 2.112499999999684e-05, 2.301300000000228e-05, 2.205499999999999e-05, 2.3000000000002185e-05, 2.2985999999999146e-05, 2.2097999999998175e-05, 2.209700000000217e-05, 2.3014000000001755e-05, 2.3028000000001325e-05, 2.015300000000192e-05, 2.2028000000000325e-05, 2.016699999999802e-05, 2.302700000000185e-05, 2.106899999999856e-05, 2.2000000000001185e-05, 2.1098000000000644e-05, 2.009700000000017e-05, 2.305500000000099e-05, 2.206899999999956e-05, 2.2971999999999576e-05, 2.109700000000117e-05, 2.2985999999999146e-05, 2.016699999999802e-05, 2.106900000000203e-05, 2.012499999999931e-05, 2.018100000000106e-05, 2.302700000000185e-05, 2.1985999999998146e-05, 2.013899999999888e-05, 2.205499999999999e-05, 2.305500000000099e-05, 2.016699999999802e-05, 2.011099999999974e-05, 2.3041999999997426e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.994" endtime="20201030 18:28:19.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.989" endtime="20201030 18:28:19.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.001" endtime="20201030 18:28:20.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.999" endtime="20201030 18:28:20.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.998" endtime="20201030 18:28:20.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.633" endtime="20201030 18:28:20.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.632" endtime="20201030 18:28:20.022"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.030" endtime="20201030 18:28:20.052"></status>
</kw>
<msg timestamp="20201030 18:28:20.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.029" endtime="20201030 18:28:20.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.053" endtime="20201030 18:28:20.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.056" endtime="20201030 18:28:20.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.026" endtime="20201030 18:28:20.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.024" endtime="20201030 18:28:20.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.065" endtime="20201030 18:28:20.352"></status>
</kw>
<msg timestamp="20201030 18:28:20.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024529444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.064" endtime="20201030 18:28:20.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024494917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024529444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.357" endtime="20201030 18:28:20.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.365" endtime="20201030 18:28:20.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.061" endtime="20201030 18:28:20.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.059" endtime="20201030 18:28:20.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.372" level="INFO">${RESULT} = [{'diff': 3.4526999999999475e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.0111999999999214e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.013899999999888e-05...</msg>
<status status="PASS" starttime="20201030 18:28:20.369" endtime="20201030 18:28:20.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.376" level="INFO">${ACCURACY} = {'diff': [3.4526999999999475e-05, 2.208299999999913e-05, 2.0111999999999214e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.013899999999888e-05, 2.2985999999999146e-05, 2.3042000000000895e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:20.373" endtime="20201030 18:28:20.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.381" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.380" endtime="20201030 18:28:20.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.384" level="INFO">VALUE: [3.4526999999999475e-05, 2.208299999999913e-05, 2.0111999999999214e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.013899999999888e-05, 2.2985999999999146e-05, 2.3042000000000895e-05, 2.2985999999999146e-05, 2.109700000000117e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.109700000000117e-05, 2.2041999999999895e-05, 2.0152000000002446e-05, 2.018099999999759e-05, 2.112500000000031e-05, 2.2028000000000325e-05, 2.302700000000185e-05, 2.0180000000001586e-05, 2.205499999999999e-05, 2.2014000000000755e-05, 2.10969999999977e-05, 2.016700000000149e-05, 2.2971999999999576e-05, 2.10969999999977e-05, 2.208299999999913e-05, 2.2083999999998605e-05, 2.2986000000002615e-05, 2.2985999999999146e-05, 2.0179999999998116e-05, 2.297299999999905e-05, 2.113899999999988e-05, 2.106900000000203e-05, 2.10969999999977e-05, 2.204100000000042e-05, 2.3012999999998812e-05, 2.0165999999998546e-05, 2.2972000000003046e-05, 2.2013999999997286e-05, 2.012500000000278e-05, 2.212500000000131e-05, 2.3014000000001755e-05, 2.2055999999999465e-05, 2.3028000000001325e-05, 2.113899999999988e-05, 2.2985999999999146e-05, 2.3014000000001755e-05, 2.113899999999988e-05, 2.3026999999998382e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.382" endtime="20201030 18:28:20.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.377" endtime="20201030 18:28:20.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.389" endtime="20201030 18:28:20.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.387" endtime="20201030 18:28:20.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.386" endtime="20201030 18:28:20.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.022" endtime="20201030 18:28:20.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.022" endtime="20201030 18:28:20.410"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.419" endtime="20201030 18:28:20.439"></status>
</kw>
<msg timestamp="20201030 18:28:20.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.417" endtime="20201030 18:28:20.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.440" endtime="20201030 18:28:20.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.443" endtime="20201030 18:28:20.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.414" endtime="20201030 18:28:20.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.412" endtime="20201030 18:28:20.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.452" endtime="20201030 18:28:20.740"></status>
</kw>
<msg timestamp="20201030 18:28:20.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.450" endtime="20201030 18:28:20.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023054028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023071264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.744" endtime="20201030 18:28:20.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.753" endtime="20201030 18:28:20.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.448" endtime="20201030 18:28:20.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.446" endtime="20201030 18:28:20.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.760" level="INFO">${RESULT} = [{'diff': 1.7236000000000334e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.1165999999999546e-05}, {'diff': 2.3014000000001755e-...</msg>
<status status="PASS" starttime="20201030 18:28:20.756" endtime="20201030 18:28:20.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.764" level="INFO">${ACCURACY} = {'diff': [1.7236000000000334e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.2014000000000755e-05, 2.1165999999999546e-05, 2.3014000000001755e-05, 2.011099999999974e-05, 2.3042000000000895e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:20.761" endtime="20201030 18:28:20.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.768" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.767" endtime="20201030 18:28:20.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.772" level="INFO">VALUE: [1.7236000000000334e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.2014000000000755e-05, 2.1165999999999546e-05, 2.3014000000001755e-05, 2.011099999999974e-05, 2.3042000000000895e-05, 2.111099999999727e-05, 2.013900000000235e-05, 2.10969999999977e-05, 2.0084000000000074e-05, 2.011099999999974e-05, 2.2041999999999895e-05, 2.201300000000128e-05, 2.106899999999856e-05, 2.2985999999999146e-05, 2.013899999999888e-05, 2.393099999999787e-05, 2.112500000000031e-05, 2.205499999999999e-05, 2.2014000000000755e-05, 2.1069999999998035e-05, 2.1055999999998465e-05, 2.202700000000085e-05, 2.306900000000056e-05, 2.2999999999998716e-05, 2.015299999999845e-05, 2.291700000000077e-05, 2.2013999999997286e-05, 2.013899999999888e-05, 2.1098000000000644e-05, 2.106899999999856e-05, 2.398699999999962e-05, 2.009700000000017e-05, 2.111100000000074e-05, 2.113900000000335e-05, 2.009700000000017e-05, 2.205499999999999e-05, 2.109700000000117e-05, 2.10830000000016e-05, 2.306900000000056e-05, 2.0165999999998546e-05, 2.202700000000085e-05, 2.2985999999999146e-05, 2.10830000000016e-05, 2.2028000000000325e-05, 2.112499999999684e-05, 2.2055999999999465e-05, 2.2026999999997382e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.770" endtime="20201030 18:28:20.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.765" endtime="20201030 18:28:20.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.777" endtime="20201030 18:28:20.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.776" endtime="20201030 18:28:20.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.774" endtime="20201030 18:28:20.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.411" endtime="20201030 18:28:20.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.410" endtime="20201030 18:28:20.798"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.807" endtime="20201030 18:28:20.825"></status>
</kw>
<msg timestamp="20201030 18:28:20.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.805" endtime="20201030 18:28:20.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.827" endtime="20201030 18:28:20.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.829" endtime="20201030 18:28:20.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.803" endtime="20201030 18:28:20.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.800" endtime="20201030 18:28:20.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.839" endtime="20201030 18:28:21.124"></status>
</kw>
<msg timestamp="20201030 18:28:21.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:20.837" endtime="20201030 18:28:21.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021662, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:21.129" endtime="20201030 18:28:21.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.137" endtime="20201030 18:28:21.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.835" endtime="20201030 18:28:21.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.833" endtime="20201030 18:28:21.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.144" level="INFO">${RESULT} = [{'diff': 1.1541999999999802e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.0152000000002446e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.112500000000031e-0...</msg>
<status status="PASS" starttime="20201030 18:28:21.141" endtime="20201030 18:28:21.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.149" level="INFO">${ACCURACY} = {'diff': [1.1541999999999802e-05, 2.2014000000000755e-05, 2.3013999999998286e-05, 2.0152000000002446e-05, 2.2971999999999576e-05, 2.112500000000031e-05, 2.1000000000000185e-05, 2.012499999999931e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:21.145" endtime="20201030 18:28:21.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.154" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.153" endtime="20201030 18:28:21.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.157" level="INFO">VALUE: [1.1541999999999802e-05, 2.2014000000000755e-05, 2.3013999999998286e-05, 2.0152000000002446e-05, 2.2971999999999576e-05, 2.112500000000031e-05, 2.1000000000000185e-05, 2.012499999999931e-05, 2.2083999999998605e-05, 2.111100000000074e-05, 2.208299999999913e-05, 2.194499999999891e-05, 2.2012999999997812e-05, 2.2000000000001185e-05, 2.106900000000203e-05, 2.10969999999977e-05, 2.013899999999888e-05, 2.2041999999999895e-05, 2.016699999999802e-05, 2.111100000000074e-05, 2.2070000000002504e-05, 2.2943999999996967e-05, 2.2999999999998716e-05, 2.2042000000003364e-05, 2.112500000000031e-05, 2.011099999999974e-05, 2.3040999999997952e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.109700000000117e-05, 2.2028000000000325e-05, 2.2097999999998175e-05, 2.205499999999999e-05, 2.012500000000278e-05, 2.1069999999998035e-05, 2.2971999999999576e-05, 2.012499999999931e-05, 2.013899999999888e-05, 2.2084000000002074e-05, 2.111100000000074e-05, 2.204100000000042e-05, 2.205499999999999e-05, 2.106900000000203e-05, 2.2056000000002934e-05, 2.10830000000016e-05, 2.2999999999998716e-05, 2.0151999999998976e-05, 2.111100000000074e-05, 2.1041999999998895e-05, 2.208299999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.155" endtime="20201030 18:28:21.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.150" endtime="20201030 18:28:21.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.162" endtime="20201030 18:28:21.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.160" endtime="20201030 18:28:21.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.159" endtime="20201030 18:28:21.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.799" endtime="20201030 18:28:21.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.798" endtime="20201030 18:28:21.183"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.192" endtime="20201030 18:28:21.213"></status>
</kw>
<msg timestamp="20201030 18:28:21.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.190" endtime="20201030 18:28:21.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.215" endtime="20201030 18:28:21.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.217" endtime="20201030 18:28:21.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.188" endtime="20201030 18:28:21.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.185" endtime="20201030 18:28:21.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.227" endtime="20201030 18:28:21.513"></status>
</kw>
<msg timestamp="20201030 18:28:21.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023624014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.225" endtime="20201030 18:28:21.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023624014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023633681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.518" endtime="20201030 18:28:21.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.526" endtime="20201030 18:28:21.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.222" endtime="20201030 18:28:21.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.221" endtime="20201030 18:28:21.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.533" level="INFO">${RESULT} = [{'diff': 9.667000000001397e-06}, {'diff': 2.208299999999913e-05}, {'diff': 2.308300000000013e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.10830000000016e-05}, {'diff': 2.015300000000192e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:21.530" endtime="20201030 18:28:21.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.537" level="INFO">${ACCURACY} = {'diff': [9.667000000001397e-06, 2.208299999999913e-05, 2.308300000000013e-05, 2.205499999999999e-05, 2.10830000000016e-05, 2.015300000000192e-05, 2.3986000000000146e-05, 2.112500000000031e-05, 2.2028...</msg>
<status status="PASS" starttime="20201030 18:28:21.534" endtime="20201030 18:28:21.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.542" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.541" endtime="20201030 18:28:21.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.545" level="INFO">VALUE: [9.667000000001397e-06, 2.208299999999913e-05, 2.308300000000013e-05, 2.205499999999999e-05, 2.10830000000016e-05, 2.015300000000192e-05, 2.3986000000000146e-05, 2.112500000000031e-05, 2.2028000000000325e-05, 2.111100000000074e-05, 2.2041999999999895e-05, 2.0137999999999406e-05, 2.111100000000074e-05, 2.2083999999998605e-05, 2.015299999999845e-05, 2.106899999999856e-05, 2.205499999999999e-05, 2.2999999999998716e-05, 2.106899999999856e-05, 2.012499999999931e-05, 2.3958000000001006e-05, 2.3000000000002185e-05, 2.204100000000042e-05, 2.2056000000002934e-05, 2.3999999999999716e-05, 2.208299999999913e-05, 2.2000000000001185e-05, 2.105500000000246e-05, 2.0194000000001155e-05, 2.2070000000002504e-05, 2.2098000000001644e-05, 2.2041999999999895e-05, 2.1097999999997175e-05, 2.2985999999999146e-05, 2.118099999999859e-05, 2.0151999999998976e-05, 2.3014000000001755e-05, 2.012500000000278e-05, 2.2014000000000755e-05, 2.1084000000001074e-05, 2.3986000000000146e-05, 2.016700000000149e-05, 2.2028000000000325e-05, 2.2985999999999146e-05, 2.205499999999999e-05, 2.2112000000001214e-05, 2.2986000000002615e-05, 2.0138000000002876e-05, 2.2014000000000755e-05, 2.108299999999813e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.543" endtime="20201030 18:28:21.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.538" endtime="20201030 18:28:21.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.550" endtime="20201030 18:28:21.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.548" endtime="20201030 18:28:21.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.547" endtime="20201030 18:28:21.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.184" endtime="20201030 18:28:21.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.183" endtime="20201030 18:28:21.571"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.580" endtime="20201030 18:28:21.605"></status>
</kw>
<msg timestamp="20201030 18:28:21.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.578" endtime="20201030 18:28:21.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.606" endtime="20201030 18:28:21.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.609" endtime="20201030 18:28:21.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.575" endtime="20201030 18:28:21.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.573" endtime="20201030 18:28:21.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.619" endtime="20201030 18:28:21.904"></status>
</kw>
<msg timestamp="20201030 18:28:21.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027797681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027821625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.617" endtime="20201030 18:28:21.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027797681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027821625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.909" endtime="20201030 18:28:21.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.918" endtime="20201030 18:28:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.614" endtime="20201030 18:28:21.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.612" endtime="20201030 18:28:21.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.929" level="INFO">${RESULT} = [{'diff': 2.3943999999997967e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.3013999999998286e-05}, {'diff': 2.112499999999684e-05}, {'diff': 2.013899999999888e-05...</msg>
<status status="PASS" starttime="20201030 18:28:21.924" endtime="20201030 18:28:21.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.934" level="INFO">${ACCURACY} = {'diff': [2.3943999999997967e-05, 2.1986000000001615e-05, 2.3000000000002185e-05, 2.3013999999998286e-05, 2.112499999999684e-05, 2.013899999999888e-05, 2.0151999999998976e-05, 2.105499999999899e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:21.930" endtime="20201030 18:28:21.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.940" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.939" endtime="20201030 18:28:21.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.944" level="INFO">VALUE: [2.3943999999997967e-05, 2.1986000000001615e-05, 2.3000000000002185e-05, 2.3013999999998286e-05, 2.112499999999684e-05, 2.013899999999888e-05, 2.0151999999998976e-05, 2.105499999999899e-05, 2.3027999999997856e-05, 2.3014000000001755e-05, 1.9194000000000155e-05, 2.111100000000074e-05, 2.112500000000031e-05, 2.2985999999999146e-05, 2.009700000000017e-05, 2.3084000000003074e-05, 2.013899999999888e-05, 2.10830000000016e-05, 2.205499999999999e-05, 2.206899999999956e-05, 2.20969999999987e-05, 2.2999999999998716e-05, 2.015299999999845e-05, 2.20969999999987e-05, 2.306900000000056e-05, 2.208299999999913e-05, 2.3014000000001755e-05, 2.211100000000174e-05, 2.3013999999998286e-05, 2.297300000000252e-05, 2.2041999999999895e-05, 2.111100000000074e-05, 2.209700000000217e-05, 2.10969999999977e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.109700000000117e-05, 2.019499999999716e-05, 2.3026999999998382e-05, 2.115300000000292e-05, 2.2999999999998716e-05, 2.211100000000174e-05, 2.204100000000042e-05, 2.293100000000034e-05, 2.206899999999956e-05, 2.1138000000000406e-05, 2.206899999999956e-05, 2.113899999999988e-05, 2.2041999999999895e-05, 2.011099999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.942" endtime="20201030 18:28:21.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.935" endtime="20201030 18:28:21.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.950" endtime="20201030 18:28:21.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.949" endtime="20201030 18:28:21.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.947" endtime="20201030 18:28:21.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.572" endtime="20201030 18:28:21.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.571" endtime="20201030 18:28:21.971"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.980" endtime="20201030 18:28:22.002"></status>
</kw>
<msg timestamp="20201030 18:28:22.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.978" endtime="20201030 18:28:22.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.004" endtime="20201030 18:28:22.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.006" endtime="20201030 18:28:22.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.976" endtime="20201030 18:28:22.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.974" endtime="20201030 18:28:22.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.015" endtime="20201030 18:28:22.302"></status>
</kw>
<msg timestamp="20201030 18:28:22.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024211528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024256472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.014" endtime="20201030 18:28:22.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024211528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024256472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.307" endtime="20201030 18:28:22.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.315" endtime="20201030 18:28:22.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.011" endtime="20201030 18:28:22.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.009" endtime="20201030 18:28:22.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.321" level="INFO">${RESULT} = [{'diff': 4.494400000000162e-05}, {'diff': 5.358299999999941e-05}, {'diff': 5.172200000000057e-05}, {'diff': 5.3513999999997564e-05}, {'diff': 5.258299999999841e-05}, {'diff': 5.176400000000275e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:22.318" endtime="20201030 18:28:22.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.326" level="INFO">${ACCURACY} = {'diff': [4.494400000000162e-05, 5.358299999999941e-05, 5.172200000000057e-05, 5.3513999999997564e-05, 5.258299999999841e-05, 5.176400000000275e-05, 5.163900000000263e-05, 5.259799999999745e-05, 5.365...</msg>
<status status="PASS" starttime="20201030 18:28:22.322" endtime="20201030 18:28:22.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.331" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.330" endtime="20201030 18:28:22.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.333" level="INFO">VALUE: [4.494400000000162e-05, 5.358299999999941e-05, 5.172200000000057e-05, 5.3513999999997564e-05, 5.258299999999841e-05, 5.176400000000275e-05, 5.163900000000263e-05, 5.259799999999745e-05, 5.365300000000073e-05, 5.0708e-05, 5.259700000000145e-05, 5.162499999999959e-05, 4.98330000000026e-05, 5.2652000000000254e-05, 5.069499999999991e-05, 5.258300000000188e-05, 5.269499999999844e-05, 5.35280000000006e-05, 5.069400000000043e-05, 5.262499999999712e-05, 5.459800000000292e-05, 5.162500000000306e-05, 5.1666000000002293e-05, 5.077799999999785e-05, 5.35280000000006e-05, 5.261099999999755e-05, 5.174999999999971e-05, 5.258300000000188e-05, 5.162499999999959e-05, 5.079099999999795e-05, 5.355500000000027e-05, 5.363900000000116e-05, 5.163899999999916e-05, 5.366699999999683e-05, 5.261100000000102e-05, 5.3499999999997994e-05, 5.269400000000243e-05, 5.261099999999755e-05, 5.1651999999999254e-05, 5.2708000000002e-05, 5.165299999999873e-05, 5.259700000000145e-05, 5.36670000000003e-05, 5.259700000000145e-05, 5.268099999999887e-05, 5.161100000000002e-05, 5.356999999999931e-05, 5.079200000000089e-05, 5.356899999999984e-05, 5.2693999999998964e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.332" endtime="20201030 18:28:22.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.327" endtime="20201030 18:28:22.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.338" endtime="20201030 18:28:22.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.337" endtime="20201030 18:28:22.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.336" endtime="20201030 18:28:22.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.972" endtime="20201030 18:28:22.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.971" endtime="20201030 18:28:22.359"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.367" endtime="20201030 18:28:22.389"></status>
</kw>
<msg timestamp="20201030 18:28:22.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.366" endtime="20201030 18:28:22.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.390" endtime="20201030 18:28:22.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.393" endtime="20201030 18:28:22.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.363" endtime="20201030 18:28:22.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.361" endtime="20201030 18:28:22.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.402" endtime="20201030 18:28:22.703"></status>
</kw>
<msg timestamp="20201030 18:28:22.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023164528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.400" endtime="20201030 18:28:22.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023164528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.708" endtime="20201030 18:28:22.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.716" endtime="20201030 18:28:22.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.398" endtime="20201030 18:28:22.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.396" endtime="20201030 18:28:22.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.722" level="INFO">${RESULT} = [{'diff': 4.879199999999889e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.262499999999712e-05}, {'diff': 5.176399999999928e-05}, {'diff': 5.356899999999984e-05}, {'diff': 5.163900000000263e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:22.719" endtime="20201030 18:28:22.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.727" level="INFO">${ACCURACY} = {'diff': [4.879199999999889e-05, 5.2707999999998534e-05, 5.262499999999712e-05, 5.176399999999928e-05, 5.356899999999984e-05, 5.163900000000263e-05, 5.3638000000001684e-05, 5.258399999999788e-05, 5.06...</msg>
<status status="PASS" starttime="20201030 18:28:22.723" endtime="20201030 18:28:22.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.731" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.730" endtime="20201030 18:28:22.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.733" level="INFO">VALUE: [4.879199999999889e-05, 5.2707999999998534e-05, 5.262499999999712e-05, 5.176399999999928e-05, 5.356899999999984e-05, 5.163900000000263e-05, 5.3638000000001684e-05, 5.258399999999788e-05, 5.068100000000034e-05, 5.165299999999873e-05, 5.175000000000318e-05, 5.1651999999999254e-05, 5.081900000000056e-05, 5.355599999999974e-05, 5.172200000000057e-05, 5.259700000000145e-05, 5.077799999999785e-05, 5.2707999999998534e-05, 5.072299999999905e-05, 5.273600000000114e-05, 5.3513999999997564e-05, 5.073600000000261e-05, 5.262500000000059e-05, 5.273600000000114e-05, 5.075000000000218e-05, 5.272200000000157e-05, 5.35280000000006e-05, 5.259700000000145e-05, 5.263900000000016e-05, 5.16530000000022e-05, 5.163899999999916e-05, 5.179199999999842e-05, 5.163900000000263e-05, 5.063899999999816e-05, 5.176399999999928e-05, 5.259699999999798e-05, 5.261100000000102e-05, 5.356999999999931e-05, 5.18470000000007e-05, 5.06530000000012e-05, 5.069400000000043e-05, 5.176399999999928e-05, 5.259700000000145e-05, 5.355599999999974e-05, 5.258400000000135e-05, 5.356899999999984e-05, 5.177800000000232e-05, 5.261100000000102e-05, 5.3707999999999534e-05, 5.168000000000186e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.732" endtime="20201030 18:28:22.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.727" endtime="20201030 18:28:22.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.738" endtime="20201030 18:28:22.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.737" endtime="20201030 18:28:22.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.736" endtime="20201030 18:28:22.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.360" endtime="20201030 18:28:22.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.359" endtime="20201030 18:28:22.759"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.767" endtime="20201030 18:28:22.791"></status>
</kw>
<msg timestamp="20201030 18:28:22.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.766" endtime="20201030 18:28:22.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.792" endtime="20201030 18:28:22.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.795" endtime="20201030 18:28:22.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.763" endtime="20201030 18:28:22.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.761" endtime="20201030 18:28:22.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.804" endtime="20201030 18:28:23.089"></status>
</kw>
<msg timestamp="20201030 18:28:23.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024914139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.802" endtime="20201030 18:28:23.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024914139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024969653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.093" endtime="20201030 18:28:23.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.102" endtime="20201030 18:28:23.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.800" endtime="20201030 18:28:23.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.798" endtime="20201030 18:28:23.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.108" level="INFO">${RESULT} = [{'diff': 5.551400000000303e-05}, {'diff': 5.176400000000275e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.0708e-05}, {'diff': 5.16530000000022e-05}, {'diff': 5.358400000000235e-05}, {'diff': 5.07...</msg>
<status status="PASS" starttime="20201030 18:28:23.105" endtime="20201030 18:28:23.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.112" level="INFO">${ACCURACY} = {'diff': [5.551400000000303e-05, 5.176400000000275e-05, 5.162499999999959e-05, 5.0708e-05, 5.16530000000022e-05, 5.358400000000235e-05, 5.077800000000132e-05, 5.161200000000296e-05, 5.350000000000146e...</msg>
<status status="PASS" starttime="20201030 18:28:23.109" endtime="20201030 18:28:23.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.117" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.116" endtime="20201030 18:28:23.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.119" level="INFO">VALUE: [5.551400000000303e-05, 5.176400000000275e-05, 5.162499999999959e-05, 5.0708e-05, 5.16530000000022e-05, 5.358400000000235e-05, 5.077800000000132e-05, 5.161200000000296e-05, 5.350000000000146e-05, 5.072199999999957e-05, 5.34730000000018e-05, 5.068100000000034e-05, 5.162499999999959e-05, 5.161100000000002e-05, 5.259700000000145e-05, 5.356899999999984e-05, 5.263900000000016e-05, 5.16669999999983e-05, 5.355500000000027e-05, 5.169400000000143e-05, 5.259800000000092e-05, 5.256999999999831e-05, 5.162499999999959e-05, 5.259700000000145e-05, 5.072199999999957e-05, 5.263900000000016e-05, 5.258300000000188e-05, 5.1708000000001e-05, 4.977800000000032e-05, 5.355599999999974e-05, 5.35410000000007e-05, 5.356899999999984e-05, 5.077800000000132e-05, 5.361100000000202e-05, 5.162499999999959e-05, 5.16669999999983e-05, 5.168099999999787e-05, 5.1665999999998824e-05, 5.2707999999998534e-05, 5.069499999999991e-05, 5.355500000000027e-05, 5.26669999999993e-05, 5.070899999999948e-05, 5.259700000000145e-05, 5.169500000000091e-05, 5.073599999999914e-05, 5.174999999999971e-05, 5.359699999999898e-05, 5.1708000000001e-05, 5.1708000000001e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.118" endtime="20201030 18:28:23.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.113" endtime="20201030 18:28:23.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.125" endtime="20201030 18:28:23.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.123" endtime="20201030 18:28:23.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.122" endtime="20201030 18:28:23.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.760" endtime="20201030 18:28:23.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.759" endtime="20201030 18:28:23.146"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.154" endtime="20201030 18:28:23.172"></status>
</kw>
<msg timestamp="20201030 18:28:23.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.153" endtime="20201030 18:28:23.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.174" endtime="20201030 18:28:23.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.176" endtime="20201030 18:28:23.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.150" endtime="20201030 18:28:23.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.148" endtime="20201030 18:28:23.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.185" endtime="20201030 18:28:23.471"></status>
</kw>
<msg timestamp="20201030 18:28:23.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:23.184" endtime="20201030 18:28:23.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:23.475" endtime="20201030 18:28:23.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.484" endtime="20201030 18:28:23.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.181" endtime="20201030 18:28:23.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.179" endtime="20201030 18:28:23.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.490" level="INFO">${RESULT} = [{'diff': 6.891700000000167e-05}, {'diff': 5.068000000000086e-05}, {'diff': 5.456900000000084e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.0708e-05}, {'diff': 5.36...</msg>
<status status="PASS" starttime="20201030 18:28:23.487" endtime="20201030 18:28:23.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.495" level="INFO">${ACCURACY} = {'diff': [6.891700000000167e-05, 5.068000000000086e-05, 5.456900000000084e-05, 5.261100000000102e-05, 5.26669999999993e-05, 5.0708e-05, 5.363899999999769e-05, 5.0709000000002946e-05, 5.256900000000231...</msg>
<status status="PASS" starttime="20201030 18:28:23.491" endtime="20201030 18:28:23.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.500" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.499" endtime="20201030 18:28:23.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.502" level="INFO">VALUE: [6.891700000000167e-05, 5.068000000000086e-05, 5.456900000000084e-05, 5.261100000000102e-05, 5.26669999999993e-05, 5.0708e-05, 5.363899999999769e-05, 5.0709000000002946e-05, 5.256900000000231e-05, 5.35280000000006e-05, 5.363900000000116e-05, 5.068100000000034e-05, 5.069499999999991e-05, 5.076400000000175e-05, 5.355500000000027e-05, 5.165299999999873e-05, 5.2707999999998534e-05, 5.163899999999916e-05, 5.066700000000077e-05, 5.170900000000048e-05, 5.075000000000218e-05, 5.162499999999959e-05, 5.2721999999998104e-05, 5.079199999999742e-05, 5.354200000000017e-05, 5.180600000000146e-05, 5.359700000000245e-05, 5.26669999999993e-05, 5.261100000000102e-05, 5.261099999999755e-05, 5.080499999999752e-05, 5.361199999999802e-05, 5.174999999999971e-05, 5.0708e-05, 5.356899999999984e-05, 5.163899999999916e-05, 5.08469999999997e-05, 5.262499999999712e-05, 5.358299999999941e-05, 5.173600000000014e-05, 5.16669999999983e-05, 5.069400000000043e-05, 5.372299999999858e-05, 5.068000000000086e-05, 5.272200000000157e-05, 5.35280000000006e-05, 5.06669999999973e-05, 5.269499999999844e-05, 5.3527999999997133e-05, 5.066700000000077e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.501" endtime="20201030 18:28:23.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.496" endtime="20201030 18:28:23.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.511" endtime="20201030 18:28:23.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.509" endtime="20201030 18:28:23.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.508" endtime="20201030 18:28:23.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.147" endtime="20201030 18:28:23.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.146" endtime="20201030 18:28:23.532"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.540" endtime="20201030 18:28:23.560"></status>
</kw>
<msg timestamp="20201030 18:28:23.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.539" endtime="20201030 18:28:23.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.562" endtime="20201030 18:28:23.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.564" endtime="20201030 18:28:23.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.536" endtime="20201030 18:28:23.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.534" endtime="20201030 18:28:23.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.573" endtime="20201030 18:28:23.859"></status>
</kw>
<msg timestamp="20201030 18:28:23.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021047889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021108125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.571" endtime="20201030 18:28:23.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021047889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021108125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.864" endtime="20201030 18:28:23.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.872" endtime="20201030 18:28:23.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.569" endtime="20201030 18:28:23.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.567" endtime="20201030 18:28:23.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.878" level="INFO">${RESULT} = [{'diff': 6.0235999999998235e-05}, {'diff': 5.069499999999991e-05}, {'diff': 5.076299999999881e-05}, {'diff': 5.3665999999997355e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.2693999999998964e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:23.875" endtime="20201030 18:28:23.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.883" level="INFO">${ACCURACY} = {'diff': [6.0235999999998235e-05, 5.069499999999991e-05, 5.076299999999881e-05, 5.3665999999997355e-05, 5.261100000000102e-05, 5.2693999999998964e-05, 5.074999999999871e-05, 5.159700000000045e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 18:28:23.879" endtime="20201030 18:28:23.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.887" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.886" endtime="20201030 18:28:23.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.889" level="INFO">VALUE: [6.0235999999998235e-05, 5.069499999999991e-05, 5.076299999999881e-05, 5.3665999999997355e-05, 5.261100000000102e-05, 5.2693999999998964e-05, 5.074999999999871e-05, 5.159700000000045e-05, 5.354200000000017e-05, 5.170899999999701e-05, 5.257000000000178e-05, 5.35410000000007e-05, 5.258300000000188e-05, 5.2708000000002e-05, 5.361100000000202e-05, 5.258299999999841e-05, 5.261099999999755e-05, 5.076399999999828e-05, 5.354200000000017e-05, 5.173600000000014e-05, 5.0693999999996964e-05, 5.2680000000002863e-05, 5.166700000000177e-05, 5.16669999999983e-05, 5.269499999999844e-05, 5.262500000000059e-05, 5.359699999999898e-05, 5.077800000000132e-05, 5.262500000000059e-05, 5.265299999999973e-05, 5.1651999999999254e-05, 5.162499999999959e-05, 5.355599999999974e-05, 5.256899999999884e-05, 5.170900000000048e-05, 5.1679999999998394e-05, 5.259800000000092e-05, 5.265299999999973e-05, 5.356999999999931e-05, 5.172200000000057e-05, 5.070899999999948e-05, 5.063900000000163e-05, 5.256899999999884e-05, 5.079200000000089e-05, 5.356899999999984e-05, 5.077800000000132e-05, 5.068000000000086e-05, 5.356899999999984e-05, 5.2707999999998534e-05, 5.168100000000134e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.888" endtime="20201030 18:28:23.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.883" endtime="20201030 18:28:23.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.894" endtime="20201030 18:28:23.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.893" endtime="20201030 18:28:23.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.892" endtime="20201030 18:28:23.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.533" endtime="20201030 18:28:23.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.532" endtime="20201030 18:28:23.915"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.923" endtime="20201030 18:28:23.948"></status>
</kw>
<msg timestamp="20201030 18:28:23.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.922" endtime="20201030 18:28:23.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.950" endtime="20201030 18:28:23.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.952" endtime="20201030 18:28:23.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.919" endtime="20201030 18:28:23.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.917" endtime="20201030 18:28:23.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.961" endtime="20201030 18:28:24.247"></status>
</kw>
<msg timestamp="20201030 18:28:24.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024523167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024563417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.959" endtime="20201030 18:28:24.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024523167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024563417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.252" endtime="20201030 18:28:24.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.260" endtime="20201030 18:28:24.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.957" endtime="20201030 18:28:24.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.955" endtime="20201030 18:28:24.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.266" level="INFO">${RESULT} = [{'diff': 4.025000000000209e-05}, {'diff': 5.259799999999745e-05}, {'diff': 5.079199999999742e-05}, {'diff': 5.359799999999845e-05}, {'diff': 5.358399999999888e-05}, {'diff': 5.1665999999998824e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:24.263" endtime="20201030 18:28:24.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.271" level="INFO">${ACCURACY} = {'diff': [4.025000000000209e-05, 5.259799999999745e-05, 5.079199999999742e-05, 5.359799999999845e-05, 5.358399999999888e-05, 5.1665999999998824e-05, 5.176399999999928e-05, 5.163899999999916e-05, 5.066...</msg>
<status status="PASS" starttime="20201030 18:28:24.267" endtime="20201030 18:28:24.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.275" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.274" endtime="20201030 18:28:24.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.277" level="INFO">VALUE: [4.025000000000209e-05, 5.259799999999745e-05, 5.079199999999742e-05, 5.359799999999845e-05, 5.358399999999888e-05, 5.1665999999998824e-05, 5.176399999999928e-05, 5.163899999999916e-05, 5.066600000000129e-05, 5.175000000000318e-05, 5.358399999999888e-05, 5.161100000000002e-05, 5.258299999999841e-05, 5.0679999999997394e-05, 5.256900000000231e-05, 5.074999999999871e-05, 5.162500000000306e-05, 5.262500000000059e-05, 5.166700000000177e-05, 5.081900000000056e-05, 5.261100000000102e-05, 5.163899999999916e-05, 5.072299999999905e-05, 5.261100000000102e-05, 5.165299999999873e-05, 5.261100000000102e-05, 5.2708000000002e-05, 5.261100000000102e-05, 5.069400000000043e-05, 5.165299999999873e-05, 5.2707999999998534e-05, 5.068000000000086e-05, 5.265299999999973e-05, 5.163900000000263e-05, 5.261100000000102e-05, 5.086099999999927e-05, 5.261100000000102e-05, 5.261100000000102e-05, 5.261100000000102e-05, 5.1707999999997534e-05, 5.355599999999974e-05, 5.261099999999755e-05, 5.258299999999841e-05, 5.180599999999799e-05, 5.262500000000059e-05, 5.0651999999998254e-05, 5.073599999999914e-05, 5.355500000000027e-05, 5.26669999999993e-05, 5.356999999999931e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.276" endtime="20201030 18:28:24.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.271" endtime="20201030 18:28:24.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.283" endtime="20201030 18:28:24.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.282" endtime="20201030 18:28:24.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.281" endtime="20201030 18:28:24.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.916" endtime="20201030 18:28:24.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.915" endtime="20201030 18:28:24.304"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.313" endtime="20201030 18:28:24.333"></status>
</kw>
<msg timestamp="20201030 18:28:24.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.311" endtime="20201030 18:28:24.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.335" endtime="20201030 18:28:24.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.337" endtime="20201030 18:28:24.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.308" endtime="20201030 18:28:24.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.306" endtime="20201030 18:28:24.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.346" endtime="20201030 18:28:24.632"></status>
</kw>
<msg timestamp="20201030 18:28:24.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.345" endtime="20201030 18:28:24.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022464264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.636" endtime="20201030 18:28:24.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.644" endtime="20201030 18:28:24.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.342" endtime="20201030 18:28:24.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.340" endtime="20201030 18:28:24.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.651" level="INFO">${RESULT} = [{'diff': 6.512500000000268e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.1651999999999254e-05}, {'diff': 5.076400000000175e-05}, {'diff': 5.35410000000007e-05}, {'diff': 5.2707999999998534e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:24.648" endtime="20201030 18:28:24.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.656" level="INFO">${ACCURACY} = {'diff': [6.512500000000268e-05, 5.261100000000102e-05, 5.1651999999999254e-05, 5.076400000000175e-05, 5.35410000000007e-05, 5.2707999999998534e-05, 5.165299999999873e-05, 5.268099999999887e-05, 5.262...</msg>
<status status="PASS" starttime="20201030 18:28:24.652" endtime="20201030 18:28:24.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.660" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.659" endtime="20201030 18:28:24.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.663" level="INFO">VALUE: [6.512500000000268e-05, 5.261100000000102e-05, 5.1651999999999254e-05, 5.076400000000175e-05, 5.35410000000007e-05, 5.2707999999998534e-05, 5.165299999999873e-05, 5.268099999999887e-05, 5.262500000000059e-05, 5.084799999999917e-05, 5.25279999999996e-05, 5.355599999999974e-05, 5.068100000000034e-05, 5.084700000000317e-05, 5.1666000000002293e-05, 5.163900000000263e-05, 5.268099999999887e-05, 5.163899999999916e-05, 5.163899999999916e-05, 5.268099999999887e-05, 5.162499999999959e-05, 5.356899999999984e-05, 5.2721999999998104e-05, 5.354200000000017e-05, 5.254199999999917e-05, 5.177800000000232e-05, 5.16669999999983e-05, 5.261200000000049e-05, 5.273600000000114e-05, 5.359800000000192e-05, 5.259700000000145e-05, 5.2708000000002e-05, 5.356899999999984e-05, 5.355599999999974e-05, 5.354200000000017e-05, 5.177699999999938e-05, 5.348700000000137e-05, 5.268100000000234e-05, 5.06530000000012e-05, 5.1666000000002293e-05, 5.080600000000046e-05, 5.354200000000017e-05, 5.172200000000057e-05, 5.163899999999916e-05, 5.259699999999798e-05, 5.362499999999812e-05, 5.261200000000049e-05, 5.1651999999999254e-05, 5.079100000000142e-05, 5.16530000000022e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.661" endtime="20201030 18:28:24.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.657" endtime="20201030 18:28:24.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.668" endtime="20201030 18:28:24.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.666" endtime="20201030 18:28:24.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.665" endtime="20201030 18:28:24.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.305" endtime="20201030 18:28:24.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.304" endtime="20201030 18:28:24.689"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.697" endtime="20201030 18:28:24.720"></status>
</kw>
<msg timestamp="20201030 18:28:24.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.696" endtime="20201030 18:28:24.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.721" endtime="20201030 18:28:24.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.724" endtime="20201030 18:28:24.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.693" endtime="20201030 18:28:24.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.691" endtime="20201030 18:28:24.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.733" endtime="20201030 18:28:25.019"></status>
</kw>
<msg timestamp="20201030 18:28:25.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024624694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024668694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.731" endtime="20201030 18:28:25.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024624694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024668694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.023" endtime="20201030 18:28:25.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.032" endtime="20201030 18:28:25.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.729" endtime="20201030 18:28:25.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.727" endtime="20201030 18:28:25.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.038" level="INFO">${RESULT} = [{'diff': 4.400000000000237e-05}, {'diff': 5.172200000000057e-05}, {'diff': 5.265299999999973e-05}, {'diff': 5.356899999999984e-05}, {'diff': 5.35280000000006e-05}, {'diff': 5.356899999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:25.035" endtime="20201030 18:28:25.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.042" level="INFO">${ACCURACY} = {'diff': [4.400000000000237e-05, 5.172200000000057e-05, 5.265299999999973e-05, 5.356899999999984e-05, 5.35280000000006e-05, 5.356899999999984e-05, 5.265299999999973e-05, 5.262500000000059e-05, 5.16800...</msg>
<status status="PASS" starttime="20201030 18:28:25.039" endtime="20201030 18:28:25.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.047" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.046" endtime="20201030 18:28:25.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.049" level="INFO">VALUE: [4.400000000000237e-05, 5.172200000000057e-05, 5.265299999999973e-05, 5.356899999999984e-05, 5.35280000000006e-05, 5.356899999999984e-05, 5.265299999999973e-05, 5.262500000000059e-05, 5.168000000000186e-05, 5.073599999999914e-05, 5.259800000000092e-05, 5.258299999999841e-05, 5.361100000000202e-05, 5.256999999999831e-05, 5.068100000000034e-05, 5.173600000000014e-05, 5.361099999999855e-05, 5.069499999999991e-05, 5.262499999999712e-05, 5.069400000000043e-05, 5.161100000000002e-05, 5.2679999999999394e-05, 5.172200000000057e-05, 5.068000000000086e-05, 5.269400000000243e-05, 5.076400000000175e-05, 5.168100000000134e-05, 5.259700000000145e-05, 5.261099999999755e-05, 5.172200000000057e-05, 5.354200000000017e-05, 5.16530000000022e-05, 5.258400000000135e-05, 5.166700000000177e-05, 5.359799999999845e-05, 5.259700000000145e-05, 5.168100000000134e-05, 5.165299999999873e-05, 5.262499999999712e-05, 5.176400000000275e-05, 5.069499999999991e-05, 5.168099999999787e-05, 5.068100000000034e-05, 5.263900000000016e-05, 5.172200000000057e-05, 5.165299999999873e-05, 5.2638000000000684e-05, 5.1708000000001e-05, 5.1679999999998394e-05, 5.261100000000102e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.048" endtime="20201030 18:28:25.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.043" endtime="20201030 18:28:25.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.054" endtime="20201030 18:28:25.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.052" endtime="20201030 18:28:25.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.051" endtime="20201030 18:28:25.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.689" endtime="20201030 18:28:25.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.689" endtime="20201030 18:28:25.075"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.083" endtime="20201030 18:28:25.106"></status>
</kw>
<msg timestamp="20201030 18:28:25.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.082" endtime="20201030 18:28:25.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.108" endtime="20201030 18:28:25.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.111" endtime="20201030 18:28:25.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.079" endtime="20201030 18:28:25.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.077" endtime="20201030 18:28:25.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.119" endtime="20201030 18:28:25.405"></status>
</kw>
<msg timestamp="20201030 18:28:25.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025319708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025378042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.118" endtime="20201030 18:28:25.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025319708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025378042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.409" endtime="20201030 18:28:25.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.417" endtime="20201030 18:28:25.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.115" endtime="20201030 18:28:25.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.114" endtime="20201030 18:28:25.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.424" level="INFO">${RESULT} = [{'diff': 5.8334000000000163e-05}, {'diff': 4.980599999999946e-05}, {'diff': 5.1708000000001e-05}, {'diff': 5.361100000000202e-05}, {'diff': 5.169500000000091e-05}, {'diff': 5.076299999999881e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:25.421" endtime="20201030 18:28:25.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.428" level="INFO">${ACCURACY} = {'diff': [5.8334000000000163e-05, 4.980599999999946e-05, 5.1708000000001e-05, 5.361100000000202e-05, 5.169500000000091e-05, 5.076299999999881e-05, 5.168099999999787e-05, 5.361100000000202e-05, 5.26249...</msg>
<status status="PASS" starttime="20201030 18:28:25.425" endtime="20201030 18:28:25.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.432" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.431" endtime="20201030 18:28:25.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.435" level="INFO">VALUE: [5.8334000000000163e-05, 4.980599999999946e-05, 5.1708000000001e-05, 5.361100000000202e-05, 5.169500000000091e-05, 5.076299999999881e-05, 5.168099999999787e-05, 5.361100000000202e-05, 5.262499999999712e-05, 5.2665999999999824e-05, 5.263900000000016e-05, 5.268099999999887e-05, 5.169400000000143e-05, 5.161100000000002e-05, 5.169400000000143e-05, 5.166700000000177e-05, 5.161100000000002e-05, 5.169500000000091e-05, 5.16669999999983e-05, 5.261200000000049e-05, 5.355599999999974e-05, 5.362499999999812e-05, 5.361099999999855e-05, 5.2665999999999824e-05, 5.069499999999991e-05, 5.170899999999701e-05, 5.362500000000159e-05, 5.073600000000261e-05, 5.169500000000091e-05, 5.261100000000102e-05, 5.361100000000202e-05, 5.258400000000135e-05, 5.0693999999996964e-05, 5.074999999999871e-05, 5.172300000000005e-05, 5.163899999999916e-05, 5.173600000000014e-05, 5.361099999999855e-05, 5.2679999999999394e-05, 5.26669999999993e-05, 5.069400000000043e-05, 5.173600000000014e-05, 5.359700000000245e-05, 5.068000000000086e-05, 5.26669999999993e-05, 5.358399999999888e-05, 5.174999999999971e-05, 5.165299999999873e-05, 5.259700000000145e-05, 5.077699999999838e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.433" endtime="20201030 18:28:25.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.429" endtime="20201030 18:28:25.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.440" endtime="20201030 18:28:25.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.439" endtime="20201030 18:28:25.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.438" endtime="20201030 18:28:25.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.076" endtime="20201030 18:28:25.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.075" endtime="20201030 18:28:25.461"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.470" endtime="20201030 18:28:25.488"></status>
</kw>
<msg timestamp="20201030 18:28:25.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.468" endtime="20201030 18:28:25.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.490" endtime="20201030 18:28:25.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.492" endtime="20201030 18:28:25.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.466" endtime="20201030 18:28:25.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.464" endtime="20201030 18:28:25.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.501" endtime="20201030 18:28:25.786"></status>
</kw>
<msg timestamp="20201030 18:28:25.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.499" endtime="20201030 18:28:25.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020776139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.790" endtime="20201030 18:28:25.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.799" endtime="20201030 18:28:25.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.497" endtime="20201030 18:28:25.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.495" endtime="20201030 18:28:25.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.805" level="INFO">${RESULT} = [{'diff': 4.976400000000075e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5.16669999999983e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5.069400000000043e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:25.802" endtime="20201030 18:28:25.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.810" level="INFO">${ACCURACY} = {'diff': [4.976400000000075e-05, 5.163899999999916e-05, 5.16669999999983e-05, 5.174999999999971e-05, 5.163899999999916e-05, 5.069400000000043e-05, 5.16530000000022e-05, 5.1666000000002293e-05, 5.35559...</msg>
<status status="PASS" starttime="20201030 18:28:25.806" endtime="20201030 18:28:25.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.814" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.813" endtime="20201030 18:28:25.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.817" level="INFO">VALUE: [4.976400000000075e-05, 5.163899999999916e-05, 5.16669999999983e-05, 5.174999999999971e-05, 5.163899999999916e-05, 5.069400000000043e-05, 5.16530000000022e-05, 5.1666000000002293e-05, 5.355599999999974e-05, 5.162499999999959e-05, 5.356999999999931e-05, 5.176399999999928e-05, 5.163899999999916e-05, 5.069499999999991e-05, 5.356899999999984e-05, 5.165299999999873e-05, 5.165299999999873e-05, 5.069400000000043e-05, 5.079199999999742e-05, 5.259700000000145e-05, 5.356899999999984e-05, 5.261100000000102e-05, 5.352700000000113e-05, 5.35280000000006e-05, 5.259800000000092e-05, 5.165299999999873e-05, 5.355500000000027e-05, 5.168000000000186e-05, 5.163899999999916e-05, 5.176399999999928e-05, 5.262500000000059e-05, 5.165299999999873e-05, 5.168100000000134e-05, 5.262500000000059e-05, 5.262500000000059e-05, 5.356999999999931e-05, 5.363899999999769e-05, 5.1708000000001e-05, 5.069400000000043e-05, 5.0708e-05, 5.169500000000091e-05, 5.163899999999916e-05, 5.261099999999755e-05, 5.262500000000059e-05, 5.259700000000145e-05, 5.168000000000186e-05, 5.0708e-05, 5.163899999999916e-05, 5.0708e-05, 5.079200000000089e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.815" endtime="20201030 18:28:25.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.811" endtime="20201030 18:28:25.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.822" endtime="20201030 18:28:25.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.820" endtime="20201030 18:28:25.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.819" endtime="20201030 18:28:25.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.462" endtime="20201030 18:28:25.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.461" endtime="20201030 18:28:25.843"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.851" endtime="20201030 18:28:25.876"></status>
</kw>
<msg timestamp="20201030 18:28:25.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.849" endtime="20201030 18:28:25.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.877" endtime="20201030 18:28:25.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.880" endtime="20201030 18:28:25.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.847" endtime="20201030 18:28:25.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.845" endtime="20201030 18:28:25.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.888" endtime="20201030 18:28:26.175"></status>
</kw>
<msg timestamp="20201030 18:28:26.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021128014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.887" endtime="20201030 18:28:26.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021128014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.179" endtime="20201030 18:28:26.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.188" endtime="20201030 18:28:26.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.884" endtime="20201030 18:28:26.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.883" endtime="20201030 18:28:26.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.195" level="INFO">${RESULT} = [{'diff': 5.258299999999841e-05}, {'diff': 5.069400000000043e-05}, {'diff': 5.173600000000014e-05}, {'diff': 5.258300000000188e-05}, {'diff': 5.356899999999984e-05}, {'diff': 5.165299999999873e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:26.191" endtime="20201030 18:28:26.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.199" level="INFO">${ACCURACY} = {'diff': [5.258299999999841e-05, 5.069400000000043e-05, 5.173600000000014e-05, 5.258300000000188e-05, 5.356899999999984e-05, 5.165299999999873e-05, 5.166700000000177e-05, 5.259700000000145e-05, 5.1638...</msg>
<status status="PASS" starttime="20201030 18:28:26.195" endtime="20201030 18:28:26.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.203" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.202" endtime="20201030 18:28:26.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.205" level="INFO">VALUE: [5.258299999999841e-05, 5.069400000000043e-05, 5.173600000000014e-05, 5.258300000000188e-05, 5.356899999999984e-05, 5.165299999999873e-05, 5.166700000000177e-05, 5.259700000000145e-05, 5.163899999999916e-05, 5.068000000000086e-05, 5.355599999999974e-05, 5.165299999999873e-05, 5.169500000000091e-05, 5.356900000000331e-05, 5.3527999999997133e-05, 5.066700000000077e-05, 5.359699999999898e-05, 5.173600000000014e-05, 5.265299999999973e-05, 5.069499999999991e-05, 5.072199999999957e-05, 5.261100000000102e-05, 5.1651999999999254e-05, 5.170900000000048e-05, 5.1651999999999254e-05, 5.162499999999959e-05, 5.1638000000003154e-05, 5.258299999999841e-05, 5.168099999999787e-05, 5.257000000000178e-05, 5.259799999999745e-05, 5.356899999999984e-05, 5.262500000000059e-05, 5.16530000000022e-05, 5.069400000000043e-05, 5.356899999999984e-05, 5.256900000000231e-05, 5.079200000000089e-05, 5.166700000000177e-05, 5.069400000000043e-05, 5.35549999999968e-05, 5.079200000000089e-05, 5.06530000000012e-05, 5.16669999999983e-05, 5.1693999999997964e-05, 5.075000000000218e-05, 5.16669999999983e-05, 5.0708e-05, 5.35280000000006e-05, 5.169400000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.204" endtime="20201030 18:28:26.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.199" endtime="20201030 18:28:26.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.210" endtime="20201030 18:28:26.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.209" endtime="20201030 18:28:26.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.208" endtime="20201030 18:28:26.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.843" endtime="20201030 18:28:26.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.843" endtime="20201030 18:28:26.231"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.240" endtime="20201030 18:28:26.263"></status>
</kw>
<msg timestamp="20201030 18:28:26.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.238" endtime="20201030 18:28:26.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.264" endtime="20201030 18:28:26.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.267" endtime="20201030 18:28:26.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.236" endtime="20201030 18:28:26.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.234" endtime="20201030 18:28:26.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.276" endtime="20201030 18:28:26.561"></status>
</kw>
<msg timestamp="20201030 18:28:26.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024358306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024422431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.274" endtime="20201030 18:28:26.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024358306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024422431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.565" endtime="20201030 18:28:26.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.574" endtime="20201030 18:28:26.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.272" endtime="20201030 18:28:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.270" endtime="20201030 18:28:26.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.580" level="INFO">${RESULT} = [{'diff': 6.412500000000168e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.166700000000177e-05}, {'diff': 5.1708000000001e-05}, {'diff': 5.169400000000143e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:26.577" endtime="20201030 18:28:26.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.584" level="INFO">${ACCURACY} = {'diff': [6.412500000000168e-05, 5.361099999999855e-05, 5.361099999999855e-05, 5.166700000000177e-05, 5.1708000000001e-05, 5.169400000000143e-05, 5.073599999999914e-05, 5.2652000000000254e-05, 5.07359...</msg>
<status status="PASS" starttime="20201030 18:28:26.581" endtime="20201030 18:28:26.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.589" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.588" endtime="20201030 18:28:26.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.591" level="INFO">VALUE: [6.412500000000168e-05, 5.361099999999855e-05, 5.361099999999855e-05, 5.166700000000177e-05, 5.1708000000001e-05, 5.169400000000143e-05, 5.073599999999914e-05, 5.2652000000000254e-05, 5.073599999999914e-05, 5.361199999999802e-05, 4.979199999999989e-05, 5.269499999999844e-05, 5.356899999999984e-05, 5.259700000000145e-05, 5.259700000000145e-05, 5.1651999999999254e-05, 5.265299999999973e-05, 5.259799999999745e-05, 5.077799999999785e-05, 5.069499999999991e-05, 5.16669999999983e-05, 5.173600000000014e-05, 5.258299999999841e-05, 5.070899999999948e-05, 5.170900000000048e-05, 5.263900000000016e-05, 5.255499999999927e-05, 5.363900000000116e-05, 5.174999999999971e-05, 5.0708e-05, 5.3652000000001254e-05, 5.165299999999873e-05, 5.258400000000135e-05, 5.363900000000116e-05, 5.261100000000102e-05, 5.261100000000102e-05, 5.2666000000003294e-05, 5.358299999999941e-05, 5.2680000000002863e-05, 5.358399999999888e-05, 5.1708000000001e-05, 5.355599999999974e-05, 5.079200000000089e-05, 5.358399999999888e-05, 5.35410000000007e-05, 5.36670000000003e-05, 5.256900000000231e-05, 5.172200000000057e-05, 5.0708e-05, 5.256999999999831e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.590" endtime="20201030 18:28:26.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.585" endtime="20201030 18:28:26.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.597" endtime="20201030 18:28:26.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.595" endtime="20201030 18:28:26.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.594" endtime="20201030 18:28:26.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.232" endtime="20201030 18:28:26.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.232" endtime="20201030 18:28:26.617"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.626" endtime="20201030 18:28:26.651"></status>
</kw>
<msg timestamp="20201030 18:28:26.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.625" endtime="20201030 18:28:26.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.653" endtime="20201030 18:28:26.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.657" endtime="20201030 18:28:26.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.622" endtime="20201030 18:28:26.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.620" endtime="20201030 18:28:26.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.668" endtime="20201030 18:28:26.966"></status>
</kw>
<msg timestamp="20201030 18:28:26.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.666" endtime="20201030 18:28:26.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024978431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.976" endtime="20201030 18:28:26.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.996" endtime="20201030 18:28:26.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.663" endtime="20201030 18:28:27.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.662" endtime="20201030 18:28:27.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.010" level="INFO">${RESULT} = [{'diff': 6.788899999999806e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.259800000000092e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.261100000000102e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:27.003" endtime="20201030 18:28:27.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.022" level="INFO">${ACCURACY} = {'diff': [6.788899999999806e-05, 5.354200000000017e-05, 5.365300000000073e-05, 5.259800000000092e-05, 5.354200000000017e-05, 5.261100000000102e-05, 5.258299999999841e-05, 5.165299999999873e-05, 5.0763...</msg>
<status status="PASS" starttime="20201030 18:28:27.013" endtime="20201030 18:28:27.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.027" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.026" endtime="20201030 18:28:27.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.030" level="INFO">VALUE: [6.788899999999806e-05, 5.354200000000017e-05, 5.365300000000073e-05, 5.259800000000092e-05, 5.354200000000017e-05, 5.261100000000102e-05, 5.258299999999841e-05, 5.165299999999873e-05, 5.076399999999828e-05, 5.259700000000145e-05, 5.355599999999974e-05, 5.162500000000306e-05, 5.077800000000132e-05, 5.165299999999873e-05, 5.258299999999841e-05, 5.259699999999798e-05, 5.166700000000177e-05, 5.261100000000102e-05, 5.162499999999959e-05, 5.179099999999895e-05, 5.072199999999957e-05, 5.0708e-05, 5.068100000000034e-05, 5.263900000000016e-05, 5.261100000000102e-05, 5.259700000000145e-05, 5.368099999999987e-05, 5.069400000000043e-05, 5.0708e-05, 5.355599999999974e-05, 5.3637999999998215e-05, 5.261100000000102e-05, 5.25279999999996e-05, 5.1665999999998824e-05, 5.162499999999959e-05, 5.265299999999973e-05, 5.2707999999998534e-05, 5.261100000000102e-05, 5.3666000000000824e-05, 5.163900000000263e-05, 5.262500000000059e-05, 5.3679999999996925e-05, 5.162499999999959e-05, 5.258400000000135e-05, 5.261100000000102e-05, 5.172300000000005e-05, 5.259700000000145e-05, 5.355599999999974e-05, 5.258400000000135e-05, 5.258399999999788e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.028" endtime="20201030 18:28:27.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.023" endtime="20201030 18:28:27.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.035" endtime="20201030 18:28:27.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.033" endtime="20201030 18:28:27.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.032" endtime="20201030 18:28:27.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.618" endtime="20201030 18:28:27.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.618" endtime="20201030 18:28:27.056"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.065" endtime="20201030 18:28:27.087"></status>
</kw>
<msg timestamp="20201030 18:28:27.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.063" endtime="20201030 18:28:27.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.088" endtime="20201030 18:28:27.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.091" endtime="20201030 18:28:27.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.060" endtime="20201030 18:28:27.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.058" endtime="20201030 18:28:27.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.100" endtime="20201030 18:28:27.387"></status>
</kw>
<msg timestamp="20201030 18:28:27.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023682347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023726361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.099" endtime="20201030 18:28:27.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023682347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023726361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.391" endtime="20201030 18:28:27.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.400" endtime="20201030 18:28:27.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.096" endtime="20201030 18:28:27.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.094" endtime="20201030 18:28:27.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.407" level="INFO">${RESULT} = [{'diff': 4.401400000000194e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.2665999999999824e-05}, {'diff': 5.351400000000103e-05}, {'diff': 5.2707999999998534e-05}, {'diff': 5.3666000000000824e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:27.404" endtime="20201030 18:28:27.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.411" level="INFO">${ACCURACY} = {'diff': [4.401400000000194e-05, 5.363900000000116e-05, 5.2665999999999824e-05, 5.351400000000103e-05, 5.2707999999998534e-05, 5.3666000000000824e-05, 5.0709000000002946e-05, 5.269500000000191e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:27.408" endtime="20201030 18:28:27.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.416" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.415" endtime="20201030 18:28:27.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.418" level="INFO">VALUE: [4.401400000000194e-05, 5.363900000000116e-05, 5.2665999999999824e-05, 5.351400000000103e-05, 5.2707999999998534e-05, 5.3666000000000824e-05, 5.0709000000002946e-05, 5.269500000000191e-05, 5.072199999999957e-05, 5.163899999999916e-05, 5.074999999999871e-05, 5.356899999999984e-05, 5.174999999999971e-05, 5.072199999999957e-05, 5.0679999999997394e-05, 5.275000000000071e-05, 5.163899999999916e-05, 5.356999999999931e-05, 5.070899999999948e-05, 5.079200000000089e-05, 5.075000000000218e-05, 5.259699999999798e-05, 5.263900000000016e-05, 5.361099999999855e-05, 5.165299999999873e-05, 5.079200000000089e-05, 5.161100000000002e-05, 5.355599999999974e-05, 5.258300000000188e-05, 5.255499999999927e-05, 5.259700000000145e-05, 5.174999999999971e-05, 5.0693999999996964e-05, 5.355500000000027e-05, 5.261200000000049e-05, 5.365300000000073e-05, 5.066700000000077e-05, 5.259700000000145e-05, 5.2693999999998964e-05, 5.358399999999888e-05, 5.163900000000263e-05, 5.26669999999993e-05, 5.081900000000056e-05, 5.356999999999931e-05, 5.163899999999916e-05, 5.3652000000001254e-05, 5.356999999999931e-05, 5.269400000000243e-05, 5.363900000000116e-05, 5.3680000000000394e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.417" endtime="20201030 18:28:27.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.412" endtime="20201030 18:28:27.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.424" endtime="20201030 18:28:27.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.422" endtime="20201030 18:28:27.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.421" endtime="20201030 18:28:27.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.057" endtime="20201030 18:28:27.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.056" endtime="20201030 18:28:27.444"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.453" endtime="20201030 18:28:27.473"></status>
</kw>
<msg timestamp="20201030 18:28:27.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.452" endtime="20201030 18:28:27.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.474" endtime="20201030 18:28:27.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.477" endtime="20201030 18:28:27.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.449" endtime="20201030 18:28:27.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.447" endtime="20201030 18:28:27.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.486" endtime="20201030 18:28:27.772"></status>
</kw>
<msg timestamp="20201030 18:28:27.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.485" endtime="20201030 18:28:27.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021941972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.776" endtime="20201030 18:28:27.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.785" endtime="20201030 18:28:27.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.482" endtime="20201030 18:28:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.480" endtime="20201030 18:28:27.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.791" level="INFO">${RESULT} = [{'diff': 5.161100000000002e-05}, {'diff': 5.268099999999887e-05}, {'diff': 5.168099999999787e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.16669999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:27.788" endtime="20201030 18:28:27.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.796" level="INFO">${ACCURACY} = {'diff': [5.161100000000002e-05, 5.268099999999887e-05, 5.168099999999787e-05, 5.072199999999957e-05, 5.362500000000159e-05, 5.16669999999983e-05, 5.358299999999941e-05, 5.168099999999787e-05, 5.26529...</msg>
<status status="PASS" starttime="20201030 18:28:27.792" endtime="20201030 18:28:27.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.800" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.799" endtime="20201030 18:28:27.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.803" level="INFO">VALUE: [5.161100000000002e-05, 5.268099999999887e-05, 5.168099999999787e-05, 5.072199999999957e-05, 5.362500000000159e-05, 5.16669999999983e-05, 5.358299999999941e-05, 5.168099999999787e-05, 5.265299999999973e-05, 5.166700000000177e-05, 5.069400000000043e-05, 5.161100000000002e-05, 5.259700000000145e-05, 5.074999999999871e-05, 5.166700000000177e-05, 5.068000000000086e-05, 5.077800000000132e-05, 4.976400000000075e-05, 5.352699999999766e-05, 5.165299999999873e-05, 5.072199999999957e-05, 5.1679999999998394e-05, 5.068000000000086e-05, 5.173600000000014e-05, 5.359699999999898e-05, 5.255599999999874e-05, 5.362500000000159e-05, 5.263900000000016e-05, 5.35280000000006e-05, 5.258399999999788e-05, 5.165299999999873e-05, 5.350000000000146e-05, 5.365300000000073e-05, 5.165299999999873e-05, 5.069499999999991e-05, 5.259800000000092e-05, 5.2679999999999394e-05, 5.069400000000043e-05, 5.356999999999931e-05, 5.261099999999755e-05, 5.269500000000191e-05, 5.074999999999871e-05, 5.259700000000145e-05, 5.35410000000007e-05, 5.261100000000102e-05, 5.268099999999887e-05, 5.356999999999931e-05, 5.258300000000188e-05, 5.16669999999983e-05, 5.261100000000102e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.801" endtime="20201030 18:28:27.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.797" endtime="20201030 18:28:27.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.809" endtime="20201030 18:28:27.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.807" endtime="20201030 18:28:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.806" endtime="20201030 18:28:27.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.445" endtime="20201030 18:28:27.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.445" endtime="20201030 18:28:27.830"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.839" endtime="20201030 18:28:27.861"></status>
</kw>
<msg timestamp="20201030 18:28:27.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.837" endtime="20201030 18:28:27.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.862" endtime="20201030 18:28:27.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.865" endtime="20201030 18:28:27.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.835" endtime="20201030 18:28:27.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.832" endtime="20201030 18:28:27.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.874" endtime="20201030 18:28:28.160"></status>
</kw>
<msg timestamp="20201030 18:28:28.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023557208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.873" endtime="20201030 18:28:28.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023488292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023557208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.165" endtime="20201030 18:28:28.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.173" endtime="20201030 18:28:28.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.870" endtime="20201030 18:28:28.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.868" endtime="20201030 18:28:28.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.180" level="INFO">${RESULT} = [{'diff': 6.891599999999873e-05}, {'diff': 5.363900000000116e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.1735999999996674e-05}, {'diff': 5.163900000000263e-05}, {'diff': 5.273600000000114e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:28.177" endtime="20201030 18:28:28.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.185" level="INFO">${ACCURACY} = {'diff': [6.891599999999873e-05, 5.363900000000116e-05, 5.259700000000145e-05, 5.1735999999996674e-05, 5.163900000000263e-05, 5.273600000000114e-05, 5.262499999999712e-05, 5.262500000000059e-05, 5.175...</msg>
<status status="PASS" starttime="20201030 18:28:28.181" endtime="20201030 18:28:28.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.190" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.189" endtime="20201030 18:28:28.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.193" level="INFO">VALUE: [6.891599999999873e-05, 5.363900000000116e-05, 5.259700000000145e-05, 5.1735999999996674e-05, 5.163900000000263e-05, 5.273600000000114e-05, 5.262499999999712e-05, 5.262500000000059e-05, 5.175000000000318e-05, 5.358400000000235e-05, 5.261100000000102e-05, 5.175000000000318e-05, 5.268100000000234e-05, 5.1651999999999254e-05, 5.356899999999984e-05, 5.3693999999999964e-05, 5.0708e-05, 5.358300000000288e-05, 5.079200000000089e-05, 5.262500000000059e-05, 5.259699999999798e-05, 5.3707999999999534e-05, 5.069400000000043e-05, 5.366699999999683e-05, 5.4513999999998564e-05, 5.2665999999999824e-05, 5.355500000000027e-05, 5.177800000000232e-05, 5.4513999999998564e-05, 5.3638000000001684e-05, 5.259800000000092e-05, 5.2679999999999394e-05, 5.35280000000006e-05, 5.176400000000275e-05, 5.080600000000046e-05, 5.258400000000135e-05, 5.176399999999928e-05, 5.0679999999997394e-05, 5.165299999999873e-05, 5.176400000000275e-05, 5.16530000000022e-05, 5.272300000000105e-05, 5.262500000000059e-05, 5.163899999999916e-05, 5.081900000000056e-05, 5.262499999999712e-05, 5.168100000000134e-05, 5.176299999999981e-05, 5.261100000000102e-05, 5.263900000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.191" endtime="20201030 18:28:28.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.186" endtime="20201030 18:28:28.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.198" endtime="20201030 18:28:28.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.196" endtime="20201030 18:28:28.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.195" endtime="20201030 18:28:28.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.831" endtime="20201030 18:28:28.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.830" endtime="20201030 18:28:28.219"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.228" endtime="20201030 18:28:28.249"></status>
</kw>
<msg timestamp="20201030 18:28:28.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.226" endtime="20201030 18:28:28.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.250" endtime="20201030 18:28:28.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.253" endtime="20201030 18:28:28.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.224" endtime="20201030 18:28:28.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.222" endtime="20201030 18:28:28.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.263" endtime="20201030 18:28:28.551"></status>
</kw>
<msg timestamp="20201030 18:28:28.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021458069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.261" endtime="20201030 18:28:28.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021458069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.555" endtime="20201030 18:28:28.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.564" endtime="20201030 18:28:28.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.258" endtime="20201030 18:28:28.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.256" endtime="20201030 18:28:28.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.570" level="INFO">${RESULT} = [{'diff': 5.1708000000001e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.066700000000077e-05}, {'diff': 5.2680000000002863e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:28.567" endtime="20201030 18:28:28.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.575" level="INFO">${ACCURACY} = {'diff': [5.1708000000001e-05, 5.263900000000016e-05, 5.26669999999993e-05, 5.074999999999871e-05, 5.066700000000077e-05, 5.2680000000002863e-05, 5.06669999999973e-05, 5.162499999999959e-05, 5.1709000...</msg>
<status status="PASS" starttime="20201030 18:28:28.571" endtime="20201030 18:28:28.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.579" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.578" endtime="20201030 18:28:28.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.582" level="INFO">VALUE: [5.1708000000001e-05, 5.263900000000016e-05, 5.26669999999993e-05, 5.074999999999871e-05, 5.066700000000077e-05, 5.2680000000002863e-05, 5.06669999999973e-05, 5.162499999999959e-05, 5.170900000000048e-05, 5.1679999999998394e-05, 5.258300000000188e-05, 5.168000000000186e-05, 5.355500000000027e-05, 5.35280000000006e-05, 5.362500000000159e-05, 5.361099999999855e-05, 5.256900000000231e-05, 5.1665999999998824e-05, 5.168099999999787e-05, 5.259800000000092e-05, 5.162499999999959e-05, 5.362500000000159e-05, 5.162500000000306e-05, 5.258400000000135e-05, 5.169500000000091e-05, 5.263900000000016e-05, 5.069499999999991e-05, 5.1637999999999684e-05, 5.173600000000014e-05, 5.072199999999957e-05, 5.355599999999974e-05, 5.263900000000016e-05, 5.168100000000134e-05, 5.1666000000002293e-05, 5.261099999999755e-05, 5.163899999999916e-05, 5.363899999999769e-05, 5.069499999999991e-05, 5.356899999999984e-05, 5.3652000000001254e-05, 5.1652000000002724e-05, 5.355599999999974e-05, 5.352699999999766e-05, 5.363900000000116e-05, 5.263900000000016e-05, 5.3485999999998424e-05, 5.173600000000014e-05, 5.172300000000005e-05, 5.163899999999916e-05, 5.3652000000001254e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.580" endtime="20201030 18:28:28.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.576" endtime="20201030 18:28:28.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.591" endtime="20201030 18:28:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.590" endtime="20201030 18:28:28.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.588" endtime="20201030 18:28:28.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.220" endtime="20201030 18:28:28.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.219" endtime="20201030 18:28:28.612"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.621" endtime="20201030 18:28:28.644"></status>
</kw>
<msg timestamp="20201030 18:28:28.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.619" endtime="20201030 18:28:28.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.645" endtime="20201030 18:28:28.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.648" endtime="20201030 18:28:28.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.617" endtime="20201030 18:28:28.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.615" endtime="20201030 18:28:28.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.658" endtime="20201030 18:28:28.944"></status>
</kw>
<msg timestamp="20201030 18:28:28.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024883111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.656" endtime="20201030 18:28:28.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024883111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024942444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.948" endtime="20201030 18:28:28.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.957" endtime="20201030 18:28:28.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.653" endtime="20201030 18:28:28.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.652" endtime="20201030 18:28:28.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.964" level="INFO">${RESULT} = [{'diff': 5.933300000000169e-05}, {'diff': 5.1679999999998394e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.165299999999873e-05}, {'diff': 5.080600000000046e-05}, {'diff': 5.262500000000059e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:28.960" endtime="20201030 18:28:28.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.968" level="INFO">${ACCURACY} = {'diff': [5.933300000000169e-05, 5.1679999999998394e-05, 5.262500000000059e-05, 5.165299999999873e-05, 5.080600000000046e-05, 5.262500000000059e-05, 5.163899999999916e-05, 5.072200000000304e-05, 5.080...</msg>
<status status="PASS" starttime="20201030 18:28:28.965" endtime="20201030 18:28:28.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.972" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.971" endtime="20201030 18:28:28.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.975" level="INFO">VALUE: [5.933300000000169e-05, 5.1679999999998394e-05, 5.262500000000059e-05, 5.165299999999873e-05, 5.080600000000046e-05, 5.262500000000059e-05, 5.163899999999916e-05, 5.072200000000304e-05, 5.080599999999699e-05, 5.1651999999999254e-05, 5.069400000000043e-05, 5.163899999999916e-05, 5.068100000000034e-05, 5.063899999999816e-05, 5.255499999999927e-05, 5.259700000000145e-05, 5.080600000000046e-05, 5.361099999999855e-05, 5.359700000000245e-05, 5.161100000000002e-05, 5.262500000000059e-05, 5.177699999999938e-05, 5.072199999999957e-05, 5.073599999999914e-05, 5.358399999999888e-05, 5.365300000000073e-05, 5.070899999999948e-05, 5.069400000000043e-05, 5.261100000000102e-05, 5.163899999999916e-05, 5.261100000000102e-05, 5.263900000000016e-05, 5.168099999999787e-05, 5.259699999999798e-05, 5.0708e-05, 5.068100000000034e-05, 5.454200000000117e-05, 5.16530000000022e-05, 5.0708e-05, 5.357000000000278e-05, 5.177699999999938e-05, 5.358399999999888e-05, 5.165299999999873e-05, 5.161199999999949e-05, 5.361199999999802e-05, 5.174999999999971e-05, 5.263900000000016e-05, 5.166700000000177e-05, 5.162499999999959e-05, 5.259699999999798e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.974" endtime="20201030 18:28:28.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.969" endtime="20201030 18:28:28.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.981" endtime="20201030 18:28:29.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.979" endtime="20201030 18:28:29.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.978" endtime="20201030 18:28:29.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.613" endtime="20201030 18:28:29.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.613" endtime="20201030 18:28:29.002"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.011" endtime="20201030 18:28:29.030"></status>
</kw>
<msg timestamp="20201030 18:28:29.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.009" endtime="20201030 18:28:29.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.032" endtime="20201030 18:28:29.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.035" endtime="20201030 18:28:29.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.007" endtime="20201030 18:28:29.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.005" endtime="20201030 18:28:29.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.044" endtime="20201030 18:28:29.329"></status>
</kw>
<msg timestamp="20201030 18:28:29.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.042" endtime="20201030 18:28:29.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021886903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.334" endtime="20201030 18:28:29.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.343" endtime="20201030 18:28:29.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.040" endtime="20201030 18:28:29.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.038" endtime="20201030 18:28:29.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.349" level="INFO">${RESULT} = [{'diff': 4.118000000000177e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.263900000000016e-05}, {'diff': 5.362500000000159e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:29.346" endtime="20201030 18:28:29.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.355" level="INFO">${ACCURACY} = {'diff': [4.118000000000177e-05, 5.072199999999957e-05, 5.2679999999999394e-05, 5.162499999999959e-05, 5.263900000000016e-05, 5.362500000000159e-05, 5.262499999999712e-05, 5.070899999999948e-05, 5.261...</msg>
<status status="PASS" starttime="20201030 18:28:29.350" endtime="20201030 18:28:29.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.359" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.358" endtime="20201030 18:28:29.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.362" level="INFO">VALUE: [4.118000000000177e-05, 5.072199999999957e-05, 5.2679999999999394e-05, 5.162499999999959e-05, 5.263900000000016e-05, 5.362500000000159e-05, 5.262499999999712e-05, 5.070899999999948e-05, 5.261100000000102e-05, 5.069400000000043e-05, 5.362499999999812e-05, 5.177799999999885e-05, 5.168099999999787e-05, 5.163899999999916e-05, 5.268099999999887e-05, 5.074999999999871e-05, 5.261100000000102e-05, 5.165299999999873e-05, 5.172200000000057e-05, 5.1708000000001e-05, 5.174999999999971e-05, 5.262500000000059e-05, 5.259700000000145e-05, 5.2679999999999394e-05, 5.454099999999823e-05, 5.16530000000022e-05, 5.356999999999931e-05, 5.265299999999973e-05, 4.980499999999999e-05, 5.356999999999931e-05, 5.072199999999957e-05, 5.265299999999973e-05, 5.266700000000277e-05, 5.259700000000145e-05, 5.263900000000016e-05, 5.1707999999997534e-05, 5.259699999999798e-05, 5.354200000000017e-05, 5.356899999999984e-05, 5.079200000000089e-05, 5.263900000000016e-05, 5.261099999999755e-05, 5.172200000000057e-05, 5.172300000000005e-05, 5.261100000000102e-05, 5.1665999999998824e-05, 5.261100000000102e-05, 5.358299999999941e-05, 5.263900000000016e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.360" endtime="20201030 18:28:29.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.355" endtime="20201030 18:28:29.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.367" endtime="20201030 18:28:29.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.365" endtime="20201030 18:28:29.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.364" endtime="20201030 18:28:29.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.003" endtime="20201030 18:28:29.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.002" endtime="20201030 18:28:29.388"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.397" endtime="20201030 18:28:29.417"></status>
</kw>
<msg timestamp="20201030 18:28:29.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.395" endtime="20201030 18:28:29.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.419" endtime="20201030 18:28:29.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.421" endtime="20201030 18:28:29.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.392" endtime="20201030 18:28:29.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.390" endtime="20201030 18:28:29.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.431" endtime="20201030 18:28:29.718"></status>
</kw>
<msg timestamp="20201030 18:28:29.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.429" endtime="20201030 18:28:29.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022972472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.722" endtime="20201030 18:28:29.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.731" endtime="20201030 18:28:29.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.426" endtime="20201030 18:28:29.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.424" endtime="20201030 18:28:29.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.738" level="INFO">${RESULT} = [{'diff': 4.027800000000123e-05}, {'diff': 5.1651999999999254e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.072200000000304e-05}, {'diff': 5.172300000000005e-05}, {'diff': 5.174999999999971e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:29.735" endtime="20201030 18:28:29.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.742" level="INFO">${ACCURACY} = {'diff': [4.027800000000123e-05, 5.1651999999999254e-05, 5.074999999999871e-05, 5.072200000000304e-05, 5.172300000000005e-05, 5.174999999999971e-05, 5.1693999999997964e-05, 5.072199999999957e-05, 5.17...</msg>
<status status="PASS" starttime="20201030 18:28:29.739" endtime="20201030 18:28:29.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.747" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.746" endtime="20201030 18:28:29.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.749" level="INFO">VALUE: [4.027800000000123e-05, 5.1651999999999254e-05, 5.074999999999871e-05, 5.072200000000304e-05, 5.172300000000005e-05, 5.174999999999971e-05, 5.1693999999997964e-05, 5.072199999999957e-05, 5.173600000000014e-05, 5.073599999999914e-05, 5.261100000000102e-05, 5.076400000000175e-05, 5.0708e-05, 5.365300000000073e-05, 5.26669999999993e-05, 5.069499999999991e-05, 5.176399999999928e-05, 5.166700000000177e-05, 5.259700000000145e-05, 5.079099999999795e-05, 5.361200000000149e-05, 5.1651999999999254e-05, 5.3651999999997785e-05, 5.362500000000159e-05, 5.176399999999928e-05, 5.261099999999755e-05, 5.173600000000014e-05, 5.163899999999916e-05, 5.2665999999999824e-05, 5.363899999999769e-05, 5.450000000000246e-05, 5.174999999999971e-05, 5.262500000000059e-05, 5.368099999999987e-05, 5.16530000000022e-05, 5.0708e-05, 5.259699999999798e-05, 5.082000000000003e-05, 5.1651999999999254e-05, 5.076400000000175e-05, 5.165299999999873e-05, 5.083300000000013e-05, 5.263900000000016e-05, 5.2707999999998534e-05, 5.358300000000288e-05, 5.358299999999941e-05, 5.2707999999998534e-05, 5.168000000000186e-05, 5.176399999999928e-05, 5.363899999999769e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.748" endtime="20201030 18:28:29.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.743" endtime="20201030 18:28:29.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.755" endtime="20201030 18:28:29.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.753" endtime="20201030 18:28:29.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.752" endtime="20201030 18:28:29.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.389" endtime="20201030 18:28:29.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.388" endtime="20201030 18:28:29.776"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.785" endtime="20201030 18:28:29.805"></status>
</kw>
<msg timestamp="20201030 18:28:29.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.783" endtime="20201030 18:28:29.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.806" endtime="20201030 18:28:29.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.809" endtime="20201030 18:28:29.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.780" endtime="20201030 18:28:29.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.778" endtime="20201030 18:28:29.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.818" endtime="20201030 18:28:30.105"></status>
</kw>
<msg timestamp="20201030 18:28:30.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.817" endtime="20201030 18:28:30.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022003042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.109" endtime="20201030 18:28:30.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.118" endtime="20201030 18:28:30.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.814" endtime="20201030 18:28:30.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.812" endtime="20201030 18:28:30.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.125" level="INFO">${RESULT} = [{'diff': 4.5902999999999916e-05}, {'diff': 5.261099999999755e-05}, {'diff': 5.1651999999999254e-05}, {'diff': 5.0679999999997394e-05}, {'diff': 5.159800000000339e-05}, {'diff': 5.261100000000102e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:30.121" endtime="20201030 18:28:30.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.129" level="INFO">${ACCURACY} = {'diff': [4.5902999999999916e-05, 5.261099999999755e-05, 5.1651999999999254e-05, 5.0679999999997394e-05, 5.159800000000339e-05, 5.261100000000102e-05, 5.069499999999991e-05, 5.079199999999742e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 18:28:30.126" endtime="20201030 18:28:30.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.133" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.132" endtime="20201030 18:28:30.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.136" level="INFO">VALUE: [4.5902999999999916e-05, 5.261099999999755e-05, 5.1651999999999254e-05, 5.0679999999997394e-05, 5.159800000000339e-05, 5.261100000000102e-05, 5.069499999999991e-05, 5.079199999999742e-05, 5.163899999999916e-05, 5.356899999999984e-05, 5.16669999999983e-05, 5.277799999999985e-05, 5.069400000000043e-05, 5.35280000000006e-05, 5.168099999999787e-05, 5.3638000000001684e-05, 5.163900000000263e-05, 5.174999999999971e-05, 5.358399999999888e-05, 5.068100000000034e-05, 5.163900000000263e-05, 5.259699999999798e-05, 5.3638000000001684e-05, 5.159700000000045e-05, 5.163899999999916e-05, 5.258299999999841e-05, 5.172200000000057e-05, 5.265299999999973e-05, 5.259700000000145e-05, 5.269500000000191e-05, 5.163900000000263e-05, 5.259700000000145e-05, 5.072199999999957e-05, 5.261099999999755e-05, 5.258400000000135e-05, 5.368099999999987e-05, 5.165299999999873e-05, 5.261099999999755e-05, 5.069499999999991e-05, 5.161100000000002e-05, 5.083300000000013e-05, 5.1637999999999684e-05, 5.162499999999959e-05, 5.069400000000043e-05, 5.259800000000092e-05, 5.163899999999916e-05, 4.983299999999913e-05, 5.351400000000103e-05, 5.255500000000274e-05, 5.1707999999997534e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.135" endtime="20201030 18:28:30.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.130" endtime="20201030 18:28:30.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.142" endtime="20201030 18:28:30.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.141" endtime="20201030 18:28:30.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.139" endtime="20201030 18:28:30.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.776" endtime="20201030 18:28:30.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.776" endtime="20201030 18:28:30.163"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.172" endtime="20201030 18:28:30.196"></status>
</kw>
<msg timestamp="20201030 18:28:30.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.170" endtime="20201030 18:28:30.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.198" endtime="20201030 18:28:30.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.200" endtime="20201030 18:28:30.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.168" endtime="20201030 18:28:30.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.166" endtime="20201030 18:28:30.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.210" endtime="20201030 18:28:30.496"></status>
</kw>
<msg timestamp="20201030 18:28:30.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.208" endtime="20201030 18:28:30.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021301139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021369042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.501" endtime="20201030 18:28:30.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.509" endtime="20201030 18:28:30.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.206" endtime="20201030 18:28:30.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.204" endtime="20201030 18:28:30.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.516" level="INFO">${RESULT} = [{'diff': 6.79030000000011e-05}, {'diff': 5.168000000000186e-05}, {'diff': 5.166700000000177e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.16669999999983e-05}, {'diff': 5.261100000000102e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:30.513" endtime="20201030 18:28:30.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.521" level="INFO">${ACCURACY} = {'diff': [6.79030000000011e-05, 5.168000000000186e-05, 5.166700000000177e-05, 5.259700000000145e-05, 5.16669999999983e-05, 5.261100000000102e-05, 5.069499999999991e-05, 5.168100000000134e-05, 5.067999...</msg>
<status status="PASS" starttime="20201030 18:28:30.517" endtime="20201030 18:28:30.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.526" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.525" endtime="20201030 18:28:30.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.528" level="INFO">VALUE: [6.79030000000011e-05, 5.168000000000186e-05, 5.166700000000177e-05, 5.259700000000145e-05, 5.16669999999983e-05, 5.261100000000102e-05, 5.069499999999991e-05, 5.168100000000134e-05, 5.0679999999997394e-05, 5.2679999999999394e-05, 5.066700000000077e-05, 5.0679999999997394e-05, 5.352700000000113e-05, 5.163900000000263e-05, 5.355599999999974e-05, 5.162499999999959e-05, 5.074999999999871e-05, 5.263900000000016e-05, 5.072200000000304e-05, 5.269499999999844e-05, 5.259800000000092e-05, 5.354200000000017e-05, 5.1708000000001e-05, 5.263900000000016e-05, 5.165299999999873e-05, 5.06530000000012e-05, 5.163899999999916e-05, 5.254199999999917e-05, 5.258400000000135e-05, 5.176399999999928e-05, 5.359800000000192e-05, 5.358300000000288e-05, 5.163900000000263e-05, 5.166700000000177e-05, 5.358300000000288e-05, 5.163900000000263e-05, 5.077700000000185e-05, 5.16669999999983e-05, 5.259800000000092e-05, 5.069499999999991e-05, 5.0708e-05, 5.068000000000086e-05, 5.163899999999916e-05, 5.0708e-05, 5.16530000000022e-05, 5.358299999999941e-05, 5.077800000000132e-05, 5.355500000000027e-05, 5.3485999999998424e-05, 5.358299999999941e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.527" endtime="20201030 18:28:30.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.522" endtime="20201030 18:28:30.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.534" endtime="20201030 18:28:30.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.532" endtime="20201030 18:28:30.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.531" endtime="20201030 18:28:30.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.164" endtime="20201030 18:28:30.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.163" endtime="20201030 18:28:30.555"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.564" endtime="20201030 18:28:30.583"></status>
</kw>
<msg timestamp="20201030 18:28:30.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.562" endtime="20201030 18:28:30.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.585" endtime="20201030 18:28:30.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.587" endtime="20201030 18:28:30.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.559" endtime="20201030 18:28:30.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.557" endtime="20201030 18:28:30.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.597" endtime="20201030 18:28:30.885"></status>
</kw>
<msg timestamp="20201030 18:28:30.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.595" endtime="20201030 18:28:30.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.889" endtime="20201030 18:28:30.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.898" endtime="20201030 18:28:30.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.593" endtime="20201030 18:28:30.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.591" endtime="20201030 18:28:30.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.905" level="INFO">${RESULT} = [{'diff': 4.6958999999999196e-05}, {'diff': 5.069400000000043e-05}, {'diff': 5.270899999999801e-05}, {'diff': 5.0708e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5....</msg>
<status status="PASS" starttime="20201030 18:28:30.901" endtime="20201030 18:28:30.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.909" level="INFO">${ACCURACY} = {'diff': [4.6958999999999196e-05, 5.069400000000043e-05, 5.270899999999801e-05, 5.0708e-05, 5.365300000000073e-05, 5.262500000000059e-05, 5.4513999999998564e-05, 5.173600000000014e-05, 5.1652999999998...</msg>
<status status="PASS" starttime="20201030 18:28:30.906" endtime="20201030 18:28:30.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.914" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.913" endtime="20201030 18:28:30.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.916" level="INFO">VALUE: [4.6958999999999196e-05, 5.069400000000043e-05, 5.270899999999801e-05, 5.0708e-05, 5.365300000000073e-05, 5.262500000000059e-05, 5.4513999999998564e-05, 5.173600000000014e-05, 5.165299999999873e-05, 5.165299999999873e-05, 5.356900000000331e-05, 5.358400000000235e-05, 5.262500000000059e-05, 5.165299999999873e-05, 5.36670000000003e-05, 5.168099999999787e-05, 5.263900000000016e-05, 5.179200000000189e-05, 5.172200000000057e-05, 5.073599999999914e-05, 5.4499999999998994e-05, 5.176400000000275e-05, 5.163899999999916e-05, 5.272300000000105e-05, 5.358299999999941e-05, 5.176299999999981e-05, 5.356899999999984e-05, 5.173600000000014e-05, 5.172300000000005e-05, 5.176400000000275e-05, 5.358299999999941e-05, 5.358399999999888e-05, 5.076400000000175e-05, 5.175000000000318e-05, 5.0708e-05, 5.161100000000002e-05, 5.177799999999885e-05, 5.4499999999998994e-05, 5.166700000000177e-05, 5.365300000000073e-05, 5.1665999999998824e-05, 5.16530000000022e-05, 5.180599999999799e-05, 5.261200000000049e-05, 5.2708000000002e-05, 5.258299999999841e-05, 5.163899999999916e-05, 5.2707999999998534e-05, 5.163900000000263e-05, 5.069499999999991e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.915" endtime="20201030 18:28:30.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.910" endtime="20201030 18:28:30.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.921" endtime="20201030 18:28:30.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.920" endtime="20201030 18:28:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.919" endtime="20201030 18:28:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.555" endtime="20201030 18:28:30.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.555" endtime="20201030 18:28:30.942"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.951" endtime="20201030 18:28:30.975"></status>
</kw>
<msg timestamp="20201030 18:28:30.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.950" endtime="20201030 18:28:30.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.977" endtime="20201030 18:28:30.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.979" endtime="20201030 18:28:30.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.947" endtime="20201030 18:28:30.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.945" endtime="20201030 18:28:30.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.988" endtime="20201030 18:28:31.276"></status>
</kw>
<msg timestamp="20201030 18:28:31.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025842347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.987" endtime="20201030 18:28:31.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025842347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025897806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.280" endtime="20201030 18:28:31.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.289" endtime="20201030 18:28:31.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.984" endtime="20201030 18:28:31.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.982" endtime="20201030 18:28:31.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.296" level="INFO">${RESULT} = [{'diff': 5.545899999999729e-05}, {'diff': 5.169500000000091e-05}, {'diff': 5.079100000000142e-05}, {'diff': 5.2665999999999824e-05}, {'diff': 5.074999999999871e-05}, {'diff': 5.072299999999905e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:31.293" endtime="20201030 18:28:31.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.300" level="INFO">${ACCURACY} = {'diff': [5.545899999999729e-05, 5.169500000000091e-05, 5.079100000000142e-05, 5.2665999999999824e-05, 5.074999999999871e-05, 5.072299999999905e-05, 5.362499999999812e-05, 5.165299999999873e-05, 5.358...</msg>
<status status="PASS" starttime="20201030 18:28:31.297" endtime="20201030 18:28:31.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.305" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.304" endtime="20201030 18:28:31.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.307" level="INFO">VALUE: [5.545899999999729e-05, 5.169500000000091e-05, 5.079100000000142e-05, 5.2665999999999824e-05, 5.074999999999871e-05, 5.072299999999905e-05, 5.362499999999812e-05, 5.165299999999873e-05, 5.358299999999941e-05, 5.2679999999999394e-05, 5.3499999999997994e-05, 5.363900000000116e-05, 5.268099999999887e-05, 5.169400000000143e-05, 5.077800000000132e-05, 5.169500000000091e-05, 5.169500000000091e-05, 5.261099999999755e-05, 5.073599999999914e-05, 5.079200000000089e-05, 5.169400000000143e-05, 5.261100000000102e-05, 5.259700000000145e-05, 5.169499999999744e-05, 5.2652000000000254e-05, 5.26669999999993e-05, 5.069499999999991e-05, 5.074999999999871e-05, 5.168000000000186e-05, 5.169500000000091e-05, 5.26669999999993e-05, 5.169500000000091e-05, 5.169500000000091e-05, 5.076400000000175e-05, 5.168099999999787e-05, 5.363899999999769e-05, 5.172200000000057e-05, 5.263900000000016e-05, 5.072199999999957e-05, 5.2679999999999394e-05, 5.270900000000148e-05, 5.1708000000001e-05, 5.26669999999993e-05, 5.173699999999962e-05, 5.1665999999998824e-05, 5.263900000000016e-05, 5.169500000000091e-05, 5.362500000000159e-05, 5.265299999999973e-05, 5.1693999999997964e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.306" endtime="20201030 18:28:31.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.301" endtime="20201030 18:28:31.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.314" endtime="20201030 18:28:31.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.312" endtime="20201030 18:28:31.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.311" endtime="20201030 18:28:31.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.943" endtime="20201030 18:28:31.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.943" endtime="20201030 18:28:31.334"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.343" endtime="20201030 18:28:31.362"></status>
</kw>
<msg timestamp="20201030 18:28:31.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.342" endtime="20201030 18:28:31.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.364" endtime="20201030 18:28:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.366" endtime="20201030 18:28:31.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.339" endtime="20201030 18:28:31.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.337" endtime="20201030 18:28:31.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.376" endtime="20201030 18:28:31.662"></status>
</kw>
<msg timestamp="20201030 18:28:31.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020584361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.374" endtime="20201030 18:28:31.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020584361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.667" endtime="20201030 18:28:31.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.675" endtime="20201030 18:28:31.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.372" endtime="20201030 18:28:31.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.370" endtime="20201030 18:28:31.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.682" level="INFO">${RESULT} = [{'diff': 4.025000000000209e-05}, {'diff': 5.2680000000002863e-05}, {'diff': 5.069400000000043e-05}, {'diff': 5.355500000000027e-05}, {'diff': 5.358299999999941e-05}, {'diff': 5.358399999999888e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:31.679" endtime="20201030 18:28:31.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.687" level="INFO">${ACCURACY} = {'diff': [4.025000000000209e-05, 5.2680000000002863e-05, 5.069400000000043e-05, 5.355500000000027e-05, 5.358299999999941e-05, 5.358399999999888e-05, 5.074999999999871e-05, 5.163899999999916e-05, 5.072...</msg>
<status status="PASS" starttime="20201030 18:28:31.683" endtime="20201030 18:28:31.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.692" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.691" endtime="20201030 18:28:31.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.695" level="INFO">VALUE: [4.025000000000209e-05, 5.2680000000002863e-05, 5.069400000000043e-05, 5.355500000000027e-05, 5.358299999999941e-05, 5.358399999999888e-05, 5.074999999999871e-05, 5.163899999999916e-05, 5.072199999999957e-05, 5.173600000000014e-05, 5.356899999999984e-05, 5.261099999999755e-05, 5.263900000000016e-05, 5.262500000000059e-05, 5.356999999999931e-05, 5.077799999999785e-05, 5.061099999999902e-05, 5.358299999999941e-05, 5.2652000000000254e-05, 5.1707999999997534e-05, 5.261100000000102e-05, 5.0708e-05, 5.262500000000059e-05, 5.2665999999999824e-05, 5.076400000000175e-05, 5.2651999999996785e-05, 5.077799999999785e-05, 5.356999999999931e-05, 5.259700000000145e-05, 5.069400000000043e-05, 5.068000000000086e-05, 5.259699999999798e-05, 5.068000000000086e-05, 5.261100000000102e-05, 5.169500000000091e-05, 5.354200000000017e-05, 5.261100000000102e-05, 5.262500000000059e-05, 5.1651999999999254e-05, 5.355599999999974e-05, 5.352700000000113e-05, 5.161100000000002e-05, 5.359799999999845e-05, 5.169499999999744e-05, 5.261099999999755e-05, 5.361099999999855e-05, 5.358299999999941e-05, 5.168099999999787e-05, 5.262500000000059e-05, 5.076400000000175e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.693" endtime="20201030 18:28:31.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.688" endtime="20201030 18:28:31.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.700" endtime="20201030 18:28:31.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.698" endtime="20201030 18:28:31.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.697" endtime="20201030 18:28:31.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.335" endtime="20201030 18:28:31.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.335" endtime="20201030 18:28:31.721"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.730" endtime="20201030 18:28:31.748"></status>
</kw>
<msg timestamp="20201030 18:28:31.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.728" endtime="20201030 18:28:31.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.750" endtime="20201030 18:28:31.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.752" endtime="20201030 18:28:31.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.725" endtime="20201030 18:28:31.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.723" endtime="20201030 18:28:31.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.762" endtime="20201030 18:28:32.049"></status>
</kw>
<msg timestamp="20201030 18:28:32.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.760" endtime="20201030 18:28:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021057625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.053" endtime="20201030 18:28:32.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.062" endtime="20201030 18:28:32.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.757" endtime="20201030 18:28:32.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.756" endtime="20201030 18:28:32.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.069" level="INFO">${RESULT} = [{'diff': 6.215299999999882e-05}, {'diff': 5.162500000000306e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.073599999999914e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.2652000000000254e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:32.065" endtime="20201030 18:28:32.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.073" level="INFO">${ACCURACY} = {'diff': [6.215299999999882e-05, 5.162500000000306e-05, 5.362499999999812e-05, 5.073599999999914e-05, 5.261100000000102e-05, 5.2652000000000254e-05, 5.166700000000177e-05, 5.356899999999984e-05, 5.362...</msg>
<status status="PASS" starttime="20201030 18:28:32.070" endtime="20201030 18:28:32.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.078" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.076" endtime="20201030 18:28:32.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.080" level="INFO">VALUE: [6.215299999999882e-05, 5.162500000000306e-05, 5.362499999999812e-05, 5.073599999999914e-05, 5.261100000000102e-05, 5.2652000000000254e-05, 5.166700000000177e-05, 5.356899999999984e-05, 5.362499999999812e-05, 5.168100000000134e-05, 5.26669999999993e-05, 5.176399999999928e-05, 5.165299999999873e-05, 5.170900000000048e-05, 5.068100000000034e-05, 5.075000000000218e-05, 5.361099999999855e-05, 5.163900000000263e-05, 5.361100000000202e-05, 5.259699999999798e-05, 5.166700000000177e-05, 5.165299999999873e-05, 5.26669999999993e-05, 5.170900000000048e-05, 5.262499999999712e-05, 5.1665999999998824e-05, 5.1679999999998394e-05, 5.269400000000243e-05, 5.261200000000049e-05, 5.268099999999887e-05, 5.073599999999914e-05, 5.069400000000043e-05, 5.259799999999745e-05, 4.981999999999903e-05, 5.169400000000143e-05, 5.259800000000092e-05, 5.3651999999997785e-05, 5.168099999999787e-05, 5.259800000000092e-05, 5.2652000000000254e-05, 5.08339999999996e-05, 5.359799999999845e-05, 5.0723000000002516e-05, 5.261100000000102e-05, 5.069400000000043e-05, 5.2679999999999394e-05, 5.16530000000022e-05, 5.165299999999873e-05, 5.072199999999957e-05, 5.170899999999701e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.079" endtime="20201030 18:28:32.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.074" endtime="20201030 18:28:32.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.085" endtime="20201030 18:28:32.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.084" endtime="20201030 18:28:32.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.083" endtime="20201030 18:28:32.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.722" endtime="20201030 18:28:32.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.721" endtime="20201030 18:28:32.106"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.115" endtime="20201030 18:28:32.141"></status>
</kw>
<msg timestamp="20201030 18:28:32.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.114" endtime="20201030 18:28:32.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.143" endtime="20201030 18:28:32.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.145" endtime="20201030 18:28:32.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.111" endtime="20201030 18:28:32.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.109" endtime="20201030 18:28:32.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.155" endtime="20201030 18:28:32.441"></status>
</kw>
<msg timestamp="20201030 18:28:32.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027489958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027535875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.153" endtime="20201030 18:28:32.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027489958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027535875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.445" endtime="20201030 18:28:32.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.453" endtime="20201030 18:28:32.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.150" endtime="20201030 18:28:32.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.149" endtime="20201030 18:28:32.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.460" level="INFO">${RESULT} = [{'diff': 4.5917000000002955e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.268099999999887e-05}, {'diff': 5.262499999999712e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.265299999999973e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:32.457" endtime="20201030 18:28:32.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.465" level="INFO">${ACCURACY} = {'diff': [4.5917000000002955e-05, 5.262500000000059e-05, 5.268099999999887e-05, 5.262499999999712e-05, 5.261100000000102e-05, 5.265299999999973e-05, 5.355599999999974e-05, 5.2679999999999394e-05, 5.26...</msg>
<status status="PASS" starttime="20201030 18:28:32.461" endtime="20201030 18:28:32.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.469" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.468" endtime="20201030 18:28:32.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.472" level="INFO">VALUE: [4.5917000000002955e-05, 5.262500000000059e-05, 5.268099999999887e-05, 5.262499999999712e-05, 5.261100000000102e-05, 5.265299999999973e-05, 5.355599999999974e-05, 5.2679999999999394e-05, 5.263900000000016e-05, 5.069499999999991e-05, 5.359700000000245e-05, 5.263900000000016e-05, 5.068100000000034e-05, 5.173600000000014e-05, 5.16530000000022e-05, 5.258399999999788e-05, 5.359800000000192e-05, 5.362500000000159e-05, 5.361099999999855e-05, 5.26669999999993e-05, 5.163900000000263e-05, 5.1721999999997104e-05, 5.1693999999997964e-05, 5.0693999999996964e-05, 5.26530000000032e-05, 5.073599999999914e-05, 5.072199999999957e-05, 5.451299999999909e-05, 5.163899999999916e-05, 5.073599999999914e-05, 5.265299999999973e-05, 5.162499999999959e-05, 5.362499999999812e-05, 5.26669999999993e-05, 4.975000000000118e-05, 5.168099999999787e-05, 5.072199999999957e-05, 5.168100000000134e-05, 5.076300000000228e-05, 5.358299999999941e-05, 5.162499999999959e-05, 5.261100000000102e-05, 5.069400000000043e-05, 5.45280000000016e-05, 5.1693999999997964e-05, 5.354200000000017e-05, 5.173600000000014e-05, 5.168099999999787e-05, 5.069499999999991e-05, 5.2665999999999824e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.470" endtime="20201030 18:28:32.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.465" endtime="20201030 18:28:32.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.478" endtime="20201030 18:28:32.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.476" endtime="20201030 18:28:32.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.475" endtime="20201030 18:28:32.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.107" endtime="20201030 18:28:32.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.106" endtime="20201030 18:28:32.499"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.508" endtime="20201030 18:28:32.528"></status>
</kw>
<msg timestamp="20201030 18:28:32.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.506" endtime="20201030 18:28:32.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.529" endtime="20201030 18:28:32.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.532" endtime="20201030 18:28:32.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.503" endtime="20201030 18:28:32.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.501" endtime="20201030 18:28:32.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.541" endtime="20201030 18:28:32.826"></status>
</kw>
<msg timestamp="20201030 18:28:32.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.540" endtime="20201030 18:28:32.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.831" endtime="20201030 18:28:32.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.839" endtime="20201030 18:28:32.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.537" endtime="20201030 18:28:32.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.535" endtime="20201030 18:28:32.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.846" level="INFO">${RESULT} = [{'diff': 4.879199999999889e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.256899999999884e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.072299999999905e-05}, {'diff': 5.277799999999985e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:32.843" endtime="20201030 18:28:32.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.851" level="INFO">${ACCURACY} = {'diff': [4.879199999999889e-05, 5.365300000000073e-05, 5.256899999999884e-05, 5.162499999999959e-05, 5.072299999999905e-05, 5.277799999999985e-05, 5.068000000000086e-05, 5.166700000000177e-05, 5.1667...</msg>
<status status="PASS" starttime="20201030 18:28:32.847" endtime="20201030 18:28:32.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.856" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.855" endtime="20201030 18:28:32.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.859" level="INFO">VALUE: [4.879199999999889e-05, 5.365300000000073e-05, 5.256899999999884e-05, 5.162499999999959e-05, 5.072299999999905e-05, 5.277799999999985e-05, 5.068000000000086e-05, 5.166700000000177e-05, 5.166700000000177e-05, 5.165299999999873e-05, 5.2679999999999394e-05, 5.354200000000017e-05, 5.355599999999974e-05, 5.157000000000078e-05, 5.259800000000092e-05, 5.356899999999984e-05, 5.358299999999941e-05, 5.261099999999755e-05, 5.26669999999993e-05, 5.165299999999873e-05, 5.168099999999787e-05, 5.262500000000059e-05, 5.069400000000043e-05, 5.163899999999916e-05, 5.255599999999874e-05, 5.257000000000178e-05, 5.261100000000102e-05, 5.261100000000102e-05, 5.068100000000034e-05, 5.262500000000059e-05, 5.262500000000059e-05, 5.063899999999816e-05, 5.165299999999873e-05, 5.070899999999948e-05, 5.35549999999968e-05, 5.0708e-05, 5.355599999999974e-05, 5.354200000000017e-05, 5.356899999999984e-05, 5.072299999999905e-05, 5.3693999999999964e-05, 5.077800000000132e-05, 5.0708e-05, 5.35410000000007e-05, 5.16669999999983e-05, 5.165299999999873e-05, 5.355599999999974e-05, 5.072200000000304e-05, 5.163900000000263e-05, 5.159700000000045e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.857" endtime="20201030 18:28:32.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.852" endtime="20201030 18:28:32.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.864" endtime="20201030 18:28:32.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.862" endtime="20201030 18:28:32.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.861" endtime="20201030 18:28:32.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.499" endtime="20201030 18:28:32.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.499" endtime="20201030 18:28:32.885"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.894" endtime="20201030 18:28:32.914"></status>
</kw>
<msg timestamp="20201030 18:28:32.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.892" endtime="20201030 18:28:32.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.916" endtime="20201030 18:28:32.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.918" endtime="20201030 18:28:32.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.889" endtime="20201030 18:28:32.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.887" endtime="20201030 18:28:32.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.928" endtime="20201030 18:28:33.215"></status>
</kw>
<msg timestamp="20201030 18:28:33.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:32.926" endtime="20201030 18:28:33.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02259325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022635403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:33.219" endtime="20201030 18:28:33.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.228" endtime="20201030 18:28:33.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.924" endtime="20201030 18:28:33.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.922" endtime="20201030 18:28:33.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.235" level="INFO">${RESULT} = [{'diff': 4.2152999999999635e-05}, {'diff': 5.165299999999873e-05}, {'diff': 5.262499999999712e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.16530000000022e-05}, {'diff': 5.35280000000006e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:33.231" endtime="20201030 18:28:33.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.239" level="INFO">${ACCURACY} = {'diff': [4.2152999999999635e-05, 5.165299999999873e-05, 5.262499999999712e-05, 5.2679999999999394e-05, 5.16530000000022e-05, 5.35280000000006e-05, 5.069400000000043e-05, 5.265299999999973e-05, 5.0735...</msg>
<status status="PASS" starttime="20201030 18:28:33.236" endtime="20201030 18:28:33.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.243" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.242" endtime="20201030 18:28:33.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.246" level="INFO">VALUE: [4.2152999999999635e-05, 5.165299999999873e-05, 5.262499999999712e-05, 5.2679999999999394e-05, 5.16530000000022e-05, 5.35280000000006e-05, 5.069400000000043e-05, 5.265299999999973e-05, 5.073599999999914e-05, 5.258300000000188e-05, 5.259699999999798e-05, 5.169500000000091e-05, 5.169400000000143e-05, 5.35410000000007e-05, 5.355599999999974e-05, 5.263900000000016e-05, 5.361100000000202e-05, 5.069499999999991e-05, 5.359700000000245e-05, 5.074999999999871e-05, 5.2638000000000684e-05, 5.265299999999973e-05, 5.35419999999967e-05, 5.162499999999959e-05, 5.069499999999991e-05, 5.1679999999998394e-05, 5.076400000000175e-05, 5.261100000000102e-05, 5.2679999999999394e-05, 5.361100000000202e-05, 5.06530000000012e-05, 5.2666000000003294e-05, 5.169499999999744e-05, 5.069499999999991e-05, 5.072199999999957e-05, 5.273600000000114e-05, 5.35280000000006e-05, 5.1708000000001e-05, 5.169400000000143e-05, 5.163899999999916e-05, 5.168099999999787e-05, 5.361099999999855e-05, 5.256899999999884e-05, 5.075000000000218e-05, 5.168099999999787e-05, 5.066700000000077e-05, 5.265299999999973e-05, 5.356999999999931e-05, 5.068100000000034e-05, 5.262500000000059e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.245" endtime="20201030 18:28:33.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.240" endtime="20201030 18:28:33.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.251" endtime="20201030 18:28:33.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.250" endtime="20201030 18:28:33.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.248" endtime="20201030 18:28:33.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.886" endtime="20201030 18:28:33.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.885" endtime="20201030 18:28:33.272"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.282" endtime="20201030 18:28:33.306"></status>
</kw>
<msg timestamp="20201030 18:28:33.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.280" endtime="20201030 18:28:33.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.308" endtime="20201030 18:28:33.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.312" endtime="20201030 18:28:33.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.277" endtime="20201030 18:28:33.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.275" endtime="20201030 18:28:33.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.321" endtime="20201030 18:28:33.607"></status>
</kw>
<msg timestamp="20201030 18:28:33.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027138431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027189153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.320" endtime="20201030 18:28:33.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027138431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027189153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.611" endtime="20201030 18:28:33.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.620" endtime="20201030 18:28:33.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.317" endtime="20201030 18:28:33.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.315" endtime="20201030 18:28:33.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.627" level="INFO">${RESULT} = [{'diff': 5.072199999999957e-05}, {'diff': 5.35280000000006e-05}, {'diff': 5.258299999999841e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.0708e-05}, {'diff': 5.168100000000134e-05}, {'diff': 5.168...</msg>
<status status="PASS" starttime="20201030 18:28:33.624" endtime="20201030 18:28:33.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.631" level="INFO">${ACCURACY} = {'diff': [5.072199999999957e-05, 5.35280000000006e-05, 5.258299999999841e-05, 5.26669999999993e-05, 5.0708e-05, 5.168100000000134e-05, 5.168100000000134e-05, 5.173699999999962e-05, 5.0708e-05, 5.16110...</msg>
<status status="PASS" starttime="20201030 18:28:33.628" endtime="20201030 18:28:33.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.636" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.635" endtime="20201030 18:28:33.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.639" level="INFO">VALUE: [5.072199999999957e-05, 5.35280000000006e-05, 5.258299999999841e-05, 5.26669999999993e-05, 5.0708e-05, 5.168100000000134e-05, 5.168100000000134e-05, 5.173699999999962e-05, 5.0708e-05, 5.161100000000002e-05, 5.163899999999916e-05, 5.068000000000086e-05, 5.086099999999927e-05, 5.358399999999888e-05, 5.068100000000034e-05, 5.174999999999971e-05, 5.169500000000091e-05, 5.072200000000304e-05, 5.270899999999801e-05, 5.357000000000278e-05, 5.172200000000057e-05, 5.262500000000059e-05, 5.261099999999755e-05, 5.358399999999888e-05, 5.2693999999998964e-05, 5.1679999999998394e-05, 5.262499999999712e-05, 5.079200000000089e-05, 5.1666000000002293e-05, 5.16669999999983e-05, 5.068000000000086e-05, 5.355599999999974e-05, 5.265299999999973e-05, 5.173600000000014e-05, 5.358299999999941e-05, 5.06530000000012e-05, 5.076399999999828e-05, 5.168100000000134e-05, 5.356999999999931e-05, 5.269500000000191e-05, 5.3499999999997994e-05, 5.162499999999959e-05, 5.263900000000016e-05, 5.3513999999997564e-05, 5.26669999999993e-05, 5.062500000000206e-05, 5.176399999999928e-05, 5.359699999999898e-05, 5.162499999999959e-05, 5.168099999999787e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.637" endtime="20201030 18:28:33.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.632" endtime="20201030 18:28:33.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.649" endtime="20201030 18:28:33.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.648" endtime="20201030 18:28:33.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.647" endtime="20201030 18:28:33.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.273" endtime="20201030 18:28:33.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.273" endtime="20201030 18:28:33.670"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.679" endtime="20201030 18:28:33.698"></status>
</kw>
<msg timestamp="20201030 18:28:33.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.678" endtime="20201030 18:28:33.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.700" endtime="20201030 18:28:33.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.703" endtime="20201030 18:28:33.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.675" endtime="20201030 18:28:33.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.673" endtime="20201030 18:28:33.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.712" endtime="20201030 18:28:34.000"></status>
</kw>
<msg timestamp="20201030 18:28:34.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.710" endtime="20201030 18:28:34.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021060722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.006" endtime="20201030 18:28:34.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.016" endtime="20201030 18:28:34.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.708" endtime="20201030 18:28:34.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.706" endtime="20201030 18:28:34.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.025" level="INFO">${RESULT} = [{'diff': 9.281900000000093e-05}, {'diff': 8.222199999999985e-05}, {'diff': 8.236199999999902e-05}, {'diff': 8.319499999999772e-05}, {'diff': 8.131999999999931e-05}, {'diff': 8.226399999999856e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:34.021" endtime="20201030 18:28:34.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.032" level="INFO">${ACCURACY} = {'diff': [9.281900000000093e-05, 8.222199999999985e-05, 8.236199999999902e-05, 8.319499999999772e-05, 8.131999999999931e-05, 8.226399999999856e-05, 8.324999999999999e-05, 8.425000000000099e-05, 8.1347...</msg>
<status status="PASS" starttime="20201030 18:28:34.027" endtime="20201030 18:28:34.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.036" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.035" endtime="20201030 18:28:34.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.039" level="INFO">VALUE: [9.281900000000093e-05, 8.222199999999985e-05, 8.236199999999902e-05, 8.319499999999772e-05, 8.131999999999931e-05, 8.226399999999856e-05, 8.324999999999999e-05, 8.425000000000099e-05, 8.134700000000245e-05, 8.417999999999967e-05, 8.13329999999994e-05, 8.312499999999987e-05, 8.322200000000085e-05, 8.322299999999686e-05, 8.131999999999931e-05, 8.23330000000004e-05, 8.419399999999924e-05, 8.317999999999867e-05, 8.134799999999845e-05, 8.331999999999784e-05, 8.222199999999985e-05, 8.137500000000158e-05, 8.130599999999974e-05, 8.226399999999856e-05, 8.131999999999931e-05, 8.23330000000004e-05, 8.134699999999898e-05, 8.32919999999987e-05, 8.323600000000042e-05, 8.222199999999985e-05, 8.227699999999866e-05, 8.330599999999827e-05, 8.420900000000175e-05, 8.222199999999985e-05, 8.220899999999975e-05, 8.031999999999831e-05, 8.4153e-05, 8.324999999999999e-05, 8.326399999999956e-05, 8.124999999999799e-05, 8.232000000000031e-05, 8.138900000000115e-05, 8.131899999999984e-05, 8.137500000000158e-05, 8.420899999999829e-05, 8.129200000000017e-05, 8.318099999999815e-05, 8.232000000000031e-05, 8.412500000000087e-05, 8.134699999999898e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.037" endtime="20201030 18:28:34.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.033" endtime="20201030 18:28:34.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.044" endtime="20201030 18:28:34.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.042" endtime="20201030 18:28:34.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.041" endtime="20201030 18:28:34.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.671" endtime="20201030 18:28:34.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.671" endtime="20201030 18:28:34.065"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.074" endtime="20201030 18:28:34.096"></status>
</kw>
<msg timestamp="20201030 18:28:34.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.072" endtime="20201030 18:28:34.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.098" endtime="20201030 18:28:34.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.100" endtime="20201030 18:28:34.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.070" endtime="20201030 18:28:34.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.068" endtime="20201030 18:28:34.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.111" endtime="20201030 18:28:34.400"></status>
</kw>
<msg timestamp="20201030 18:28:34.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.109" endtime="20201030 18:28:34.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023018292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023111153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.404" endtime="20201030 18:28:34.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.414" endtime="20201030 18:28:34.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.106" endtime="20201030 18:28:34.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.104" endtime="20201030 18:28:34.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.422" level="INFO">${RESULT} = [{'diff': 9.286099999999964e-05}, {'diff': 8.119399999999971e-05}, {'diff': 8.423599999999795e-05}, {'diff': 8.318099999999815e-05}, {'diff': 8.140299999999726e-05}, {'diff': 8.21390000000019e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:34.418" endtime="20201030 18:28:34.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.427" level="INFO">${ACCURACY} = {'diff': [9.286099999999964e-05, 8.119399999999971e-05, 8.423599999999795e-05, 8.318099999999815e-05, 8.140299999999726e-05, 8.21390000000019e-05, 8.426400000000056e-05, 8.413900000000044e-05, 8.32079...</msg>
<status status="PASS" starttime="20201030 18:28:34.423" endtime="20201030 18:28:34.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.432" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.431" endtime="20201030 18:28:34.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.435" level="INFO">VALUE: [9.286099999999964e-05, 8.119399999999971e-05, 8.423599999999795e-05, 8.318099999999815e-05, 8.140299999999726e-05, 8.21390000000019e-05, 8.426400000000056e-05, 8.413900000000044e-05, 8.320799999999781e-05, 8.313799999999996e-05, 8.140300000000072e-05, 8.423599999999795e-05, 8.13329999999994e-05, 8.324999999999999e-05, 8.223599999999942e-05, 8.422199999999838e-05, 8.320799999999781e-05, 8.423599999999795e-05, 8.133399999999888e-05, 8.138900000000115e-05, 8.412500000000087e-05, 8.234699999999998e-05, 8.417999999999967e-05, 8.423599999999795e-05, 8.319500000000118e-05, 8.317999999999867e-05, 8.138900000000115e-05, 8.4153e-05, 8.33330000000014e-05, 8.316600000000257e-05, 8.330600000000174e-05, 8.326399999999956e-05, 8.319399999999824e-05, 8.127700000000113e-05, 8.236099999999955e-05, 8.13049999999968e-05, 8.333299999999794e-05, 8.320799999999781e-05, 8.133400000000235e-05, 8.324999999999999e-05, 8.229200000000117e-05, 8.231900000000084e-05, 8.223599999999942e-05, 8.123700000000136e-05, 8.13329999999994e-05, 8.134699999999898e-05, 8.222199999999985e-05, 8.331900000000184e-05, 8.320799999999781e-05, 8.327799999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.433" endtime="20201030 18:28:34.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.428" endtime="20201030 18:28:34.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.440" endtime="20201030 18:28:34.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.438" endtime="20201030 18:28:34.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.437" endtime="20201030 18:28:34.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.066" endtime="20201030 18:28:34.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.065" endtime="20201030 18:28:34.461"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.470" endtime="20201030 18:28:34.497"></status>
</kw>
<msg timestamp="20201030 18:28:34.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.468" endtime="20201030 18:28:34.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.499" endtime="20201030 18:28:34.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.501" endtime="20201030 18:28:34.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.465" endtime="20201030 18:28:34.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.463" endtime="20201030 18:28:34.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.511" endtime="20201030 18:28:34.797"></status>
</kw>
<msg timestamp="20201030 18:28:34.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.509" endtime="20201030 18:28:34.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024382389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024458931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.802" endtime="20201030 18:28:34.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.810" endtime="20201030 18:28:34.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.506" endtime="20201030 18:28:34.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.505" endtime="20201030 18:28:34.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.817" level="INFO">${RESULT} = [{'diff': 7.654199999999889e-05}, {'diff': 8.419500000000218e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.220800000000028e-05}, {'diff': 8.31659999999991e-05}, {'diff': 8.12780000000006e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:34.814" endtime="20201030 18:28:34.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.822" level="INFO">${ACCURACY} = {'diff': [7.654199999999889e-05, 8.419500000000218e-05, 8.31110000000003e-05, 8.220800000000028e-05, 8.31659999999991e-05, 8.12780000000006e-05, 8.413900000000044e-05, 8.225000000000246e-05, 8.3249999...</msg>
<status status="PASS" starttime="20201030 18:28:34.818" endtime="20201030 18:28:34.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.826" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.825" endtime="20201030 18:28:34.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.829" level="INFO">VALUE: [7.654199999999889e-05, 8.419500000000218e-05, 8.31110000000003e-05, 8.220800000000028e-05, 8.31659999999991e-05, 8.12780000000006e-05, 8.413900000000044e-05, 8.225000000000246e-05, 8.324999999999999e-05, 8.315199999999953e-05, 8.220899999999975e-05, 8.234800000000292e-05, 8.413799999999749e-05, 8.330600000000174e-05, 8.222299999999932e-05, 8.336099999999708e-05, 8.220800000000028e-05, 8.317999999999867e-05, 8.324999999999999e-05, 8.320800000000128e-05, 8.223599999999942e-05, 8.127700000000113e-05, 8.223599999999942e-05, 8.417999999999967e-05, 8.419400000000271e-05, 8.222199999999985e-05, 8.416699999999958e-05, 8.319499999999772e-05, 8.229099999999823e-05, 8.222199999999985e-05, 8.138799999999821e-05, 8.22910000000017e-05, 8.126400000000103e-05, 8.329200000000217e-05, 8.227799999999813e-05, 8.22919999999977e-05, 8.230599999999727e-05, 8.416699999999958e-05, 8.319400000000171e-05, 8.222199999999985e-05, 8.12780000000006e-05, 8.126400000000103e-05, 8.223599999999942e-05, 8.324999999999999e-05, 8.315300000000247e-05, 8.223599999999942e-05, 8.222299999999932e-05, 8.127700000000113e-05, 8.13329999999994e-05, 8.219500000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.827" endtime="20201030 18:28:34.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.822" endtime="20201030 18:28:34.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.835" endtime="20201030 18:28:34.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.833" endtime="20201030 18:28:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.832" endtime="20201030 18:28:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.462" endtime="20201030 18:28:34.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.461" endtime="20201030 18:28:34.856"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.865" endtime="20201030 18:28:34.885"></status>
</kw>
<msg timestamp="20201030 18:28:34.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.863" endtime="20201030 18:28:34.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.886" endtime="20201030 18:28:34.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.889" endtime="20201030 18:28:34.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.860" endtime="20201030 18:28:34.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.858" endtime="20201030 18:28:34.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.898" endtime="20201030 18:28:35.185"></status>
</kw>
<msg timestamp="20201030 18:28:35.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021226556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.897" endtime="20201030 18:28:35.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021226556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.189" endtime="20201030 18:28:35.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.198" endtime="20201030 18:28:35.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.894" endtime="20201030 18:28:35.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.892" endtime="20201030 18:28:35.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.204" level="INFO">${RESULT} = [{'diff': 9.57079999999999e-05}, {'diff': 8.234699999999998e-05}, {'diff': 8.222299999999932e-05}, {'diff': 8.330600000000174e-05}, {'diff': 8.227799999999813e-05}, {'diff': 8.234699999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:35.201" endtime="20201030 18:28:35.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.210" level="INFO">${ACCURACY} = {'diff': [9.57079999999999e-05, 8.234699999999998e-05, 8.222299999999932e-05, 8.330600000000174e-05, 8.227799999999813e-05, 8.234699999999998e-05, 8.316700000000204e-05, 8.331999999999784e-05, 8.13479...</msg>
<status status="PASS" starttime="20201030 18:28:35.205" endtime="20201030 18:28:35.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.214" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.213" endtime="20201030 18:28:35.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.217" level="INFO">VALUE: [9.57079999999999e-05, 8.234699999999998e-05, 8.222299999999932e-05, 8.330600000000174e-05, 8.227799999999813e-05, 8.234699999999998e-05, 8.316700000000204e-05, 8.331999999999784e-05, 8.134799999999845e-05, 8.331899999999837e-05, 8.227700000000213e-05, 8.319500000000118e-05, 8.229099999999823e-05, 8.240300000000172e-05, 8.322300000000032e-05, 8.416699999999958e-05, 8.229200000000117e-05, 8.13329999999994e-05, 8.316699999999858e-05, 8.140300000000072e-05, 8.227799999999813e-05, 8.134700000000245e-05, 8.327699999999966e-05, 8.226399999999856e-05, 8.134700000000245e-05, 8.232000000000031e-05, 8.231899999999737e-05, 8.220800000000028e-05, 8.231900000000084e-05, 8.317999999999867e-05, 8.127700000000113e-05, 8.138899999999769e-05, 8.413900000000044e-05, 8.140299999999726e-05, 8.324999999999999e-05, 8.330500000000227e-05, 8.230500000000127e-05, 8.416699999999958e-05, 8.134700000000245e-05, 8.32919999999987e-05, 8.327699999999966e-05, 8.418099999999915e-05, 8.230600000000074e-05, 8.225000000000246e-05, 8.420800000000228e-05, 8.425000000000099e-05, 8.236099999999955e-05, 8.226400000000203e-05, 8.22919999999977e-05, 8.237499999999912e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.215" endtime="20201030 18:28:35.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.210" endtime="20201030 18:28:35.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.222" endtime="20201030 18:28:35.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.220" endtime="20201030 18:28:35.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.219" endtime="20201030 18:28:35.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.857" endtime="20201030 18:28:35.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.856" endtime="20201030 18:28:35.243"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.252" endtime="20201030 18:28:35.276"></status>
</kw>
<msg timestamp="20201030 18:28:35.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.250" endtime="20201030 18:28:35.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.278" endtime="20201030 18:28:35.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.280" endtime="20201030 18:28:35.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.248" endtime="20201030 18:28:35.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.246" endtime="20201030 18:28:35.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.290" endtime="20201030 18:28:35.577"></status>
</kw>
<msg timestamp="20201030 18:28:35.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025682333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025753167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.288" endtime="20201030 18:28:35.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025682333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025753167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.581" endtime="20201030 18:28:35.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.590" endtime="20201030 18:28:35.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.285" endtime="20201030 18:28:35.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.284" endtime="20201030 18:28:35.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.597" level="INFO">${RESULT} = [{'diff': 7.083399999999879e-05}, {'diff': 8.422300000000132e-05}, {'diff': 8.412500000000087e-05}, {'diff': 8.225000000000246e-05}, {'diff': 8.138899999999769e-05}, {'diff': 8.226399999999856e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:35.593" endtime="20201030 18:28:35.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.601" level="INFO">${ACCURACY} = {'diff': [7.083399999999879e-05, 8.422300000000132e-05, 8.412500000000087e-05, 8.225000000000246e-05, 8.138899999999769e-05, 8.226399999999856e-05, 8.41660000000001e-05, 8.231900000000084e-05, 8.23050...</msg>
<status status="PASS" starttime="20201030 18:28:35.598" endtime="20201030 18:28:35.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.606" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.605" endtime="20201030 18:28:35.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.608" level="INFO">VALUE: [7.083399999999879e-05, 8.422300000000132e-05, 8.412500000000087e-05, 8.225000000000246e-05, 8.138899999999769e-05, 8.226399999999856e-05, 8.41660000000001e-05, 8.231900000000084e-05, 8.230500000000127e-05, 8.134799999999845e-05, 8.232000000000031e-05, 8.413899999999697e-05, 8.32780000000026e-05, 8.323600000000042e-05, 8.13329999999994e-05, 8.332000000000131e-05, 8.12780000000006e-05, 8.140300000000072e-05, 8.129200000000017e-05, 8.12780000000006e-05, 8.23330000000004e-05, 8.4153e-05, 8.22780000000016e-05, 8.134700000000245e-05, 8.134699999999898e-05, 8.226399999999856e-05, 8.232000000000031e-05, 8.319399999999824e-05, 8.327799999999913e-05, 8.322199999999738e-05, 8.408299999999869e-05, 8.224999999999899e-05, 8.327799999999913e-05, 8.223599999999942e-05, 8.423599999999795e-05, 8.419399999999924e-05, 8.23330000000004e-05, 8.319500000000118e-05, 8.223599999999942e-05, 8.222299999999932e-05, 8.037500000000058e-05, 8.4153e-05, 8.32919999999987e-05, 8.318100000000161e-05, 8.330599999999827e-05, 8.129200000000017e-05, 8.138900000000115e-05, 8.222199999999985e-05, 8.316700000000204e-05, 8.327799999999913e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.607" endtime="20201030 18:28:35.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.602" endtime="20201030 18:28:35.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.613" endtime="20201030 18:28:35.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.612" endtime="20201030 18:28:35.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.611" endtime="20201030 18:28:35.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.244" endtime="20201030 18:28:35.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.243" endtime="20201030 18:28:35.634"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.643" endtime="20201030 18:28:35.668"></status>
</kw>
<msg timestamp="20201030 18:28:35.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.642" endtime="20201030 18:28:35.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.670" endtime="20201030 18:28:35.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.672" endtime="20201030 18:28:35.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.639" endtime="20201030 18:28:35.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.637" endtime="20201030 18:28:35.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.682" endtime="20201030 18:28:35.968"></status>
</kw>
<msg timestamp="20201030 18:28:35.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026255292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026339417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.680" endtime="20201030 18:28:35.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026255292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026339417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.973" endtime="20201030 18:28:35.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.981" endtime="20201030 18:28:35.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.678" endtime="20201030 18:28:35.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.676" endtime="20201030 18:28:35.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.988" level="INFO">${RESULT} = [{'diff': 8.412500000000087e-05}, {'diff': 8.320900000000075e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.126400000000103e-05}, {'diff': 8.316699999999858e-05}, {'diff': 8.224999999999899e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:35.985" endtime="20201030 18:28:35.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.993" level="INFO">${ACCURACY} = {'diff': [8.412500000000087e-05, 8.320900000000075e-05, 8.312499999999987e-05, 8.126400000000103e-05, 8.316699999999858e-05, 8.224999999999899e-05, 8.413900000000044e-05, 8.413899999999697e-05, 8.3277...</msg>
<status status="PASS" starttime="20201030 18:28:35.989" endtime="20201030 18:28:35.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.997" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.996" endtime="20201030 18:28:35.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.000" level="INFO">VALUE: [8.412500000000087e-05, 8.320900000000075e-05, 8.312499999999987e-05, 8.126400000000103e-05, 8.316699999999858e-05, 8.224999999999899e-05, 8.413900000000044e-05, 8.413899999999697e-05, 8.327799999999913e-05, 8.222199999999985e-05, 8.218100000000061e-05, 8.316699999999858e-05, 8.323600000000042e-05, 8.224999999999899e-05, 8.222199999999985e-05, 8.219399999999724e-05, 8.41110000000013e-05, 8.43049999999998e-05, 8.412500000000087e-05, 8.126400000000103e-05, 8.3152999999999e-05, 8.223600000000289e-05, 8.412500000000087e-05, 8.418099999999915e-05, 8.219400000000071e-05, 8.317999999999867e-05, 8.126400000000103e-05, 8.330599999999827e-05, 8.222199999999985e-05, 8.231900000000084e-05, 8.123599999999842e-05, 8.133400000000235e-05, 8.137499999999812e-05, 8.319400000000171e-05, 8.222199999999985e-05, 8.319500000000118e-05, 8.318100000000161e-05, 8.226300000000256e-05, 8.124999999999799e-05, 8.230500000000127e-05, 8.22780000000016e-05, 8.222199999999985e-05, 8.125000000000146e-05, 8.220899999999975e-05, 8.319399999999824e-05, 8.331900000000184e-05, 8.223599999999942e-05, 8.413900000000044e-05, 8.316600000000257e-05, 8.413900000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.998" endtime="20201030 18:28:36.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.993" endtime="20201030 18:28:36.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.006" endtime="20201030 18:28:36.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.004" endtime="20201030 18:28:36.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.003" endtime="20201030 18:28:36.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.635" endtime="20201030 18:28:36.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.635" endtime="20201030 18:28:36.027"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.036" endtime="20201030 18:28:36.054"></status>
</kw>
<msg timestamp="20201030 18:28:36.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.034" endtime="20201030 18:28:36.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.056" endtime="20201030 18:28:36.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.058" endtime="20201030 18:28:36.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.031" endtime="20201030 18:28:36.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.029" endtime="20201030 18:28:36.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.068" endtime="20201030 18:28:36.353"></status>
</kw>
<msg timestamp="20201030 18:28:36.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020761236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:36.066" endtime="20201030 18:28:36.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206685, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020761236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:36.358" endtime="20201030 18:28:36.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.366" endtime="20201030 18:28:36.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.064" endtime="20201030 18:28:36.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.062" endtime="20201030 18:28:36.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.373" level="INFO">${RESULT} = [{'diff': 9.273599999999951e-05}, {'diff': 8.216699999999758e-05}, {'diff': 8.333400000000088e-05}, {'diff': 8.137499999999812e-05}, {'diff': 8.33049999999988e-05}, {'diff': 8.409699999999826e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:36.370" endtime="20201030 18:28:36.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.378" level="INFO">${ACCURACY} = {'diff': [9.273599999999951e-05, 8.216699999999758e-05, 8.333400000000088e-05, 8.137499999999812e-05, 8.33049999999988e-05, 8.409699999999826e-05, 8.233400000000335e-05, 8.241599999999835e-05, 8.22780...</msg>
<status status="PASS" starttime="20201030 18:28:36.374" endtime="20201030 18:28:36.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.383" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.382" endtime="20201030 18:28:36.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.386" level="INFO">VALUE: [9.273599999999951e-05, 8.216699999999758e-05, 8.333400000000088e-05, 8.137499999999812e-05, 8.33049999999988e-05, 8.409699999999826e-05, 8.233400000000335e-05, 8.241599999999835e-05, 8.22780000000016e-05, 8.224999999999899e-05, 8.133300000000288e-05, 8.419500000000218e-05, 8.327799999999913e-05, 8.326399999999956e-05, 8.32919999999987e-05, 8.412500000000087e-05, 8.422300000000132e-05, 8.043099999999886e-05, 8.134699999999898e-05, 8.23330000000004e-05, 8.417999999999967e-05, 8.223599999999942e-05, 8.12910000000007e-05, 8.223600000000289e-05, 8.131899999999984e-05, 8.130500000000027e-05, 8.418099999999915e-05, 8.127799999999713e-05, 8.423599999999795e-05, 8.222199999999985e-05, 8.425000000000099e-05, 8.14170000000003e-05, 8.506999999999959e-05, 8.134699999999898e-05, 8.323600000000042e-05, 8.226399999999856e-05, 8.136099999999855e-05, 8.41110000000013e-05, 8.22369999999989e-05, 8.417999999999967e-05, 8.223599999999942e-05, 8.333400000000088e-05, 8.322200000000085e-05, 8.317999999999867e-05, 8.422200000000185e-05, 8.426400000000056e-05, 8.04169999999993e-05, 8.319400000000171e-05, 8.329200000000217e-05, 8.130500000000027e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.384" endtime="20201030 18:28:36.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.379" endtime="20201030 18:28:36.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.391" endtime="20201030 18:28:36.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.389" endtime="20201030 18:28:36.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.388" endtime="20201030 18:28:36.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.028" endtime="20201030 18:28:36.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.027" endtime="20201030 18:28:36.412"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.421" endtime="20201030 18:28:36.442"></status>
</kw>
<msg timestamp="20201030 18:28:36.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.419" endtime="20201030 18:28:36.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.444" endtime="20201030 18:28:36.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.446" endtime="20201030 18:28:36.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.417" endtime="20201030 18:28:36.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.414" endtime="20201030 18:28:36.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.456" endtime="20201030 18:28:36.743"></status>
</kw>
<msg timestamp="20201030 18:28:36.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022476833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.454" endtime="20201030 18:28:36.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022476833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.747" endtime="20201030 18:28:36.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.756" endtime="20201030 18:28:36.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.452" endtime="20201030 18:28:36.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.450" endtime="20201030 18:28:36.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.763" level="INFO">${RESULT} = [{'diff': 8.522200000000285e-05}, {'diff': 8.129200000000017e-05}, {'diff': 8.229200000000117e-05}, {'diff': 8.317999999999867e-05}, {'diff': 8.124999999999799e-05}, {'diff': 8.419500000000218e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:36.759" endtime="20201030 18:28:36.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.767" level="INFO">${ACCURACY} = {'diff': [8.522200000000285e-05, 8.129200000000017e-05, 8.229200000000117e-05, 8.317999999999867e-05, 8.124999999999799e-05, 8.419500000000218e-05, 8.318100000000161e-05, 8.412500000000087e-05, 8.4153...</msg>
<status status="PASS" starttime="20201030 18:28:36.764" endtime="20201030 18:28:36.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.771" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.770" endtime="20201030 18:28:36.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.774" level="INFO">VALUE: [8.522200000000285e-05, 8.129200000000017e-05, 8.229200000000117e-05, 8.317999999999867e-05, 8.124999999999799e-05, 8.419500000000218e-05, 8.318100000000161e-05, 8.412500000000087e-05, 8.4153e-05, 8.331899999999837e-05, 8.12780000000006e-05, 8.318099999999815e-05, 8.4153e-05, 8.130599999999974e-05, 8.320800000000128e-05, 8.319400000000171e-05, 8.4153e-05, 8.12780000000006e-05, 8.316700000000204e-05, 8.140200000000125e-05, 8.316699999999858e-05, 8.222299999999932e-05, 8.224999999999899e-05, 8.319400000000171e-05, 8.418099999999915e-05, 8.14170000000003e-05, 8.218000000000114e-05, 8.031899999999884e-05, 8.222299999999932e-05, 8.219399999999724e-05, 8.411099999999783e-05, 8.240299999999826e-05, 8.037500000000058e-05, 8.319499999999772e-05, 8.218000000000114e-05, 8.427800000000013e-05, 8.126399999999756e-05, 8.218100000000061e-05, 8.317999999999867e-05, 8.219400000000071e-05, 8.233399999999988e-05, 8.219400000000071e-05, 8.220800000000028e-05, 8.4153e-05, 8.323600000000042e-05, 8.41110000000013e-05, 8.419499999999872e-05, 8.126300000000156e-05, 8.127700000000113e-05, 8.416699999999958e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.773" endtime="20201030 18:28:36.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.768" endtime="20201030 18:28:36.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.779" endtime="20201030 18:28:36.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.778" endtime="20201030 18:28:36.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.776" endtime="20201030 18:28:36.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.413" endtime="20201030 18:28:36.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.412" endtime="20201030 18:28:36.800"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.809" endtime="20201030 18:28:36.834"></status>
</kw>
<msg timestamp="20201030 18:28:36.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.807" endtime="20201030 18:28:36.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.836" endtime="20201030 18:28:36.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.838" endtime="20201030 18:28:36.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.805" endtime="20201030 18:28:36.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.803" endtime="20201030 18:28:36.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.847" endtime="20201030 18:28:37.133"></status>
</kw>
<msg timestamp="20201030 18:28:37.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026214069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026298222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.846" endtime="20201030 18:28:37.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026214069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026298222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.138" endtime="20201030 18:28:37.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.146" endtime="20201030 18:28:37.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.843" endtime="20201030 18:28:37.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.841" endtime="20201030 18:28:37.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.153" level="INFO">${RESULT} = [{'diff': 8.4153e-05}, {'diff': 8.324999999999999e-05}, {'diff': 8.318100000000161e-05}, {'diff': 8.225000000000246e-05}, {'diff': 8.129200000000017e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.3...</msg>
<status status="PASS" starttime="20201030 18:28:37.150" endtime="20201030 18:28:37.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.158" level="INFO">${ACCURACY} = {'diff': [8.4153e-05, 8.324999999999999e-05, 8.318100000000161e-05, 8.225000000000246e-05, 8.129200000000017e-05, 8.413900000000044e-05, 8.316600000000257e-05, 8.319399999999824e-05, 8.326399999999956...</msg>
<status status="PASS" starttime="20201030 18:28:37.154" endtime="20201030 18:28:37.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.162" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.161" endtime="20201030 18:28:37.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.165" level="INFO">VALUE: [8.4153e-05, 8.324999999999999e-05, 8.318100000000161e-05, 8.225000000000246e-05, 8.129200000000017e-05, 8.413900000000044e-05, 8.316600000000257e-05, 8.319399999999824e-05, 8.326399999999956e-05, 8.3152999999999e-05, 8.036100000000101e-05, 8.505600000000002e-05, 8.134699999999898e-05, 8.223599999999942e-05, 8.232000000000031e-05, 8.224999999999899e-05, 8.218100000000061e-05, 8.136099999999855e-05, 8.315199999999953e-05, 8.327700000000313e-05, 8.126400000000103e-05, 8.411099999999783e-05, 8.133399999999888e-05, 8.319399999999824e-05, 8.124999999999799e-05, 8.224999999999899e-05, 8.317999999999867e-05, 8.227799999999813e-05, 8.127700000000113e-05, 8.423599999999795e-05, 8.21659999999981e-05, 8.222200000000332e-05, 8.327799999999913e-05, 8.126400000000103e-05, 8.420800000000228e-05, 8.124999999999799e-05, 8.323600000000042e-05, 8.222199999999985e-05, 8.125000000000146e-05, 8.230600000000074e-05, 8.408400000000163e-05, 8.123600000000189e-05, 8.222199999999985e-05, 8.423599999999795e-05, 8.123599999999842e-05, 8.129200000000017e-05, 8.133400000000235e-05, 8.129200000000017e-05, 8.422199999999838e-05, 8.318099999999815e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.163" endtime="20201030 18:28:37.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.158" endtime="20201030 18:28:37.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.171" endtime="20201030 18:28:37.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.169" endtime="20201030 18:28:37.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.168" endtime="20201030 18:28:37.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.801" endtime="20201030 18:28:37.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.800" endtime="20201030 18:28:37.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.949" endtime="20201030 18:28:37.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.196" endtime="20201030 18:28:37.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.194" endtime="20201030 18:28:37.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.193" endtime="20201030 18:28:37.216"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:57.875" endtime="20201030 18:28:37.217" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:17.381" endtime="20201030 18:28:37.220"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.274" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:37.283" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:38.460" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:37.273" endtime="20201030 18:28:38.462"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.467" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:28:38.464" endtime="20201030 18:28:38.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.271" endtime="20201030 18:28:38.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.474" endtime="20201030 18:28:38.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.471" endtime="20201030 18:28:38.726"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.738" endtime="20201030 18:28:38.759"></status>
</kw>
<msg timestamp="20201030 18:28:38.759" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ersion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.736" endtime="20201030 18:28:38.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ersion: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.760" endtime="20201030 18:28:38.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.766" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:38.763" endtime="20201030 18:28:38.766"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:38.734" endtime="20201030 18:28:38.767"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:38.732" endtime="20201030 18:28:38.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.730" endtime="20201030 18:28:38.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:38.772" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:38.771" endtime="20201030 18:28:38.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.769" endtime="20201030 18:28:38.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.730" endtime="20201030 18:28:38.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.729" endtime="20201030 18:28:38.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.774" endtime="20201030 18:28:38.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.728" endtime="20201030 18:28:38.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.788" endtime="20201030 18:28:38.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.726" endtime="20201030 18:28:38.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.270" endtime="20201030 18:28:38.791"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.796" endtime="20201030 18:28:38.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.795" endtime="20201030 18:28:38.816"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.830" endtime="20201030 18:28:38.850"></status>
</kw>
<msg timestamp="20201030 18:28:38.850" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.828" endtime="20201030 18:28:38.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.852" endtime="20201030 18:28:38.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.856" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:38.854" endtime="20201030 18:28:38.857"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:38.826" endtime="20201030 18:28:38.857"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:38.823" endtime="20201030 18:28:38.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.822" endtime="20201030 18:28:38.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:38.863" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:38.861" endtime="20201030 18:28:38.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.859" endtime="20201030 18:28:38.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.821" endtime="20201030 18:28:38.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.820" endtime="20201030 18:28:38.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.865" endtime="20201030 18:28:38.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.819" endtime="20201030 18:28:38.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.817" endtime="20201030 18:28:38.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.794" endtime="20201030 18:28:38.868"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.876" endtime="20201030 18:28:45.002"></status>
</kw>
<msg timestamp="20201030 18:28:45.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.875" endtime="20201030 18:28:45.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.009" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.006" endtime="20201030 18:28:45.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.012" endtime="20201030 18:28:45.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.872" endtime="20201030 18:28:45.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.870" endtime="20201030 18:28:45.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.023" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 18:28:45.020" endtime="20201030 18:28:45.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.033" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:28:45.030" endtime="20201030 18:28:45.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.037" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:28:45.035" endtime="20201030 18:28:45.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.025" endtime="20201030 18:28:45.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.047" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:28:45.045" endtime="20201030 18:28:45.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.052" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:28:45.050" endtime="20201030 18:28:45.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.040" endtime="20201030 18:28:45.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.063" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:28:45.060" endtime="20201030 18:28:45.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.067" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:28:45.065" endtime="20201030 18:28:45.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.055" endtime="20201030 18:28:45.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.074" endtime="20201030 18:28:45.378"></status>
</kw>
<msg timestamp="20201030 18:28:45.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072556389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172573972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.073" endtime="20201030 18:28:45.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072556389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172573972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.382" endtime="20201030 18:28:45.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.390" endtime="20201030 18:28:45.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.070" endtime="20201030 18:28:45.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.068" endtime="20201030 18:28:45.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:28:45.397" level="INFO">${FILTERED} = [{'diff': 0.100017583}, {'diff': 0.09997194399999998}, {'diff': 0.09997183300000001}, {'diff': 0.09997197200000002}, {'diff': 0.09997181900000002}, {'diff': 0.09997183300000001}, {'diff': 0.0999719719...</msg>
<status status="PASS" starttime="20201030 18:28:45.394" endtime="20201030 18:28:45.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.401" level="INFO">${RESULT} = {'diff': [0.100017583, 0.09997194399999998, 0.09997183300000001, 0.09997197200000002, 0.09997181900000002, 0.09997183300000001, 0.09997197199999996, 0.09997183300000001, 0.09997187500000004, 0.0999718...</msg>
<status status="PASS" starttime="20201030 18:28:45.398" endtime="20201030 18:28:45.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.406" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:28:45.405" endtime="20201030 18:28:45.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.408" level="INFO">VALUE: [0.100017583, 0.09997194399999998, 0.09997183300000001, 0.09997197200000002, 0.09997181900000002, 0.09997183300000001, 0.09997197199999996, 0.09997183300000001, 0.09997187500000004, 0.09997187500000004, 0.09997198600000012, 0.09997188899999987, 0.099971861, 0.09997190300000014, 0.09997190299999992, 0.099971861, 0.09997191699999997, 0.09997188900000009, 0.09997191699999997, 0.09997187500000004, 0.09997188900000031, 0.0999718749999996, 0.09997184700000039, 0.09997193099999979, 0.09997193000000015, 0.09997184699999995, 0.09997186100000022, 0.09997192999999971, 0.09997186100000022, 0.09997191599999988, 0.09997193000000015, 0.09997184699999995, 0.09997187500000004, 0.09997191599999988, 0.09997190300000014, 0.09997191699999997, 0.09997186100000022, 0.09997194499999962, 0.09997194399999998, 0.09997188899999987, 0.09997190300000014, 0.09997188899999987, 0.09997190300000014, 0.09997188899999987, 0.09997184800000003, 0.09997186099999933, 0.09997190300000014, 0.09997188899999987, 0.09997193099999979, 0.09997184699999995, 0.09997197200000052]</msg>
<status status="PASS" starttime="20201030 18:28:45.407" endtime="20201030 18:28:45.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.402" endtime="20201030 18:28:45.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.413" endtime="20201030 18:28:45.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.412" endtime="20201030 18:28:45.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.410" endtime="20201030 18:28:45.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.868" endtime="20201030 18:28:45.434"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:38.791" endtime="20201030 18:28:45.435" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.441" endtime="20201030 18:28:45.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.440" endtime="20201030 18:28:45.461"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.476" endtime="20201030 18:28:45.495"></status>
</kw>
<msg timestamp="20201030 18:28:45.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.475" endtime="20201030 18:28:45.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.499" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.497" endtime="20201030 18:28:45.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.502" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:45.500" endtime="20201030 18:28:45.502"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:45.472" endtime="20201030 18:28:45.503"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:45.469" endtime="20201030 18:28:45.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.467" endtime="20201030 18:28:45.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:45.507" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:45.507" endtime="20201030 18:28:45.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.505" endtime="20201030 18:28:45.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.466" endtime="20201030 18:28:45.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.465" endtime="20201030 18:28:45.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.509" endtime="20201030 18:28:45.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.464" endtime="20201030 18:28:45.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.462" endtime="20201030 18:28:45.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.438" endtime="20201030 18:28:45.512"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.521" endtime="20201030 18:28:51.644"></status>
</kw>
<msg timestamp="20201030 18:28:51.646" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.519" endtime="20201030 18:28:51.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.651" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.648" endtime="20201030 18:28:51.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.654" endtime="20201030 18:28:51.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.516" endtime="20201030 18:28:51.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.514" endtime="20201030 18:28:51.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.666" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 18:28:51.662" endtime="20201030 18:28:51.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.675" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:28:51.672" endtime="20201030 18:28:51.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.679" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:28:51.677" endtime="20201030 18:28:51.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.667" endtime="20201030 18:28:51.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.690" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:28:51.688" endtime="20201030 18:28:51.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.699" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:28:51.692" endtime="20201030 18:28:51.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.683" endtime="20201030 18:28:51.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.710" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:28:51.708" endtime="20201030 18:28:51.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.714" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:28:51.712" endtime="20201030 18:28:51.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.703" endtime="20201030 18:28:51.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.731" endtime="20201030 18:28:52.035"></status>
</kw>
<msg timestamp="20201030 18:28:52.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0692615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169366778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:51.727" endtime="20201030 18:28:52.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0692615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.169366778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:52.039" endtime="20201030 18:28:52.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.048" endtime="20201030 18:28:52.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.721" endtime="20201030 18:28:52.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.718" endtime="20201030 18:28:52.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:28:52.054" level="INFO">${FILTERED} = [{'diff': 0.10010527799999999}, {'diff': 0.10006059800000003}, {'diff': 0.09978262500000001}, {'diff': 0.10000237500000003}, {'diff': 0.09997199999999995}, {'diff': 0.09997175000000003}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201030 18:28:52.051" endtime="20201030 18:28:52.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.058" level="INFO">${RESULT} = {'diff': [0.10010527799999999, 0.10006059800000003, 0.09978262500000001, 0.10000237500000003, 0.09997199999999995, 0.09997175000000003, 0.09997188899999998, 0.099971861, 0.09997193100000001, 0.0999719...</msg>
<status status="PASS" starttime="20201030 18:28:52.055" endtime="20201030 18:28:52.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.063" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:28:52.062" endtime="20201030 18:28:52.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.065" level="INFO">VALUE: [0.10010527799999999, 0.10006059800000003, 0.09978262500000001, 0.10000237500000003, 0.09997199999999995, 0.09997175000000003, 0.09997188899999998, 0.099971861, 0.09997193100000001, 0.0999719160000001, 0.09997187499999982, 0.09997190200000006, 0.099971861, 0.09997193000000015, 0.09997188899999987, 0.09997184699999995, 0.09997188899999987, 0.0999719440000002, 0.09997187499999982, 0.0999718329999999, 0.09997186100000022, 0.09997187500000004, 0.09997190300000014, 0.09997188899999987, 0.09997190300000014, 0.09997194399999998, 0.09997186100000022, 0.09997186099999977, 0.09997190300000014, 0.09997190300000014, 0.09997186099999977, 0.09997188900000031, 0.09997188799999979, 0.09997188900000031, 0.0999718749999996, 0.09997191699999997, 0.09997197200000008, 0.09997187500000004, 0.09997186099999977, 0.09997191699999952, 0.09997184699999995, 0.09997190200000006, 0.09997197199999963, 0.09997183299999968, 0.0999718749999996, 0.09997191599999944, 0.09997193099999979, 0.09997187500000049, 0.09997188899999987, 0.0999718749999996, 0.09997190200000006]</msg>
<status status="PASS" starttime="20201030 18:28:52.064" endtime="20201030 18:28:52.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.059" endtime="20201030 18:28:52.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.070" endtime="20201030 18:28:52.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.069" endtime="20201030 18:28:52.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.067" endtime="20201030 18:28:52.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.513" endtime="20201030 18:28:52.091"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:45.436" endtime="20201030 18:28:52.091" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.097" endtime="20201030 18:28:52.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.096" endtime="20201030 18:28:52.117"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.130" endtime="20201030 18:28:52.147"></status>
</kw>
<msg timestamp="20201030 18:28:52.148" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.129" endtime="20201030 18:28:52.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.150" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.149" endtime="20201030 18:28:52.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.153" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:52.151" endtime="20201030 18:28:52.153"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.126" endtime="20201030 18:28:52.154"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:52.124" endtime="20201030 18:28:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.123" endtime="20201030 18:28:52.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:52.158" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:52.158" endtime="20201030 18:28:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.156" endtime="20201030 18:28:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.122" endtime="20201030 18:28:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.121" endtime="20201030 18:28:52.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.160" endtime="20201030 18:28:52.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.120" endtime="20201030 18:28:52.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.118" endtime="20201030 18:28:52.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.095" endtime="20201030 18:28:52.163"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.172" endtime="20201030 18:28:58.294"></status>
</kw>
<msg timestamp="20201030 18:28:58.295" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.170" endtime="20201030 18:28:58.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.301" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.298" endtime="20201030 18:28:58.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.304" endtime="20201030 18:28:58.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.167" endtime="20201030 18:28:58.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.165" endtime="20201030 18:28:58.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.314" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 18:28:58.310" endtime="20201030 18:28:58.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.322" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:28:58.320" endtime="20201030 18:28:58.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.326" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:28:58.325" endtime="20201030 18:28:58.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.316" endtime="20201030 18:28:58.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.336" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:28:58.334" endtime="20201030 18:28:58.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.340" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:28:58.338" endtime="20201030 18:28:58.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.329" endtime="20201030 18:28:58.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.350" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:28:58.348" endtime="20201030 18:28:58.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.354" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:28:58.352" endtime="20201030 18:28:58.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.343" endtime="20201030 18:28:58.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.369" endtime="20201030 18:28:58.668"></status>
</kw>
<msg timestamp="20201030 18:28:58.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065225556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165447653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.366" endtime="20201030 18:28:58.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065225556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165447653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.672" endtime="20201030 18:28:58.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.680" endtime="20201030 18:28:58.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.360" endtime="20201030 18:28:58.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.357" endtime="20201030 18:28:58.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:28:58.687" level="INFO">${FILTERED} = [{'diff': 0.100222097}, {'diff': 0.100063542}, {'diff': 0.09968725}, {'diff': 0.09997191699999997}, {'diff': 0.099971861}, {'diff': 0.09997195800000003}, {'diff': 0.09997183300000001}, {'diff': 0.0999...</msg>
<status status="PASS" starttime="20201030 18:28:58.684" endtime="20201030 18:28:58.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.692" level="INFO">${RESULT} = {'diff': [0.100222097, 0.100063542, 0.09968725, 0.09997191699999997, 0.099971861, 0.09997195800000003, 0.09997183300000001, 0.09997181899999996, 0.09997190199999995, 0.09997194499999995, 0.09997194499...</msg>
<status status="PASS" starttime="20201030 18:28:58.688" endtime="20201030 18:28:58.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.696" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:28:58.695" endtime="20201030 18:28:58.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.698" level="INFO">VALUE: [0.100222097, 0.100063542, 0.09968725, 0.09997191699999997, 0.099971861, 0.09997195800000003, 0.09997183300000001, 0.09997181899999996, 0.09997190199999995, 0.09997194499999995, 0.09997194499999984, 0.099971861, 0.0999718329999999, 0.09997183300000012, 0.09997206999999997, 0.09997176400000019, 0.09997194399999998, 0.09997187500000004, 0.09997191599999988, 0.0999719440000002, 0.09997179199999984, 0.09997186100000022, 0.09997193099999979, 0.09997187500000004, 0.09997191699999997, 0.09997187500000004, 0.09997188899999987, 0.09997192999999971, 0.09997193099999979, 0.09997188800000023, 0.09997183299999968, 0.09997191699999997, 0.09997198699999998, 0.09997179199999984, 0.09997190200000006, 0.09997186100000022, 0.09997202799999982, 0.09997177800000001, 0.09997188899999987, 0.0999719029999997, 0.09997184699999995, 0.09997191600000033, 0.09997191700000041, 0.0999718749999996, 0.09997190299999925, 0.09997193099999979, 0.09997194399999998, 0.09997176400000019, 0.09997190299999925, 0.09997186100000022, 0.09997191700000041]</msg>
<status status="PASS" starttime="20201030 18:28:58.697" endtime="20201030 18:28:58.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.693" endtime="20201030 18:28:58.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.704" endtime="20201030 18:28:58.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.702" endtime="20201030 18:28:58.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.701" endtime="20201030 18:28:58.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.163" endtime="20201030 18:28:58.724"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:52.093" endtime="20201030 18:28:58.725" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.731" endtime="20201030 18:28:58.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.730" endtime="20201030 18:28:58.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.765" endtime="20201030 18:28:58.784"></status>
</kw>
<msg timestamp="20201030 18:28:58.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.763" endtime="20201030 18:28:58.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.785" endtime="20201030 18:28:58.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.790" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:58.788" endtime="20201030 18:28:58.790"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:58.760" endtime="20201030 18:28:58.791"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:58.758" endtime="20201030 18:28:58.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.756" endtime="20201030 18:28:58.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:58.795" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:58.795" endtime="20201030 18:28:58.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.793" endtime="20201030 18:28:58.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.756" endtime="20201030 18:28:58.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.755" endtime="20201030 18:28:58.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.797" endtime="20201030 18:28:58.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.754" endtime="20201030 18:28:58.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.752" endtime="20201030 18:28:58.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.728" endtime="20201030 18:28:58.800"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.808" endtime="20201030 18:29:04.932"></status>
</kw>
<msg timestamp="20201030 18:29:04.933" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.806" endtime="20201030 18:29:04.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.938" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.935" endtime="20201030 18:29:04.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.941" endtime="20201030 18:29:04.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.804" endtime="20201030 18:29:04.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.802" endtime="20201030 18:29:04.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.952" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 18:29:04.948" endtime="20201030 18:29:04.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.960" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:04.958" endtime="20201030 18:29:04.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.964" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:04.962" endtime="20201030 18:29:04.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.953" endtime="20201030 18:29:04.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.974" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:04.972" endtime="20201030 18:29:04.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.978" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:04.977" endtime="20201030 18:29:04.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.967" endtime="20201030 18:29:04.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.989" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:04.986" endtime="20201030 18:29:04.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.994" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:29:04.992" endtime="20201030 18:29:04.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.982" endtime="20201030 18:29:04.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.012" endtime="20201030 18:29:05.314"></status>
</kw>
<msg timestamp="20201030 18:29:05.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068114278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168482778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.006" endtime="20201030 18:29:05.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068114278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168482778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.318" endtime="20201030 18:29:05.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.326" endtime="20201030 18:29:05.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.000" endtime="20201030 18:29:05.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.997" endtime="20201030 18:29:05.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:05.333" level="INFO">${FILTERED} = [{'diff': 0.1003685}, {'diff': 0.10007359699999999}, {'diff': 0.09953029200000002}, {'diff': 0.099971792}, {'diff': 0.09997187499999999}, {'diff': 0.09997198600000001}, {'diff': 0.09997194399999998}, ...</msg>
<status status="PASS" starttime="20201030 18:29:05.330" endtime="20201030 18:29:05.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.337" level="INFO">${RESULT} = {'diff': [0.1003685, 0.10007359699999999, 0.09953029200000002, 0.099971792, 0.09997187499999999, 0.09997198600000001, 0.09997194399999998, 0.099971861, 0.09997186200000008, 0.09997193100000001, 0.0999...</msg>
<status status="PASS" starttime="20201030 18:29:05.334" endtime="20201030 18:29:05.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.341" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:05.340" endtime="20201030 18:29:05.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.344" level="INFO">VALUE: [0.1003685, 0.10007359699999999, 0.09953029200000002, 0.099971792, 0.09997187499999999, 0.09997198600000001, 0.09997194399999998, 0.099971861, 0.09997186200000008, 0.09997193100000001, 0.09997186199999986, 0.099971861, 0.09997190299999992, 0.09997191700000019, 0.09997191599999988, 0.09997187500000004, 0.09997184699999995, 0.09997187500000004, 0.09997193099999979, 0.09997184700000017, 0.09997181999999993, 0.09997195800000025, 0.09997186099999977, 0.09997187500000004, 0.09997188900000031, 0.09997186099999977, 0.09997202800000027, 0.09997176399999974, 0.09997195899999989, 0.0999718340000002, 0.0999719029999997, 0.09997188900000031, 0.09997191699999997, 0.09997188899999987, 0.09997194499999962, 0.09997181999999993, 0.09997187500000004, 0.09997188899999987, 0.09997184699999995, 0.09997193000000015, 0.09997188900000076, 0.09997187500000049, 0.09997200000000017, 0.09997197199999963, 0.09997176400000019, 0.09997194399999998, 0.09997180500000002, 0.09997193100000068, 0.09997190300000014, 0.09997187500000049, 0.09997190299999925]</msg>
<status status="PASS" starttime="20201030 18:29:05.343" endtime="20201030 18:29:05.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.338" endtime="20201030 18:29:05.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.353" endtime="20201030 18:29:05.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.350" endtime="20201030 18:29:05.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.347" endtime="20201030 18:29:05.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.800" endtime="20201030 18:29:05.376"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:58.726" endtime="20201030 18:29:05.376" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.383" endtime="20201030 18:29:05.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.381" endtime="20201030 18:29:05.403"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.416" endtime="20201030 18:29:05.441"></status>
</kw>
<msg timestamp="20201030 18:29:05.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.415" endtime="20201030 18:29:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.442" endtime="20201030 18:29:05.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.447" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:05.445" endtime="20201030 18:29:05.447"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:05.412" endtime="20201030 18:29:05.448"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:05.410" endtime="20201030 18:29:05.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.409" endtime="20201030 18:29:05.448"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:05.452" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:05.451" endtime="20201030 18:29:05.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.449" endtime="20201030 18:29:05.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.408" endtime="20201030 18:29:05.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.407" endtime="20201030 18:29:05.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.454" endtime="20201030 18:29:05.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.406" endtime="20201030 18:29:05.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.404" endtime="20201030 18:29:05.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.380" endtime="20201030 18:29:05.457"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.465" endtime="20201030 18:29:11.589"></status>
</kw>
<msg timestamp="20201030 18:29:11.590" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.463" endtime="20201030 18:29:11.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.595" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.592" endtime="20201030 18:29:11.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.598" endtime="20201030 18:29:11.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.461" endtime="20201030 18:29:11.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.459" endtime="20201030 18:29:11.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.610" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 18:29:11.607" endtime="20201030 18:29:11.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.618" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:11.616" endtime="20201030 18:29:11.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.623" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:11.621" endtime="20201030 18:29:11.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.612" endtime="20201030 18:29:11.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.633" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:11.631" endtime="20201030 18:29:11.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.637" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:11.635" endtime="20201030 18:29:11.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.626" endtime="20201030 18:29:11.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.646" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:11.644" endtime="20201030 18:29:11.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.651" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:29:11.649" endtime="20201030 18:29:11.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.640" endtime="20201030 18:29:11.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.666" endtime="20201030 18:29:11.963"></status>
</kw>
<msg timestamp="20201030 18:29:11.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072691194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173219083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.662" endtime="20201030 18:29:11.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072691194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173219083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.967" endtime="20201030 18:29:11.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.975" endtime="20201030 18:29:11.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.657" endtime="20201030 18:29:11.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.654" endtime="20201030 18:29:11.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:11.982" level="INFO">${FILTERED} = [{'diff': 0.100527889}, {'diff': 0.10008263900000003}, {'diff': 0.09934874999999999}, {'diff': 0.099971861}, {'diff': 0.09997193100000001}, {'diff': 0.09997181999999993}, {'diff': 0.09997194500000006}...</msg>
<status status="PASS" starttime="20201030 18:29:11.978" endtime="20201030 18:29:11.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.986" level="INFO">${RESULT} = {'diff': [0.100527889, 0.10008263900000003, 0.09934874999999999, 0.099971861, 0.09997193100000001, 0.09997181999999993, 0.09997194500000006, 0.09997186200000008, 0.09997190300000003, 0.099971888999999...</msg>
<status status="PASS" starttime="20201030 18:29:11.983" endtime="20201030 18:29:11.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.990" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:11.989" endtime="20201030 18:29:11.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.993" level="INFO">VALUE: [0.100527889, 0.10008263900000003, 0.09934874999999999, 0.099971861, 0.09997193100000001, 0.09997181999999993, 0.09997194500000006, 0.09997186200000008, 0.09997190300000003, 0.09997188899999998, 0.09997191699999997, 0.099971861, 0.09997187500000004, 0.09997193100000001, 0.09997180600000011, 0.09997197300000016, 0.099971861, 0.09997190299999992, 0.09997187499999982, 0.09997190300000014, 0.09997197199999963, 0.09997190300000014, 0.09997193000000015, 0.09997187500000004, 0.09997190300000014, 0.09997184699999995, 0.09997188899999987, 0.09997193100000024, 0.09997184699999995, 0.09997186199999986, 0.09997188899999987, 0.09997187500000004, 0.09997193099999979, 0.09997183299999968, 0.09997191600000033, 0.09997191699999997, 0.09997183399999976, 0.09997188899999987, 0.09997187500000004, 0.09997191599999988, 0.09997192999999971, 0.09997187500000049, 0.09997183300000057, 0.09997194399999998, 0.09997180500000002, 0.09997201400000044, 0.09997177700000037, 0.09997191700000041, 0.09997193100000068, 0.09997190200000006, 0.09997192999999971]</msg>
<status status="PASS" starttime="20201030 18:29:11.992" endtime="20201030 18:29:11.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.987" endtime="20201030 18:29:11.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.998" endtime="20201030 18:29:12.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.996" endtime="20201030 18:29:12.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.995" endtime="20201030 18:29:12.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.457" endtime="20201030 18:29:12.018"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:05.378" endtime="20201030 18:29:12.019" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.025" endtime="20201030 18:29:12.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.024" endtime="20201030 18:29:12.045"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.058" endtime="20201030 18:29:12.081"></status>
</kw>
<msg timestamp="20201030 18:29:12.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.057" endtime="20201030 18:29:12.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.084" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.083" endtime="20201030 18:29:12.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.087" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:12.085" endtime="20201030 18:29:12.088"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:12.054" endtime="20201030 18:29:12.088"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:12.052" endtime="20201030 18:29:12.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.051" endtime="20201030 18:29:12.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:12.093" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:12.092" endtime="20201030 18:29:12.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.090" endtime="20201030 18:29:12.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.050" endtime="20201030 18:29:12.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.049" endtime="20201030 18:29:12.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.095" endtime="20201030 18:29:12.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.048" endtime="20201030 18:29:12.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.046" endtime="20201030 18:29:12.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.023" endtime="20201030 18:29:12.097"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.105" endtime="20201030 18:29:18.231"></status>
</kw>
<msg timestamp="20201030 18:29:18.232" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.104" endtime="20201030 18:29:18.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.237" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.234" endtime="20201030 18:29:18.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.240" endtime="20201030 18:29:18.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.101" endtime="20201030 18:29:18.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.099" endtime="20201030 18:29:18.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.251" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 18:29:18.247" endtime="20201030 18:29:18.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.259" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:18.257" endtime="20201030 18:29:18.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.263" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:18.261" endtime="20201030 18:29:18.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.252" endtime="20201030 18:29:18.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.273" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:18.271" endtime="20201030 18:29:18.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.277" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:18.275" endtime="20201030 18:29:18.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.266" endtime="20201030 18:29:18.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.287" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:18.285" endtime="20201030 18:29:18.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.292" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:29:18.290" endtime="20201030 18:29:18.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.280" endtime="20201030 18:29:18.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.308" endtime="20201030 18:29:18.610"></status>
</kw>
<msg timestamp="20201030 18:29:18.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072365361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173115569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.303" endtime="20201030 18:29:18.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072365361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173115569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.614" endtime="20201030 18:29:18.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.622" endtime="20201030 18:29:18.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.298" endtime="20201030 18:29:18.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.295" endtime="20201030 18:29:18.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:18.628" level="INFO">${FILTERED} = [{'diff': 0.100750208}, {'diff': 0.10007505600000002}, {'diff': 0.100063389}, {'diff': 0.09905051400000003}, {'diff': 0.09997190300000003}, {'diff': 0.0999718329999999}, {'diff': 0.09997191699999997},...</msg>
<status status="PASS" starttime="20201030 18:29:18.625" endtime="20201030 18:29:18.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.632" level="INFO">${RESULT} = {'diff': [0.100750208, 0.10007505600000002, 0.100063389, 0.09905051400000003, 0.09997190300000003, 0.0999718329999999, 0.09997191699999997, 0.099971861, 0.09997187499999993, 0.09997193000000015, 0.099...</msg>
<status status="PASS" starttime="20201030 18:29:18.629" endtime="20201030 18:29:18.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.636" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:18.635" endtime="20201030 18:29:18.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.639" level="INFO">VALUE: [0.100750208, 0.10007505600000002, 0.100063389, 0.09905051400000003, 0.09997190300000003, 0.0999718329999999, 0.09997191699999997, 0.099971861, 0.09997187499999993, 0.09997193000000015, 0.0999718329999999, 0.09997190299999992, 0.09997187500000004, 0.09997187499999982, 0.09997187499999982, 0.09997193100000001, 0.09997184699999995, 0.09997187500000004, 0.09997190300000014, 0.09997195800000003, 0.09997183299999968, 0.09997183299999968, 0.09997187500000004, 0.09997193100000024, 0.09997191699999997, 0.09997195800000025, 0.09997176399999974, 0.09997194500000006, 0.09997180600000011, 0.09997191599999988, 0.09997190300000014, 0.09997184800000003, 0.09997191699999997, 0.09997187500000004, 0.09997188899999987, 0.09997194399999998, 0.09997193100000024, 0.09997176399999974, 0.09997191600000033, 0.09997191699999997, 0.09997187500000049, 0.09997190300000014, 0.09997197199999963, 0.09997180500000002, 0.09997195800000025, 0.0999719859999999, 0.09997188899999987, 0.09997186100000022, 0.09997184699999995, 0.09997186100000022, 0.09997191600000033]</msg>
<status status="PASS" starttime="20201030 18:29:18.638" endtime="20201030 18:29:18.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.633" endtime="20201030 18:29:18.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.644" endtime="20201030 18:29:18.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.642" endtime="20201030 18:29:18.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.641" endtime="20201030 18:29:18.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.098" endtime="20201030 18:29:18.664"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:12.020" endtime="20201030 18:29:18.665" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:28:37.229" endtime="20201030 18:29:18.672"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:26:31.208" endtime="20201030 18:29:18.704"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
